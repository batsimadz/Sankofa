{
.appVersion = "3151";
.formatVersion = 3;
customParameters = (
{
name = vendorID;
value = "2377";
},
{
name = panose;
value = (
0,
0,
0,
0,
0,
0,
0,
0,
0,
0
);
},
{
name = unicodeRanges;
value = (
0,
1,
2,
3,
4,
5,
6,
7,
24,
29,
31,
32,
33,
35,
36,
37,
38,
45,
62
);
},
{
name = codePageRanges;
value = (
"1252",
"1250",
"1254",
"1257",
"1258",
"bit 29"
);
},
{
name = fsType;
value = (
);
},
{
name = glyphOrder;
value = (
.notdef,
A,
Aacute,
Abreve,
uni1EAE,
uni1EB6,
uni1EB0,
uni1EB2,
uni1EB4,
uni01CD,
Acircumflex,
uni1EA4,
uni1EAC,
uni1EA6,
uni1EA8,
uni1EAA,
uni0200,
Adieresis,
uni01DE,
uni0226,
uni1EA0,
uni01E0,
Agrave,
uni1EA2,
uni0202,
uni2C6D,
Amacron,
Aogonek,
Aring,
uni1E00,
uni023A,
Atilde,
AE,
uni01E2,
B,
uni1E02,
uni1E04,
uniA7B4,
uni0181,
Bmacronbelow,
uni0243,
C,
Cacute,
Ccaron,
Ccedilla,
uni1E08,
Ccircumflex,
Cdotaccent,
uniA7B3,
uni0187,
uni023B,
D,
Eth,
Dcaron,
uni1E10,
uni1E12,
Dcroat,
uni1E0A,
uni1E0C,
uni018A,
Dmacronbelow,
Dtail,
E,
Eacute,
Ecaron,
uni0228,
uni1E1C,
Ecircumflex,
uni1EBE,
uni1E18,
uni1EC6,
uni1EC0,
uni1EC2,
uni1EC4,
uni0204,
Edieresis,
Edotaccent,
uni1EB8,
Egrave,
uni1EBA,
uni0206,
Emacron,
uni1E16,
uni1E14,
Eogonek,
uni0190,
uni018E,
uni01A9,
uni0246,
uni1EBC,
uni1E1A,
uni018F,
uni01B7,
uni01EE,
uni01B8,
F,
uni1E1E,
uni0191,
G,
uni01F4,
Gbreve,
Gcaron,
Gcircumflex,
uni0122,
Gdotaccent,
uni0193,
uni0241,
uni1E20,
uni01E4,
H,
Hbar,
uni1E2A,
uni021E,
uni1E28,
Hcircumflex,
uni1E26,
uni1E22,
uni1E24,
uniA726,
uniA7AA,
uniA78D,
I,
IJ,
Iacute,
uni01CF,
Icircumflex,
uni0208,
Idieresis,
uni1E2E,
Idotaccent,
uni1ECA,
Igrave,
uni1EC8,
uni020A,
Imacron,
Iogonek,
Iotalatin,
uni0197,
Itilde,
uni1E2C,
J,
uni004A0301,
Jcircumflex,
uniA7B2,
uni0248,
K,
uni1E30,
uni01E8,
uni0136,
uni1E32,
uni0198,
Kmacronbelow,
uniA740,
L,
Lacute,
uni023D,
uniA7AD,
Lcaron,
uni1E3C,
uni013B,
uni1E36,
uni1E38,
uni2C60,
Lmacronbelow,
uni2C62,
Lslash,
M,
uni1E3E,
uni1E40,
uni1E42,
uni019C,
N,
Nacute,
Ncaron,
uni1E4A,
uni0145,
uni1E44,
uni1E46,
uni01F8,
uni019D,
uni0220,
Nmacronbelow,
Ntilde,
Eng,
O,
uni0222,
Oacute,
uni01D1,
uni019F,
Ocircumflex,
uni1ED0,
uni1ED8,
uni1ED2,
uni1ED4,
uni1ED6,
uni020C,
Odieresis,
uni022A,
uni022E,
uni0230,
uni1ECC,
Ograve,
uni1ECE,
Ohorn,
uni1EDA,
uni1EE2,
uni1EDC,
uni1EDE,
uni1EE0,
Ohungarumlaut,
uni020E,
Omacron,
uni1E52,
uni1E50,
uniA7B6,
uni01EA,
uni01EC,
uni0186,
Oslash,
Oslashacute,
Otilde,
uni1E4C,
uni1E4E,
uni022C,
OE,
P,
uni1E54,
uni1E56,
uni01A4,
Thorn,
uni2C63,
Q,
uni024A,
R,
Racute,
Rcaron,
uni0156,
uni0210,
uni1E58,
uni1E5A,
uni1E5C,
uni0212,
Rmacronbelow,
uni024C,
uni2C64,
S,
Sacute,
uni1E64,
uniA78B,
Scaron,
uni1E66,
Scedilla,
Scircumflex,
uni0218,
uni1E60,
uni1E62,
uni1E68,
uni1E9E,
uniA7A8,
T,
Tbar,
Tcaron,
uni0162,
uni1E70,
uni021A,
uni023E,
uni1E6A,
uni1E6C,
uni01AC,
Tmacronbelow,
uni01AE,
U,
Uacute,
uni0244,
Ubreve,
uni01D3,
Ucircumflex,
uni1E76,
uni0214,
Udieresis,
uni01D7,
uni1E72,
uni01D9,
uni01DB,
uni01D5,
uni1EE4,
Ugrave,
uni1EE6,
Uhorn,
uni1EE8,
uni1EF0,
uni1EEA,
uni1EEC,
uni1EEE,
Uhungarumlaut,
uni0216,
Umacron,
uni1E7A,
Uogonek,
Upsilonlatin,
Uring,
Utilde,
uni1E78,
uni1E74,
V,
Gammalatin,
uni1E7E,
uni01B2,
uni1E7C,
uni0245,
W,
Wacute,
Wcircumflex,
Wdieresis,
uni1E86,
uni1E88,
Wgrave,
uni2C72,
X,
uni1E8C,
uni1E8A,
Y,
Yacute,
Ycircumflex,
Ydieresis,
uni1E8E,
uni1EF4,
Ygrave,
uni01B3,
uni1EF6,
uni0232,
uni024E,
uni1EF8,
Z,
Zacute,
Zcaron,
uni1E90,
Zdotaccent,
uni1E92,
Zmacronbelow,
uni01B5,
S.001,
F.alt,
uni013B.loclMAH,
uni0145.loclMAH,
uni026A,
a,
aacute,
abreve,
uni1EAF,
uni1EB7,
uni1EB1,
uni1EB3,
uni1EB5,
uni01CE,
acircumflex,
uni1EA5,
uni1EAD,
uni1EA7,
uni1EA9,
uni1EAB,
uni0201,
adieresis,
uni01DF,
uni0227,
uni1EA1,
uni01E1,
agrave,
uni1EA3,
uni0203,
uni0251,
amacron,
aogonek,
aring,
uni1E01,
uni2C65,
atilde,
ae,
uni01E3,
b,
uni1E03,
uni1E05,
uniA7B5,
uni0253,
uni0298,
bmacronbelow,
uni0180,
c,
cacute,
ccaron,
ccedilla,
uni1E09,
ccircumflex,
cdotaccent,
uniAB53,
uni0188,
uni023C,
d,
eth,
dcaron,
uni1E11,
uni1E13,
dcroat,
uni1E0B,
uni1E0D,
uni0257,
dmacronbelow,
uni0256,
e,
eacute,
ecaron,
uni0229,
uni1E1D,
ecircumflex,
uni1EBF,
uni1E19,
uni1EC7,
uni1EC1,
uni1EC3,
uni1EC5,
uni0205,
edieresis,
edotaccent,
uni1EB9,
egrave,
uni1EBB,
uni0207,
emacron,
uni1E17,
uni1E15,
eogonek,
uni025B,
uni0283,
uni0247,
uni1EBD,
uni1E1B,
uni01DD,
uni0259,
uni0292,
uni01EF,
uni01B9,
f,
uni1E1F,
g,
uni01F5,
uni0263,
gbreve,
gcaron,
gcircumflex,
uni0123,
gdotaccent,
uni0260,
uni0294,
uni0295,
uni0242,
uni1E21,
uni01E5,
h,
hbar,
uni1E2B,
uni021F,
uni1E29,
hcircumflex,
uni1E27,
uni1E23,
uni1E25,
uniA727,
uni0266,
uni0265,
i,
dotlessi,
dotlessi_ogonek,
iacute,
uni01D0,
icircumflex,
uni0209,
idieresis,
uni1E2F,
i.loclTRK,
uni1ECB,
igrave,
uni1EC9,
uni020B,
ij,
imacron,
iogonek,
uni0269,
uni0268,
itilde,
uni1E2D,
j,
uni0237,
uni006A0301,
uni01F0,
jcircumflex,
uni029D,
uni0249,
k,
uni1E31,
uni01E9,
uni0137,
uni1E33,
kgreenlandic,
uni0199,
kmacronbelow,
uniA741,
l,
lacute,
uni019B,
uni019A,
uni026C,
lcaron,
uni1E3D,
uni013C,
uni1E37,
uni1E39,
uni2C61,
lmacronbelow,
uni026B,
lslash,
m,
uni1E3F,
uni1E41,
uni1E43,
uni026F,
n,
nacute,
ncaron,
uni1E4B,
uni0146,
uni1E45,
uni1E47,
uni01F9,
uni0272,
uni019E,
nmacronbelow,
ntilde,
eng,
o,
oacute,
uni0275,
uni01D2,
ocircumflex,
uni1ED1,
uni1ED9,
uni1ED3,
uni1ED5,
uni1ED7,
uni020D,
odieresis,
uni022B,
uni022F,
uni0231,
uni1ECD,
ograve,
uni1ECF,
ohorn,
uni1EDB,
uni1EE3,
uni1EDD,
uni1EDF,
uni1EE1,
ohungarumlaut,
uni020F,
omacron,
uni1E53,
uni1E51,
uniA7B7,
uni01EB,
uni01ED,
uni0254,
oslash,
oslashacute,
otilde,
uni1E4D,
uni1E4F,
uni022D,
uni0223,
oe,
p,
uni1E55,
uni1E57,
uni01A5,
thorn,
uni1D7D,
q,
uni024B,
r,
racute,
rcaron,
uni0157,
uni0211,
uni1E59,
uni1E5B,
uni1E5D,
uni027E,
uni0213,
rmacronbelow,
uni024D,
rtail,
s,
sacute,
uni1E65,
uniA78C,
scaron,
uni1E67,
scedilla,
scircumflex,
uni0219,
uni1E61,
uni1E63,
uni1E69,
germandbls,
uniA7A9,
t,
tbar,
tcaron,
uni0163,
uni1E71,
uni021B,
uni2C66,
uni1E6B,
uni1E6D,
uni01AD,
tmacronbelow,
uni0288,
u,
uacute,
uni0289,
ubreve,
uni01D4,
ucircumflex,
uni1E77,
uni0215,
udieresis,
uni01D8,
uni1E73,
uni01DA,
uni01DC,
uni01D6,
uni1EE5,
ugrave,
uni1EE7,
uhorn,
uni1EE9,
uni1EF1,
uni1EEB,
uni1EED,
uni1EEF,
uhungarumlaut,
uni0217,
umacron,
uni1E7B,
uogonek,
uni028A,
uring,
utilde,
uni1E79,
uni1E75,
v,
uni1E7F,
uni028B,
uni1E7D,
uni028C,
w,
wacute,
wcircumflex,
wdieresis,
uni1E87,
uni1E89,
wgrave,
uni2C73,
x,
uni1E8D,
uni1E8B,
y,
yacute,
ycircumflex,
ydieresis,
uni1E8F,
uni1EF5,
ygrave,
uni01B4,
uni1EF7,
uni0233,
uni024F,
uni1EF9,
z,
zacute,
zcaron,
uni1E91,
zdotaccent,
uni1E93,
zmacronbelow,
uni01B6,
f.alt,
l.alt,
q.alt,
t.alt,
y.alt,
g.001,
uni013C.loclMAH,
uni0146.loclMAH,
f_f,
f_f_i,
f_f_l,
f_i,
fi,
fl,
uni02B0,
uni207F,
uni02B7,
uni02B8,
uni01C2,
uni01C0,
uni01C1,
uni01C3,
ordfeminine,
ordmasculine,
uni03A9,
lambda,
pi,
chi,
uni1DBF,
uni1D58,
uni1D5B,
uni1DBB,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
zero.zero,
zero.tf,
one.tf,
two.tf,
three.tf,
four.tf,
five.tf,
six.tf,
seven.tf,
eight.tf,
nine.tf,
zero.dnom,
one.dnom,
two.dnom,
three.dnom,
four.dnom,
five.dnom,
six.dnom,
seven.dnom,
eight.dnom,
nine.dnom,
zero.numr,
one.numr,
two.numr,
three.numr,
four.numr,
five.numr,
six.numr,
seven.numr,
eight.numr,
nine.numr,
fraction,
onehalf,
uni2153,
uni2154,
onequarter,
threequarters,
oneeighth,
threeeighths,
fiveeighths,
seveneighths,
uni2080,
uni2081,
uni2082,
uni2083,
uni2084,
uni2085,
uni2086,
uni2087,
uni2088,
uni2089,
uni2070,
uni00B9,
uni00B2,
uni00B3,
uni2074,
uni2075,
uni2076,
uni2077,
uni2078,
uni2079,
space,
uni00A0,
uni27E8,
uni27E9,
period,
comma,
colon,
semicolon,
ellipsis,
exclam,
exclamdown,
question,
questiondown,
periodcentered,
bullet,
asterisk,
uni2016,
numbersign,
slash,
backslash,
periodcentered.loclCAT,
periodcentered.loclCAT.case,
hyphen,
endash,
emdash,
underscore,
parenleft,
parenright,
braceleft,
braceright,
bracketleft,
bracketright,
quotesinglbase,
quotedblbase,
quotedblleft,
quotedblright,
quoteleft,
quoteright,
guillemotleft,
guillemotright,
guilsinglleft,
guilsinglright,
quotedbl,
quotesingle,
florin,
uni0E3F,
uniA789,
uni02EE,
uni02D7,
uniA78A,
at,
ampersand,
paragraph,
section,
copyright,
registered,
trademark,
degree,
minute,
second,
bar,
brokenbar,
dagger,
uni2113,
daggerdbl,
estimated,
uni2116,
uni20BF,
uni20B5,
cent,
colonmonetary,
dollar,
dong,
Euro,
uni20B2,
uni20B4,
uni20AD,
uni20BE,
uni20BA,
uni20BC,
uni20A6,
uni20B1,
uni20BD,
uni20A8,
uni20B9,
uni20AA,
sterling,
uni20B8,
uni20AE,
uni20A9,
yen,
uni2144,
plus,
minus,
multiply,
divide,
equal,
notequal,
greater,
less,
greaterequal,
lessequal,
plusminus,
approxequal,
asciitilde,
logicalnot,
asciicircum,
infinity,
emptyset,
integral,
uni2126,
uni2206,
product,
summation,
radical,
partialdiff,
uni00B5,
percent,
perthousand,
arrowup,
uni2197,
arrowright,
uni2198,
arrowdown,
uni2199,
arrowleft,
uni2196,
arrowboth,
arrowupdn,
uni25CF,
circle,
uni25CC,
openbullet,
uni25C6,
uni25C7,
lozenge,
filledbox,
uni25A1,
uni25AA,
uni25AB,
triagup,
uni25B6,
triagdn,
uni25C0,
uni25B3,
uni25B7,
uni25BD,
uni25C1,
uni25B4,
uni25B8,
uni25BE,
uni25C2,
uni25B5,
uni25B9,
uni25BF,
uni25C3,
uni03060301,
uni03060300,
uni03060309,
uni03060303,
uni03020301,
uni03020300,
uni03020309,
uni03020303,
uni1DCA,
uni0308,
uni0307,
gravecomb,
uni03000304,
acutecomb,
uni03010304,
uni030B,
uni030C.alt,
uni0302,
uni030C,
uni0306,
uni030A,
tildecomb,
uni0304,
uni03040300,
uni03040301,
hookabovecomb,
uni030D,
uni030F,
uni0310,
uni0311,
uni0312,
uni0313,
uni0315,
uni031B,
dotbelowcomb,
uni0325,
uni0326,
uni0327,
uni0328,
uni0329,
uni032D,
uni032F,
uni0330,
uni0331,
uni0332,
uni0334,
uni0335,
uni0358,
uni1DC7,
uni1DC5,
uni1DC4,
uni1DC6,
uni0327.alt,
uni0326.loclMAH,
dieresis,
dotaccent,
grave,
acute,
hungarumlaut,
circumflex,
uni02CA,
caron,
uni02CB,
breve,
ring,
tilde,
macron,
cedilla,
ogonek,
uni02BC,
uni02BB,
uni02C0,
uni02B9,
uni02BF,
uni02BE,
uni02C8,
uniA7AE,
uniA7B8,
uniA7B9
);
}
);
date = "2023-10-02 05:34:29 +0000";
familyName = "Sankofa Display";
featurePrefixes = (
{
code = "lookup SUB_18 {
	sub periodcentered by periodcentered.loclCAT;
} SUB_18;
lookup SUB_19 {
	sub periodcentered by periodcentered.loclCAT.case;
} SUB_19;
lookup SUB_21 {
	sub J by uni004A0301;
	sub j by uni006A0301;
} SUB_21;
lookup SUB_3 {
	sub i by dotlessi;
	sub j by uni0237;
} SUB_3;
lookup SUB_30 {
	sub zero.numr by zero.dnom;
	sub one.numr by one.dnom;
	sub two.numr by two.dnom;
	sub three.numr by three.dnom;
	sub four.numr by four.dnom;
	sub five.numr by five.dnom;
	sub six.numr by six.dnom;
	sub seven.numr by seven.dnom;
	sub eight.numr by eight.dnom;
	sub nine.numr by nine.dnom;
} SUB_30;
lookup SUB_32 {
	sub A by ordfeminine;
	sub O by ordmasculine;
	sub a by ordfeminine;
	sub o by ordmasculine;
} SUB_32;
";
name = Prefix;
}
);
features = (
{
automatic = 1;
code = "";
tag = aalt;
},
{
code = "script DFLT;
language dflt;
lookup SUB_4 {
	sub gravecomb uni0304 by uni03000304;
	sub acutecomb uni0304 by uni03010304;
	sub uni0304 acutecomb by uni03040301;
	sub uni0304 gravecomb by uni03040300;
} SUB_4;
lookup SUB_5 {
	sub uni1E2D by i uni0330;
} SUB_5;
lookup SUB_6 {
	sub fi by f i;
	sub fl by f l;
} SUB_6;
lookup SUB_7 {
	sub uni0302 acutecomb by uni03020301;
	sub uni0302 gravecomb by uni03020300;
	sub uni0302 hookabovecomb by uni03020309;
	sub uni0302 tildecomb by uni03020303;
	sub uni0306 acutecomb by uni03060301;
	sub uni0306 gravecomb by uni03060300;
	sub uni0306 hookabovecomb by uni03060309;
	sub uni0306 tildecomb by uni03060303;
} SUB_7;
language MAH;
lookup SUB_4;
lookup SUB_5;
lookup SUB_6;
lookup SUB_7;
script latn;
language dflt;
lookup SUB_4;
lookup SUB_5;
lookup SUB_6;
lookup SUB_7;
language AZE;
lookup SUB_4;
lookup SUB_5;
lookup SUB_6;
lookup SUB_7;
language CAT;
lookup SUB_4;
lookup SUB_5;
lookup SUB_6;
lookup SUB_7;
language CRT;
lookup SUB_4;
lookup SUB_5;
lookup SUB_6;
lookup SUB_7;
language KAZ;
lookup SUB_4;
lookup SUB_5;
lookup SUB_6;
lookup SUB_7;
language MAH;
lookup SUB_4;
lookup SUB_5;
lookup SUB_6;
lookup SUB_7;
language MOL;
lookup SUB_4;
lookup SUB_5;
lookup SUB_6;
lookup SUB_7;
language NLD;
lookup SUB_4;
lookup SUB_5;
lookup SUB_6;
lookup SUB_7;
language ROM;
lookup SUB_4;
lookup SUB_5;
lookup SUB_6;
lookup SUB_7;
language TAT;
lookup SUB_4;
lookup SUB_5;
lookup SUB_6;
lookup SUB_7;
language TRK;
lookup SUB_4;
lookup SUB_5;
lookup SUB_6;
lookup SUB_7;
";
tag = ccmp;
},
{
code = "script DFLT;
language MAH;
lookup SUB_8 {
	sub uni0326 by uni0326.loclMAH;
} SUB_8;
script latn;
language AZE;
lookup SUB_9 {
	sub i by i.loclTRK;
} SUB_9;
language CRT;
lookup SUB_10 {
	sub i by i.loclTRK;
} SUB_10;
language KAZ;
lookup SUB_11 {
	sub i by i.loclTRK;
} SUB_11;
language TAT;
lookup SUB_12 {
	sub i by i.loclTRK;
} SUB_12;
language TRK;
lookup SUB_13 {
	sub i by i.loclTRK;
} SUB_13;
language ROM;
lookup SUB_14 {
	sub Scedilla by uni0218;
	sub uni0162 by uni021A;
	sub scedilla by uni0219;
	sub uni0163 by uni021B;
} SUB_14;
language MOL;
lookup SUB_15 {
	sub Scedilla by uni0218;
	sub uni0162 by uni021A;
	sub scedilla by uni0219;
	sub uni0163 by uni021B;
} SUB_15;
language MAH;
lookup SUB_16 {
	sub uni013B by uni013B.loclMAH;
	sub uni0145 by uni0145.loclMAH;
	sub uni013C by uni013C.loclMAH;
	sub uni0146 by uni0146.loclMAH;
} SUB_16;
language CAT;
lookup SUB_17 {
	sub l periodcentered' lookup SUB_18 l;
	sub L periodcentered' lookup SUB_19 L;
} SUB_17;
language NLD;
lookup SUB_20 {
	sub Iacute J' lookup SUB_21;
	sub iacute j' lookup SUB_21;
} SUB_20;
";
tag = locl;
},
{
code = "script DFLT;
language dflt;
lookup SUB_22 {
	sub zero by uni2080;
	sub one by uni2081;
	sub two by uni2082;
	sub three by uni2083;
	sub four by uni2084;
	sub five by uni2085;
	sub six by uni2086;
	sub seven by uni2087;
	sub eight by uni2088;
	sub nine by uni2089;
} SUB_22;
language MAH;
lookup SUB_22;
script latn;
language dflt;
lookup SUB_22;
language AZE;
lookup SUB_22;
language CAT;
lookup SUB_22;
language CRT;
lookup SUB_22;
language KAZ;
lookup SUB_22;
language MAH;
lookup SUB_22;
language MOL;
lookup SUB_22;
language NLD;
lookup SUB_22;
language ROM;
lookup SUB_22;
language TAT;
lookup SUB_22;
language TRK;
lookup SUB_22;
";
tag = subs;
},
{
code = "script DFLT;
language dflt;
lookup SUB_23 {
	sub zero by uni2080;
	sub one by uni2081;
	sub two by uni2082;
	sub three by uni2083;
	sub four by uni2084;
	sub five by uni2085;
	sub six by uni2086;
	sub seven by uni2087;
	sub eight by uni2088;
	sub nine by uni2089;
} SUB_23;
language MAH;
lookup SUB_23;
script latn;
language dflt;
lookup SUB_23;
language AZE;
lookup SUB_23;
language CAT;
lookup SUB_23;
language CRT;
lookup SUB_23;
language KAZ;
lookup SUB_23;
language MAH;
lookup SUB_23;
language MOL;
lookup SUB_23;
language NLD;
lookup SUB_23;
language ROM;
lookup SUB_23;
language TAT;
lookup SUB_23;
language TRK;
lookup SUB_23;
";
tag = sinf;
},
{
code = "script DFLT;
language dflt;
lookup SUB_24 {
	sub zero by uni2070;
	sub one by uni00B9;
	sub two by uni00B2;
	sub three by uni00B3;
	sub four by uni2074;
	sub five by uni2075;
	sub six by uni2076;
	sub seven by uni2077;
	sub eight by uni2078;
	sub nine by uni2079;
} SUB_24;
language MAH;
lookup SUB_24;
script latn;
language dflt;
lookup SUB_24;
language AZE;
lookup SUB_24;
language CAT;
lookup SUB_24;
language CRT;
lookup SUB_24;
language KAZ;
lookup SUB_24;
language MAH;
lookup SUB_24;
language MOL;
lookup SUB_24;
language NLD;
lookup SUB_24;
language ROM;
lookup SUB_24;
language TAT;
lookup SUB_24;
language TRK;
lookup SUB_24;
";
tag = sups;
},
{
code = "script DFLT;
language dflt;
lookup SUB_25 {
	sub zero by zero.numr;
	sub one by one.numr;
	sub two by two.numr;
	sub three by three.numr;
	sub four by four.numr;
	sub five by five.numr;
	sub six by six.numr;
	sub seven by seven.numr;
	sub eight by eight.numr;
	sub nine by nine.numr;
} SUB_25;
language MAH;
lookup SUB_25;
script latn;
language dflt;
lookup SUB_25;
language AZE;
lookup SUB_25;
language CAT;
lookup SUB_25;
language CRT;
lookup SUB_25;
language KAZ;
lookup SUB_25;
language MAH;
lookup SUB_25;
language MOL;
lookup SUB_25;
language NLD;
lookup SUB_25;
language ROM;
lookup SUB_25;
language TAT;
lookup SUB_25;
language TRK;
lookup SUB_25;
";
tag = numr;
},
{
code = "script DFLT;
language dflt;
lookup SUB_26 {
	sub zero by zero.dnom;
	sub one by one.dnom;
	sub two by two.dnom;
	sub three by three.dnom;
	sub four by four.dnom;
	sub five by five.dnom;
	sub six by six.dnom;
	sub seven by seven.dnom;
	sub eight by eight.dnom;
	sub nine by nine.dnom;
} SUB_26;
language MAH;
lookup SUB_26;
script latn;
language dflt;
lookup SUB_26;
language AZE;
lookup SUB_26;
language CAT;
lookup SUB_26;
language CRT;
lookup SUB_26;
language KAZ;
lookup SUB_26;
language MAH;
lookup SUB_26;
language MOL;
lookup SUB_26;
language NLD;
lookup SUB_26;
language ROM;
lookup SUB_26;
language TAT;
lookup SUB_26;
language TRK;
lookup SUB_26;
";
tag = dnom;
},
{
code = "script DFLT;
language dflt;
lookup SUB_27 {
	sub slash by fraction;
} SUB_27;
lookup SUB_28 {
	sub zero by zero.numr;
	sub one by one.numr;
	sub two by two.numr;
	sub three by three.numr;
	sub four by four.numr;
	sub five by five.numr;
	sub six by six.numr;
	sub seven by seven.numr;
	sub eight by eight.numr;
	sub nine by nine.numr;
} SUB_28;
lookup SUB_29 {
	@SUB_29_0_IN_0 = [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
	sub fraction @SUB_29_0_IN_0' lookup SUB_30;
	@SUB_29_1_BT_0 = [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
	@SUB_29_1_IN_1 = [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
	sub @SUB_29_1_BT_0 @SUB_29_1_IN_1' lookup SUB_30;
} SUB_29;
language MAH;
lookup SUB_27;
lookup SUB_28;
lookup SUB_29;
script latn;
language dflt;
lookup SUB_27;
lookup SUB_28;
lookup SUB_29;
language AZE;
lookup SUB_27;
lookup SUB_28;
lookup SUB_29;
language CAT;
lookup SUB_27;
lookup SUB_28;
lookup SUB_29;
language CRT;
lookup SUB_27;
lookup SUB_28;
lookup SUB_29;
language KAZ;
lookup SUB_27;
lookup SUB_28;
lookup SUB_29;
language MAH;
lookup SUB_27;
lookup SUB_28;
lookup SUB_29;
language MOL;
lookup SUB_27;
lookup SUB_28;
lookup SUB_29;
language NLD;
lookup SUB_27;
lookup SUB_28;
lookup SUB_29;
language ROM;
lookup SUB_27;
lookup SUB_28;
lookup SUB_29;
language TAT;
lookup SUB_27;
lookup SUB_28;
lookup SUB_29;
language TRK;
lookup SUB_27;
lookup SUB_28;
lookup SUB_29;
";
tag = frac;
},
{
code = "script DFLT;
language dflt;
lookup SUB_31 {
	@SUB_31_0_BT_0 = [zero one two three four five six seven eight nine];
	sub @SUB_31_0_BT_0 [A a]' lookup SUB_32;
	@SUB_31_1_BT_0 = [zero one two three four five six seven eight nine];
	sub @SUB_31_1_BT_0 [O o]' lookup SUB_32;
} SUB_31;
lookup SUB_33 {
	sub N o period by uni2116;
} SUB_33;
language MAH;
lookup SUB_31;
lookup SUB_33;
script latn;
language dflt;
lookup SUB_31;
lookup SUB_33;
language AZE;
lookup SUB_31;
lookup SUB_33;
language CAT;
lookup SUB_31;
lookup SUB_33;
language CRT;
lookup SUB_31;
lookup SUB_33;
language KAZ;
lookup SUB_31;
lookup SUB_33;
language MAH;
lookup SUB_31;
lookup SUB_33;
language MOL;
lookup SUB_31;
lookup SUB_33;
language NLD;
lookup SUB_31;
lookup SUB_33;
language ROM;
lookup SUB_31;
lookup SUB_33;
language TAT;
lookup SUB_31;
lookup SUB_33;
language TRK;
lookup SUB_31;
lookup SUB_33;
";
tag = ordn;
},
{
code = "script DFLT;
language dflt;
lookup SUB_34 {
	sub zero.tf by zero;
	sub one.tf by one;
	sub two.tf by two;
	sub three.tf by three;
	sub four.tf by four;
	sub five.tf by five;
	sub six.tf by six;
	sub seven.tf by seven;
	sub eight.tf by eight;
	sub nine.tf by nine;
} SUB_34;
language MAH;
lookup SUB_34;
script latn;
language dflt;
lookup SUB_34;
language AZE;
lookup SUB_34;
language CAT;
lookup SUB_34;
language CRT;
lookup SUB_34;
language KAZ;
lookup SUB_34;
language MAH;
lookup SUB_34;
language MOL;
lookup SUB_34;
language NLD;
lookup SUB_34;
language ROM;
lookup SUB_34;
language TAT;
lookup SUB_34;
language TRK;
lookup SUB_34;
";
tag = pnum;
},
{
code = "script DFLT;
language dflt;
lookup SUB_35 {
	sub zero by zero.tf;
	sub one by one.tf;
	sub two by two.tf;
	sub three by three.tf;
	sub four by four.tf;
	sub five by five.tf;
	sub six by six.tf;
	sub seven by seven.tf;
	sub eight by eight.tf;
	sub nine by nine.tf;
} SUB_35;
language MAH;
lookup SUB_35;
script latn;
language dflt;
lookup SUB_35;
language AZE;
lookup SUB_35;
language CAT;
lookup SUB_35;
language CRT;
lookup SUB_35;
language KAZ;
lookup SUB_35;
language MAH;
lookup SUB_35;
language MOL;
lookup SUB_35;
language NLD;
lookup SUB_35;
language ROM;
lookup SUB_35;
language TAT;
lookup SUB_35;
language TRK;
lookup SUB_35;
";
tag = tnum;
},
{
code = "script DFLT;
language dflt;
lookup SUB_36 {
	sub periodcentered.loclCAT by periodcentered.loclCAT.case;
} SUB_36;
language MAH;
lookup SUB_36;
script latn;
language dflt;
lookup SUB_36;
language AZE;
lookup SUB_36;
language CAT;
lookup SUB_36;
language CRT;
lookup SUB_36;
language KAZ;
lookup SUB_36;
language MAH;
lookup SUB_36;
language MOL;
lookup SUB_36;
language NLD;
lookup SUB_36;
language ROM;
lookup SUB_36;
language TAT;
lookup SUB_36;
language TRK;
lookup SUB_36;
";
tag = case;
},
{
code = "script DFLT;
language dflt;
lookup SUB_37 {
	sub f f by f_f;
	sub f i by f_i;
	sub f l by fl;
} SUB_37;
language MAH;
lookup SUB_37;
script latn;
language dflt;
lookup SUB_37;
language AZE;
lookup SUB_37;
language CAT;
lookup SUB_37;
language CRT;
lookup SUB_37;
language KAZ;
lookup SUB_37;
language MAH;
lookup SUB_37;
language MOL;
lookup SUB_37;
language NLD;
lookup SUB_37;
language ROM;
lookup SUB_37;
language TAT;
lookup SUB_37;
language TRK;
lookup SUB_37;
";
tag = liga;
},
{
code = "script DFLT;
language dflt;
lookup SUB_38 {
	sub zero by zero.zero;
} SUB_38;
language MAH;
lookup SUB_38;
script latn;
language dflt;
lookup SUB_38;
language AZE;
lookup SUB_38;
language CAT;
lookup SUB_38;
language CRT;
lookup SUB_38;
language KAZ;
lookup SUB_38;
language MAH;
lookup SUB_38;
language MOL;
lookup SUB_38;
language NLD;
lookup SUB_38;
language ROM;
lookup SUB_38;
language TAT;
lookup SUB_38;
language TRK;
lookup SUB_38;
";
tag = zero;
},
{
code = "script DFLT;
language dflt;
lookup POS_3 {
	sub i by dotlessi;
	sub j by uni0237;
} POS_3;
language MAH;
lookup POS_3;
script latn;
language dflt;
lookup POS_3;
language AZE;
lookup POS_3;
language CAT;
lookup POS_3;
language CRT;
lookup POS_3;
language KAZ;
lookup POS_3;
language MAH;
lookup POS_3;
language MOL;
lookup POS_3;
language NLD;
lookup POS_3;
language ROM;
lookup POS_3;
language TAT;
lookup POS_3;
language TRK;
lookup POS_3;
";
tag = mark;
},
{
code = "script DFLT;
language dflt;
lookup POS_4 {
	sub gravecomb uni0304 by uni03000304;
	sub acutecomb uni0304 by uni03010304;
	sub uni0304 acutecomb by uni03040301;
	sub uni0304 gravecomb by uni03040300;
} POS_4;
lookup POS_5 {
	sub uni1E2D by i uni0330;
} POS_5;
lookup POS_6 {
	sub fi by f i;
	sub fl by f l;
} POS_6;
language MAH;
lookup POS_4;
lookup POS_5;
lookup POS_6;
script latn;
language dflt;
lookup POS_4;
lookup POS_5;
lookup POS_6;
language AZE;
lookup POS_4;
lookup POS_5;
lookup POS_6;
language CAT;
lookup POS_4;
lookup POS_5;
lookup POS_6;
language CRT;
lookup POS_4;
lookup POS_5;
lookup POS_6;
language KAZ;
lookup POS_4;
lookup POS_5;
lookup POS_6;
language MAH;
lookup POS_4;
lookup POS_5;
lookup POS_6;
language MOL;
lookup POS_4;
lookup POS_5;
lookup POS_6;
language NLD;
lookup POS_4;
lookup POS_5;
lookup POS_6;
language ROM;
lookup POS_4;
lookup POS_5;
lookup POS_6;
language TAT;
lookup POS_4;
lookup POS_5;
lookup POS_6;
language TRK;
lookup POS_4;
lookup POS_5;
lookup POS_6;
";
tag = mkmk;
}
);
fontMaster = (
{
customParameters = (
{
name = typoAscender;
value = 1000;
},
{
name = typoDescender;
value = -200;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 1081;
},
{
name = winDescent;
value = 315;
},
{
name = hheaAscender;
value = 1000;
},
{
name = hheaDescender;
value = -200;
},
{
name = strikeoutPosition;
value = 270;
},
{
name = strikeoutSize;
value = 50;
},
{
name = "prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012200 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\01270 0 46 30 4 0 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012NPUSHB[ ]	/* 10 values pushed */\01259 8 51 4 35 8 21 7 4 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012NPUSHB[ ]	/* 10 values pushed */\01267 6 55 2 43 6 28 5 4 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 11 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 6 values pushed */\0123840 3328 2304 1408 4 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 15 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 6 values pushed */\01264 64 64 64 4 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01236 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01240 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122048 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01239 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 3 values pushed */\0122176 1 1088 \012GETINFO[ ]	/* GetInfo */\012MUL[ ]	/* Multiply */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012NPUSHB[ ]	/* 10 values pushed */\01261 6 53 2 37 6 23 5 4 14 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SCANTYPE[ ]	/* ScanType */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0125 100 6 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\01214 \012LTEQ[ ]	/* LessThenOrEqual */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0126 \012GTEQ[ ]	/* GreaterThanOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01252 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01240 \012EIF[ ]	/* EndIf */\012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 4 values pushed */\0123 20 21 0 \012WS[ ]	/* WriteStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\01219 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\0122 20 \012RS[ ]	/* ReadStore */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01237 3 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012EQ[ ]	/* Equal */\012JROT[ ]	/* JumpRelativeOnTrue */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 3 values pushed */\0122 2 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01233 \012NEG[ ]	/* Negate */\012JMPR[ ]	/* Jump */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 3 values pushed */\01214 21 1 \012WS[ ]	/* WriteStore */\012JMPR[ ]	/* Jump */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01219 1 19 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\01222 1 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01221 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 3 values pushed */\01240 1 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012EIF[ ]	/* EndIf */\012GT[ ]	/* GreaterThan */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01240 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012ELSE[ ]	/* Else */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01230 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MPPEM[ ]	/* MeasurePixelPerEm */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 1 value pushed */\0124096 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121280 \012DIV[ ]	/* Divide */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ABS[ ]	/* Absolute */\012SUB[ ]	/* Subtract */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 2 values pushed */\0127 98 \012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\01248 5 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012SUB[ ]	/* Subtract */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 2 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0127 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0129 14 0 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01236 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01213 12 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 2 \012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012100 \012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012MUL[ ]	/* Multiply */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01217 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01219 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 18 \012RS[ ]	/* ReadStore */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01218 18 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01215 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01216 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\0120 0 \012SZP0[ ]	/* SetZonePointer0 */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 1 1 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 8 values pushed */\01224 24 1 0 17 0 19 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01224 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01225 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01226 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01227 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01228 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01229 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01230 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01231 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01244 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01222 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01238 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 6 values pushed */\01224 24 1 0 17 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01233 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01234 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01235 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01236 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01237 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01238 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01239 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01240 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01241 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01242 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01246 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01224 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01246 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01248 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01247 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01249 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01250 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01251 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01252 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012SHC[1]	/* ShiftContourByLastPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01253 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 5 values pushed */\0120 0 0 0 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01252 1 \012SZP2[ ]	/* SetZonePointer2 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01254 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012FDEF[ ]	/* FunctionDefinition */\012MDAP[0]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SZPS[ ]	/* SetZonePointerS */\012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01256 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01260 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01261 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01262 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01263 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01264 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01265 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01266 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01267 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01268 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012CALL[ ]	/* CallFunction */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01269 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01270 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01210 4 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01271 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01272 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01273 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01274 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01275 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 1 \012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01276 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01277 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01278 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01277 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01279 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01280 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01281 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01282 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01283 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01284 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01285 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01286 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01287 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01288 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01289 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01290 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01291 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01292 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01293 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01294 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01295 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01296 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01297 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01298 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01299 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012100 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012101 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012102 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012103 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012104 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012105 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012106 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012107 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012108 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012109 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012110 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012111 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012112 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012113 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012114 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012115 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012116 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012117 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012118 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012119 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012120 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012123 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012130 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012131 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012132 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012133 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012134 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012135 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012136 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012137 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012138 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012139 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\01211 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 3 values pushed */\0124 2 3 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\0123 \012DEPTH[ ]	/* GetDepthStack */\012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    24,\012    24,\012    24,\012    24,\012    710,\012    695,\012    496,\012    0,\012    \"-159\",\012    710,\012    695,\012    496,\012    0,\012    \"-159\",\012    30,\012    30,\012    30,\012    30,\012    700,\012    0,\012    698,\012    453,\012    0,\012    \"-196\",\012    700,\012    \"-6\",\012    700,\012    459,\012    \"-1\",\012    \"-199\",\012    32,\012    32,\012    28,\012    28,\012    168,\012    \"-150\",\012    168,\012    \"-157\",\012    32,\012    32,\012    28,\012    28,\012    762,\012    451,\012    697,\012    454,\012    \"-9\",\012    \"-201\",\012    769,\012    445,\012    697,\012    454,\012    \"-9\",\012    \"-201\"\012)";
}
);
id = m01;
metricValues = (
{
pos = 1000;
},
{
pos = 700;
},
{
pos = 450;
},
{
},
{
pos = -200;
},
{
}
);
name = Regular;
}
);
glyphs = (
{
glyphname = .notdef;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(420,3,o),
(434,12,o),
(439,16,qs),
(441,18,o),
(442,27,o),
(442,31,qs),
(442,84,o),
(442,162,o),
(443,234,o),
(443,319,o),
(443,379,qs),
(443,387,o),
(446,402,o),
(450,409,q),
(452,411,o),
(444,421,o),
(445,423,qs),
(447,428,o),
(451,436,o),
(451,442,qs),
(451,581,ls),
(451,591,o),
(446,597,qs),
(442,602,o),
(451,607,o),
(451,611,qs),
(451,646,ls),
(451,655,o),
(450,673,o),
(450,682,qs),
(450,687,o),
(441,696,o),
(436,698,qs),
(433,700,o),
(424,698,o),
(420,698,qs),
(78,698,ls),
(74,698,o),
(65,699,o),
(61,698,qs),
(57,698,o),
(45,684,o),
(45,679,qs),
(45,629,ls),
(45,622,o),
(46,607,o),
(45,600,q),
(37,594,o),
(45,584,o),
(45,578,qs),
(45,477,ls),
(45,473,o),
(39,465,o),
(40,463,q),
(44,459,o),
(45,449,o),
(45,444,qs),
(45,317,o),
(47,155,o),
(51,63,o),
(56,22,o),
(62,12,o),
(66,12,qs),
(113,12,o),
(158,12,o),
(175,11,o),
(179,9,qs),
(187,4,o),
(198,12,o),
(205,12,qs),
(258,12,o),
(307,11,o),
(324,11,o),
(327,12,qs),
(335,14,o),
(346,2,o),
(353,12,q),
(367,3,o),
(382,3,qs),
(414,3,ls)
);
},
{
closed = 1;
nodes = (
(233,384,qs),
(228,398,o),
(209,430,o),
(200,444,qs),
(186,469,o),
(151,535,o),
(117,598,o),
(95,642,o),
(93,645,qs),
(91,650,o),
(86,658,o),
(84,662,q),
(85,662,o),
(88,663,o),
(89,663,qs),
(398,663,l),
(395,659,o),
(392,651,qs),
(391,648,o),
(368,604,o),
(334,541,o),
(299,475,o),
(285,450,qs),
(276,436,o),
(257,404,o),
(252,390,qs),
(248,379,o),
(240,371,q),
(236,376,o)
);
},
{
closed = 1;
nodes = (
(383,114,q),
(379,122,o),
(367,142,o),
(365,148,q),
(360,173,o),
(344,191,q),
(343,202,o),
(324,239,o),
(303,275,o),
(298,284,qs),
(292,298,o),
(276,314,o),
(268,327,q),
(267,333,o),
(263,342,o),
(261,346,q),
(264,350,o),
(270,359,o),
(271,364,qs),
(273,383,o),
(290,395,o),
(297,407,qs),
(322,452,o),
(357,519,o),
(393,586,o),
(417,629,q),
(417,490,ls),
(417,483,o),
(416,472,o),
(412,466,qs),
(403,454,o),
(412,438,qs),
(416,429,o),
(412,424,qs),
(411,423,o),
(408,415,o),
(409,413,q),
(414,407,o),
(417,397,o),
(412,390,qs),
(410,388,o),
(407,377,o),
(409,375,qs),
(412,371,o),
(415,352,o),
(417,298,o),
(417,241,qs),
(417,227,o),
(409,219,qs),
(408,218,o),
(410,213,o),
(409,211,qs),
(407,204,o),
(418,192,o),
(409,186,q),
(409,78,l),
(398,95,o)
);
},
{
closed = 1;
nodes = (
(79,126,o),
(77,138,o),
(72,143,q),
(70,148,o),
(74,154,qs),
(87,172,o),
(76,194,qs),
(73,202,o),
(73,214,o),
(78,220,q),
(80,221,o),
(79,227,o),
(78,228,qs),
(74,233,o),
(71,242,o),
(71,247,qs),
(71,264,o),
(72,281,o),
(78,287,q),
(81,293,o),
(76,298,qs),
(72,303,o),
(72,313,o),
(70,318,q),
(69,326,o),
(81,340,o),
(71,347,q),
(71,618,l),
(94,576,o),
(129,511,o),
(164,445,o),
(188,401,qs),
(195,389,o),
(213,377,o),
(214,358,qs),
(215,351,o),
(220,345,q),
(217,333,l),
(210,320,o),
(193,304,o),
(187,290,qs),
(182,281,o),
(161,245,o),
(142,208,o),
(141,197,q),
(125,179,o),
(120,154,qs),
(119,148,o),
(107,128,o),
(102,120,qs),
(95,111,o),
(84,97,o),
(79,89,q),
(79,120,ls)
);
},
{
closed = 1;
nodes = (
(168,46,o),
(161,46,qs),
(91,46,l),
(102,54,o),
(111,81,o),
(115,94,q),
(129,104,o),
(141,130,o),
(143,145,q),
(168,189,o),
(216,275,o),
(241,318,q),
(267,274,o),
(317,184,o),
(342,139,q),
(344,124,o),
(357,98,o),
(370,88,q),
(374,75,o),
(384,47,o),
(396,39,q),
(386,39,o),
(368,38,o),
(358,38,qs),
(257,38,ls),
(250,38,o),
(236,38,o),
(229,43,qs),
(227,45,o),
(215,38,o),
(211,39,qs),
(207,41,o),
(199,45,o),
(194,39,q),
(188,36,o),
(186,38,qs),
(181,43,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 93 values pushed */
36 1 4 3 244 203 192 191 182 166 139 128 110 109 107 59 53 32 29 15 6 4 73 2 2 1 5 3 76 220 1 5 1 75 7 1 0 1 1 0 113 0 3 0 4 6 3 4 103 0 6 5 1 6 87 0 5 1 1 5 87 0 5 5 1 97 2 1 1 5 1 81 1 0 254 253 235 229 93 91 43 41 16 14 9 5 0 79 1 78 8 6 22 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = ".notdef";
},
{
glyphname = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(270,1,o),
(307,1,o),
(337,1,o),
(341,1,qs),
(352,1,o),
(369,8,o),
(379,9,q),
(413,1,l),
(421,1,o),
(452,5,o),
(452,17,qs),
(452,20,o),
(450,29,o),
(447,33,q),
(434,60,o),
(405,112,o),
(391,137,qs),
(387,146,o),
(375,164,o),
(373,173,qs),
(372,180,o),
(358,212,o),
(342,242,o),
(337,246,qs),
(328,254,o),
(324,274,o),
(317,281,qs),
(304,297,o),
(288,335,o),
(275,351,q),
(275,370,o),
(264,381,qs),
(257,389,o),
(252,407,o),
(246,414,qs),
(240,420,o),
(232,434,o),
(227,441,q),
(208,477,o),
(172,547,o),
(153,581,qs),
(149,589,o),
(139,604,o),
(138,611,qs),
(138,622,o),
(120,634,o),
(120,644,q),
(112,651,o),
(102,668,o),
(97,677,q),
(93,682,o),
(84,692,o),
(79,696,qs),
(71,704,o),
(48,693,o),
(48,681,qs),
(48,594,ls),
(48,592,o),
(48,586,o),
(49,584,q),
(54,580,o),
(57,569,o),
(57,564,qs),
(57,560,o),
(56,552,o),
(56,548,qs),
(56,451,ls),
(56,446,o),
(55,437,o),
(54,432,q),
(48,430,o),
(52,422,o),
(56,414,o),
(49,411,q),
(49,408,o),
(49,396,o),
(49,359,o),
(48,283,o),
(48,151,o),
(48,48,qs),
(48,40,o),
(48,26,o),
(41,19,q),
(38,17,o),
(44,9,o),
(48,8,qs),
(52,8,o),
(75,7,o),
(100,5,o),
(103,2,qs),
(104,1,o),
(126,8,o),
(132,8,qs),
(201,8,ls),
(213,8,o),
(221,5,o),
(227,1,o),
(236,1,qs),
(241,1,o)
);
},
{
closed = 1;
nodes = (
(110,385,o),
(94,379,q),
(93,378,o),
(89,381,o),
(89,382,qs),
(88,388,o),
(88,418,o),
(88,421,qs),
(88,426,o),
(86,436,o),
(82,440,qs),
(80,442,o),
(80,467,o),
(81,469,qs),
(95,489,o),
(83,507,q),
(90,524,o),
(88,527,qs),
(85,530,o),
(82,559,o),
(81,594,o),
(81,623,o),
(81,626,qs),
(81,629,o),
(88,629,o),
(88,627,qs),
(88,619,o),
(104,611,o),
(104,603,qs),
(104,596,o),
(111,585,o),
(115,580,qs),
(120,574,o),
(127,561,o),
(133,556,qs),
(139,552,o),
(136,537,o),
(143,532,q),
(151,517,o),
(175,470,o),
(195,433,o),
(196,432,qs),
(207,425,o),
(213,396,o),
(220,387,qs),
(221,386,o),
(217,379,o),
(215,379,qs),
(207,378,o),
(186,383,o),
(178,377,q),
(170,373,o),
(159,377,q),
(144,385,o)
);
},
{
closed = 1;
nodes = (
(377,33,o),
(372,32,qs),
(364,30,o),
(360,32,q),
(356,37,o),
(331,40,o),
(307,36,o),
(303,32,q),
(296,40,o),
(262,40,o),
(255,32,q),
(249,37,o),
(237,39,o),
(229,39,qs),
(225,39,o),
(207,39,o),
(157,39,o),
(104,39,qs),
(100,39,o),
(92,38,o),
(88,39,q),
(80,44,o),
(71,55,o),
(76,61,qs),
(84,69,o),
(75,77,q),
(72,81,o),
(77,84,o),
(78,86,qs),
(80,91,o),
(80,109,o),
(80,113,qs),
(80,118,o),
(83,129,o),
(87,133,q),
(79,142,o),
(79,156,qs),
(79,161,o),
(81,174,o),
(81,180,qs),
(80,304,ls),
(80,311,o),
(84,325,o),
(88,331,qs),
(89,333,o),
(85,340,o),
(83,342,q),
(83,346,o),
(107,354,o),
(110,351,q),
(115,348,o),
(127,347,o),
(133,347,qs),
(226,347,ls),
(244,347,o),
(251,332,qs),
(254,324,o),
(262,307,o),
(267,299,qs),
(275,289,o),
(285,264,o),
(296,255,qs),
(301,251,o),
(298,236,o),
(305,232,qs),
(312,228,o),
(314,215,o),
(316,210,qs),
(319,202,o),
(339,168,o),
(356,134,o),
(356,126,q),
(357,122,o),
(362,114,o),
(365,110,q),
(380,95,o),
(397,59,o),
(407,42,q),
(411,32,o),
(405,32,o),
(397,31,q),
(393,34,o)
);
},
{
closed = 1;
nodes = (
(234,179,q),
(238,188,o),
(229,197,q),
(225,203,o),
(203,214,o),
(182,219,o),
(176,213,q),
(172,207,o),
(165,194,o),
(163,186,q),
(163,182,o),
(172,170,o),
(173,164,qs),
(176,150,o),
(208,149,o),
(226,162,q),
(232,168,o)
);
},
{
closed = 1;
nodes = (
(194,175,o),
(193,179,qs),
(192,181,o),
(190,184,o),
(190,185,qs),
(190,187,o),
(192,191,o),
(193,192,qs),
(195,194,o),
(207,190,o),
(208,188,q),
(210,186,o),
(209,183,q),
(209,180,o),
(207,178,qs),
(203,175,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 107 values pushed */
68 1 4 3 194 1 8 4 208 199 2 5 8 226 223 2 7 5 91 1 1 7 5 76 138 136 129 54 51 32 6 3 74 0 8 4 5 4 8 5 128 0 7 5 1 5 7 1 128 0 3 0 4 8 3 4 103 6 1 5 5 1 97 2 1 1 1 38 77 6 1 5 5 0 95 9 1 0 0 38 0 78 1 0 237 236 232 230 225 224 221 213 183 179 152 151 11 10 5 3 0 98 1 93 10 8 22 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = A;
unicode = 65;
},
{
glyphname = Aacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (-5,143);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
143 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = Aacute;
unicode = 193;
},
{
glyphname = Abreve;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (-67,121);
ref = uni0306;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
121 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = Abreve;
unicode = 258;
},
{
glyphname = uni1EAE;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (-68,120);
ref = uni0306;
},
{
pos = (-26,304);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
120 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHW[ ]	/* 1 value pushed */
304 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = uni1EAE;
unicode = 7854;
},
{
glyphname = uni1EB6;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (163,-113);
ref = period;
},
{
pos = (-67,121);
ref = uni0306;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
-113 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
121 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = uni1EB6;
unicode = 7862;
},
{
glyphname = uni1EB0;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(270,1,o),
(307,1,o),
(337,1,o),
(341,1,qs),
(352,1,o),
(369,8,o),
(379,9,q),
(413,1,l),
(421,1,o),
(452,5,o),
(452,17,qs),
(452,20,o),
(450,29,o),
(447,33,q),
(434,60,o),
(405,112,o),
(391,137,qs),
(387,146,o),
(375,164,o),
(373,173,qs),
(372,180,o),
(358,212,o),
(342,242,o),
(337,246,qs),
(328,254,o),
(324,274,o),
(317,281,qs),
(304,297,o),
(288,335,o),
(275,351,q),
(275,370,o),
(264,381,qs),
(257,389,o),
(252,407,o),
(246,414,qs),
(240,420,o),
(232,434,o),
(227,441,q),
(208,477,o),
(172,547,o),
(153,581,qs),
(149,589,o),
(139,604,o),
(138,611,qs),
(138,622,o),
(120,634,o),
(120,644,q),
(112,651,o),
(102,668,o),
(97,677,q),
(93,682,o),
(84,692,o),
(79,696,qs),
(71,704,o),
(48,693,o),
(48,681,qs),
(48,594,ls),
(48,592,o),
(48,586,o),
(49,584,q),
(54,580,o),
(57,569,o),
(57,564,qs),
(57,560,o),
(56,552,o),
(56,548,qs),
(56,451,ls),
(56,446,o),
(55,437,o),
(54,432,q),
(48,430,o),
(52,422,o),
(56,414,o),
(49,411,q),
(49,408,o),
(49,396,o),
(49,359,o),
(48,283,o),
(48,151,o),
(48,48,qs),
(48,40,o),
(48,26,o),
(41,19,q),
(38,17,o),
(44,9,o),
(48,8,qs),
(52,8,o),
(75,7,o),
(100,5,o),
(103,2,qs),
(104,1,o),
(126,8,o),
(132,8,qs),
(201,8,ls),
(213,8,o),
(221,5,o),
(227,1,o),
(236,1,qs),
(241,1,o)
);
},
{
closed = 1;
nodes = (
(110,385,o),
(94,379,q),
(93,378,o),
(89,381,o),
(89,382,qs),
(88,388,o),
(88,418,o),
(88,421,qs),
(88,426,o),
(86,436,o),
(82,440,qs),
(80,442,o),
(80,467,o),
(81,469,qs),
(95,489,o),
(83,507,q),
(90,524,o),
(88,527,qs),
(85,530,o),
(82,559,o),
(81,594,o),
(81,623,o),
(81,626,qs),
(81,629,o),
(88,629,o),
(88,627,qs),
(88,619,o),
(104,611,o),
(104,603,qs),
(104,596,o),
(111,585,o),
(115,580,qs),
(120,574,o),
(127,561,o),
(133,556,qs),
(139,552,o),
(136,537,o),
(143,532,q),
(151,517,o),
(175,470,o),
(195,433,o),
(196,432,qs),
(207,425,o),
(213,396,o),
(220,387,qs),
(221,386,o),
(217,379,o),
(215,379,qs),
(207,378,o),
(186,383,o),
(178,377,q),
(170,373,o),
(159,377,q),
(144,385,o)
);
},
{
closed = 1;
nodes = (
(377,33,o),
(372,32,qs),
(364,30,o),
(360,32,q),
(356,37,o),
(331,40,o),
(307,36,o),
(303,32,q),
(296,40,o),
(262,40,o),
(255,32,q),
(249,37,o),
(237,39,o),
(229,39,qs),
(225,39,o),
(207,39,o),
(157,39,o),
(104,39,qs),
(100,39,o),
(92,38,o),
(88,39,q),
(80,44,o),
(71,55,o),
(76,61,qs),
(84,69,o),
(75,77,q),
(72,81,o),
(77,84,o),
(78,86,qs),
(80,91,o),
(80,109,o),
(80,113,qs),
(80,118,o),
(83,129,o),
(87,133,q),
(79,142,o),
(79,156,qs),
(79,161,o),
(81,174,o),
(81,180,qs),
(80,304,ls),
(80,311,o),
(84,325,o),
(88,331,qs),
(89,333,o),
(85,340,o),
(83,342,q),
(83,346,o),
(107,354,o),
(110,351,q),
(115,348,o),
(127,347,o),
(133,347,qs),
(226,347,ls),
(244,347,o),
(251,332,qs),
(254,324,o),
(262,307,o),
(267,299,qs),
(275,289,o),
(285,264,o),
(296,255,qs),
(301,251,o),
(298,236,o),
(305,232,qs),
(312,228,o),
(314,215,o),
(316,210,qs),
(319,202,o),
(339,168,o),
(356,134,o),
(356,126,q),
(357,122,o),
(362,114,o),
(365,110,q),
(380,95,o),
(397,59,o),
(407,42,q),
(411,32,o),
(405,32,o),
(397,31,q),
(393,34,o)
);
},
{
closed = 1;
nodes = (
(234,179,q),
(238,188,o),
(229,197,q),
(225,203,o),
(203,214,o),
(182,219,o),
(176,213,q),
(172,207,o),
(165,194,o),
(163,186,q),
(163,182,o),
(172,170,o),
(173,164,qs),
(176,150,o),
(208,149,o),
(226,162,q),
(232,168,o)
);
},
{
closed = 1;
nodes = (
(194,175,o),
(193,179,qs),
(192,181,o),
(190,184,o),
(190,185,qs),
(190,187,o),
(192,191,o),
(193,192,qs),
(195,194,o),
(207,190,o),
(208,188,q),
(210,186,o),
(209,183,q),
(209,180,o),
(207,178,qs),
(203,175,o)
);
},
{
closed = 1;
nodes = (
(26,739,qs),
(32,739,o),
(69,738,o),
(113,737,o),
(150,737,o),
(156,738,qs),
(161,738,o),
(174,751,o),
(174,756,qs),
(175,764,o),
(175,800,o),
(170,835,o),
(163,838,qs),
(151,845,o),
(142,825,o),
(142,818,q),
(147,789,l),
(152,781,o),
(139,766,o),
(133,766,q),
(125,764,o),
(108,767,o),
(100,767,qs),
(92,767,o),
(89,770,qs),
(85,773,o),
(81,770,o),
(78,769,qs),
(66,766,o),
(20,766,o),
(8,767,q),
(5,772,o),
(1,784,o),
(2,790,qs),
(3,798,o),
(3,821,o),
(3,824,qs),
(3,830,o),
(-7,844,o),
(-27,838,q),
(-32,759,ls),
(-33,748,o),
(-7,730,o),
(-6,731,q),
(7,739,o)
);
},
{
closed = 1;
nodes = (
(95,918,o),
(84,928,qs),
(63,946,o),
(51,962,q),
(43,969,o),
(29,982,o),
(22,990,qs),
(18,995,o),
(9,1005,o),
(2,1006,q),
(0,1008,o),
(-6,1003,o),
(-8,1004,qs),
(-11,1006,o),
(-22,995,o),
(-21,992,qs),
(-16,980,o),
(-6,957,o),
(10,952,qs),
(16,950,o),
(27,942,o),
(31,937,qs),
(39,928,o),
(60,906,o),
(76,892,qs),
(94,879,o),
(122,884,o),
(126,888,q),
(116,898,o)
);
}
);
width = 452;
}
);
note = uni1EB0;
unicode = 7856;
},
{
glyphname = uni1EB2;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (-75,104);
ref = uni0306;
},
{
pos = (-44,303);
ref = hookabovecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
104 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHW[ ]	/* 1 value pushed */
303 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = uni1EB2;
unicode = 7858;
},
{
glyphname = uni1EB4;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (-74,100);
ref = uni0306;
},
{
pos = (-62,236);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
100 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
236 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = uni1EB4;
unicode = 7860;
},
{
glyphname = uni01CD;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(270,1,o),
(307,1,o),
(337,1,o),
(341,1,qs),
(352,1,o),
(369,8,o),
(379,9,q),
(413,1,l),
(421,1,o),
(452,5,o),
(452,17,qs),
(452,20,o),
(450,29,o),
(447,33,q),
(434,60,o),
(405,112,o),
(391,137,qs),
(387,146,o),
(375,164,o),
(373,173,qs),
(372,180,o),
(358,212,o),
(342,242,o),
(337,246,qs),
(328,254,o),
(324,274,o),
(317,281,qs),
(304,297,o),
(288,335,o),
(275,351,q),
(275,370,o),
(264,381,qs),
(257,389,o),
(252,407,o),
(246,414,qs),
(240,420,o),
(232,434,o),
(227,441,q),
(208,477,o),
(172,547,o),
(153,581,qs),
(149,589,o),
(139,604,o),
(138,611,qs),
(138,622,o),
(120,634,o),
(120,644,q),
(112,651,o),
(102,668,o),
(97,677,q),
(93,682,o),
(84,692,o),
(79,696,qs),
(71,704,o),
(48,693,o),
(48,681,qs),
(48,594,ls),
(48,592,o),
(48,586,o),
(49,584,q),
(54,580,o),
(57,569,o),
(57,564,qs),
(57,560,o),
(56,552,o),
(56,548,qs),
(56,451,ls),
(56,446,o),
(55,437,o),
(54,432,q),
(48,430,o),
(52,422,o),
(56,414,o),
(49,411,q),
(49,408,o),
(49,396,o),
(49,359,o),
(48,283,o),
(48,151,o),
(48,48,qs),
(48,40,o),
(48,26,o),
(41,19,q),
(38,17,o),
(44,9,o),
(48,8,qs),
(52,8,o),
(75,7,o),
(100,5,o),
(103,2,qs),
(104,1,o),
(126,8,o),
(132,8,qs),
(201,8,ls),
(213,8,o),
(221,5,o),
(227,1,o),
(236,1,qs),
(241,1,o)
);
},
{
closed = 1;
nodes = (
(110,385,o),
(94,379,q),
(93,378,o),
(89,381,o),
(89,382,qs),
(88,388,o),
(88,418,o),
(88,421,qs),
(88,426,o),
(86,436,o),
(82,440,qs),
(80,442,o),
(80,467,o),
(81,469,qs),
(95,489,o),
(83,507,q),
(90,524,o),
(88,527,qs),
(85,530,o),
(82,559,o),
(81,594,o),
(81,623,o),
(81,626,qs),
(81,629,o),
(88,629,o),
(88,627,qs),
(88,619,o),
(104,611,o),
(104,603,qs),
(104,596,o),
(111,585,o),
(115,580,qs),
(120,574,o),
(127,561,o),
(133,556,qs),
(139,552,o),
(136,537,o),
(143,532,q),
(151,517,o),
(175,470,o),
(195,433,o),
(196,432,qs),
(207,425,o),
(213,396,o),
(220,387,qs),
(221,386,o),
(217,379,o),
(215,379,qs),
(207,378,o),
(186,383,o),
(178,377,q),
(170,373,o),
(159,377,q),
(144,385,o)
);
},
{
closed = 1;
nodes = (
(377,33,o),
(372,32,qs),
(364,30,o),
(360,32,q),
(356,37,o),
(331,40,o),
(307,36,o),
(303,32,q),
(296,40,o),
(262,40,o),
(255,32,q),
(249,37,o),
(237,39,o),
(229,39,qs),
(225,39,o),
(207,39,o),
(157,39,o),
(104,39,qs),
(100,39,o),
(92,38,o),
(88,39,q),
(80,44,o),
(71,55,o),
(76,61,qs),
(84,69,o),
(75,77,q),
(72,81,o),
(77,84,o),
(78,86,qs),
(80,91,o),
(80,109,o),
(80,113,qs),
(80,118,o),
(83,129,o),
(87,133,q),
(79,142,o),
(79,156,qs),
(79,161,o),
(81,174,o),
(81,180,qs),
(80,304,ls),
(80,311,o),
(84,325,o),
(88,331,qs),
(89,333,o),
(85,340,o),
(83,342,q),
(83,346,o),
(107,354,o),
(110,351,q),
(115,348,o),
(127,347,o),
(133,347,qs),
(226,347,ls),
(244,347,o),
(251,332,qs),
(254,324,o),
(262,307,o),
(267,299,qs),
(275,289,o),
(285,264,o),
(296,255,qs),
(301,251,o),
(298,236,o),
(305,232,qs),
(312,228,o),
(314,215,o),
(316,210,qs),
(319,202,o),
(339,168,o),
(356,134,o),
(356,126,q),
(357,122,o),
(362,114,o),
(365,110,q),
(380,95,o),
(397,59,o),
(407,42,q),
(411,32,o),
(405,32,o),
(397,31,q),
(393,34,o)
);
},
{
closed = 1;
nodes = (
(234,179,q),
(238,188,o),
(229,197,q),
(225,203,o),
(203,214,o),
(182,219,o),
(176,213,q),
(172,207,o),
(165,194,o),
(163,186,q),
(163,182,o),
(172,170,o),
(173,164,qs),
(176,150,o),
(208,149,o),
(226,162,q),
(232,168,o)
);
},
{
closed = 1;
nodes = (
(194,175,o),
(193,179,qs),
(192,181,o),
(190,184,o),
(190,185,qs),
(190,187,o),
(192,191,o),
(193,192,qs),
(195,194,o),
(207,190,o),
(208,188,q),
(210,186,o),
(209,183,q),
(209,180,o),
(207,178,qs),
(203,175,o)
);
},
{
closed = 1;
nodes = (
(116,836,o),
(113,832,qs),
(111,830,o),
(98,813,o),
(96,811,qs),
(94,808,o),
(87,797,o),
(85,796,qs),
(79,793,o),
(75,793,o),
(70,795,q),
(66,800,o),
(44,820,o),
(17,843,o),
(-6,859,o),
(-11,859,q),
(-19,861,o),
(-31,859,o),
(-27,850,q),
(-21,844,o),
(-9,831,o),
(-5,824,q),
(0,821,o),
(12,806,o),
(18,803,q),
(26,796,o),
(33,787,o),
(40,781,qs),
(48,774,o),
(64,760,o),
(68,749,qs),
(70,745,o),
(78,744,o),
(80,748,q),
(91,760,o),
(122,794,o),
(152,829,o),
(172,852,o),
(171,853,qs),
(169,855,o),
(163,860,o),
(161,860,q),
(156,862,o),
(149,860,q),
(135,853,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 107 values pushed */
68 1 4 3 194 1 8 4 208 199 2 5 8 226 223 2 7 5 91 1 1 7 5 76 138 136 129 54 51 32 6 3 74 0 8 4 5 4 8 5 128 0 7 5 1 5 7 1 128 0 3 0 4 8 3 4 103 6 1 5 5 1 97 2 1 1 1 38 77 6 1 5 5 0 95 9 1 0 0 38 0 78 1 0 237 236 232 230 225 224 221 213 183 179 152 151 11 10 5 3 0 98 1 93 10 8 22 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = uni01CD;
unicode = 461;
},
{
glyphname = Acircumflex;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (-64,131);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
131 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = Acircumflex;
unicode = 194;
},
{
glyphname = uni1EA4;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (-70,113);
ref = uni0302;
},
{
pos = (-24,258);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
113 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHW[ ]	/* 1 value pushed */
258 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = uni1EA4;
unicode = 7844;
},
{
glyphname = uni1EAC;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (163,-113);
ref = period;
},
{
pos = (-64,131);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
-113 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
131 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = uni1EAC;
unicode = 7852;
},
{
glyphname = uni1EA6;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(270,1,o),
(307,1,o),
(337,1,o),
(341,1,qs),
(352,1,o),
(369,8,o),
(379,9,q),
(413,1,l),
(421,1,o),
(452,5,o),
(452,17,qs),
(452,20,o),
(450,29,o),
(447,33,q),
(434,60,o),
(405,112,o),
(391,137,qs),
(387,146,o),
(375,164,o),
(373,173,qs),
(372,180,o),
(358,212,o),
(342,242,o),
(337,246,qs),
(328,254,o),
(324,274,o),
(317,281,qs),
(304,297,o),
(288,335,o),
(275,351,q),
(275,370,o),
(264,381,qs),
(257,389,o),
(252,407,o),
(246,414,qs),
(240,420,o),
(232,434,o),
(227,441,q),
(208,477,o),
(172,547,o),
(153,581,qs),
(149,589,o),
(139,604,o),
(138,611,qs),
(138,622,o),
(120,634,o),
(120,644,q),
(112,651,o),
(102,668,o),
(97,677,q),
(93,682,o),
(84,692,o),
(79,696,qs),
(71,704,o),
(48,693,o),
(48,681,qs),
(48,594,ls),
(48,592,o),
(48,586,o),
(49,584,q),
(54,580,o),
(57,569,o),
(57,564,qs),
(57,560,o),
(56,552,o),
(56,548,qs),
(56,451,ls),
(56,446,o),
(55,437,o),
(54,432,q),
(48,430,o),
(52,422,o),
(56,414,o),
(49,411,q),
(49,408,o),
(49,396,o),
(49,359,o),
(48,283,o),
(48,151,o),
(48,48,qs),
(48,40,o),
(48,26,o),
(41,19,q),
(38,17,o),
(44,9,o),
(48,8,qs),
(52,8,o),
(75,7,o),
(100,5,o),
(103,2,qs),
(104,1,o),
(126,8,o),
(132,8,qs),
(201,8,ls),
(213,8,o),
(221,5,o),
(227,1,o),
(236,1,qs),
(241,1,o)
);
},
{
closed = 1;
nodes = (
(110,385,o),
(94,379,q),
(93,378,o),
(89,381,o),
(89,382,qs),
(88,388,o),
(88,418,o),
(88,421,qs),
(88,426,o),
(86,436,o),
(82,440,qs),
(80,442,o),
(80,467,o),
(81,469,qs),
(95,489,o),
(83,507,q),
(90,524,o),
(88,527,qs),
(85,530,o),
(82,559,o),
(81,594,o),
(81,623,o),
(81,626,qs),
(81,629,o),
(88,629,o),
(88,627,qs),
(88,619,o),
(104,611,o),
(104,603,qs),
(104,596,o),
(111,585,o),
(115,580,qs),
(120,574,o),
(127,561,o),
(133,556,qs),
(139,552,o),
(136,537,o),
(143,532,q),
(151,517,o),
(175,470,o),
(195,433,o),
(196,432,qs),
(207,425,o),
(213,396,o),
(220,387,qs),
(221,386,o),
(217,379,o),
(215,379,qs),
(207,378,o),
(186,383,o),
(178,377,q),
(170,373,o),
(159,377,q),
(144,385,o)
);
},
{
closed = 1;
nodes = (
(377,33,o),
(372,32,qs),
(364,30,o),
(360,32,q),
(356,37,o),
(331,40,o),
(307,36,o),
(303,32,q),
(296,40,o),
(262,40,o),
(255,32,q),
(249,37,o),
(237,39,o),
(229,39,qs),
(225,39,o),
(207,39,o),
(157,39,o),
(104,39,qs),
(100,39,o),
(92,38,o),
(88,39,q),
(80,44,o),
(71,55,o),
(76,61,qs),
(84,69,o),
(75,77,q),
(72,81,o),
(77,84,o),
(78,86,qs),
(80,91,o),
(80,109,o),
(80,113,qs),
(80,118,o),
(83,129,o),
(87,133,q),
(79,142,o),
(79,156,qs),
(79,161,o),
(81,174,o),
(81,180,qs),
(80,304,ls),
(80,311,o),
(84,325,o),
(88,331,qs),
(89,333,o),
(85,340,o),
(83,342,q),
(83,346,o),
(107,354,o),
(110,351,q),
(115,348,o),
(127,347,o),
(133,347,qs),
(226,347,ls),
(244,347,o),
(251,332,qs),
(254,324,o),
(262,307,o),
(267,299,qs),
(275,289,o),
(285,264,o),
(296,255,qs),
(301,251,o),
(298,236,o),
(305,232,qs),
(312,228,o),
(314,215,o),
(316,210,qs),
(319,202,o),
(339,168,o),
(356,134,o),
(356,126,q),
(357,122,o),
(362,114,o),
(365,110,q),
(380,95,o),
(397,59,o),
(407,42,q),
(411,32,o),
(405,32,o),
(397,31,q),
(393,34,o)
);
},
{
closed = 1;
nodes = (
(234,179,q),
(238,188,o),
(229,197,q),
(225,203,o),
(203,214,o),
(182,219,o),
(176,213,q),
(172,207,o),
(165,194,o),
(163,186,q),
(163,182,o),
(172,170,o),
(173,164,qs),
(176,150,o),
(208,149,o),
(226,162,q),
(232,168,o)
);
},
{
closed = 1;
nodes = (
(194,175,o),
(193,179,qs),
(192,181,o),
(190,184,o),
(190,185,qs),
(190,187,o),
(192,191,o),
(193,192,qs),
(195,194,o),
(207,190,o),
(208,188,q),
(210,186,o),
(209,183,q),
(209,180,o),
(207,178,qs),
(203,175,o)
);
},
{
closed = 1;
nodes = (
(155,738,q),
(157,738,o),
(163,744,o),
(165,745,qs),
(166,746,o),
(146,769,o),
(116,804,o),
(85,838,o),
(74,850,q),
(72,854,o),
(64,853,o),
(62,849,qs),
(58,838,o),
(42,824,o),
(34,817,qs),
(27,811,o),
(20,802,o),
(12,795,q),
(6,792,o),
(-6,777,o),
(-11,774,q),
(-15,767,o),
(-27,754,o),
(-33,748,q),
(-37,739,o),
(-25,738,o),
(-17,739,qs),
(-12,739,o),
(11,755,o),
(38,778,o),
(60,799,o),
(64,803,q),
(69,805,o),
(73,805,o),
(79,802,qs),
(81,801,o),
(88,790,o),
(90,787,q),
(92,786,o),
(105,768,o),
(107,766,qs),
(110,762,o),
(129,746,o),
(143,738,q),
(150,736,o)
);
},
{
closed = 1;
nodes = (
(96,910,o),
(85,920,qs),
(64,938,o),
(52,954,q),
(44,961,o),
(30,974,o),
(23,982,qs),
(19,987,o),
(10,997,o),
(3,998,q),
(1,1000,o),
(-5,995,o),
(-7,996,qs),
(-10,998,o),
(-21,987,o),
(-20,984,qs),
(-15,972,o),
(-5,949,o),
(11,944,qs),
(17,942,o),
(28,934,o),
(32,929,qs),
(40,920,o),
(61,898,o),
(77,884,qs),
(95,871,o),
(123,876,o),
(127,880,q),
(117,890,o)
);
}
);
width = 452;
}
);
note = uni1EA6;
unicode = 7846;
},
{
glyphname = uni1EA8;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (-62,116);
ref = uni0302;
},
{
pos = (-27,276);
ref = hookabovecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
116 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHW[ ]	/* 1 value pushed */
276 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = uni1EA8;
unicode = 7848;
},
{
glyphname = uni1EAA;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (-67,131);
ref = uni0302;
},
{
pos = (-51,228);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
131 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
228 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = uni1EAA;
unicode = 7850;
},
{
glyphname = uni0200;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (-81,121);
ref = uni030F;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 2 
PUSHB[ ]	/* 1 value pushed */
121 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = uni0200;
unicode = 512;
},
{
glyphname = Adieresis;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (-87,130);
ref = uni0308;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 2 
PUSHB[ ]	/* 1 value pushed */
130 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = Adieresis;
unicode = 196;
},
{
glyphname = uni01DE;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (-87,130);
ref = uni0308;
},
{
pos = (-102,671);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 2 
PUSHB[ ]	/* 1 value pushed */
130 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
7 1 
PUSHW[ ]	/* 1 value pushed */
671 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = uni01DE;
unicode = 478;
},
{
glyphname = uni0226;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (-1,116);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
116 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = uni0226;
unicode = 550;
},
{
glyphname = uni1EA0;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (163,-113);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
-113 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = uni1EA0;
unicode = 7840;
},
{
glyphname = uni01E0;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (-1,116);
ref = uni0307;
},
{
pos = (-100,641);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
116 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHW[ ]	/* 1 value pushed */
641 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = uni01E0;
unicode = 480;
},
{
glyphname = Agrave;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(270,1,o),
(307,1,o),
(337,1,o),
(341,1,qs),
(352,1,o),
(369,8,o),
(379,9,q),
(413,1,l),
(421,1,o),
(452,5,o),
(452,17,qs),
(452,20,o),
(450,29,o),
(447,33,q),
(434,60,o),
(405,112,o),
(391,137,qs),
(387,146,o),
(375,164,o),
(373,173,qs),
(372,180,o),
(358,212,o),
(342,242,o),
(337,246,qs),
(328,254,o),
(324,274,o),
(317,281,qs),
(304,297,o),
(288,335,o),
(275,351,q),
(275,370,o),
(264,381,qs),
(257,389,o),
(252,407,o),
(246,414,qs),
(240,420,o),
(232,434,o),
(227,441,q),
(208,477,o),
(172,547,o),
(153,581,qs),
(149,589,o),
(139,604,o),
(138,611,qs),
(138,622,o),
(120,634,o),
(120,644,q),
(112,651,o),
(102,668,o),
(97,677,q),
(93,682,o),
(84,692,o),
(79,696,qs),
(71,704,o),
(48,693,o),
(48,681,qs),
(48,594,ls),
(48,592,o),
(48,586,o),
(49,584,q),
(54,580,o),
(57,569,o),
(57,564,qs),
(57,560,o),
(56,552,o),
(56,548,qs),
(56,451,ls),
(56,446,o),
(55,437,o),
(54,432,q),
(48,430,o),
(52,422,o),
(56,414,o),
(49,411,q),
(49,408,o),
(49,396,o),
(49,359,o),
(48,283,o),
(48,151,o),
(48,48,qs),
(48,40,o),
(48,26,o),
(41,19,q),
(38,17,o),
(44,9,o),
(48,8,qs),
(52,8,o),
(75,7,o),
(100,5,o),
(103,2,qs),
(104,1,o),
(126,8,o),
(132,8,qs),
(201,8,ls),
(213,8,o),
(221,5,o),
(227,1,o),
(236,1,qs),
(241,1,o)
);
},
{
closed = 1;
nodes = (
(110,385,o),
(94,379,q),
(93,378,o),
(89,381,o),
(89,382,qs),
(88,388,o),
(88,418,o),
(88,421,qs),
(88,426,o),
(86,436,o),
(82,440,qs),
(80,442,o),
(80,467,o),
(81,469,qs),
(95,489,o),
(83,507,q),
(90,524,o),
(88,527,qs),
(85,530,o),
(82,559,o),
(81,594,o),
(81,623,o),
(81,626,qs),
(81,629,o),
(88,629,o),
(88,627,qs),
(88,619,o),
(104,611,o),
(104,603,qs),
(104,596,o),
(111,585,o),
(115,580,qs),
(120,574,o),
(127,561,o),
(133,556,qs),
(139,552,o),
(136,537,o),
(143,532,q),
(151,517,o),
(175,470,o),
(195,433,o),
(196,432,qs),
(207,425,o),
(213,396,o),
(220,387,qs),
(221,386,o),
(217,379,o),
(215,379,qs),
(207,378,o),
(186,383,o),
(178,377,q),
(170,373,o),
(159,377,q),
(144,385,o)
);
},
{
closed = 1;
nodes = (
(377,33,o),
(372,32,qs),
(364,30,o),
(360,32,q),
(356,37,o),
(331,40,o),
(307,36,o),
(303,32,q),
(296,40,o),
(262,40,o),
(255,32,q),
(249,37,o),
(237,39,o),
(229,39,qs),
(225,39,o),
(207,39,o),
(157,39,o),
(104,39,qs),
(100,39,o),
(92,38,o),
(88,39,q),
(80,44,o),
(71,55,o),
(76,61,qs),
(84,69,o),
(75,77,q),
(72,81,o),
(77,84,o),
(78,86,qs),
(80,91,o),
(80,109,o),
(80,113,qs),
(80,118,o),
(83,129,o),
(87,133,q),
(79,142,o),
(79,156,qs),
(79,161,o),
(81,174,o),
(81,180,qs),
(80,304,ls),
(80,311,o),
(84,325,o),
(88,331,qs),
(89,333,o),
(85,340,o),
(83,342,q),
(83,346,o),
(107,354,o),
(110,351,q),
(115,348,o),
(127,347,o),
(133,347,qs),
(226,347,ls),
(244,347,o),
(251,332,qs),
(254,324,o),
(262,307,o),
(267,299,qs),
(275,289,o),
(285,264,o),
(296,255,qs),
(301,251,o),
(298,236,o),
(305,232,qs),
(312,228,o),
(314,215,o),
(316,210,qs),
(319,202,o),
(339,168,o),
(356,134,o),
(356,126,q),
(357,122,o),
(362,114,o),
(365,110,q),
(380,95,o),
(397,59,o),
(407,42,q),
(411,32,o),
(405,32,o),
(397,31,q),
(393,34,o)
);
},
{
closed = 1;
nodes = (
(234,179,q),
(238,188,o),
(229,197,q),
(225,203,o),
(203,214,o),
(182,219,o),
(176,213,q),
(172,207,o),
(165,194,o),
(163,186,q),
(163,182,o),
(172,170,o),
(173,164,qs),
(176,150,o),
(208,149,o),
(226,162,q),
(232,168,o)
);
},
{
closed = 1;
nodes = (
(194,175,o),
(193,179,qs),
(192,181,o),
(190,184,o),
(190,185,qs),
(190,187,o),
(192,191,o),
(193,192,qs),
(195,194,o),
(207,190,o),
(208,188,q),
(210,186,o),
(209,183,q),
(209,180,o),
(207,178,qs),
(203,175,o)
);
},
{
closed = 1;
nodes = (
(95,792,o),
(84,802,qs),
(63,820,o),
(51,836,q),
(43,843,o),
(29,856,o),
(22,864,qs),
(18,869,o),
(9,879,o),
(2,880,q),
(0,882,o),
(-6,877,o),
(-8,878,qs),
(-11,880,o),
(-22,869,o),
(-21,866,qs),
(-16,854,o),
(-6,831,o),
(10,826,qs),
(16,824,o),
(27,816,o),
(31,811,qs),
(39,802,o),
(60,780,o),
(76,766,qs),
(94,753,o),
(122,758,o),
(126,762,q),
(116,772,o)
);
}
);
width = 452;
}
);
note = Agrave;
unicode = 192;
},
{
glyphname = uni1EA2;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (-36,158);
ref = hookabovecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
158 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = uni1EA2;
unicode = 7842;
},
{
glyphname = uni0202;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (-32,118);
ref = uni0311;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
118 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = uni0202;
unicode = 514;
},
{
glyphname = uni2C6D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(126,-9,o),
(182,16,o),
(230,37,o),
(241,38,qs),
(247,39,o),
(292,57,o),
(355,84,o),
(420,113,o),
(472,134,o),
(482,138,qs),
(487,140,o),
(491,143,q),
(492,15,ls),
(492,4,o),
(522,0,o),
(538,0,qs),
(558,0,o),
(591,9,o),
(591,12,qs),
(591,21,o),
(576,25,q),
(572,24,o),
(565,22,o),
(555,22,qs),
(550,22,o),
(534,23,o),
(523,24,q),
(522,62,o),
(521,113,o),
(521,139,qs),
(521,165,o),
(521,233,o),
(519,289,qs),
(519,319,o),
(521,348,o),
(523,363,o),
(523,369,qs),
(523,378,o),
(519,394,q),
(519,394,o),
(520,423,o),
(521,465,o),
(521,483,qs),
(521,497,o),
(516,527,o),
(516,531,qs),
(516,537,o),
(520,565,o),
(519,567,qs),
(516,574,o),
(514,585,o),
(514,589,qs),
(514,598,o),
(518,615,o),
(517,627,q),
(510,650,o),
(498,666,o),
(493,666,qs),
(486,666,o),
(480,648,o),
(480,643,qs),
(480,636,o),
(484,618,o),
(487,609,q),
(487,565,l),
(452,576,o),
(363,609,o),
(274,640,o),
(240,649,q),
(227,654,o),
(198,659,o),
(185,666,qs),
(179,669,o),
(142,683,o),
(98,700,o),
(65,711,o),
(64,711,qs),
(40,711,o),
(40,692,qs),
(40,663,ls),
(40,659,o),
(42,644,o),
(46,606,o),
(50,566,qs),
(51,543,o),
(49,509,o),
(49,474,qs),
(49,456,o),
(50,405,o),
(51,369,qs),
(51,363,o),
(54,352,o),
(60,347,q),
(64,341,o),
(60,335,qs),
(55,328,o),
(52,315,o),
(52,308,qs),
(53,251,o),
(59,198,o),
(59,197,qs),
(59,193,o),
(57,179,o),
(54,138,o),
(54,93,qs),
(54,84,o),
(64,74,o),
(64,69,qs),
(64,65,o),
(62,63,qs),
(58,57,o),
(49,22,o),
(49,5,qs),
(49,-7,o),
(57,-28,o),
(68,-29,qs),
(78,-29,o)
);
},
{
closed = 1;
nodes = (
(88,59,o),
(90,67,o),
(92,74,o),
(92,85,qs),
(90,317,ls),
(90,322,o),
(90,334,o),
(84,338,q),
(81,341,o),
(89,347,o),
(89,359,qs),
(89,382,ls),
(89,385,o),
(82,391,o),
(82,394,qs),
(82,397,o),
(86,400,qs),
(88,402,o),
(88,416,o),
(88,426,qs),
(88,442,o),
(85,475,o),
(82,476,q),
(78,481,o),
(87,485,o),
(87,488,qs),
(87,491,o),
(79,499,o),
(79,502,qs),
(79,527,o),
(78,543,o),
(77,549,o),
(77,564,o),
(77,588,qs),
(77,654,l),
(79,659,o),
(94,665,o),
(99,663,q),
(102,663,o),
(141,649,o),
(194,629,o),
(247,609,o),
(284,596,o),
(286,596,qs),
(299,597,o),
(353,578,o),
(417,551,o),
(473,529,o),
(488,526,q),
(491,176,l),
(490,176,o),
(488,175,qs),
(481,171,o),
(424,148,o),
(346,117,o),
(269,85,o),
(214,62,o),
(209,58,qs),
(199,50,o),
(184,50,qs),
(173,50,o),
(138,33,o),
(105,16,o),
(97,15,qs),
(88,15,o),
(88,34,qs),
(88,48,ls)
);
},
{
closed = 1;
nodes = (
(321,319,o),
(328,329,qs),
(332,334,o),
(332,341,qs),
(332,350,o),
(327,355,qs),
(318,364,o),
(296,383,o),
(284,383,qs),
(264,382,o),
(248,355,o),
(248,347,qs),
(248,331,o),
(275,311,o),
(292,311,qs),
(302,311,o)
);
},
{
closed = 1;
nodes = (
(279,346,qs),
(279,348,o),
(281,358,o),
(288,358,qs),
(295,358,o),
(302,348,q),
(306,344,o),
(298,336,o),
(292,336,qs),
(279,336,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
154 134 67 64 52 51 32 7 8 1 79 1 9 8 195 187 2 10 9 131 104 18 3 6 7 89 1 2 6 97 1 3 5 6 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 1 0 8 0 1 8 128 0 6 7 2 7 6 2 128 0 5 2 3 2 5 3 128 0 8 0 9 10 8 9 105 13 1 10 12 1 7 6 10 7 105 0 0 0 37 77 0 2 2 3 97 0 3 3 38 77 11 1 4 4 44 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 1 0 8 0 1 8 128 0 6 7 2 7 6 2 128 0 5 2 3 2 5 3 128 11 1 4 3 4 134 0 8 0 9 10 8 9 105 13 1 10 12 1 7 6 10 7 105 0 0 0 37 77 0 2 2 3 97 0 3 3 38 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 0 1 0 133 0 1 8 1 133 0 6 7 2 7 6 2 128 0 5 2 3 2 5 3 128 11 1 4 3 4 134 0 8 0 9 10 8 9 105 13 1 10 12 1 7 6 10 7 105 0 2 2 3 97 0 3 3 38 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
200 200 185 184 0 0 200 209 200 209 206 204 191 189 184 199 185 199 124 122 119 118 0 116 0 116 101 99 93 90 59 57 39 38 14 8 22 
CALL[ ]	/* CallFunction */";
};
width = 601;
}
);
note = uni2C6D;
unicode = 11373;
},
{
glyphname = Amacron;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (-100,550);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
550 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = Amacron;
unicode = 256;
},
{
glyphname = Aogonek;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (370,38);
ref = uni0328;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
38 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = Aogonek;
unicode = 260;
},
{
glyphname = Aring;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (-54,83);
ref = uni030A;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 2 
PUSHB[ ]	/* 1 value pushed */
83 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = Aring;
unicode = 197;
},
{
glyphname = uni1E00;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (118,-831);
ref = uni030A;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 2 
PUSHW[ ]	/* 1 value pushed */
-831 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = uni1E00;
unicode = 7680;
},
{
glyphname = uni023A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(79,-3,o),
(80,6,q),
(97,6,o),
(103,2,qs),
(104,1,o),
(126,8,o),
(132,8,qs),
(201,8,ls),
(213,8,o),
(221,5,o),
(227,1,o),
(236,1,qs),
(241,1,o),
(270,1,o),
(307,1,o),
(337,1,o),
(341,1,qs),
(352,1,o),
(369,8,o),
(379,9,q),
(413,1,l),
(421,1,o),
(452,5,o),
(452,17,qs),
(452,20,o),
(450,29,o),
(447,33,q),
(434,60,o),
(405,112,o),
(391,137,qs),
(387,146,o),
(375,164,o),
(373,173,qs),
(372,180,o),
(358,212,o),
(342,242,o),
(337,246,qs),
(328,254,o),
(324,274,o),
(317,281,qs),
(304,297,o),
(288,335,o),
(275,351,q),
(275,370,o),
(264,381,qs),
(257,389,o),
(252,407,o),
(246,414,qs),
(240,420,o),
(232,434,o),
(227,441,q),
(225,446,o),
(219,455,o),
(217,460,q),
(234,514,o),
(269,623,o),
(285,678,q),
(289,686,o),
(290,706,o),
(288,713,qs),
(285,724,o),
(277,728,q),
(275,725,o),
(259,709,o),
(252,682,qs),
(251,675,o),
(241,638,o),
(239,632,qs),
(229,599,o),
(208,532,o),
(197,498,q),
(186,519,o),
(164,561,o),
(153,581,qs),
(149,589,o),
(139,604,o),
(138,611,qs),
(138,622,o),
(120,634,o),
(120,644,q),
(112,651,o),
(102,668,o),
(97,677,q),
(93,682,o),
(84,692,o),
(79,696,qs),
(71,704,o),
(48,693,o),
(48,681,qs),
(48,594,ls),
(48,592,o),
(48,586,o),
(49,584,q),
(54,580,o),
(57,569,o),
(57,564,qs),
(57,560,o),
(56,552,o),
(56,548,qs),
(56,451,ls),
(56,446,o),
(55,437,o),
(54,432,q),
(48,430,o),
(52,422,o),
(56,414,o),
(49,411,q),
(49,408,o),
(49,396,o),
(49,359,o),
(48,283,o),
(48,151,o),
(48,48,qs),
(48,40,o),
(48,26,o),
(41,19,q),
(38,17,o),
(44,9,o),
(48,8,qs),
(50,8,l),
(47,1,o),
(44,-10,o),
(43,-12,qs),
(37,-26,o),
(47,-37,o),
(63,-34,o),
(66,-27,q),
(73,-20,o)
);
},
{
closed = 1;
nodes = (
(110,385,o),
(94,379,q),
(93,378,o),
(89,381,o),
(89,382,qs),
(88,388,o),
(88,418,o),
(88,421,qs),
(88,426,o),
(86,436,o),
(82,440,qs),
(80,442,o),
(80,467,o),
(81,469,qs),
(95,489,o),
(83,507,q),
(90,524,o),
(88,527,qs),
(85,530,o),
(82,559,o),
(81,594,o),
(81,623,o),
(81,626,qs),
(81,629,o),
(88,629,o),
(88,627,qs),
(88,619,o),
(104,611,o),
(104,603,qs),
(104,596,o),
(111,585,o),
(115,580,qs),
(120,574,o),
(127,561,o),
(133,556,qs),
(139,552,o),
(136,537,o),
(143,532,q),
(151,517,o),
(174,472,o),
(183,455,q),
(180,445,o),
(173,423,o),
(170,412,qs),
(158,377,l),
(144,385,o)
);
},
{
closed = 1;
nodes = (
(209,415,o),
(213,399,o),
(217,393,qs),
(218,392,o),
(214,385,o),
(212,385,qs),
(208,384,o),
(199,384,o),
(194,383,q),
(206,422,l)
);
},
{
closed = 1;
nodes = (
(79,156,qs),
(79,161,o),
(81,174,o),
(81,180,qs),
(80,304,ls),
(80,311,o),
(84,325,o),
(88,331,qs),
(89,333,o),
(85,340,o),
(83,342,q),
(83,346,o),
(107,354,o),
(110,351,q),
(115,348,o),
(127,347,o),
(133,347,qs),
(151,347,l),
(148,327,o),
(128,303,o),
(129,283,q),
(125,270,o),
(112,250,o),
(109,235,qs),
(107,226,o),
(94,187,o),
(84,148,o),
(85,136,q),
(79,145,o)
);
},
{
closed = 1;
nodes = (
(377,33,o),
(372,32,qs),
(364,30,o),
(360,32,q),
(356,37,o),
(331,40,o),
(307,36,o),
(303,32,q),
(296,40,o),
(262,40,o),
(255,32,q),
(249,37,o),
(237,39,o),
(229,39,qs),
(225,39,o),
(207,39,o),
(157,39,o),
(104,39,qs),
(100,39,o),
(93,38,o),
(89,39,q),
(95,50,o),
(99,72,o),
(98,84,q),
(114,135,o),
(144,237,o),
(160,287,qs),
(163,297,o),
(176,314,o),
(175,325,qs),
(174,338,o),
(178,347,q),
(226,347,ls),
(244,347,o),
(251,332,qs),
(254,324,o),
(262,307,o),
(267,299,qs),
(275,289,o),
(285,264,o),
(296,255,qs),
(301,251,o),
(298,236,o),
(305,232,qs),
(312,228,o),
(314,215,o),
(316,210,qs),
(319,202,o),
(339,168,o),
(356,134,o),
(356,126,q),
(357,122,o),
(362,114,o),
(365,110,q),
(380,95,o),
(397,59,o),
(407,42,q),
(411,32,o),
(405,32,o),
(397,31,q),
(393,34,o)
);
}
);
userData = {
assembly = "NPUSHW[ ]	/* 39 values pushed */
84 1 4 3 208 191 184 3 6 4 265 262 2 8 6 107 1 1 8 4 76 7 1 1 1 75 183 159 157 150 132 73 56 50 47 28 10 3 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 8 6 1 6 8 1 128 0 3 5 1 4 6 3 4 105 7 1 6 6 1 97 2 1 1 1 38 77 7 1 6 6 0 95 0 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 8 6 1 6 8 1 128 0 3 5 1 4 6 3 4 105 7 1 6 6 1 97 0 1 1 38 77 7 1 6 6 0 97 2 1 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 8 6 1 6 8 1 128 0 3 5 1 4 6 3 4 105 7 1 6 6 1 97 2 1 1 1 38 77 7 1 6 6 0 95 0 0 0 38 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 21 values pushed */
271 269 264 263 260 252 241 239 197 194 173 172 125 124 120 118 116 109 9 8 22 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = uni023A;
unicode = 570;
},
{
glyphname = Atilde;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (-55,95);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
95 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = Atilde;
unicode = 195;
},
{
glyphname = AE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(393,-1,o),
(434,0,o),
(464,1,o),
(464,1,q),
(498,6,o),
(551,2,o),
(556,2,qs),
(692,2,l),
(703,4,o),
(710,21,o),
(703,37,o),
(693,37,qs),
(433,37,ls),
(430,37,o),
(427,90,o),
(426,171,o),
(426,259,o),
(425,332,o),
(424,348,q),
(432,347,o),
(453,347,o),
(457,347,qs),
(458,347,o),
(479,347,o),
(502,347,o),
(506,347,qs),
(523,347,o),
(557,353,o),
(573,356,q),
(578,358,o),
(578,369,o),
(573,370,qs),
(568,371,o),
(565,376,o),
(560,377,qs),
(555,378,o),
(543,379,o),
(537,379,qs),
(526,379,o),
(498,378,o),
(487,378,qs),
(423,378,l),
(423,411,l),
(417,414,o),
(420,422,o),
(424,430,o),
(418,432,q),
(417,437,o),
(416,446,o),
(416,451,qs),
(416,548,ls),
(416,552,o),
(415,560,o),
(415,564,qs),
(415,569,o),
(419,580,o),
(423,584,qs),
(425,586,o),
(424,592,o),
(424,594,qs),
(424,662,l),
(445,663,o),
(510,663,o),
(573,663,o),
(590,663,qs),
(595,663,o),
(626,671,o),
(633,671,qs),
(643,671,o),
(653,666,qs),
(661,663,o),
(667,663,qs),
(677,663,o),
(693,678,o),
(703,679,qs),
(704,679,o),
(704,687,o),
(703,689,qs),
(700,693,o),
(692,699,o),
(686,699,qs),
(421,699,ls),
(416,699,o),
(413,698,q),
(402,705,o),
(393,696,qs),
(388,692,o),
(379,682,o),
(375,677,q),
(370,668,o),
(360,651,o),
(352,644,q),
(352,634,o),
(334,622,o),
(334,611,qs),
(333,604,o),
(323,589,o),
(319,581,qs),
(300,547,o),
(264,477,o),
(245,441,qs),
(241,434,o),
(232,420,o),
(226,414,qs),
(220,407,o),
(215,389,o),
(208,381,qs),
(197,370,o),
(197,351,q),
(184,335,o),
(169,297,o),
(155,281,qs),
(148,274,o),
(144,254,o),
(135,246,qs),
(130,242,o),
(114,212,o),
(101,180,o),
(99,173,qs),
(97,164,o),
(86,146,o),
(81,137,qs),
(67,112,o),
(39,60,o),
(25,33,q),
(22,29,o),
(20,20,o),
(20,17,qs),
(20,5,o),
(52,1,o),
(59,1,q),
(93,9,l),
(104,8,o),
(121,1,o),
(131,1,qs),
(136,1,o),
(165,2,o),
(202,2,o),
(232,1,o),
(236,1,qs),
(252,0,o),
(261,9,o),
(271,8,qs),
(347,0,ls),
(356,-1,o)
);
},
{
closed = 1;
nodes = (
(268,384,o),
(260,385,qs),
(258,385,o),
(254,392,o),
(255,393,qs),
(262,402,o),
(265,425,o),
(276,432,qs),
(277,433,o),
(297,470,o),
(321,517,o),
(329,532,q),
(337,537,o),
(333,552,o),
(339,556,qs),
(345,561,o),
(352,574,o),
(357,580,qs),
(362,585,o),
(368,596,o),
(368,603,qs),
(368,611,o),
(384,619,o),
(384,627,qs),
(384,629,o),
(391,629,o),
(391,626,qs),
(391,623,o),
(391,594,o),
(390,559,o),
(387,530,o),
(384,527,qs),
(382,524,o),
(389,507,q),
(377,489,o),
(391,469,q),
(393,467,o),
(392,442,o),
(390,440,qs),
(386,436,o),
(384,426,o),
(384,421,qs),
(384,418,o),
(384,388,o),
(383,382,q),
(383,382,o),
(356,384,o),
(323,383,o),
(313,377,q),
(302,373,o),
(294,377,q),
(286,383,o)
);
},
{
closed = 1;
nodes = (
(677,361,o),
(677,370,qs),
(677,378,o),
(668,395,o),
(660,398,qs),
(652,400,o),
(622,399,o),
(622,385,q),
(618,372,o),
(606,366,o),
(615,357,qs),
(623,348,o),
(644,328,o),
(653,337,qs),
(673,357,ls)
);
},
{
closed = 1;
nodes = (
(640,363,o),
(638,366,q),
(635,368,o),
(638,370,o),
(639,373,q),
(639,378,o),
(648,377,o),
(650,376,q),
(654,376,o),
(654,369,qs),
(654,367,o),
(653,366,qs),
(648,360,ls),
(646,358,o)
);
},
{
closed = 1;
nodes = (
(61,32,o),
(65,42,q),
(76,59,o),
(92,95,o),
(107,110,q),
(110,114,o),
(115,122,o),
(116,126,q),
(116,134,o),
(134,168,o),
(153,202,o),
(156,210,qs),
(158,215,o),
(160,228,o),
(167,232,qs),
(174,236,o),
(171,251,o),
(176,255,qs),
(187,264,o),
(198,289,o),
(205,299,qs),
(210,307,o),
(218,324,o),
(221,332,qs),
(228,347,o),
(246,347,qs),
(339,347,ls),
(345,347,o),
(357,348,o),
(362,351,q),
(365,354,o),
(389,346,o),
(389,342,q),
(388,340,o),
(383,333,o),
(384,331,q),
(389,325,o),
(392,311,o),
(392,304,qs),
(391,180,ls),
(391,174,o),
(393,161,o),
(393,156,qs),
(393,142,o),
(385,133,q),
(390,129,o),
(392,118,o),
(392,113,qs),
(392,109,o),
(392,91,o),
(394,86,qs),
(395,84,o),
(400,81,o),
(397,77,q),
(388,69,o),
(396,61,qs),
(401,55,o),
(392,44,o),
(384,39,q),
(380,38,o),
(373,39,o),
(368,39,qs),
(315,39,o),
(265,39,o),
(248,39,o),
(243,39,qs),
(236,39,o),
(223,37,o),
(217,32,q),
(210,40,o),
(177,40,o),
(169,32,q),
(165,36,o),
(141,40,o),
(117,37,o),
(112,32,q),
(108,30,o),
(100,32,qs),
(95,33,o),
(79,34,o),
(75,31,q),
(67,32,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHW[ ]	/* 43 values pushed */
60 1 3 1 162 101 94 84 52 5 12 2 203 191 2 10 12 125 35 2 6 5 271 268 264 262 253 5 7 6 238 226 16 12 4 0 7 6 76 13 1 0 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHW[ ]	/* 43 values pushed */
60 1 3 1 162 101 94 84 52 5 12 2 203 191 2 5 12 125 35 2 6 5 271 268 264 262 253 5 7 6 238 226 16 12 4 0 7 6 76 13 1 0 73 
ELSE[ ]	/* Else */
NPUSHW[ ]	/* 43 values pushed */
60 1 3 1 162 101 94 84 52 5 12 2 203 191 2 10 12 125 35 2 6 5 271 268 264 262 253 5 7 6 238 226 16 12 4 0 7 6 76 13 1 0 73 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 3 1 2 2 3 114 0 12 2 10 2 12 10 128 11 1 10 5 6 10 89 0 5 15 1 6 7 5 6 105 4 1 2 2 1 96 0 1 1 37 77 14 13 2 7 7 0 95 9 8 2 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 3 1 2 2 3 114 0 12 2 5 2 12 5 128 11 10 2 5 15 1 6 7 5 6 105 4 1 2 2 1 96 0 1 1 37 77 14 13 2 7 7 0 95 9 8 2 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 3 1 2 2 3 114 0 12 2 10 2 12 10 128 11 1 10 5 6 10 89 0 5 15 1 6 7 5 6 105 4 1 2 2 1 96 0 1 1 37 77 14 13 2 7 7 0 95 9 8 2 0 0 38 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 34 values pushed */
282 279 245 240 237 236 205 204 196 195 149 148 144 140 139 136 133 130 124 117 108 102 83 78 76 75 72 71 63 62 115 16 8 23 
CALL[ ]	/* CallFunction */";
};
width = 728;
}
);
note = AE;
unicode = 198;
},
{
glyphname = uni01E2;
layers = (
{
layerId = m01;
shapes = (
{
ref = AE;
},
{
pos = (230,550);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
550 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 728;
}
);
note = uni01E2;
unicode = 482;
},
{
glyphname = B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(78,6,o),
(84,5,q),
(226,5,ls),
(236,5,o),
(241,1,qs),
(247,-3,o),
(254,5,o),
(259,5,qs),
(272,3,o),
(317,7,o),
(362,8,o),
(373,1,qs),
(374,0,o),
(398,3,o),
(406,1,qs),
(411,-1,o),
(432,7,o),
(438,12,qs),
(444,17,o),
(433,27,o),
(431,32,q),
(431,35,o),
(414,49,o),
(396,65,o),
(394,70,qs),
(391,78,o),
(377,83,o),
(373,90,qs),
(372,92,o),
(345,121,o),
(305,160,o),
(264,199,o),
(231,225,o),
(226,226,q),
(216,245,o),
(182,269,o),
(168,284,qs),
(164,289,o),
(154,298,o),
(149,303,q),
(151,312,o),
(132,313,o),
(132,320,qs),
(132,329,o),
(114,334,o),
(108,338,qs),
(102,342,o),
(99,352,o),
(100,353,qs),
(107,361,o),
(119,378,o),
(128,384,qs),
(141,391,o),
(194,444,o),
(260,518,o),
(325,593,o),
(375,652,o),
(386,662,qs),
(389,664,o),
(392,671,o),
(393,675,q),
(395,677,o),
(398,681,o),
(394,684,qs),
(392,686,o),
(387,690,o),
(385,690,q),
(346,698,l),
(279,698,o),
(269,690,qs),
(265,686,o),
(251,698,o),
(242,698,qs),
(98,698,ls),
(88,698,o),
(72,690,o),
(61,690,q),
(52,692,o),
(41,680,o),
(41,673,qs),
(41,478,ls),
(41,473,o),
(43,462,o),
(47,457,q),
(41,429,l),
(41,422,o),
(43,410,o),
(47,404,qs),
(49,400,o),
(49,389,o),
(47,384,qs),
(44,372,o),
(45,341,o),
(49,318,o),
(48,317,qs),
(43,312,o),
(40,300,o),
(40,294,qs),
(41,272,o),
(42,201,o),
(42,120,o),
(41,47,o),
(41,23,qs),
(41,19,o),
(39,12,o),
(40,8,qs),
(41,4,o),
(58,-5,o),
(61,-2,q),
(66,1,o)
);
},
{
closed = 1;
nodes = (
(70,402,ls),
(70,403,o),
(71,421,o),
(73,433,qs),
(77,453,o),
(79,491,o),
(74,514,qs),
(71,527,o),
(69,568,o),
(70,613,qs),
(72,633,o),
(74,654,o),
(88,662,o),
(107,662,qs),
(311,662,ls),
(316,662,o),
(328,667,o),
(333,668,q),
(339,664,l),
(335,658,o),
(326,645,o),
(321,640,qs),
(317,636,o),
(297,607,o),
(272,573,o),
(249,546,o),
(242,544,q),
(238,538,o),
(231,521,o),
(221,519,qs),
(204,516,o),
(204,500,q),
(195,497,o),
(171,474,o),
(151,448,o),
(148,442,qs),
(147,439,o),
(120,415,o),
(89,390,o),
(81,383,q),
(74,386,l)
);
},
{
closed = 1;
nodes = (
(200,578,q),
(200,583,ls),
(200,587,o),
(199,587,q),
(194,593,o),
(183,602,o),
(178,608,q),
(172,612,o),
(153,611,o),
(148,606,qs),
(133,592,ls),
(127,586,o),
(128,577,o),
(136,569,qs),
(153,554,o),
(166,554,qs),
(187,554,o)
);
},
{
closed = 1;
nodes = (
(154,579,qs),
(150,583,o),
(153,586,qs),
(158,590,ls),
(164,594,o),
(168,591,q),
(170,587,o),
(174,585,q),
(174,581,l),
(171,574,o),
(164,574,qs),
(159,574,o)
);
},
{
closed = 1;
nodes = (
(74,40,o),
(74,47,qs),
(74,50,o),
(72,89,o),
(70,144,o),
(69,202,o),
(71,247,o),
(75,256,q),
(71,261,o),
(73,280,o),
(74,306,qs),
(74,309,o),
(75,314,o),
(76,317,q),
(76,319,o),
(85,319,o),
(87,318,qs),
(91,316,o),
(92,304,o),
(99,304,qs),
(107,304,o),
(108,288,o),
(118,289,q),
(123,286,o),
(132,278,o),
(137,275,qs),
(143,271,o),
(148,259,o),
(152,254,q),
(182,225,o),
(230,187,o),
(245,164,q),
(252,166,o),
(257,157,o),
(261,148,o),
(268,148,q),
(271,145,o),
(298,119,o),
(333,87,o),
(361,60,o),
(364,57,qs),
(369,53,o),
(373,45,q),
(373,41,o),
(367,38,o),
(354,38,qs),
(245,36,o),
(113,35,o),
(88,35,qs),
(79,35,o)
);
},
{
closed = 1;
nodes = (
(206,129,q),
(206,134,ls),
(206,138,o),
(205,138,q),
(198,145,o),
(188,154,o),
(183,160,q),
(176,163,o),
(156,163,o),
(151,158,qs),
(137,143,ls),
(130,136,o),
(130,128,o),
(139,119,qs),
(154,105,o),
(170,105,qs),
(190,105,o)
);
},
{
closed = 1;
nodes = (
(158,130,qs),
(154,134,o),
(157,137,qs),
(162,141,ls),
(168,145,o),
(172,142,q),
(174,138,o),
(178,136,q),
(178,132,l),
(175,125,o),
(168,125,qs),
(163,125,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
132 29 2 5 0 140 1 7 5 176 170 166 3 8 7 118 66 60 25 4 11 6 14 1 10 11 221 11 2 13 10 255 249 245 3 14 13 7 76 101 1 3 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 7 5 8 8 7 114 0 11 6 10 6 11 10 128 0 10 13 6 10 13 126 0 13 14 14 13 112 16 1 8 15 1 6 11 8 6 106 19 1 14 18 1 12 9 14 12 106 0 0 0 39 77 0 5 5 1 97 2 1 1 1 39 77 17 1 9 9 3 97 4 1 3 3 38 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 7 5 8 8 7 114 0 11 6 10 6 11 10 128 0 10 13 6 10 13 126 0 13 14 6 13 14 126 16 1 8 15 1 6 11 8 6 106 19 1 14 18 1 12 9 14 12 106 0 0 0 39 77 0 5 5 1 97 2 1 1 1 39 77 17 1 9 9 3 97 4 1 3 3 38 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 7 5 8 8 7 114 0 11 6 10 6 11 10 128 0 10 13 6 10 13 126 0 13 14 14 13 112 16 1 8 15 1 6 11 8 6 106 19 1 14 18 1 12 9 14 12 106 0 0 0 39 77 0 5 5 1 97 2 1 1 1 39 77 17 1 9 9 3 97 4 1 3 3 38 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 79 values pushed */
0 7 5 8 5 7 8 128 0 11 6 10 6 11 10 128 0 10 13 6 10 13 126 0 13 14 6 13 14 126 16 1 8 15 1 6 11 8 6 106 19 1 14 18 1 12 9 14 12 106 0 0 0 39 77 0 5 5 1 97 2 1 1 1 39 77 17 1 9 9 3 97 4 1 3 3 38 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 53 values pushed */
248 247 231 230 184 180 169 168 152 151 247 258 248 258 238 237 230 246 231 246 214 213 210 208 180 229 184 229 168 179 169 179 159 158 151 167 152 167 137 134 107 105 99 98 41 40 37 34 33 32 20 8 22 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = B;
unicode = 66;
},
{
glyphname = uni1E02;
layers = (
{
layerId = m01;
shapes = (
{
ref = B;
},
{
pos = (162,112);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
7 1 
PUSHB[ ]	/* 1 value pushed */
112 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = uni1E02;
unicode = 7682;
},
{
glyphname = uni1E04;
layers = (
{
layerId = m01;
shapes = (
{
ref = B;
},
{
pos = (140,-114);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
7 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = uni1E04;
unicode = 7684;
},
{
glyphname = uniA7B4;
layers = (
{
layerId = m01;
shapes = (
{
ref = uniA7B5;
}
);
width = 441;
}
);
note = uniA7B4;
unicode = 42932;
},
{
glyphname = uni0181;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,6,o),
(163,5,q),
(305,5,ls),
(315,5,o),
(320,1,qs),
(326,-3,o),
(333,5,o),
(338,5,qs),
(351,3,o),
(396,7,o),
(441,8,o),
(452,1,qs),
(453,0,o),
(477,3,o),
(485,1,qs),
(490,-1,o),
(511,7,o),
(517,12,qs),
(523,17,o),
(512,27,o),
(510,32,q),
(510,35,o),
(493,49,o),
(475,65,o),
(473,70,qs),
(470,78,o),
(456,83,o),
(452,90,qs),
(451,92,o),
(424,121,o),
(384,160,o),
(343,199,o),
(310,225,o),
(305,226,q),
(295,245,o),
(261,269,o),
(247,284,qs),
(243,289,o),
(233,298,o),
(228,303,q),
(230,312,o),
(211,313,o),
(211,320,qs),
(211,329,o),
(193,334,o),
(187,338,qs),
(181,342,o),
(178,352,o),
(179,353,qs),
(186,361,o),
(198,378,o),
(207,384,qs),
(220,391,o),
(273,444,o),
(339,518,o),
(404,593,o),
(454,652,o),
(465,662,qs),
(468,664,o),
(471,671,o),
(472,675,q),
(474,677,o),
(477,681,o),
(473,684,qs),
(471,686,o),
(466,690,o),
(464,690,q),
(425,698,l),
(358,698,o),
(348,690,qs),
(344,686,o),
(330,698,o),
(321,698,qs),
(177,698,ls),
(172,698,o),
(167,697,q),
(151,700,o),
(116,695,qs),
(112,694,o),
(82,694,o),
(77,694,qs),
(54,695,o),
(49,695,o),
(45,695,qs),
(17,694,o),
(3,660,o),
(1,635,qs),
(0,625,o),
(6,604,o),
(1,597,qs),
(-1,593,o),
(2,574,o),
(1,571,q),
(1,559,o),
(27,559,o),
(27,565,q),
(32,571,o),
(32,603,o),
(33,639,o),
(45,665,o),
(62,664,qs),
(67,664,o),
(90,665,o),
(95,663,qs),
(103,661,o),
(107,665,o),
(120,665,q),
(120,478,ls),
(120,473,o),
(122,462,o),
(126,457,q),
(120,429,l),
(120,422,o),
(122,410,o),
(126,404,qs),
(128,400,o),
(128,389,o),
(126,384,qs),
(123,372,o),
(124,341,o),
(128,318,o),
(127,317,qs),
(122,312,o),
(119,300,o),
(119,294,qs),
(120,272,o),
(121,201,o),
(121,120,o),
(120,47,o),
(120,23,qs),
(120,19,o),
(118,12,o),
(119,8,qs),
(120,4,o),
(137,-5,o),
(140,-2,q),
(145,1,o)
);
},
{
closed = 1;
nodes = (
(149,402,ls),
(149,403,o),
(150,421,o),
(152,433,qs),
(156,453,o),
(158,491,o),
(153,514,qs),
(150,527,o),
(148,568,o),
(149,613,qs),
(151,633,o),
(153,654,o),
(167,662,o),
(186,662,qs),
(390,662,ls),
(395,662,o),
(407,667,o),
(412,668,q),
(418,664,l),
(414,658,o),
(405,645,o),
(400,640,qs),
(396,636,o),
(376,607,o),
(351,573,o),
(328,546,o),
(321,544,q),
(317,538,o),
(310,521,o),
(300,519,qs),
(283,516,o),
(283,500,q),
(274,497,o),
(250,474,o),
(230,448,o),
(227,442,qs),
(226,439,o),
(198,415,o),
(168,390,o),
(160,383,q),
(153,386,l)
);
},
{
closed = 1;
nodes = (
(279,578,q),
(279,583,ls),
(279,587,o),
(278,587,q),
(273,593,o),
(262,602,o),
(257,608,q),
(251,612,o),
(232,611,o),
(227,606,qs),
(212,592,ls),
(206,586,o),
(207,577,o),
(215,569,qs),
(232,554,o),
(245,554,qs),
(266,554,o)
);
},
{
closed = 1;
nodes = (
(233,579,qs),
(229,583,o),
(232,586,qs),
(237,590,ls),
(243,594,o),
(247,591,q),
(249,587,o),
(253,585,q),
(253,581,l),
(250,574,o),
(243,574,qs),
(238,574,o)
);
},
{
closed = 1;
nodes = (
(153,40,o),
(153,47,qs),
(153,50,o),
(151,89,o),
(149,144,o),
(148,202,o),
(150,247,o),
(154,256,q),
(150,261,o),
(152,280,o),
(153,306,qs),
(153,309,o),
(154,314,o),
(155,317,q),
(155,319,o),
(164,319,o),
(166,318,qs),
(170,316,o),
(171,304,o),
(178,304,qs),
(186,304,o),
(187,288,o),
(197,289,q),
(202,286,o),
(211,278,o),
(216,275,qs),
(222,271,o),
(227,259,o),
(231,254,q),
(261,225,o),
(309,187,o),
(324,164,q),
(331,166,o),
(336,157,o),
(340,148,o),
(347,148,q),
(350,145,o),
(377,119,o),
(412,87,o),
(440,60,o),
(443,57,qs),
(448,53,o),
(452,45,q),
(452,41,o),
(446,38,o),
(433,38,qs),
(324,36,o),
(192,35,o),
(167,35,qs),
(158,35,o)
);
},
{
closed = 1;
nodes = (
(285,129,q),
(285,134,ls),
(285,138,o),
(284,138,q),
(277,145,o),
(267,154,o),
(262,160,q),
(255,163,o),
(235,163,o),
(230,158,qs),
(216,143,ls),
(209,136,o),
(209,128,o),
(218,119,qs),
(233,105,o),
(249,105,qs),
(269,105,o)
);
},
{
closed = 1;
nodes = (
(237,130,qs),
(233,134,o),
(236,137,qs),
(241,141,ls),
(247,145,o),
(251,142,q),
(253,138,o),
(257,136,q),
(257,132,l),
(254,125,o),
(247,125,qs),
(242,125,o)
);
}
);
userData = {
assembly = "NPUSHW[ ]	/* 50 values pushed */
159 1 0 2 167 1 9 0 203 197 193 3 10 9 43 1 8 10 145 93 87 25 4 13 8 14 1 12 13 248 11 2 15 12 282 276 272 3 16 15 8 76 60 1 2 74 128 1 5 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 9 0 10 10 9 114 0 13 8 12 8 13 12 128 0 12 15 8 12 15 126 0 15 16 16 15 112 18 1 10 17 1 8 13 10 8 106 21 1 16 20 1 14 11 16 14 106 7 1 2 0 0 2 97 4 3 2 2 2 39 77 19 1 11 11 5 97 6 1 5 5 38 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
0 9 0 10 10 9 114 0 13 8 12 8 13 12 128 0 12 15 8 12 15 126 0 15 16 8 15 16 126 18 1 10 17 1 8 13 10 8 106 21 1 16 20 1 14 11 16 14 106 7 1 2 0 0 2 97 4 3 2 2 2 39 77 19 1 11 11 5 97 6 1 5 5 38 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 9 0 10 10 9 114 0 13 8 12 8 13 12 128 0 12 15 8 12 15 126 0 15 16 16 15 112 18 1 10 17 1 8 13 10 8 106 21 1 16 20 1 14 11 16 14 106 7 1 2 0 0 2 97 4 3 2 2 2 39 77 19 1 11 11 5 97 6 1 5 5 38 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 77 values pushed */
0 9 0 10 0 9 10 128 0 13 8 12 8 13 12 128 0 12 15 8 12 15 126 0 15 16 8 15 16 126 18 1 10 17 1 8 13 10 8 106 21 1 16 20 1 14 11 16 14 106 7 1 2 0 0 2 97 4 3 2 2 2 39 77 19 1 11 11 5 97 6 1 5 5 38 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 57 values pushed */
275 274 258 257 211 207 196 195 179 178 274 285 275 285 265 264 257 273 258 273 241 240 237 235 207 256 211 256 195 206 196 206 186 185 178 194 179 194 164 161 134 132 126 125 68 67 64 62 57 51 36 32 30 29 22 8 22 
CALL[ ]	/* CallFunction */";
};
width = 520;
}
);
note = uni0181;
unicode = 385;
},
{
glyphname = Bmacronbelow;
layers = (
{
layerId = m01;
shapes = (
{
ref = B;
},
{
pos = (30,-329);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
7 1 
PUSHW[ ]	/* 1 value pushed */
-329 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = Bmacronbelow;
unicode = 7686;
},
{
glyphname = uni0243;
layers = (
{
layerId = m01;
shapes = (
{
ref = B;
},
{
pos = (-85,80);
ref = uni0335;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
7 1 
PUSHB[ ]	/* 1 value pushed */
80 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = uni0243;
unicode = 579;
},
{
glyphname = C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(93,-28,o),
(135,-10,o),
(170,6,o),
(175,10,qs),
(187,19,o),
(214,25,o),
(227,31,qs),
(264,49,o),
(300,67,o),
(315,74,o),
(323,77,o),
(339,82,o),
(377,97,o),
(415,112,q),
(415,58,o),
(415,6,o),
(414,-13,o),
(414,-19,qs),
(414,-24,o),
(430,-33,o),
(437,-33,qs),
(445,-33,o),
(448,-25,o),
(449,-20,qs),
(450,-17,o),
(456,10,o),
(457,15,q),
(448,24,o),
(448,36,qs),
(448,62,o),
(448,83,o),
(448,95,o),
(448,116,o),
(448,142,qs),
(448,149,o),
(441,149,q),
(436,150,o),
(423,151,o),
(420,149,q),
(413,142,o),
(397,143,o),
(389,139,qs),
(382,135,o),
(349,119,o),
(310,101,o),
(275,88,o),
(266,88,qs),
(265,88,o),
(226,69,o),
(170,42,o),
(115,16,o),
(98,8,qs),
(92,6,o),
(77,12,o),
(75,17,q),
(74,64,o),
(74,108,o),
(74,122,o),
(74,128,o),
(75,144,o),
(75,169,qs),
(75,174,o),
(81,182,q),
(83,186,o),
(74,191,o),
(78,195,qs),
(80,197,o),
(83,219,o),
(83,247,o),
(82,270,o),
(80,271,q),
(73,277,o),
(84,285,o),
(83,290,qs),
(82,295,o),
(83,305,o),
(83,309,qs),
(83,323,o),
(75,330,o),
(78,333,qs),
(83,338,o),
(83,349,o),
(83,354,qs),
(83,586,ls),
(83,591,o),
(83,601,o),
(81,604,qs),
(75,612,o),
(75,624,qs),
(75,641,o),
(89,654,o),
(96,654,qs),
(106,654,o),
(132,639,o),
(158,623,o),
(168,622,qs),
(183,620,o),
(190,613,qs),
(195,609,o),
(237,589,o),
(296,563,o),
(355,537,o),
(399,517,o),
(405,513,qs),
(415,506,o),
(448,513,o),
(449,526,qs),
(449,532,o),
(447,544,o),
(447,550,qs),
(447,559,o),
(456,575,o),
(456,583,qs),
(456,592,o),
(451,597,q),
(458,602,o),
(454,609,o),
(447,617,o),
(448,621,qs),
(450,627,o),
(449,649,o),
(449,681,qs),
(449,686,o),
(443,693,o),
(438,696,q),
(435,699,o),
(426,698,o),
(424,695,q),
(421,687,o),
(415,672,o),
(415,663,qs),
(415,657,o),
(415,625,o),
(415,588,o),
(415,559,o),
(415,556,qs),
(415,550,o),
(406,546,o),
(401,549,qs),
(389,555,o),
(337,580,o),
(276,608,o),
(228,629,o),
(221,630,qs),
(214,632,o),
(169,654,o),
(116,680,o),
(72,700,o),
(64,700,qs),
(56,700,o),
(48,695,qs),
(41,689,o),
(50,668,o),
(61,646,o),
(55,638,qs),
(48,627,o),
(47,617,o),
(55,608,qs),
(60,601,o),
(47,589,o),
(47,578,qs),
(47,533,o),
(50,492,o),
(52,478,o),
(52,474,qs),
(52,473,o),
(47,420,o),
(47,363,qs),
(47,356,o),
(50,343,o),
(55,336,qs),
(59,330,o),
(55,324,q),
(50,320,o),
(47,308,o),
(47,302,qs),
(46,250,o),
(46,188,o),
(47,151,o),
(48,123,o),
(48,105,qs),
(45,66,o),
(41,27,o),
(40,13,o),
(40,8,qs),
(40,-21,ls),
(40,-40,o),
(61,-40,qs),
(62,-40,o)
);
},
{
closed = 1;
nodes = (
(288,325,o),
(295,332,q),
(303,344,o),
(295,355,qs),
(289,363,o),
(276,371,o),
(266,369,q),
(247,369,o),
(226,352,o),
(226,340,qs),
(226,333,o),
(240,308,o),
(258,308,qs),
(269,308,o)
);
},
{
closed = 1;
nodes = (
(254,339,o),
(254,340,qs),
(254,347,o),
(264,347,q),
(267,348,o),
(271,344,q),
(273,340,o),
(271,338,q),
(268,331,o),
(261,331,qs),
(257,331,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
78 75 73 3 8 2 205 108 2 9 8 111 1 7 9 12 1 5 7 174 7 2 3 4 161 133 2 6 3 6 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 2 1 8 1 2 8 128 0 8 9 9 8 112 0 4 5 3 5 4 3 128 0 3 6 5 3 6 126 10 1 0 6 0 134 12 1 9 11 1 7 5 9 7 106 0 5 0 6 0 5 6 105 0 1 1 37 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 2 1 8 1 2 8 128 0 8 9 1 8 9 126 0 4 5 3 5 4 3 128 0 3 6 5 3 6 126 10 1 0 6 0 134 12 1 9 11 1 7 5 9 7 106 0 5 0 6 0 5 6 105 0 1 1 37 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 2 1 8 1 2 8 128 0 8 9 9 8 112 0 4 5 3 5 4 3 128 0 3 6 5 3 6 126 10 1 0 6 0 134 12 1 9 11 1 7 5 9 7 106 0 5 0 6 0 5 6 105 0 1 1 37 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 2 1 8 1 2 8 128 0 8 9 1 8 9 126 0 4 5 3 5 4 3 128 0 3 6 5 3 6 126 10 1 0 6 0 134 12 1 9 11 1 7 5 9 7 106 0 5 0 6 0 5 6 105 0 1 1 37 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
204 203 190 189 1 0 203 213 204 213 195 194 189 202 190 202 168 166 151 149 148 147 142 140 96 95 40 38 0 188 1 188 13 8 22 
CALL[ ]	/* CallFunction */";
};
width = 477;
}
);
note = C;
unicode = 67;
},
{
glyphname = Cacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = C;
},
{
pos = (167,140);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
140 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 477;
}
);
note = Cacute;
unicode = 262;
},
{
glyphname = Ccaron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(93,-28,o),
(135,-10,o),
(170,6,o),
(175,10,qs),
(187,19,o),
(214,25,o),
(227,31,qs),
(264,49,o),
(300,67,o),
(315,74,o),
(323,77,o),
(339,82,o),
(377,97,o),
(415,112,q),
(415,58,o),
(415,6,o),
(414,-13,o),
(414,-19,qs),
(414,-24,o),
(430,-33,o),
(437,-33,qs),
(445,-33,o),
(448,-25,o),
(449,-20,qs),
(450,-17,o),
(456,10,o),
(457,15,q),
(448,24,o),
(448,36,qs),
(448,62,o),
(448,83,o),
(448,95,o),
(448,116,o),
(448,142,qs),
(448,149,o),
(441,149,q),
(436,150,o),
(423,151,o),
(420,149,q),
(413,142,o),
(397,143,o),
(389,139,qs),
(382,135,o),
(349,119,o),
(310,101,o),
(275,88,o),
(266,88,qs),
(265,88,o),
(226,69,o),
(170,42,o),
(115,16,o),
(98,8,qs),
(92,6,o),
(77,12,o),
(75,17,q),
(74,64,o),
(74,108,o),
(74,122,o),
(74,128,o),
(75,144,o),
(75,169,qs),
(75,174,o),
(81,182,q),
(83,186,o),
(74,191,o),
(78,195,qs),
(80,197,o),
(83,219,o),
(83,247,o),
(82,270,o),
(80,271,q),
(73,277,o),
(84,285,o),
(83,290,qs),
(82,295,o),
(83,305,o),
(83,309,qs),
(83,323,o),
(75,330,o),
(78,333,qs),
(83,338,o),
(83,349,o),
(83,354,qs),
(83,586,ls),
(83,591,o),
(83,601,o),
(81,604,qs),
(75,612,o),
(75,624,qs),
(75,641,o),
(89,654,o),
(96,654,qs),
(106,654,o),
(132,639,o),
(158,623,o),
(168,622,qs),
(183,620,o),
(190,613,qs),
(195,609,o),
(237,589,o),
(296,563,o),
(355,537,o),
(399,517,o),
(405,513,qs),
(415,506,o),
(448,513,o),
(449,526,qs),
(449,532,o),
(447,544,o),
(447,550,qs),
(447,559,o),
(456,575,o),
(456,583,qs),
(456,592,o),
(451,597,q),
(458,602,o),
(454,609,o),
(447,617,o),
(448,621,qs),
(450,627,o),
(449,649,o),
(449,681,qs),
(449,686,o),
(443,693,o),
(438,696,q),
(435,699,o),
(426,698,o),
(424,695,q),
(421,687,o),
(415,672,o),
(415,663,qs),
(415,657,o),
(415,625,o),
(415,588,o),
(415,559,o),
(415,556,qs),
(415,550,o),
(406,546,o),
(401,549,qs),
(389,555,o),
(337,580,o),
(276,608,o),
(228,629,o),
(221,630,qs),
(214,632,o),
(169,654,o),
(116,680,o),
(72,700,o),
(64,700,qs),
(56,700,o),
(48,695,qs),
(41,689,o),
(50,668,o),
(61,646,o),
(55,638,qs),
(48,627,o),
(47,617,o),
(55,608,qs),
(60,601,o),
(47,589,o),
(47,578,qs),
(47,533,o),
(50,492,o),
(52,478,o),
(52,474,qs),
(52,473,o),
(47,420,o),
(47,363,qs),
(47,356,o),
(50,343,o),
(55,336,qs),
(59,330,o),
(55,324,q),
(50,320,o),
(47,308,o),
(47,302,qs),
(46,250,o),
(46,188,o),
(47,151,o),
(48,123,o),
(48,105,qs),
(45,66,o),
(41,27,o),
(40,13,o),
(40,8,qs),
(40,-21,ls),
(40,-40,o),
(61,-40,qs),
(62,-40,o)
);
},
{
closed = 1;
nodes = (
(288,325,o),
(295,332,q),
(303,344,o),
(295,355,qs),
(289,363,o),
(276,371,o),
(266,369,q),
(247,369,o),
(226,352,o),
(226,340,qs),
(226,333,o),
(240,308,o),
(258,308,qs),
(269,308,o)
);
},
{
closed = 1;
nodes = (
(254,339,o),
(254,340,qs),
(254,347,o),
(264,347,q),
(267,348,o),
(271,344,q),
(273,340,o),
(271,338,q),
(268,331,o),
(261,331,qs),
(257,331,o)
);
},
{
closed = 1;
nodes = (
(288,833,o),
(285,829,qs),
(283,827,o),
(270,810,o),
(268,808,qs),
(266,805,o),
(259,794,o),
(257,793,qs),
(251,790,o),
(247,790,o),
(242,792,q),
(238,797,o),
(216,817,o),
(189,840,o),
(166,856,o),
(161,856,q),
(153,858,o),
(141,856,o),
(145,847,q),
(151,841,o),
(163,828,o),
(167,821,q),
(172,818,o),
(184,803,o),
(190,800,q),
(198,793,o),
(205,784,o),
(212,778,qs),
(220,771,o),
(236,757,o),
(240,746,qs),
(242,742,o),
(250,741,o),
(252,745,q),
(263,757,o),
(294,791,o),
(324,826,o),
(344,849,o),
(343,850,qs),
(341,852,o),
(335,857,o),
(333,857,q),
(328,859,o),
(321,857,q),
(307,850,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
78 75 73 3 8 2 205 108 2 9 8 111 1 7 9 12 1 5 7 174 7 2 3 4 161 133 2 6 3 6 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 2 1 8 1 2 8 128 0 8 9 9 8 112 0 4 5 3 5 4 3 128 0 3 6 5 3 6 126 10 1 0 6 0 134 12 1 9 11 1 7 5 9 7 106 0 5 0 6 0 5 6 105 0 1 1 37 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 2 1 8 1 2 8 128 0 8 9 1 8 9 126 0 4 5 3 5 4 3 128 0 3 6 5 3 6 126 10 1 0 6 0 134 12 1 9 11 1 7 5 9 7 106 0 5 0 6 0 5 6 105 0 1 1 37 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 2 1 8 1 2 8 128 0 8 9 9 8 112 0 4 5 3 5 4 3 128 0 3 6 5 3 6 126 10 1 0 6 0 134 12 1 9 11 1 7 5 9 7 106 0 5 0 6 0 5 6 105 0 1 1 37 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 2 1 8 1 2 8 128 0 8 9 1 8 9 126 0 4 5 3 5 4 3 128 0 3 6 5 3 6 126 10 1 0 6 0 134 12 1 9 11 1 7 5 9 7 106 0 5 0 6 0 5 6 105 0 1 1 37 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
204 203 190 189 1 0 203 213 204 213 195 194 189 202 190 202 168 166 151 149 148 147 142 140 96 95 40 38 0 188 1 188 13 8 22 
CALL[ ]	/* CallFunction */";
};
width = 477;
}
);
note = Ccaron;
unicode = 268;
},
{
glyphname = Ccedilla;
layers = (
{
layerId = m01;
shapes = (
{
ref = C;
},
{
pos = (199,-6);
ref = uni0327.alt;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-6 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 477;
}
);
note = Ccedilla;
unicode = 199;
},
{
glyphname = uni1E08;
layers = (
{
layerId = m01;
shapes = (
{
ref = C;
},
{
pos = (167,140);
ref = acutecomb;
},
{
pos = (199,-6);
ref = uni0327.alt;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
140 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-6 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 477;
}
);
note = uni1E08;
unicode = 7688;
},
{
glyphname = Ccircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = C;
},
{
pos = (108,128);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
128 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 477;
}
);
note = Ccircumflex;
unicode = 264;
},
{
glyphname = Cdotaccent;
layers = (
{
layerId = m01;
shapes = (
{
ref = C;
},
{
pos = (171,113);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
113 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 477;
}
);
note = Cdotaccent;
unicode = 266;
},
{
glyphname = uniA7B3;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,197);
ref = uniAB53;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
197 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 567;
}
);
note = uniA7B3;
unicode = 42931;
},
{
glyphname = uni0187;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(93,-28,o),
(135,-10,o),
(170,6,o),
(175,10,qs),
(187,19,o),
(214,25,o),
(227,31,qs),
(264,49,o),
(300,67,o),
(315,74,o),
(323,77,o),
(339,82,o),
(377,97,o),
(415,112,q),
(415,58,o),
(415,6,o),
(414,-13,o),
(414,-19,qs),
(414,-24,o),
(430,-33,o),
(437,-33,qs),
(445,-33,o),
(448,-25,o),
(449,-20,qs),
(450,-17,o),
(456,10,o),
(457,15,q),
(448,24,o),
(448,36,qs),
(448,62,o),
(448,83,o),
(448,95,o),
(448,116,o),
(448,142,qs),
(448,149,o),
(441,149,q),
(436,150,o),
(423,151,o),
(420,149,q),
(413,142,o),
(397,143,o),
(389,139,qs),
(382,135,o),
(349,119,o),
(310,101,o),
(275,88,o),
(266,88,qs),
(265,88,o),
(226,69,o),
(170,42,o),
(115,16,o),
(98,8,qs),
(92,6,o),
(77,12,o),
(75,17,q),
(74,64,o),
(74,108,o),
(74,122,o),
(74,128,o),
(75,144,o),
(75,169,qs),
(75,174,o),
(81,182,q),
(83,186,o),
(74,191,o),
(78,195,qs),
(80,197,o),
(83,219,o),
(83,247,o),
(82,270,o),
(80,271,q),
(73,277,o),
(84,285,o),
(83,290,qs),
(82,295,o),
(83,305,o),
(83,309,qs),
(83,323,o),
(75,330,o),
(78,333,qs),
(83,338,o),
(83,349,o),
(83,354,qs),
(83,586,ls),
(83,591,o),
(83,601,o),
(81,604,qs),
(75,612,o),
(75,624,qs),
(75,641,o),
(89,654,o),
(96,654,qs),
(106,654,o),
(132,639,o),
(158,623,o),
(168,622,qs),
(183,620,o),
(190,613,qs),
(195,609,o),
(237,589,o),
(296,563,o),
(355,537,o),
(399,517,o),
(405,513,qs),
(415,506,o),
(448,513,o),
(449,526,qs),
(449,532,o),
(447,544,o),
(447,550,qs),
(447,559,o),
(456,575,o),
(456,583,qs),
(456,592,o),
(451,597,q),
(458,602,o),
(454,609,o),
(447,617,o),
(448,621,qs),
(450,627,o),
(449,649,o),
(449,681,qs),
(449,683,ls),
(451,697,o),
(450,740,o),
(460,773,o),
(480,772,qs),
(485,772,o),
(508,773,o),
(513,771,q),
(520,770,o),
(525,772,o),
(539,774,o),
(558,771,qs),
(563,770,o),
(573,776,o),
(579,773,q),
(592,781,o),
(590,792,o),
(579,797,q),
(567,805,o),
(548,808,o),
(534,803,qs),
(530,802,o),
(500,802,o),
(495,802,qs),
(472,803,o),
(467,803,o),
(463,803,qs),
(435,802,o),
(421,768,o),
(419,743,qs),
(418,733,o),
(424,712,o),
(419,705,qs),
(417,702,o),
(419,687,o),
(419,682,q),
(415,672,o),
(415,663,qs),
(415,657,o),
(415,625,o),
(415,588,o),
(415,559,o),
(415,556,qs),
(415,550,o),
(406,546,o),
(401,549,qs),
(389,555,o),
(337,580,o),
(276,608,o),
(228,629,o),
(221,630,qs),
(214,632,o),
(169,654,o),
(116,680,o),
(72,700,o),
(64,700,qs),
(56,700,o),
(48,695,qs),
(41,689,o),
(50,668,o),
(61,646,o),
(55,638,qs),
(48,627,o),
(47,617,o),
(55,608,qs),
(60,601,o),
(47,589,o),
(47,578,qs),
(47,533,o),
(50,492,o),
(52,478,o),
(52,474,qs),
(52,473,o),
(47,420,o),
(47,363,qs),
(47,356,o),
(50,343,o),
(55,336,qs),
(59,330,o),
(55,324,q),
(50,320,o),
(47,308,o),
(47,302,qs),
(46,250,o),
(46,188,o),
(47,151,o),
(48,123,o),
(48,105,qs),
(45,66,o),
(41,27,o),
(40,13,o),
(40,8,qs),
(40,-21,ls),
(40,-40,o),
(61,-40,qs),
(62,-40,o)
);
},
{
closed = 1;
nodes = (
(288,325,o),
(295,332,q),
(303,344,o),
(295,355,qs),
(289,363,o),
(276,371,o),
(266,369,q),
(247,369,o),
(226,352,o),
(226,340,qs),
(226,333,o),
(240,308,o),
(258,308,qs),
(269,308,o)
);
},
{
closed = 1;
nodes = (
(254,339,o),
(254,340,qs),
(254,347,o),
(264,347,q),
(267,348,o),
(271,344,q),
(273,340,o),
(271,338,q),
(268,331,o),
(261,331,qs),
(257,331,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
80 1 3 2 94 59 2 4 1 107 104 102 3 10 4 234 137 2 11 10 140 1 9 11 12 1 7 9 203 7 2 5 6 190 162 2 8 5 8 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 4 1 10 1 4 10 128 0 10 11 11 10 112 0 6 7 5 7 6 5 128 0 5 8 7 5 8 126 12 1 0 8 0 134 0 2 0 3 1 2 3 105 14 1 11 13 1 9 7 11 9 106 0 7 0 8 0 7 8 105 0 1 1 37 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 4 1 10 1 4 10 128 0 10 11 1 10 11 126 0 6 7 5 7 6 5 128 0 5 8 7 5 8 126 12 1 0 8 0 134 0 2 0 3 1 2 3 105 14 1 11 13 1 9 7 11 9 106 0 7 0 8 0 7 8 105 0 1 1 37 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 4 1 10 1 4 10 128 0 10 11 11 10 112 0 6 7 5 7 6 5 128 0 5 8 7 5 8 126 12 1 0 8 0 134 0 2 0 3 1 2 3 105 14 1 11 13 1 9 7 11 9 106 0 7 0 8 0 7 8 105 0 1 1 37 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 68 values pushed */
0 4 1 10 1 4 10 128 0 10 11 1 10 11 126 0 6 7 5 7 6 5 128 0 5 8 7 5 8 126 12 1 0 8 0 134 0 2 0 3 1 2 3 105 14 1 11 13 1 9 7 11 9 106 0 7 0 8 0 7 8 105 0 1 1 37 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 39 values pushed */
233 232 219 218 1 0 232 242 233 242 224 223 218 231 219 231 197 195 180 178 177 176 171 169 125 124 91 87 73 67 40 38 0 217 1 217 15 8 22 
CALL[ ]	/* CallFunction */";
};
width = 497;
}
);
note = uni0187;
unicode = 391;
},
{
glyphname = uni023B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(175,-20,o),
(176,-6,qs),
(176,-5,o),
(177,-5,o),
(177,-4,q),
(199,5,o),
(205,10,qs),
(217,19,o),
(244,25,o),
(257,31,qs),
(294,49,o),
(330,67,o),
(345,74,o),
(353,77,o),
(369,82,o),
(407,97,o),
(445,112,q),
(445,58,o),
(445,6,o),
(444,-13,o),
(444,-19,qs),
(444,-24,o),
(460,-33,o),
(467,-33,qs),
(475,-33,o),
(478,-25,o),
(479,-20,qs),
(480,-17,o),
(486,10,o),
(487,15,q),
(478,24,o),
(478,36,qs),
(478,62,o),
(478,83,o),
(478,95,o),
(478,116,o),
(478,142,qs),
(478,149,o),
(471,149,q),
(466,150,o),
(453,151,o),
(450,149,q),
(443,142,o),
(427,143,o),
(419,139,qs),
(412,135,o),
(379,119,o),
(340,101,o),
(305,88,o),
(296,88,q),
(296,88,o),
(264,73,o),
(217,50,o),
(192,38,q),
(192,50,l),
(208,101,o),
(238,203,o),
(254,253,qs),
(257,263,o),
(270,280,o),
(269,291,qs),
(267,310,o),
(281,326,o),
(285,339,qs),
(348,553,l),
(379,540,o),
(429,518,o),
(435,513,qs),
(445,506,o),
(478,513,o),
(479,526,qs),
(479,532,o),
(477,544,o),
(477,550,qs),
(477,559,o),
(486,575,o),
(486,583,qs),
(486,592,o),
(481,597,q),
(488,602,o),
(484,609,o),
(477,617,o),
(478,621,qs),
(480,627,o),
(479,649,o),
(479,681,qs),
(479,686,o),
(473,693,o),
(468,696,q),
(465,699,o),
(456,698,o),
(454,695,q),
(451,687,o),
(445,672,o),
(445,663,qs),
(445,657,o),
(445,625,o),
(445,588,o),
(445,559,o),
(445,556,qs),
(445,550,o),
(436,546,o),
(431,549,qs),
(357,584,l),
(366,613,o),
(382,668,o),
(389,693,q),
(393,701,o),
(394,721,o),
(392,728,qs),
(389,739,o),
(381,743,q),
(379,740,o),
(363,724,o),
(356,697,qs),
(355,690,o),
(345,653,o),
(343,647,qs),
(329,598,l),
(302,610,o),
(258,629,o),
(251,630,qs),
(244,632,o),
(199,654,o),
(146,680,o),
(102,700,o),
(94,700,qs),
(86,700,o),
(78,695,qs),
(71,689,o),
(80,668,o),
(91,646,o),
(85,638,qs),
(78,627,o),
(77,617,o),
(85,608,qs),
(90,601,o),
(77,589,o),
(77,578,qs),
(77,533,o),
(80,492,o),
(82,478,o),
(82,474,qs),
(82,473,o),
(77,420,o),
(77,363,qs),
(77,356,o),
(80,343,o),
(85,336,qs),
(89,330,o),
(85,324,q),
(80,320,o),
(77,308,o),
(77,302,qs),
(76,250,o),
(76,188,o),
(77,151,o),
(78,123,o),
(78,105,qs),
(75,66,o),
(71,27,o),
(70,13,o),
(70,8,qs),
(70,-21,ls),
(70,-40,o),
(91,-40,qs),
(93,-40,o),
(125,-27,o),
(145,-18,q),
(141,-31,o),
(134,-52,o),
(133,-55,qs),
(127,-69,o),
(142,-86,o),
(161,-80,o),
(160,-61,q),
(171,-50,o)
);
},
{
closed = 1;
nodes = (
(107,12,o),
(105,17,q),
(104,64,o),
(104,108,o),
(104,122,o),
(104,128,o),
(105,144,o),
(105,169,qs),
(105,174,o),
(111,182,q),
(113,186,o),
(104,191,o),
(108,195,qs),
(110,197,o),
(113,219,o),
(113,247,o),
(112,270,o),
(110,271,q),
(103,277,o),
(114,285,o),
(113,290,qs),
(112,295,o),
(113,305,o),
(113,309,qs),
(113,323,o),
(105,330,o),
(108,333,qs),
(113,338,o),
(113,349,o),
(113,354,qs),
(113,586,ls),
(113,591,o),
(113,601,o),
(111,604,qs),
(105,612,o),
(105,624,qs),
(105,641,o),
(119,654,o),
(126,654,qs),
(136,654,o),
(162,639,o),
(188,623,o),
(198,622,qs),
(213,620,o),
(220,613,qs),
(225,608,o),
(284,581,o),
(319,565,q),
(264,378,ls),
(259,362,o),
(247,328,o),
(245,313,qs),
(242,293,o),
(222,269,o),
(223,249,q),
(219,236,o),
(206,216,o),
(203,201,qs),
(201,191,o),
(188,151,o),
(178,111,o),
(179,100,q),
(168,80,o),
(167,54,qs),
(167,52,o),
(162,34,o),
(158,22,q),
(150,18,o),
(134,11,o),
(128,8,qs),
(122,6,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 92 values pushed */
223 220 199 192 111 102 99 97 72 57 22 11 4 6 185 159 17 3 2 3 245 146 122 121 7 5 5 2 3 76 0 1 0 73 0 6 1 4 1 6 4 128 0 3 4 2 4 3 2 128 0 2 5 4 2 5 126 0 0 5 0 134 0 4 0 5 0 4 5 105 0 1 1 37 1 78 208 207 153 151 136 134 133 132 127 125 50 48 41 7 8 23 
CALL[ ]	/* CallFunction */";
};
width = 497;
}
);
note = uni023B;
unicode = 571;
},
{
glyphname = D;
kernRight = D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(76,-33,o),
(82,-31,q),
(89,-27,o),
(93,-20,qs),
(95,-16,o),
(135,23,o),
(196,82,o),
(264,146,o),
(326,202,o),
(367,238,o),
(370,238,q),
(383,249,o),
(422,288,o),
(453,323,o),
(453,326,qs),
(453,334,o),
(433,351,o),
(410,368,o),
(406,375,qs),
(402,383,o),
(385,397,o),
(377,403,qs),
(348,426,o),
(300,489,o),
(260,523,qs),
(253,529,o),
(237,538,o),
(232,545,qs),
(229,549,o),
(203,576,o),
(167,610,o),
(132,640,o),
(119,647,q),
(121,656,o),
(104,659,o),
(103,663,q),
(103,670,o),
(86,684,o),
(67,696,o),
(64,698,qs),
(60,701,o),
(52,698,o),
(49,696,q),
(43,680,o),
(39,658,o),
(48,647,q),
(55,632,o),
(46,620,qs),
(36,605,o),
(45,594,qs),
(51,588,o),
(49,574,o),
(49,567,q),
(40,558,o),
(40,512,o),
(47,499,q),
(45,498,o),
(42,469,o),
(41,433,o),
(42,403,o),
(44,400,q),
(50,394,o),
(39,385,o),
(41,380,qs),
(43,373,o),
(50,356,o),
(45,351,q),
(48,303,l),
(44,298,o),
(44,292,qs),
(44,287,o),
(50,277,o),
(50,270,qs),
(50,264,o),
(42,252,o),
(44,248,qs),
(47,243,o),
(49,231,o),
(49,226,qs),
(49,153,ls),
(49,149,o),
(50,139,o),
(48,137,qs),
(44,133,o),
(41,122,o),
(41,116,qs),
(41,-23,ls),
(41,-33,o),
(48,-38,o),
(59,-38,qs),
(66,-39,o)
);
},
{
closed = 1;
nodes = (
(71,26,o),
(73,30,qs),
(74,32,o),
(76,36,o),
(75,37,qs),
(67,43,o),
(75,55,o),
(75,60,qs),
(76,308,ls),
(76,311,o),
(75,337,o),
(75,370,o),
(77,397,o),
(80,399,q),
(83,404,o),
(81,406,qs),
(75,414,o),
(75,421,qs),
(75,475,o),
(75,583,o),
(76,636,qs),
(76,642,o),
(80,647,o),
(83,644,qs),
(94,634,o),
(128,602,o),
(164,568,o),
(193,543,o),
(198,541,qs),
(202,540,o),
(206,530,o),
(209,527,qs),
(215,521,o),
(253,486,o),
(290,448,o),
(295,436,q),
(313,423,o),
(335,388,o),
(357,378,qs),
(360,377,o),
(367,369,o),
(368,367,q),
(368,359,o),
(383,357,o),
(384,352,qs),
(386,347,o),
(403,338,o),
(408,335,qs),
(412,333,o),
(414,324,o),
(406,316,qs),
(381,292,o),
(325,238,o),
(300,214,q),
(291,213,o),
(282,199,o),
(276,195,q),
(268,192,o),
(256,180,o),
(250,175,qs),
(244,169,o),
(224,146,o),
(217,141,qs),
(212,137,o),
(182,111,o),
(146,77,o),
(119,49,o),
(116,44,qs),
(111,34,o),
(91,19,o),
(83,11,qs),
(74,3,o),
(69,3,o),
(68,7,qs),
(67,12,o)
);
},
{
closed = 1;
nodes = (
(231,320,o),
(238,328,qs),
(246,340,o),
(238,351,qs),
(226,366,o),
(209,365,qs),
(190,365,o),
(169,348,o),
(169,336,qs),
(169,329,o),
(183,304,o),
(201,304,qs),
(212,304,o)
);
},
{
closed = 1;
nodes = (
(197,334,o),
(197,335,qs),
(197,342,o),
(207,342,q),
(211,343,o),
(214,339,qs),
(216,335,o),
(214,333,qs),
(210,327,o),
(204,327,qs),
(200,327,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
181 23 2 3 2 160 157 22 11 4 5 0 1 2 76 149 147 26 3 2 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 2 3 3 2 112 4 1 0 1 0 134 6 1 3 1 1 3 89 6 1 3 3 1 98 5 1 1 3 1 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 2 3 2 133 4 1 0 1 0 134 6 1 3 1 1 3 89 6 1 3 3 1 98 5 1 1 3 1 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
180 179 167 166 1 0 179 189 180 189 173 171 166 178 167 178 0 90 1 90 7 8 22 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = D;
unicode = 68;
},
{
glyphname = Eth;
kernRight = D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(125,6,o),
(131,8,qs),
(138,10,o),
(142,18,qs),
(144,21,o),
(184,59,o),
(245,114,o),
(313,175,o),
(375,228,o),
(416,262,o),
(419,262,q),
(432,273,o),
(471,310,o),
(502,343,o),
(502,346,qs),
(502,353,o),
(482,369,o),
(459,386,o),
(455,392,qs),
(451,400,o),
(434,413,o),
(426,419,qs),
(397,441,o),
(349,501,o),
(309,532,qs),
(302,538,o),
(286,546,o),
(281,553,qs),
(278,557,o),
(252,583,o),
(216,615,o),
(181,644,o),
(168,650,q),
(170,658,o),
(153,661,o),
(152,665,q),
(152,672,o),
(135,685,o),
(116,696,o),
(113,698,qs),
(109,701,o),
(101,698,o),
(98,696,q),
(92,681,o),
(88,661,o),
(97,650,q),
(104,636,o),
(95,624,qs),
(85,610,o),
(94,600,qs),
(100,594,o),
(98,581,o),
(98,574,q),
(89,566,o),
(89,522,o),
(96,510,q),
(94,509,o),
(91,482,o),
(90,447,o),
(91,419,o),
(93,416,q),
(99,410,o),
(88,402,o),
(90,397,qs),
(92,390,o),
(99,374,o),
(94,369,qs),
(90,366,o),
(82,362,o),
(76,362,qs),
(66,362,o),
(37,362,o),
(27,361,qs),
(19,361,o),
(21,339,o),
(29,339,qs),
(82,339,ls),
(87,339,o),
(100,326,o),
(97,324,q),
(93,319,o),
(93,314,qs),
(93,309,o),
(99,299,o),
(99,293,qs),
(99,287,o),
(91,276,o),
(93,272,qs),
(98,263,o),
(98,251,qs),
(98,182,ls),
(98,178,o),
(99,169,o),
(97,167,qs),
(93,163,o),
(90,152,o),
(90,147,qs),
(90,15,ls),
(90,6,o),
(97,1,o),
(108,1,qs),
(115,0,o)
);
},
{
closed = 1;
nodes = (
(120,61,o),
(122,65,qs),
(123,67,o),
(125,71,o),
(124,72,qs),
(116,78,o),
(124,89,o),
(124,94,qs),
(125,329,ls),
(125,339,o),
(134,339,qs),
(277,339,ls),
(280,339,o),
(287,340,o),
(289,341,qs),
(301,348,o),
(296,358,o),
(287,361,qs),
(285,362,o),
(276,362,o),
(249,362,o),
(191,362,o),
(140,362,qs),
(136,362,o),
(126,374,o),
(127,375,qs),
(132,379,o),
(129,395,o),
(126,412,o),
(129,415,q),
(132,420,o),
(130,422,qs),
(124,428,o),
(124,436,qs),
(124,487,o),
(124,589,o),
(125,639,qs),
(125,649,o),
(132,642,qs),
(143,633,o),
(177,602,o),
(213,570,o),
(242,547,o),
(247,545,qs),
(251,544,o),
(255,534,o),
(258,531,qs),
(264,525,o),
(302,493,o),
(339,457,o),
(344,445,q),
(362,432,o),
(392,400,o),
(414,390,q),
(422,388,o),
(425,380,q),
(425,372,o),
(440,371,o),
(441,366,qs),
(443,361,o),
(449,354,o),
(455,353,qs),
(457,353,o),
(460,343,o),
(457,341,qs),
(432,319,o),
(382,273,o),
(357,250,q),
(348,249,o),
(339,236,o),
(333,232,q),
(325,229,o),
(313,218,o),
(307,213,qs),
(301,208,o),
(286,201,o),
(279,196,qs),
(274,193,o),
(240,163,o),
(199,125,o),
(168,94,o),
(165,89,qs),
(160,79,o),
(140,65,o),
(132,58,qs),
(123,50,o),
(118,47,o),
(117,51,qs),
(116,56,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
125 1 1 2 185 182 21 13 4 5 0 1 2 76 164 158 156 37 4 3 74 0 3 2 3 133 4 1 2 5 1 1 0 2 1 105 6 1 0 0 38 0 78 1 0 180 177 171 166 133 132 31 27 25 23 0 101 1 101 7 8 22 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = Eth;
unicode = 208;
},
{
glyphname = Dcaron;
kernRight = D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(76,-33,o),
(82,-31,q),
(89,-27,o),
(93,-20,qs),
(95,-16,o),
(135,23,o),
(196,82,o),
(264,146,o),
(326,202,o),
(367,238,o),
(370,238,q),
(383,249,o),
(422,288,o),
(453,323,o),
(453,326,qs),
(453,334,o),
(433,351,o),
(410,368,o),
(406,375,qs),
(402,383,o),
(385,397,o),
(377,403,qs),
(348,426,o),
(300,489,o),
(260,523,qs),
(253,529,o),
(237,538,o),
(232,545,qs),
(229,549,o),
(203,576,o),
(167,610,o),
(132,640,o),
(119,647,q),
(121,656,o),
(104,659,o),
(103,663,q),
(103,670,o),
(86,684,o),
(67,696,o),
(64,698,qs),
(60,701,o),
(52,698,o),
(49,696,q),
(43,680,o),
(39,658,o),
(48,647,q),
(55,632,o),
(46,620,qs),
(36,605,o),
(45,594,qs),
(51,588,o),
(49,574,o),
(49,567,q),
(40,558,o),
(40,512,o),
(47,499,q),
(45,498,o),
(42,469,o),
(41,433,o),
(42,403,o),
(44,400,q),
(50,394,o),
(39,385,o),
(41,380,qs),
(43,373,o),
(50,356,o),
(45,351,q),
(48,303,l),
(44,298,o),
(44,292,qs),
(44,287,o),
(50,277,o),
(50,270,qs),
(50,264,o),
(42,252,o),
(44,248,qs),
(47,243,o),
(49,231,o),
(49,226,qs),
(49,153,ls),
(49,149,o),
(50,139,o),
(48,137,qs),
(44,133,o),
(41,122,o),
(41,116,qs),
(41,-23,ls),
(41,-33,o),
(48,-38,o),
(59,-38,qs),
(66,-39,o)
);
},
{
closed = 1;
nodes = (
(71,26,o),
(73,30,qs),
(74,32,o),
(76,36,o),
(75,37,qs),
(67,43,o),
(75,55,o),
(75,60,qs),
(76,308,ls),
(76,311,o),
(75,337,o),
(75,370,o),
(77,397,o),
(80,399,q),
(83,404,o),
(81,406,qs),
(75,414,o),
(75,421,qs),
(75,475,o),
(75,583,o),
(76,636,qs),
(76,642,o),
(80,647,o),
(83,644,qs),
(94,634,o),
(128,602,o),
(164,568,o),
(193,543,o),
(198,541,qs),
(202,540,o),
(206,530,o),
(209,527,qs),
(215,521,o),
(253,486,o),
(290,448,o),
(295,436,q),
(313,423,o),
(335,388,o),
(357,378,qs),
(360,377,o),
(367,369,o),
(368,367,q),
(368,359,o),
(383,357,o),
(384,352,qs),
(386,347,o),
(403,338,o),
(408,335,qs),
(412,333,o),
(414,324,o),
(406,316,qs),
(381,292,o),
(325,238,o),
(300,214,q),
(291,213,o),
(282,199,o),
(276,195,q),
(268,192,o),
(256,180,o),
(250,175,qs),
(244,169,o),
(224,146,o),
(217,141,qs),
(212,137,o),
(182,111,o),
(146,77,o),
(119,49,o),
(116,44,qs),
(111,34,o),
(91,19,o),
(83,11,qs),
(74,3,o),
(69,3,o),
(68,7,qs),
(67,12,o)
);
},
{
closed = 1;
nodes = (
(231,320,o),
(238,328,qs),
(246,340,o),
(238,351,qs),
(226,366,o),
(209,365,qs),
(190,365,o),
(169,348,o),
(169,336,qs),
(169,329,o),
(183,304,o),
(201,304,qs),
(212,304,o)
);
},
{
closed = 1;
nodes = (
(197,334,o),
(197,335,qs),
(197,342,o),
(207,342,q),
(211,343,o),
(214,339,qs),
(216,335,o),
(214,333,qs),
(210,327,o),
(204,327,qs),
(200,327,o)
);
},
{
closed = 1;
nodes = (
(272,836,o),
(269,832,qs),
(267,830,o),
(254,813,o),
(252,811,qs),
(250,808,o),
(243,797,o),
(241,796,qs),
(235,793,o),
(231,793,o),
(226,795,q),
(222,800,o),
(200,820,o),
(173,843,o),
(150,859,o),
(145,859,q),
(137,861,o),
(125,859,o),
(129,850,q),
(135,844,o),
(147,831,o),
(151,824,q),
(156,821,o),
(168,806,o),
(174,803,q),
(182,796,o),
(189,787,o),
(196,781,qs),
(204,774,o),
(220,760,o),
(224,749,qs),
(226,745,o),
(234,744,o),
(236,748,q),
(247,760,o),
(278,794,o),
(308,829,o),
(328,852,o),
(327,853,qs),
(325,855,o),
(319,860,o),
(317,860,q),
(312,862,o),
(305,860,q),
(291,853,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
181 23 2 3 2 160 157 22 11 4 5 0 1 2 76 149 147 26 3 2 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 2 3 3 2 112 4 1 0 1 0 134 6 1 3 1 1 3 89 6 1 3 3 1 98 5 1 1 3 1 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 2 3 2 133 4 1 0 1 0 134 6 1 3 1 1 3 89 6 1 3 3 1 98 5 1 1 3 1 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
180 179 167 166 1 0 179 189 180 189 173 171 166 178 167 178 0 90 1 90 7 8 22 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = Dcaron;
unicode = 270;
},
{
glyphname = uni1E10;
kernRight = D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(76,-33,o),
(82,-31,q),
(89,-27,o),
(93,-20,qs),
(95,-16,o),
(135,23,o),
(196,82,o),
(264,146,o),
(326,202,o),
(367,238,o),
(370,238,q),
(383,249,o),
(422,288,o),
(453,323,o),
(453,326,qs),
(453,334,o),
(433,351,o),
(410,368,o),
(406,375,qs),
(402,383,o),
(385,397,o),
(377,403,qs),
(348,426,o),
(300,489,o),
(260,523,qs),
(253,529,o),
(237,538,o),
(232,545,qs),
(229,549,o),
(203,576,o),
(167,610,o),
(132,640,o),
(119,647,q),
(121,656,o),
(104,659,o),
(103,663,q),
(103,670,o),
(86,684,o),
(67,696,o),
(64,698,qs),
(60,701,o),
(52,698,o),
(49,696,q),
(43,680,o),
(39,658,o),
(48,647,q),
(55,632,o),
(46,620,qs),
(36,605,o),
(45,594,qs),
(51,588,o),
(49,574,o),
(49,567,q),
(40,558,o),
(40,512,o),
(47,499,q),
(45,498,o),
(42,469,o),
(41,433,o),
(42,403,o),
(44,400,q),
(50,394,o),
(39,385,o),
(41,380,qs),
(43,373,o),
(50,356,o),
(45,351,q),
(48,303,l),
(44,298,o),
(44,292,qs),
(44,287,o),
(50,277,o),
(50,270,qs),
(50,264,o),
(42,252,o),
(44,248,qs),
(47,243,o),
(49,231,o),
(49,226,qs),
(49,153,ls),
(49,149,o),
(50,139,o),
(48,137,qs),
(44,133,o),
(41,122,o),
(41,116,qs),
(41,-23,ls),
(41,-33,o),
(48,-38,o),
(59,-38,qs),
(66,-39,o)
);
},
{
closed = 1;
nodes = (
(71,26,o),
(73,30,qs),
(74,32,o),
(76,36,o),
(75,37,qs),
(67,43,o),
(75,55,o),
(75,60,qs),
(76,308,ls),
(76,311,o),
(75,337,o),
(75,370,o),
(77,397,o),
(80,399,q),
(83,404,o),
(81,406,qs),
(75,414,o),
(75,421,qs),
(75,475,o),
(75,583,o),
(76,636,qs),
(76,642,o),
(80,647,o),
(83,644,qs),
(94,634,o),
(128,602,o),
(164,568,o),
(193,543,o),
(198,541,qs),
(202,540,o),
(206,530,o),
(209,527,qs),
(215,521,o),
(253,486,o),
(290,448,o),
(295,436,q),
(313,423,o),
(335,388,o),
(357,378,qs),
(360,377,o),
(367,369,o),
(368,367,q),
(368,359,o),
(383,357,o),
(384,352,qs),
(386,347,o),
(403,338,o),
(408,335,qs),
(412,333,o),
(414,324,o),
(406,316,qs),
(381,292,o),
(325,238,o),
(300,214,q),
(291,213,o),
(282,199,o),
(276,195,q),
(268,192,o),
(256,180,o),
(250,175,qs),
(244,169,o),
(224,146,o),
(217,141,qs),
(212,137,o),
(182,111,o),
(146,77,o),
(119,49,o),
(116,44,qs),
(111,34,o),
(91,19,o),
(83,11,qs),
(74,3,o),
(69,3,o),
(68,7,qs),
(67,12,o)
);
},
{
closed = 1;
nodes = (
(231,320,o),
(238,328,qs),
(246,340,o),
(238,351,qs),
(226,366,o),
(209,365,qs),
(190,365,o),
(169,348,o),
(169,336,qs),
(169,329,o),
(183,304,o),
(201,304,qs),
(212,304,o)
);
},
{
closed = 1;
nodes = (
(197,334,o),
(197,335,qs),
(197,342,o),
(207,342,q),
(211,343,o),
(214,339,qs),
(216,335,o),
(214,333,qs),
(210,327,o),
(204,327,qs),
(200,327,o)
);
},
{
closed = 1;
nodes = (
(171,-201,o),
(173,-198,q),
(177,-198,o),
(194,-174,o),
(196,-172,q),
(205,-158,o),
(208,-143,o),
(215,-129,qs),
(221,-113,o),
(234,-102,qs),
(247,-91,o),
(251,-65,o),
(252,-48,qs),
(253,-37,o),
(246,-27,o),
(240,-31,q),
(235,-36,o),
(215,-51,o),
(213,-58,qs),
(210,-69,o),
(199,-91,o),
(193,-103,qs),
(185,-124,o),
(165,-159,o),
(151,-194,q),
(154,-199,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
181 23 2 3 2 160 157 22 11 4 5 0 1 2 76 149 147 26 3 2 74 202 1 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 2 3 3 2 112 4 1 0 1 0 134 6 1 3 1 1 3 89 6 1 3 3 1 98 5 1 1 3 1 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 2 3 2 133 4 1 0 1 0 134 6 1 3 1 1 3 89 6 1 3 3 1 98 5 1 1 3 1 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
180 179 167 166 1 0 179 189 180 189 173 171 166 178 167 178 0 90 1 90 7 8 22 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni1E10;
unicode = 7696;
},
{
glyphname = uni1E12;
kernRight = D;
layers = (
{
layerId = m01;
shapes = (
{
ref = D;
},
{
pos = (92,-782);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-782 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni1E12;
unicode = 7698;
},
{
glyphname = Dcroat;
kernRight = D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(105,6,o),
(111,8,qs),
(118,10,o),
(122,18,qs),
(124,21,o),
(164,59,o),
(225,114,o),
(293,175,o),
(355,228,o),
(396,262,o),
(399,262,q),
(412,273,o),
(451,310,o),
(482,343,o),
(482,346,qs),
(482,353,o),
(462,369,o),
(439,386,o),
(435,392,qs),
(431,400,o),
(414,413,o),
(406,419,qs),
(377,441,o),
(329,501,o),
(289,532,qs),
(282,538,o),
(266,546,o),
(261,553,qs),
(258,557,o),
(232,583,o),
(196,615,o),
(161,644,o),
(148,650,q),
(150,658,o),
(133,661,o),
(132,665,q),
(132,672,o),
(115,685,o),
(96,696,o),
(93,698,qs),
(89,701,o),
(81,698,o),
(78,696,q),
(72,681,o),
(68,661,o),
(77,650,q),
(84,636,o),
(75,624,qs),
(65,610,o),
(74,600,qs),
(80,594,o),
(78,581,o),
(78,574,q),
(69,566,o),
(69,522,o),
(76,510,q),
(74,509,o),
(71,482,o),
(70,447,o),
(71,419,o),
(73,416,q),
(79,410,o),
(68,402,o),
(70,397,qs),
(72,390,o),
(79,374,o),
(74,369,qs),
(70,366,o),
(62,362,o),
(56,362,qs),
(46,362,o),
(17,362,o),
(7,361,qs),
(2,361,o),
(-1,347,o),
(4,333,o),
(9,333,qs),
(62,333,ls),
(67,333,o),
(80,320,o),
(77,318,q),
(73,313,o),
(73,308,qs),
(73,303,o),
(79,293,o),
(79,287,qs),
(79,281,o),
(71,270,o),
(73,266,qs),
(78,257,o),
(78,245,qs),
(78,182,ls),
(78,178,o),
(79,169,o),
(77,167,qs),
(73,163,o),
(70,152,o),
(70,147,qs),
(70,15,ls),
(70,6,o),
(77,1,o),
(88,1,qs),
(95,0,o)
);
},
{
closed = 1;
nodes = (
(100,61,o),
(102,65,qs),
(103,67,o),
(105,71,o),
(104,72,qs),
(96,78,o),
(104,89,o),
(104,94,qs),
(105,323,ls),
(105,333,o),
(114,333,qs),
(237,333,ls),
(240,333,o),
(247,334,o),
(249,335,qs),
(261,342,o),
(256,358,o),
(247,361,qs),
(245,362,o),
(230,362,o),
(178,362,o),
(120,362,qs),
(116,362,o),
(106,374,o),
(107,375,qs),
(112,379,o),
(109,395,o),
(106,412,o),
(109,415,q),
(112,420,o),
(110,422,qs),
(104,428,o),
(104,436,qs),
(104,487,o),
(104,589,o),
(105,639,qs),
(105,649,o),
(112,642,qs),
(123,633,o),
(157,602,o),
(193,570,o),
(222,547,o),
(227,545,qs),
(231,544,o),
(235,534,o),
(238,531,qs),
(244,525,o),
(282,493,o),
(319,457,o),
(324,445,q),
(342,432,o),
(372,400,o),
(394,390,q),
(402,388,o),
(405,380,q),
(405,372,o),
(420,371,o),
(421,366,qs),
(423,361,o),
(429,354,o),
(435,353,qs),
(437,353,o),
(440,343,o),
(437,341,qs),
(412,319,o),
(362,273,o),
(337,250,q),
(328,249,o),
(319,236,o),
(313,232,q),
(305,229,o),
(293,218,o),
(287,213,qs),
(281,208,o),
(266,201,o),
(259,196,qs),
(254,193,o),
(220,163,o),
(179,125,o),
(148,94,o),
(145,89,qs),
(140,79,o),
(120,65,o),
(112,58,qs),
(103,50,o),
(98,47,o),
(97,51,qs),
(96,56,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
126 1 1 2 185 182 21 13 4 5 0 1 2 76 165 159 157 38 4 3 74 0 3 2 3 133 4 1 2 5 1 1 0 2 1 105 6 1 0 0 38 0 78 1 0 180 177 171 167 134 133 32 28 25 23 0 102 1 102 7 8 22 
CALL[ ]	/* CallFunction */";
};
width = 482;
}
);
note = Dcroat;
unicode = 272;
},
{
glyphname = uni1E0A;
kernRight = D;
layers = (
{
layerId = m01;
shapes = (
{
ref = D;
},
{
pos = (155,116);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
116 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni1E0A;
unicode = 7690;
},
{
glyphname = uni1E0C;
kernRight = D;
layers = (
{
layerId = m01;
shapes = (
{
ref = D;
},
{
pos = (154,-114);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni1E0C;
unicode = 7692;
},
{
glyphname = uni018A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(166,-33,o),
(172,-31,q),
(179,-27,o),
(183,-20,qs),
(185,-16,o),
(225,23,o),
(286,82,o),
(354,146,o),
(416,202,o),
(457,238,o),
(460,238,q),
(473,249,o),
(512,288,o),
(543,323,o),
(543,326,qs),
(543,334,o),
(523,351,o),
(500,368,o),
(496,375,qs),
(492,383,o),
(475,397,o),
(467,403,qs),
(438,426,o),
(390,489,o),
(350,523,qs),
(343,529,o),
(327,538,o),
(322,545,qs),
(319,549,o),
(293,576,o),
(257,610,o),
(222,640,o),
(209,647,q),
(211,656,o),
(194,659,o),
(193,663,q),
(193,670,o),
(176,684,o),
(157,696,o),
(154,698,qs),
(151,700,o),
(147,700,q),
(132,706,o),
(115,699,qs),
(111,698,o),
(81,698,o),
(76,698,qs),
(44,698,ls),
(16,697,o),
(3,663,o),
(1,638,qs),
(0,628,o),
(6,607,o),
(1,600,qs),
(-1,596,o),
(2,577,o),
(2,574,qs),
(2,562,o),
(28,562,o),
(28,568,q),
(33,574,o),
(32,606,o),
(32,642,o),
(44,668,o),
(61,667,qs),
(66,667,o),
(89,669,o),
(94,667,q),
(100,666,o),
(105,668,o),
(116,669,o),
(131,668,q),
(130,657,o),
(138,647,q),
(145,632,o),
(136,620,qs),
(126,605,o),
(135,594,qs),
(141,588,o),
(139,574,o),
(139,567,q),
(130,558,o),
(130,512,o),
(137,499,q),
(135,498,o),
(132,469,o),
(131,433,o),
(132,403,o),
(134,400,q),
(140,394,o),
(129,385,o),
(131,380,qs),
(133,373,o),
(140,356,o),
(135,351,q),
(138,303,l),
(134,298,o),
(134,292,qs),
(134,287,o),
(140,277,o),
(140,270,qs),
(140,264,o),
(132,252,o),
(134,248,qs),
(137,243,o),
(139,231,o),
(139,226,qs),
(139,153,ls),
(139,149,o),
(140,139,o),
(138,137,qs),
(134,133,o),
(131,122,o),
(131,116,qs),
(131,-23,ls),
(131,-33,o),
(138,-38,o),
(149,-38,qs),
(156,-39,o)
);
},
{
closed = 1;
nodes = (
(161,26,o),
(163,30,qs),
(164,32,o),
(166,36,o),
(165,37,qs),
(157,43,o),
(165,55,o),
(165,60,qs),
(166,308,ls),
(166,311,o),
(165,337,o),
(165,370,o),
(167,397,o),
(170,399,q),
(173,404,o),
(171,406,qs),
(165,414,o),
(165,421,qs),
(165,475,o),
(165,583,o),
(166,636,qs),
(166,642,o),
(170,647,o),
(173,644,qs),
(184,634,o),
(218,602,o),
(254,568,o),
(283,543,o),
(288,541,qs),
(292,540,o),
(296,530,o),
(299,527,qs),
(305,521,o),
(343,486,o),
(380,448,o),
(385,436,q),
(403,423,o),
(425,388,o),
(447,378,qs),
(450,377,o),
(457,369,o),
(458,367,q),
(458,359,o),
(473,357,o),
(474,352,qs),
(476,347,o),
(493,338,o),
(498,335,qs),
(502,333,o),
(504,324,o),
(496,316,qs),
(471,292,o),
(415,238,o),
(390,214,q),
(381,213,o),
(372,199,o),
(366,195,q),
(358,192,o),
(346,180,o),
(340,175,qs),
(334,169,o),
(314,146,o),
(307,141,qs),
(302,137,o),
(272,111,o),
(236,77,o),
(209,49,o),
(206,44,qs),
(201,34,o),
(181,19,o),
(173,11,qs),
(164,3,o),
(159,3,o),
(158,7,qs),
(157,12,o)
);
},
{
closed = 1;
nodes = (
(321,320,o),
(328,328,qs),
(336,340,o),
(328,351,qs),
(316,366,o),
(299,365,qs),
(280,365,o),
(259,348,o),
(259,336,qs),
(259,329,o),
(273,304,o),
(291,304,qs),
(302,304,o)
);
},
{
closed = 1;
nodes = (
(287,334,o),
(287,335,qs),
(287,342,o),
(297,342,q),
(301,343,o),
(304,339,qs),
(306,335,o),
(304,333,qs),
(300,327,o),
(294,327,qs),
(290,327,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
177 175 61 26 4 5 1 209 23 2 6 5 188 185 22 11 4 5 0 4 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 5 1 6 6 5 114 7 1 0 4 0 134 9 1 6 8 1 4 0 6 4 106 2 1 1 1 3 97 0 3 3 39 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 5 1 6 1 5 6 128 7 1 0 4 0 134 9 1 6 8 1 4 0 6 4 106 2 1 1 1 3 97 0 3 3 39 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
208 207 195 194 1 0 207 217 208 217 201 199 194 206 195 206 73 69 54 50 47 46 0 118 1 118 10 8 22 
CALL[ ]	/* CallFunction */";
};
width = 543;
}
);
note = uni018A;
unicode = 394;
},
{
glyphname = Dmacronbelow;
kernRight = D;
layers = (
{
layerId = m01;
shapes = (
{
ref = D;
},
{
pos = (44,-329);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-329 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = Dmacronbelow;
unicode = 7694;
},
{
glyphname = Dtail;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(80,-33,o),
(86,-31,q),
(93,-27,o),
(97,-20,qs),
(99,-16,o),
(139,23,o),
(200,82,o),
(268,146,o),
(330,202,o),
(371,238,o),
(374,238,q),
(387,249,o),
(426,288,o),
(457,323,o),
(457,326,qs),
(457,334,o),
(437,351,o),
(414,368,o),
(410,375,qs),
(406,383,o),
(389,397,o),
(381,403,qs),
(352,426,o),
(304,489,o),
(264,523,qs),
(257,529,o),
(241,538,o),
(236,545,qs),
(233,549,o),
(207,576,o),
(171,610,o),
(136,640,o),
(123,647,q),
(125,656,o),
(108,659,o),
(107,663,q),
(107,670,o),
(90,684,o),
(71,696,o),
(68,698,qs),
(64,701,o),
(56,698,o),
(53,696,q),
(47,680,o),
(43,658,o),
(52,647,q),
(59,632,o),
(50,620,qs),
(40,605,o),
(49,594,qs),
(55,588,o),
(53,574,o),
(53,567,q),
(44,558,o),
(44,512,o),
(51,499,q),
(49,498,o),
(46,469,o),
(45,433,o),
(46,403,o),
(48,400,q),
(54,394,o),
(43,385,o),
(45,380,qs),
(47,373,o),
(54,356,o),
(49,351,q),
(49,345,l),
(38,345,o),
(19,348,o),
(11,354,q),
(-38,348,ls),
(-39,348,o),
(-53,341,o),
(-62,330,o),
(-52,322,o),
(-29,320,qs),
(-15,319,o),
(31,320,o),
(51,319,q),
(52,303,l),
(48,298,o),
(48,292,qs),
(48,287,o),
(54,277,o),
(54,270,qs),
(54,264,o),
(46,252,o),
(48,248,qs),
(51,243,o),
(53,231,o),
(53,226,qs),
(53,153,ls),
(53,149,o),
(54,139,o),
(52,137,qs),
(48,133,o),
(45,122,o),
(45,116,qs),
(45,-23,ls),
(45,-33,o),
(52,-38,o),
(63,-38,qs),
(70,-39,o)
);
},
{
closed = 1;
nodes = (
(75,26,o),
(77,30,qs),
(78,32,o),
(80,36,o),
(79,37,qs),
(71,43,o),
(79,55,o),
(79,60,qs),
(80,308,ls),
(80,309,o),
(80,315,q),
(80,315,l),
(85,312,o),
(112,312,o),
(119,314,qs),
(131,319,o),
(146,344,o),
(135,350,q),
(133,352,o),
(115,355,o),
(113,353,q),
(106,349,o),
(89,346,o),
(79,346,q),
(79,363,o),
(81,396,o),
(84,399,q),
(87,404,o),
(85,406,qs),
(79,414,o),
(79,421,qs),
(79,475,o),
(79,583,o),
(80,636,qs),
(80,642,o),
(84,647,o),
(87,644,qs),
(98,634,o),
(132,602,o),
(168,568,o),
(197,543,o),
(202,541,qs),
(206,540,o),
(210,530,o),
(213,527,qs),
(219,521,o),
(257,486,o),
(294,448,o),
(299,436,q),
(317,423,o),
(339,388,o),
(361,378,qs),
(364,377,o),
(371,369,o),
(372,367,q),
(372,359,o),
(387,357,o),
(388,352,qs),
(390,347,o),
(407,338,o),
(412,335,qs),
(416,333,o),
(418,324,o),
(410,316,qs),
(385,292,o),
(329,238,o),
(304,214,q),
(295,213,o),
(286,199,o),
(280,195,q),
(272,192,o),
(260,180,o),
(254,175,qs),
(248,169,o),
(228,146,o),
(221,141,qs),
(216,137,o),
(186,111,o),
(150,77,o),
(123,49,o),
(120,44,qs),
(115,34,o),
(95,19,o),
(87,11,qs),
(78,3,o),
(73,3,o),
(72,7,qs),
(71,12,o)
);
},
{
closed = 1;
nodes = (
(235,320,o),
(242,328,qs),
(250,340,o),
(242,351,qs),
(230,366,o),
(213,365,qs),
(194,365,o),
(173,348,o),
(173,336,qs),
(173,329,o),
(187,304,o),
(205,304,qs),
(216,304,o)
);
},
{
closed = 1;
nodes = (
(201,334,o),
(201,335,qs),
(201,342,o),
(211,342,q),
(215,343,o),
(218,339,qs),
(220,335,o),
(218,333,qs),
(214,327,o),
(208,327,qs),
(204,327,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
32 1 4 7 207 1 8 2 182 1 6 5 186 183 22 11 4 5 0 6 4 76 162 160 39 3 7 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 7 4 8 7 112 0 4 2 4 133 9 1 0 6 0 134 11 1 8 1 6 8 89 0 1 5 2 1 89 3 1 2 0 5 6 2 5 105 11 1 8 8 6 98 10 1 6 8 6 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 7 4 7 133 0 4 2 4 133 9 1 0 6 0 134 11 1 8 1 6 8 89 0 1 5 2 1 89 3 1 2 0 5 6 2 5 105 11 1 8 8 6 98 10 1 6 8 6 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
206 205 193 192 1 0 205 215 206 215 199 197 192 204 193 204 178 177 172 170 168 167 35 34 25 23 0 103 1 103 12 8 22 
CALL[ ]	/* CallFunction */";
};
width = 457;
}
);
note = Dtail;
unicode = 393;
},
{
glyphname = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(372,1,o),
(374,2,q),
(382,10,o),
(377,36,o),
(367,36,qs),
(341,36,ls),
(338,36,o),
(304,34,o),
(257,33,o),
(209,32,o),
(175,33,o),
(173,34,qs),
(166,38,o),
(154,36,o),
(148,34,qs),
(145,33,o),
(138,35,o),
(136,35,qs),
(123,37,o),
(98,43,o),
(86,34,q),
(82,32,o),
(74,37,o),
(74,41,qs),
(74,298,ls),
(74,302,o),
(73,311,o),
(75,314,qs),
(83,325,o),
(83,339,qs),
(83,523,ls),
(83,531,o),
(79,545,o),
(74,551,q),
(74,565,o),
(81,575,o),
(81,582,q),
(77,588,o),
(73,614,o),
(74,645,qs),
(74,666,o),
(97,666,qs),
(336,660,ls),
(363,659,o),
(381,669,o),
(381,681,qs),
(381,691,o),
(371,691,qs),
(343,692,o),
(322,691,o),
(318,694,qs),
(313,697,o),
(214,698,o),
(101,697,q),
(95,692,o),
(87,697,q),
(83,701,o),
(76,699,qs),
(63,694,o),
(35,679,o),
(43,667,q),
(47,665,o),
(47,661,qs),
(44,617,o),
(42,571,o),
(45,550,o),
(48,544,q),
(48,527,o),
(49,469,o),
(48,452,qs),
(48,448,o),
(42,440,o),
(43,438,qs),
(47,433,o),
(43,424,q),
(37,415,o),
(43,405,qs),
(45,401,o),
(48,394,o),
(48,390,qs),
(48,384,o),
(48,346,o),
(47,300,o),
(46,266,o),
(45,264,qs),
(40,252,o),
(40,244,qs),
(40,219,o),
(40,141,o),
(41,62,o),
(40,37,qs),
(39,30,o),
(50,1,o),
(59,1,qs),
(66,1,o),
(93,0,o),
(118,0,o),
(120,-2,qs),
(125,-6,o),
(136,0,o),
(141,0,qs),
(152,0,l),
(308,3,ls),
(315,3,o),
(342,-1,o),
(353,-3,qs),
(356,-4,o)
);
},
{
closed = 1;
nodes = (
(151,260,o),
(187,291,o),
(225,324,o),
(239,336,qs),
(246,343,o),
(236,350,qs),
(228,357,o),
(219,369,o),
(214,374,qs),
(203,386,ls),
(199,391,o),
(189,400,o),
(184,407,qs),
(182,409,o),
(161,434,o),
(156,440,q),
(150,445,o),
(128,467,o),
(120,469,q),
(114,464,o),
(116,452,o),
(116,447,q),
(120,441,o),
(118,431,qs),
(117,421,ls),
(114,392,o),
(119,334,o),
(116,305,qs),
(115,299,o),
(119,288,o),
(118,282,qs),
(117,278,o),
(114,268,o),
(113,264,qs),
(113,260,o),
(113,254,o),
(114,250,qs),
(114,248,o),
(120,240,o),
(124,240,qs),
(126,240,o)
);
},
{
closed = 1;
nodes = (
(142,346,o),
(142,386,o),
(146,408,o),
(152,401,qs),
(195,353,l),
(200,349,o),
(200,345,o),
(196,339,qs),
(195,337,o),
(192,333,o),
(192,331,q),
(188,319,o),
(171,314,q),
(169,314,o),
(161,307,o),
(149,293,qs),
(147,291,o),
(143,292,q),
(144,304,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
148 82 72 69 43 39 33 21 19 9 5 4 1 76 0 3 3 39 77 0 4 4 2 97 0 2 2 39 77 0 5 5 0 97 1 1 0 0 38 0 78 102 94 65 62 59 56 54 52 53 50 6 8 24 
CALL[ ]	/* CallFunction */";
};
width = 381;
}
);
note = E;
unicode = 69;
},
{
glyphname = Eacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (165,143);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
143 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 381;
}
);
note = Eacute;
unicode = 201;
},
{
glyphname = Ecaron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(372,1,o),
(374,2,q),
(382,10,o),
(377,36,o),
(367,36,qs),
(341,36,ls),
(338,36,o),
(304,34,o),
(257,33,o),
(209,32,o),
(175,33,o),
(173,34,qs),
(166,38,o),
(154,36,o),
(148,34,qs),
(145,33,o),
(138,35,o),
(136,35,qs),
(123,37,o),
(98,43,o),
(86,34,q),
(82,32,o),
(74,37,o),
(74,41,qs),
(74,298,ls),
(74,302,o),
(73,311,o),
(75,314,qs),
(83,325,o),
(83,339,qs),
(83,523,ls),
(83,531,o),
(79,545,o),
(74,551,q),
(74,565,o),
(81,575,o),
(81,582,q),
(77,588,o),
(73,614,o),
(74,645,qs),
(74,666,o),
(97,666,qs),
(336,660,ls),
(363,659,o),
(381,669,o),
(381,681,qs),
(381,691,o),
(371,691,qs),
(343,692,o),
(322,691,o),
(318,694,qs),
(313,697,o),
(214,698,o),
(101,697,q),
(95,692,o),
(87,697,q),
(83,701,o),
(76,699,qs),
(63,694,o),
(35,679,o),
(43,667,q),
(47,665,o),
(47,661,qs),
(44,617,o),
(42,571,o),
(45,550,o),
(48,544,q),
(48,527,o),
(49,469,o),
(48,452,qs),
(48,448,o),
(42,440,o),
(43,438,qs),
(47,433,o),
(43,424,q),
(37,415,o),
(43,405,qs),
(45,401,o),
(48,394,o),
(48,390,qs),
(48,384,o),
(48,346,o),
(47,300,o),
(46,266,o),
(45,264,qs),
(40,252,o),
(40,244,qs),
(40,219,o),
(40,141,o),
(41,62,o),
(40,37,qs),
(39,30,o),
(50,1,o),
(59,1,qs),
(66,1,o),
(93,0,o),
(118,0,o),
(120,-2,qs),
(125,-6,o),
(136,0,o),
(141,0,qs),
(152,0,l),
(308,3,ls),
(315,3,o),
(342,-1,o),
(353,-3,qs),
(356,-4,o)
);
},
{
closed = 1;
nodes = (
(151,260,o),
(187,291,o),
(225,324,o),
(239,336,qs),
(246,343,o),
(236,350,qs),
(228,357,o),
(219,369,o),
(214,374,qs),
(203,386,ls),
(199,391,o),
(189,400,o),
(184,407,qs),
(182,409,o),
(161,434,o),
(156,440,q),
(150,445,o),
(128,467,o),
(120,469,q),
(114,464,o),
(116,452,o),
(116,447,q),
(120,441,o),
(118,431,qs),
(117,421,ls),
(114,392,o),
(119,334,o),
(116,305,qs),
(115,299,o),
(119,288,o),
(118,282,qs),
(117,278,o),
(114,268,o),
(113,264,qs),
(113,260,o),
(113,254,o),
(114,250,qs),
(114,248,o),
(120,240,o),
(124,240,qs),
(126,240,o)
);
},
{
closed = 1;
nodes = (
(142,346,o),
(142,386,o),
(146,408,o),
(152,401,qs),
(195,353,l),
(200,349,o),
(200,345,o),
(196,339,qs),
(195,337,o),
(192,333,o),
(192,331,q),
(188,319,o),
(171,314,q),
(169,314,o),
(161,307,o),
(149,293,qs),
(147,291,o),
(143,292,q),
(144,304,o)
);
},
{
closed = 1;
nodes = (
(286,836,o),
(283,832,qs),
(281,830,o),
(268,813,o),
(266,811,qs),
(264,808,o),
(257,797,o),
(255,796,qs),
(249,793,o),
(245,793,o),
(240,795,q),
(236,800,o),
(214,820,o),
(187,843,o),
(164,859,o),
(159,859,q),
(151,861,o),
(139,859,o),
(143,850,q),
(149,844,o),
(161,831,o),
(165,824,q),
(170,821,o),
(182,806,o),
(188,803,q),
(196,796,o),
(203,787,o),
(210,781,qs),
(218,774,o),
(234,760,o),
(238,749,qs),
(240,745,o),
(248,744,o),
(250,748,q),
(261,760,o),
(292,794,o),
(322,829,o),
(342,852,o),
(341,853,qs),
(339,855,o),
(333,860,o),
(331,860,q),
(326,862,o),
(319,860,q),
(305,853,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
148 82 72 69 43 39 33 21 19 9 5 4 1 76 0 3 3 39 77 0 4 4 2 97 0 2 2 39 77 0 5 5 0 97 1 1 0 0 38 0 78 102 94 65 62 59 56 54 52 53 50 6 8 24 
CALL[ ]	/* CallFunction */";
};
width = 381;
}
);
note = Ecaron;
unicode = 282;
},
{
glyphname = uni0228;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (155,-6);
ref = uni0327;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-6 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 381;
}
);
note = uni0228;
unicode = 552;
},
{
glyphname = uni1E1C;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (155,-6);
ref = uni0327;
},
{
pos = (103,121);
ref = uni0306;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-6 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
121 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 381;
}
);
note = uni1E1C;
unicode = 7708;
},
{
glyphname = Ecircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (106,131);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
131 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 381;
}
);
note = Ecircumflex;
unicode = 202;
},
{
glyphname = uni1EBE;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (100,113);
ref = uni0302;
},
{
pos = (146,258);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
113 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
258 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 381;
}
);
note = uni1EBE;
unicode = 7870;
},
{
glyphname = uni1E18;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (72,-782);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-782 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 381;
}
);
note = uni1E18;
unicode = 7704;
},
{
glyphname = uni1EC6;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (134,-114);
ref = period;
},
{
pos = (106,131);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
131 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 381;
}
);
note = uni1EC6;
unicode = 7878;
},
{
glyphname = uni1EC0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(372,1,o),
(374,2,q),
(382,10,o),
(377,36,o),
(367,36,qs),
(341,36,ls),
(338,36,o),
(304,34,o),
(257,33,o),
(209,32,o),
(175,33,o),
(173,34,qs),
(166,38,o),
(154,36,o),
(148,34,qs),
(145,33,o),
(138,35,o),
(136,35,qs),
(123,37,o),
(98,43,o),
(86,34,q),
(82,32,o),
(74,37,o),
(74,41,qs),
(74,298,ls),
(74,302,o),
(73,311,o),
(75,314,qs),
(83,325,o),
(83,339,qs),
(83,523,ls),
(83,531,o),
(79,545,o),
(74,551,q),
(74,565,o),
(81,575,o),
(81,582,q),
(77,588,o),
(73,614,o),
(74,645,qs),
(74,666,o),
(97,666,qs),
(336,660,ls),
(363,659,o),
(381,669,o),
(381,681,qs),
(381,691,o),
(371,691,qs),
(343,692,o),
(322,691,o),
(318,694,qs),
(313,697,o),
(214,698,o),
(101,697,q),
(95,692,o),
(87,697,q),
(83,701,o),
(76,699,qs),
(63,694,o),
(35,679,o),
(43,667,q),
(47,665,o),
(47,661,qs),
(44,617,o),
(42,571,o),
(45,550,o),
(48,544,q),
(48,527,o),
(49,469,o),
(48,452,qs),
(48,448,o),
(42,440,o),
(43,438,qs),
(47,433,o),
(43,424,q),
(37,415,o),
(43,405,qs),
(45,401,o),
(48,394,o),
(48,390,qs),
(48,384,o),
(48,346,o),
(47,300,o),
(46,266,o),
(45,264,qs),
(40,252,o),
(40,244,qs),
(40,219,o),
(40,141,o),
(41,62,o),
(40,37,qs),
(39,30,o),
(50,1,o),
(59,1,qs),
(66,1,o),
(93,0,o),
(118,0,o),
(120,-2,qs),
(125,-6,o),
(136,0,o),
(141,0,qs),
(152,0,l),
(308,3,ls),
(315,3,o),
(342,-1,o),
(353,-3,qs),
(356,-4,o)
);
},
{
closed = 1;
nodes = (
(151,260,o),
(187,291,o),
(225,324,o),
(239,336,qs),
(246,343,o),
(236,350,qs),
(228,357,o),
(219,369,o),
(214,374,qs),
(203,386,ls),
(199,391,o),
(189,400,o),
(184,407,qs),
(182,409,o),
(161,434,o),
(156,440,q),
(150,445,o),
(128,467,o),
(120,469,q),
(114,464,o),
(116,452,o),
(116,447,q),
(120,441,o),
(118,431,qs),
(117,421,ls),
(114,392,o),
(119,334,o),
(116,305,qs),
(115,299,o),
(119,288,o),
(118,282,qs),
(117,278,o),
(114,268,o),
(113,264,qs),
(113,260,o),
(113,254,o),
(114,250,qs),
(114,248,o),
(120,240,o),
(124,240,qs),
(126,240,o)
);
},
{
closed = 1;
nodes = (
(142,346,o),
(142,386,o),
(146,408,o),
(152,401,qs),
(195,353,l),
(200,349,o),
(200,345,o),
(196,339,qs),
(195,337,o),
(192,333,o),
(192,331,q),
(188,319,o),
(171,314,q),
(169,314,o),
(161,307,o),
(149,293,qs),
(147,291,o),
(143,292,q),
(144,304,o)
);
},
{
closed = 1;
nodes = (
(325,738,q),
(327,738,o),
(333,744,o),
(335,745,qs),
(336,746,o),
(316,769,o),
(286,804,o),
(255,838,o),
(244,850,q),
(242,854,o),
(234,853,o),
(232,849,qs),
(228,838,o),
(212,824,o),
(204,817,qs),
(197,811,o),
(190,802,o),
(182,795,q),
(176,792,o),
(164,777,o),
(159,774,q),
(155,767,o),
(143,754,o),
(137,748,q),
(133,739,o),
(145,738,o),
(153,739,qs),
(158,739,o),
(181,755,o),
(208,778,o),
(230,799,o),
(234,803,q),
(239,805,o),
(243,805,o),
(249,802,qs),
(251,801,o),
(258,790,o),
(260,787,q),
(262,786,o),
(275,768,o),
(277,766,qs),
(280,762,o),
(299,746,o),
(313,738,q),
(320,736,o)
);
},
{
closed = 1;
nodes = (
(266,910,o),
(255,920,qs),
(234,938,o),
(222,954,q),
(214,961,o),
(200,974,o),
(193,982,qs),
(189,987,o),
(180,997,o),
(173,998,q),
(171,1000,o),
(165,995,o),
(163,996,qs),
(160,998,o),
(149,987,o),
(150,984,qs),
(155,972,o),
(165,949,o),
(181,944,qs),
(187,942,o),
(198,934,o),
(202,929,qs),
(210,920,o),
(231,898,o),
(247,884,qs),
(265,871,o),
(293,876,o),
(297,880,q),
(287,890,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
148 82 72 69 43 39 33 21 19 9 5 4 1 76 224 1 2 74 0 3 3 39 77 0 4 4 2 97 0 2 2 39 77 0 5 5 0 97 1 1 0 0 38 0 78 102 94 65 62 59 56 54 52 53 50 6 8 24 
CALL[ ]	/* CallFunction */";
};
width = 381;
}
);
note = uni1EC0;
unicode = 7872;
},
{
glyphname = uni1EC2;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (108,116);
ref = uni0302;
},
{
pos = (143,276);
ref = hookabovecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
116 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
276 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 381;
}
);
note = uni1EC2;
unicode = 7874;
},
{
glyphname = uni1EC4;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (103,131);
ref = uni0302;
},
{
pos = (119,228);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
131 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
228 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 381;
}
);
note = uni1EC4;
unicode = 7876;
},
{
glyphname = uni0204;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (89,121);
ref = uni030F;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 2 
PUSHB[ ]	/* 1 value pushed */
121 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 381;
}
);
note = uni0204;
unicode = 516;
},
{
glyphname = Edieresis;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (83,130);
ref = uni0308;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 2 
PUSHB[ ]	/* 1 value pushed */
130 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 381;
}
);
note = Edieresis;
unicode = 203;
},
{
glyphname = Edotaccent;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (169,116);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
116 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 381;
}
);
note = Edotaccent;
unicode = 278;
},
{
glyphname = uni1EB8;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (134,-114);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 381;
}
);
note = uni1EB8;
unicode = 7864;
},
{
glyphname = Egrave;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(372,1,o),
(374,2,q),
(382,10,o),
(377,36,o),
(367,36,qs),
(341,36,ls),
(338,36,o),
(304,34,o),
(257,33,o),
(209,32,o),
(175,33,o),
(173,34,qs),
(166,38,o),
(154,36,o),
(148,34,qs),
(145,33,o),
(138,35,o),
(136,35,qs),
(123,37,o),
(98,43,o),
(86,34,q),
(82,32,o),
(74,37,o),
(74,41,qs),
(74,298,ls),
(74,302,o),
(73,311,o),
(75,314,qs),
(83,325,o),
(83,339,qs),
(83,523,ls),
(83,531,o),
(79,545,o),
(74,551,q),
(74,565,o),
(81,575,o),
(81,582,q),
(77,588,o),
(73,614,o),
(74,645,qs),
(74,666,o),
(97,666,qs),
(336,660,ls),
(363,659,o),
(381,669,o),
(381,681,qs),
(381,691,o),
(371,691,qs),
(343,692,o),
(322,691,o),
(318,694,qs),
(313,697,o),
(214,698,o),
(101,697,q),
(95,692,o),
(87,697,q),
(83,701,o),
(76,699,qs),
(63,694,o),
(35,679,o),
(43,667,q),
(47,665,o),
(47,661,qs),
(44,617,o),
(42,571,o),
(45,550,o),
(48,544,q),
(48,527,o),
(49,469,o),
(48,452,qs),
(48,448,o),
(42,440,o),
(43,438,qs),
(47,433,o),
(43,424,q),
(37,415,o),
(43,405,qs),
(45,401,o),
(48,394,o),
(48,390,qs),
(48,384,o),
(48,346,o),
(47,300,o),
(46,266,o),
(45,264,qs),
(40,252,o),
(40,244,qs),
(40,219,o),
(40,141,o),
(41,62,o),
(40,37,qs),
(39,30,o),
(50,1,o),
(59,1,qs),
(66,1,o),
(93,0,o),
(118,0,o),
(120,-2,qs),
(125,-6,o),
(136,0,o),
(141,0,qs),
(152,0,l),
(308,3,ls),
(315,3,o),
(342,-1,o),
(353,-3,qs),
(356,-4,o)
);
},
{
closed = 1;
nodes = (
(151,260,o),
(187,291,o),
(225,324,o),
(239,336,qs),
(246,343,o),
(236,350,qs),
(228,357,o),
(219,369,o),
(214,374,qs),
(203,386,ls),
(199,391,o),
(189,400,o),
(184,407,qs),
(182,409,o),
(161,434,o),
(156,440,q),
(150,445,o),
(128,467,o),
(120,469,q),
(114,464,o),
(116,452,o),
(116,447,q),
(120,441,o),
(118,431,qs),
(117,421,ls),
(114,392,o),
(119,334,o),
(116,305,qs),
(115,299,o),
(119,288,o),
(118,282,qs),
(117,278,o),
(114,268,o),
(113,264,qs),
(113,260,o),
(113,254,o),
(114,250,qs),
(114,248,o),
(120,240,o),
(124,240,qs),
(126,240,o)
);
},
{
closed = 1;
nodes = (
(142,346,o),
(142,386,o),
(146,408,o),
(152,401,qs),
(195,353,l),
(200,349,o),
(200,345,o),
(196,339,qs),
(195,337,o),
(192,333,o),
(192,331,q),
(188,319,o),
(171,314,q),
(169,314,o),
(161,307,o),
(149,293,qs),
(147,291,o),
(143,292,q),
(144,304,o)
);
},
{
closed = 1;
nodes = (
(265,792,o),
(254,802,qs),
(233,820,o),
(221,836,q),
(213,843,o),
(199,856,o),
(192,864,qs),
(188,869,o),
(179,879,o),
(172,880,q),
(170,882,o),
(164,877,o),
(162,878,qs),
(159,880,o),
(148,869,o),
(149,866,qs),
(154,854,o),
(164,831,o),
(180,826,qs),
(186,824,o),
(197,816,o),
(201,811,qs),
(209,802,o),
(230,780,o),
(246,766,qs),
(264,753,o),
(292,758,o),
(296,762,q),
(286,772,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
148 82 72 69 43 39 33 21 19 9 5 4 1 76 179 1 2 74 0 3 3 39 77 0 4 4 2 97 0 2 2 39 77 0 5 5 0 97 1 1 0 0 38 0 78 102 94 65 62 59 56 54 52 53 50 6 8 24 
CALL[ ]	/* CallFunction */";
};
width = 381;
}
);
note = Egrave;
unicode = 200;
},
{
glyphname = uni1EBA;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (134,158);
ref = hookabovecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
158 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 381;
}
);
note = uni1EBA;
unicode = 7866;
},
{
glyphname = uni0206;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (138,118);
ref = uni0311;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
118 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 381;
}
);
note = uni0206;
unicode = 518;
},
{
glyphname = Emacron;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (70,550);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
550 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 381;
}
);
note = Emacron;
unicode = 274;
},
{
glyphname = uni1E16;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (70,550);
ref = hyphen;
},
{
pos = (145,262);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
550 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
262 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 381;
}
);
note = uni1E16;
unicode = 7702;
},
{
glyphname = uni1E14;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(372,1,o),
(374,2,q),
(382,10,o),
(377,36,o),
(367,36,qs),
(341,36,ls),
(338,36,o),
(304,34,o),
(257,33,o),
(209,32,o),
(175,33,o),
(173,34,qs),
(166,38,o),
(154,36,o),
(148,34,qs),
(145,33,o),
(138,35,o),
(136,35,qs),
(123,37,o),
(98,43,o),
(86,34,q),
(82,32,o),
(74,37,o),
(74,41,qs),
(74,298,ls),
(74,302,o),
(73,311,o),
(75,314,qs),
(83,325,o),
(83,339,qs),
(83,523,ls),
(83,531,o),
(79,545,o),
(74,551,q),
(74,565,o),
(81,575,o),
(81,582,q),
(77,588,o),
(73,614,o),
(74,645,qs),
(74,666,o),
(97,666,qs),
(336,660,ls),
(363,659,o),
(381,669,o),
(381,681,qs),
(381,691,o),
(371,691,qs),
(343,692,o),
(322,691,o),
(318,694,qs),
(313,697,o),
(214,698,o),
(101,697,q),
(95,692,o),
(87,697,q),
(83,701,o),
(76,699,qs),
(63,694,o),
(35,679,o),
(43,667,q),
(47,665,o),
(47,661,qs),
(44,617,o),
(42,571,o),
(45,550,o),
(48,544,q),
(48,527,o),
(49,469,o),
(48,452,qs),
(48,448,o),
(42,440,o),
(43,438,qs),
(47,433,o),
(43,424,q),
(37,415,o),
(43,405,qs),
(45,401,o),
(48,394,o),
(48,390,qs),
(48,384,o),
(48,346,o),
(47,300,o),
(46,266,o),
(45,264,qs),
(40,252,o),
(40,244,qs),
(40,219,o),
(40,141,o),
(41,62,o),
(40,37,qs),
(39,30,o),
(50,1,o),
(59,1,qs),
(66,1,o),
(93,0,o),
(118,0,o),
(120,-2,qs),
(125,-6,o),
(136,0,o),
(141,0,qs),
(152,0,l),
(308,3,ls),
(315,3,o),
(342,-1,o),
(353,-3,qs),
(356,-4,o)
);
},
{
closed = 1;
nodes = (
(151,260,o),
(187,291,o),
(225,324,o),
(239,336,qs),
(246,343,o),
(236,350,qs),
(228,357,o),
(219,369,o),
(214,374,qs),
(203,386,ls),
(199,391,o),
(189,400,o),
(184,407,qs),
(182,409,o),
(161,434,o),
(156,440,q),
(150,445,o),
(128,467,o),
(120,469,q),
(114,464,o),
(116,452,o),
(116,447,q),
(120,441,o),
(118,431,qs),
(117,421,ls),
(114,392,o),
(119,334,o),
(116,305,qs),
(115,299,o),
(119,288,o),
(118,282,qs),
(117,278,o),
(114,268,o),
(113,264,qs),
(113,260,o),
(113,254,o),
(114,250,qs),
(114,248,o),
(120,240,o),
(124,240,qs),
(126,240,o)
);
},
{
closed = 1;
nodes = (
(142,346,o),
(142,386,o),
(146,408,o),
(152,401,qs),
(195,353,l),
(200,349,o),
(200,345,o),
(196,339,qs),
(195,337,o),
(192,333,o),
(192,331,q),
(188,319,o),
(171,314,q),
(169,314,o),
(161,307,o),
(149,293,qs),
(147,291,o),
(143,292,q),
(144,304,o)
);
},
{
closed = 1;
nodes = (
(325,792,o),
(336,795,qs),
(339,796,o),
(339,809,o),
(336,809,qs),
(332,810,o),
(330,816,o),
(327,817,qs),
(324,818,o),
(318,819,o),
(313,819,qs),
(306,819,o),
(290,818,o),
(282,818,qs),
(252,818,ls),
(239,817,o),
(235,816,o),
(230,817,o),
(217,818,qs),
(150,818,l),
(150,811,o),
(158,799,o),
(175,794,q),
(176,793,o),
(191,792,o),
(194,792,qs),
(218,791,o),
(240,791,o),
(247,792,qs),
(255,794,o),
(270,791,o),
(277,788,qs),
(286,785,o),
(294,785,qs),
(305,785,o)
);
},
{
closed = 1;
nodes = (
(265,911,o),
(254,921,qs),
(233,939,o),
(221,955,q),
(213,962,o),
(199,975,o),
(192,983,qs),
(188,988,o),
(179,998,o),
(172,999,q),
(170,1001,o),
(164,996,o),
(162,997,qs),
(159,999,o),
(148,988,o),
(149,985,qs),
(154,973,o),
(164,950,o),
(180,945,qs),
(186,943,o),
(197,935,o),
(201,930,qs),
(209,921,o),
(230,899,o),
(246,885,qs),
(264,872,o),
(292,877,o),
(296,881,q),
(286,891,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
148 82 72 69 43 39 33 21 19 9 5 4 1 76 214 1 7 74 0 6 9 7 6 89 8 1 7 10 1 9 2 7 9 105 0 3 3 39 77 0 4 4 2 97 0 2 2 39 77 0 5 5 0 97 1 1 0 0 38 0 78 167 167 167 201 167 201 191 186 185 183 177 172 102 94 65 62 59 56 54 52 53 50 11 8 24 
CALL[ ]	/* CallFunction */";
};
width = 381;
}
);
note = uni1E14;
unicode = 7700;
},
{
glyphname = Eogonek;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (297,41);
ref = uni0328;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
41 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 381;
}
);
note = Eogonek;
unicode = 280;
},
{
glyphname = uni0190;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(409,36,o),
(399,36,qs),
(373,36,ls),
(370,36,o),
(330,35,o),
(274,33,o),
(217,32,o),
(177,33,o),
(175,34,qs),
(168,38,o),
(156,36,o),
(150,34,qs),
(142,32,o),
(138,35,qs),
(130,40,o),
(113,34,o),
(97,25,o),
(88,26,qs),
(84,26,o),
(82,27,q),
(111,93,o),
(145,173,o),
(161,214,o),
(165,230,o),
(163,233,q),
(162,243,o),
(173,251,o),
(176,260,qs),
(188,299,o),
(204,330,o),
(216,342,o),
(222,354,q),
(229,352,o),
(230,354,q),
(235,359,o),
(244,356,o),
(249,357,qs),
(267,360,o),
(291,352,o),
(301,353,qs),
(318,356,o),
(344,365,o),
(344,372,qs),
(344,385,o),
(306,381,o),
(271,385,q),
(258,385,o),
(229,386,o),
(221,389,q),
(215,399,o),
(203,410,o),
(188,438,o),
(176,472,qs),
(173,480,o),
(161,488,o),
(162,497,q),
(164,501,o),
(139,546,o),
(98,620,o),
(77,664,q),
(94,663,o),
(123,665,o),
(136,665,qs),
(368,666,ls),
(395,666,o),
(413,675,o),
(413,687,qs),
(413,697,o),
(403,697,qs),
(375,698,o),
(354,697,o),
(350,700,qs),
(345,703,o),
(216,698,o),
(103,697,q),
(97,692,o),
(89,697,q),
(85,701,o),
(78,699,qs),
(67,695,o),
(39,686,o),
(40,677,q),
(39,667,o),
(61,629,o),
(86,589,o),
(88,575,q),
(91,566,o),
(107,529,o),
(124,494,o),
(126,487,q),
(131,484,o),
(149,457,o),
(168,423,o),
(183,393,o),
(185,387,qs),
(186,380,o),
(191,372,o),
(191,367,qs),
(191,364,o),
(175,329,o),
(153,284,o),
(133,248,o),
(127,244,q),
(125,237,o),
(109,198,o),
(93,157,o),
(90,147,qs),
(87,132,o),
(66,78,o),
(41,21,q),
(42,21,l),
(41,19,o),
(41,16,qs),
(41,-1,o),
(61,-1,qs),
(68,-1,o),
(91,1,o),
(113,3,o),
(115,1,qs),
(120,-3,o),
(138,0,o),
(143,0,qs),
(154,0,l),
(340,3,ls),
(345,3,o),
(376,2,o),
(405,1,o),
(406,2,qs),
(414,10,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
46 1 5 3 91 85 2 7 6 108 15 2 0 7 3 76 116 1 7 1 75 0 6 5 7 5 6 7 128 0 5 5 3 97 4 1 3 3 37 77 0 7 7 0 97 2 1 2 0 0 38 0 78 127 119 82 80 68 63 60 57 55 53 33 35 96 8 8 25 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = uni0190;
unicode = 400;
},
{
glyphname = uni018E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(66,3,o),
(73,3,qs),
(229,0,l),
(240,0,ls),
(245,0,o),
(256,-6,o),
(261,-2,qs),
(264,0,o),
(288,0,o),
(316,1,o),
(322,1,qs),
(331,1,o),
(342,30,o),
(341,37,q),
(341,62,o),
(341,141,o),
(341,219,o),
(341,244,qs),
(341,252,o),
(336,264,qs),
(335,266,o),
(334,300,o),
(333,346,o),
(333,384,o),
(333,390,qs),
(333,394,o),
(337,401,o),
(338,405,q),
(344,415,o),
(338,424,q),
(334,433,o),
(338,438,qs),
(339,440,o),
(333,448,o),
(333,452,qs),
(332,469,o),
(333,527,o),
(333,544,q),
(337,550,o),
(339,571,o),
(338,617,o),
(334,661,qs),
(334,665,o),
(338,667,q),
(346,679,o),
(319,694,o),
(305,699,qs),
(298,701,o),
(294,697,q),
(286,692,o),
(280,697,q),
(167,698,o),
(68,697,o),
(63,694,qs),
(59,691,o),
(38,692,o),
(10,691,qs),
(0,691,o),
(0,681,qs),
(0,669,o),
(18,659,o),
(45,660,qs),
(284,666,ls),
(307,666,o),
(307,645,qs),
(308,614,o),
(305,588,o),
(300,582,q),
(300,575,o),
(307,565,o),
(307,551,q),
(302,545,o),
(298,531,o),
(298,523,qs),
(298,339,ls),
(298,325,o),
(306,314,qs),
(308,311,o),
(307,302,o),
(307,298,qs),
(307,41,ls),
(307,37,o),
(299,32,o),
(295,34,q),
(283,43,o),
(258,37,o),
(245,35,qs),
(243,35,o),
(236,33,o),
(233,34,qs),
(227,36,o),
(216,38,o),
(208,34,qs),
(206,33,o),
(172,32,o),
(124,33,o),
(77,34,o),
(43,36,o),
(40,36,qs),
(14,36,ls),
(4,36,o),
(0,10,o),
(7,2,q),
(9,1,o),
(25,-4,o),
(28,-3,qs),
(39,-1,o)
);
},
{
closed = 1;
nodes = (
(267,248,o),
(267,250,q),
(269,254,o),
(268,260,o),
(268,264,qs),
(267,268,o),
(264,278,o),
(263,282,qs),
(262,288,o),
(266,299,o),
(265,305,qs),
(262,334,o),
(267,392,o),
(264,421,qs),
(263,431,ls),
(261,441,o),
(265,447,q),
(265,452,o),
(267,464,o),
(261,469,q),
(254,467,o),
(231,445,o),
(225,440,q),
(221,434,o),
(199,409,o),
(197,407,qs),
(192,400,o),
(183,391,o),
(178,386,qs),
(167,374,ls),
(162,369,o),
(153,357,o),
(145,350,qs),
(135,343,o),
(142,336,qs),
(156,324,o),
(194,291,o),
(230,260,o),
(256,240,o),
(257,240,qs),
(262,240,o)
);
},
{
closed = 1;
nodes = (
(232,293,qs),
(220,307,o),
(212,314,o),
(210,314,q),
(193,319,o),
(189,331,q),
(189,333,o),
(186,337,o),
(185,339,qs),
(181,345,o),
(182,349,o),
(186,353,qs),
(229,401,ls),
(235,408,o),
(239,386,o),
(239,346,o),
(237,304,o),
(238,292,q),
(234,291,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
92 71 68 64 35 32 26 7 0 1 1 76 22 1 0 1 75 59 1 3 74 0 1 4 73 0 2 2 39 77 0 1 1 3 97 0 3 3 39 77 0 0 0 4 97 5 1 4 4 38 4 78 104 101 98 94 55 53 51 48 45 42 117 6 8 23 
CALL[ ]	/* CallFunction */";
};
width = 381;
}
);
note = uni018E;
unicode = 398;
},
{
glyphname = uni01A9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(376,2,o),
(405,1,o),
(406,2,qs),
(414,10,o),
(409,36,o),
(399,36,qs),
(373,36,ls),
(370,36,o),
(330,35,o),
(274,33,o),
(217,32,o),
(177,33,o),
(175,34,qs),
(168,38,o),
(156,36,o),
(150,34,qs),
(142,32,o),
(138,35,qs),
(130,40,o),
(113,34,o),
(97,25,o),
(88,26,qs),
(84,26,o),
(82,27,q),
(111,93,o),
(145,173,o),
(161,214,o),
(165,230,o),
(163,233,q),
(162,243,o),
(173,251,o),
(176,260,qs),
(188,299,o),
(204,330,o),
(216,342,o),
(222,354,q),
(230,364,o),
(229,386,o),
(221,389,q),
(215,399,o),
(203,410,o),
(188,438,o),
(176,472,qs),
(173,480,o),
(161,488,o),
(162,497,q),
(164,501,o),
(139,546,o),
(98,620,o),
(77,664,q),
(94,663,o),
(123,665,o),
(136,665,qs),
(368,666,ls),
(395,666,o),
(413,675,o),
(413,687,qs),
(413,697,o),
(403,697,qs),
(375,698,o),
(354,697,o),
(350,700,qs),
(345,703,o),
(216,698,o),
(103,697,q),
(97,692,o),
(89,697,q),
(85,701,o),
(78,699,qs),
(67,695,o),
(39,686,o),
(40,677,q),
(39,667,o),
(61,629,o),
(86,589,o),
(88,575,q),
(91,566,o),
(107,529,o),
(124,494,o),
(126,487,q),
(131,484,o),
(149,457,o),
(168,423,o),
(183,393,o),
(185,387,qs),
(186,380,o),
(191,372,o),
(191,367,qs),
(191,364,o),
(175,329,o),
(153,284,o),
(133,248,o),
(127,244,q),
(125,237,o),
(109,198,o),
(93,157,o),
(90,147,qs),
(87,132,o),
(66,78,o),
(41,21,q),
(42,21,l),
(41,19,o),
(41,16,qs),
(41,-1,o),
(61,-1,qs),
(68,-1,o),
(91,1,o),
(113,3,o),
(115,1,qs),
(120,-3,o),
(138,0,o),
(143,0,qs),
(154,0,l),
(340,3,ls),
(345,3,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
42 1 5 3 90 11 2 0 6 2 76 98 1 6 1 75 0 5 5 3 97 4 1 3 3 37 77 0 6 6 0 97 2 1 7 3 0 0 38 0 78 2 0 109 101 64 59 56 53 51 49 10 8 7 5 0 114 2 111 8 8 22 
CALL[ ]	/* CallFunction */";
};
width = 413;
}
);
note = uni01A9;
unicode = 425;
},
{
glyphname = uni0246;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(92,-25,o),
(99,-13,o),
(101,-7,q),
(103,-4,o),
(104,0,q),
(118,-1,o),
(120,-2,qs),
(125,-6,o),
(136,0,o),
(141,0,qs),
(152,0,l),
(308,3,ls),
(315,3,o),
(342,-1,o),
(353,-3,qs),
(356,-4,o),
(372,1,o),
(374,2,q),
(382,10,o),
(377,36,o),
(367,36,qs),
(341,36,ls),
(338,36,o),
(304,34,o),
(257,33,o),
(209,32,o),
(175,33,o),
(173,34,qs),
(166,38,o),
(154,36,o),
(148,34,qs),
(145,33,o),
(138,35,o),
(136,35,qs),
(132,35,o),
(125,37,o),
(121,38,q),
(132,63,o),
(153,110,o),
(167,142,o),
(168,144,qs),
(171,149,o),
(179,157,o),
(185,158,q),
(186,159,o),
(188,168,o),
(187,170,qs),
(186,174,o),
(200,210,o),
(220,253,o),
(237,287,o),
(240,289,qs),
(248,296,o),
(256,307,o),
(254,317,q),
(261,319,o),
(267,328,o),
(271,335,qs),
(274,343,o),
(300,399,o),
(336,477,o),
(375,561,o),
(410,634,o),
(432,681,o),
(432,682,q),
(436,692,o),
(434,700,q),
(435,711,o),
(428,719,o),
(412,719,q),
(396,688,o),
(391,672,o),
(388,665,qs),
(271,418,l),
(270,414,o),
(260,390,o),
(254,391,q),
(253,387,o),
(243,360,o),
(233,333,o),
(230,329,q),
(191,258,o),
(148,173,o),
(127,130,o),
(119,115,o),
(116,113,qs),
(112,111,o),
(105,98,o),
(106,94,qs),
(107,86,o),
(92,44,o),
(83,33,q),
(74,32,o),
(74,41,qs),
(74,298,ls),
(74,302,o),
(73,311,o),
(75,314,qs),
(83,325,o),
(83,339,qs),
(83,523,ls),
(83,531,o),
(79,545,o),
(74,551,q),
(74,565,o),
(81,575,o),
(81,582,q),
(77,588,o),
(73,614,o),
(74,645,qs),
(74,666,o),
(97,666,qs),
(336,660,ls),
(363,659,o),
(381,669,o),
(381,681,qs),
(381,691,o),
(371,691,qs),
(343,692,o),
(322,691,o),
(318,694,qs),
(313,697,o),
(214,698,o),
(101,697,q),
(95,692,o),
(87,697,q),
(83,701,o),
(76,699,qs),
(63,694,o),
(35,679,o),
(43,667,q),
(47,665,o),
(47,661,qs),
(44,617,o),
(42,571,o),
(45,550,o),
(48,544,q),
(48,527,o),
(49,469,o),
(48,452,qs),
(48,448,o),
(42,440,o),
(43,438,qs),
(47,433,o),
(43,424,q),
(37,415,o),
(43,405,qs),
(45,401,o),
(48,394,o),
(48,390,qs),
(48,384,o),
(48,346,o),
(47,300,o),
(46,266,o),
(45,264,qs),
(40,252,o),
(40,244,qs),
(40,219,o),
(40,141,o),
(41,62,o),
(40,37,qs),
(39,30,o),
(50,1,o),
(59,1,qs),
(62,1,o),
(67,1,q),
(64,-9,o),
(59,-28,o),
(57,-33,qs),
(52,-48,o),
(64,-55,o),
(80,-50,o),
(80,-50,q),
(95,-32,l)
);
},
{
closed = 1;
nodes = (
(155,312,o),
(197,348,o),
(211,360,qs),
(217,366,o),
(209,371,qs),
(202,376,o),
(197,386,o),
(192,390,qs),
(183,399,ls),
(179,404,o),
(173,411,o),
(168,416,q),
(167,418,o),
(150,437,o),
(146,441,qs),
(142,446,o),
(124,463,o),
(118,464,q),
(114,460,o),
(115,451,o),
(115,447,q),
(118,440,o),
(117,434,qs),
(116,427,ls),
(113,404,o),
(117,359,o),
(115,336,q),
(114,332,o),
(117,323,o),
(117,318,q),
(116,314,o),
(114,307,o),
(113,304,q),
(113,301,o),
(113,296,o),
(114,293,qs),
(114,292,o),
(118,285,o),
(121,285,qs),
(123,285,o)
);
},
{
closed = 1;
nodes = (
(141,382,o),
(142,406,o),
(147,400,qs),
(171,373,l),
(175,370,o),
(172,365,qs),
(171,364,o),
(169,363,o),
(169,361,q),
(166,354,o),
(157,351,q),
(156,351,o),
(152,348,o),
(145,340,q),
(145,338,o),
(142,339,q),
(143,349,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
106 1 1 4 214 136 69 66 40 36 30 18 16 9 5 3 2 76 173 168 2 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 4 4 37 77 0 2 2 39 77 0 3 3 1 97 0 1 1 39 77 0 5 5 0 97 6 1 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 4 1 4 133 0 2 2 39 77 0 3 3 1 97 0 1 1 39 77 0 5 5 0 97 6 1 0 0 38 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
163 160 153 145 104 103 62 59 56 53 51 49 55 7 8 23 
CALL[ ]	/* CallFunction */";
};
width = 435;
}
);
note = uni0246;
unicode = 582;
},
{
glyphname = uni1EBC;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (115,95);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
95 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 381;
}
);
note = uni1EBC;
unicode = 7868;
},
{
glyphname = uni1E1A;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (72,-785);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-785 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 381;
}
);
note = uni1E1A;
unicode = 7706;
},
{
glyphname = uni018F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(513,21,o),
(505,33,q),
(501,35,o),
(501,39,qs),
(505,83,o),
(506,129,o),
(504,150,o),
(500,156,q),
(500,173,o),
(499,231,o),
(500,248,qs),
(500,252,o),
(506,260,o),
(505,262,qs),
(501,267,o),
(505,276,q),
(511,285,o),
(505,295,q),
(504,299,o),
(500,306,o),
(500,310,qs),
(500,316,o),
(500,354,o),
(501,400,o),
(502,435,o),
(503,436,q),
(508,448,o),
(508,456,qs),
(508,481,o),
(508,556,o),
(508,630,o),
(508,655,q),
(509,663,o),
(498,691,o),
(489,691,qs),
(483,692,o),
(455,692,o),
(431,693,o),
(428,694,q),
(423,698,o),
(412,700,o),
(407,700,qs),
(396,700,l),
(200,697,ls),
(193,697,o),
(166,702,o),
(155,703,q),
(152,704,o),
(136,700,o),
(134,698,qs),
(127,691,o),
(131,664,o),
(141,664,qs),
(167,664,ls),
(170,664,o),
(212,665,o),
(271,667,o),
(331,668,o),
(373,667,o),
(375,666,qs),
(383,662,o),
(394,665,o),
(400,666,qs),
(408,668,o),
(412,665,qs),
(439,649,o),
(462,666,q),
(466,668,o),
(474,664,o),
(474,659,qs),
(474,402,ls),
(474,398,o),
(475,389,o),
(473,386,qs),
(465,375,o),
(465,362,q),
(437,362,o),
(433,364,q),
(431,366,o),
(378,368,o),
(292,369,o),
(186,368,o),
(130,368,q),
(124,363,o),
(116,368,q),
(111,373,o),
(105,369,q),
(92,365,o),
(65,350,o),
(73,338,q),
(77,336,o),
(77,332,qs),
(74,288,o),
(72,242,o),
(75,221,o),
(78,215,q),
(78,198,o),
(79,140,o),
(78,122,qs),
(78,119,o),
(72,111,o),
(73,109,qs),
(77,104,o),
(73,95,q),
(67,86,o),
(73,75,qs),
(74,73,o),
(76,45,o),
(77,17,o),
(77,14,q),
(78,14,l),
(80,9,o),
(87,9,qs),
(115,8,o),
(136,9,o),
(140,6,q),
(143,5,o),
(196,3,o),
(283,2,o),
(390,3,o),
(447,3,q),
(453,8,o),
(461,3,q),
(465,-1,o),
(472,1,qs),
(486,6,o)
);
},
{
closed = 1;
nodes = (
(112,40,l),
(112,194,ls),
(112,211,o),
(104,222,q),
(104,236,o),
(110,246,o),
(110,253,q),
(106,259,o),
(103,285,o),
(104,316,qs),
(104,336,o),
(126,336,qs),
(451,330,l),
(465,330,l),
(465,177,ls),
(465,170,o),
(469,155,o),
(474,149,q),
(474,136,o),
(467,126,o),
(467,118,q),
(472,112,o),
(475,87,o),
(474,55,qs),
(474,34,o),
(451,34,qs),
(122,40,l)
);
},
{
closed = 1;
nodes = (
(314,175,o),
(321,182,q),
(329,194,o),
(321,205,qs),
(315,213,o),
(302,221,o),
(292,219,q),
(273,219,o),
(252,202,o),
(252,190,qs),
(252,183,o),
(266,158,o),
(284,158,qs),
(295,158,o)
);
},
{
closed = 1;
nodes = (
(280,189,o),
(280,190,qs),
(280,197,o),
(290,197,q),
(293,198,o),
(297,194,q),
(299,190,o),
(297,188,q),
(294,181,o),
(287,181,qs),
(283,181,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
99 97 93 55 4 2 4 148 145 111 33 4 10 8 169 29 2 11 10 134 131 121 117 23 5 7 9 14 1 1 7 5 76 62 1 4 1 75 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
99 97 93 55 4 2 4 148 145 111 33 4 10 8 169 29 2 11 10 134 131 121 117 23 5 7 9 14 1 0 7 5 76 62 1 4 1 75 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
99 97 93 55 4 2 4 148 145 111 33 4 10 8 169 29 2 11 10 134 131 121 117 23 5 7 9 14 1 1 7 5 76 62 1 4 1 75 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 3 2 8 2 3 114 0 10 8 11 11 10 114 0 2 0 8 10 2 8 103 14 1 11 13 1 9 7 11 9 106 0 6 6 39 77 0 4 4 5 95 0 5 5 39 77 0 1 1 38 77 12 1 7 7 0 97 0 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 10 8 11 11 10 114 3 1 2 0 8 10 2 8 103 14 1 11 13 1 9 7 11 9 106 0 6 6 39 77 0 4 4 5 95 0 5 5 39 77 12 1 7 7 0 97 1 1 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 10 8 11 8 10 11 128 3 1 2 0 8 10 2 8 103 14 1 11 13 1 9 7 11 9 106 0 6 6 39 77 0 4 4 5 95 0 5 5 39 77 12 1 7 7 0 97 1 1 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 3 2 8 2 3 114 0 10 8 11 8 10 11 128 0 2 0 8 10 2 8 103 14 1 11 13 1 9 7 11 9 106 0 6 6 39 77 0 4 4 5 95 0 5 5 39 77 0 1 1 38 77 12 1 7 7 0 97 0 0 0 38 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
168 167 154 153 127 126 167 177 168 177 159 158 153 166 154 166 141 138 126 152 127 151 91 88 83 80 73 65 49 48 46 42 34 68 15 8 24 
CALL[ ]	/* CallFunction */";
};
width = 578;
}
);
note = uni018F;
unicode = 399;
},
{
glyphname = uni01B7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(291,0,o),
(351,1,o),
(369,1,o),
(371,1,qs),
(378,1,o),
(391,25,o),
(397,58,o),
(390,70,q),
(393,75,o),
(397,113,o),
(397,160,o),
(395,197,o),
(393,201,qs),
(386,212,o),
(395,224,o),
(395,233,qs),
(393,315,ls),
(393,326,o),
(387,340,o),
(373,344,qs),
(365,346,o),
(307,349,o),
(254,350,qs),
(241,350,o),
(189,344,o),
(174,348,qs),
(159,351,o),
(116,350,o),
(78,347,o),
(68,346,q),
(138,410,o),
(231,494,o),
(286,545,o),
(314,571,o),
(324,583,o),
(326,587,qs),
(329,593,o),
(356,620,o),
(388,647,o),
(395,652,qs),
(403,657,o),
(410,674,o),
(415,680,qs),
(418,684,o),
(410,697,o),
(405,698,q),
(403,699,o),
(377,695,o),
(313,694,o),
(254,699,qs),
(238,701,o),
(204,699,o),
(184,699,qs),
(175,699,o),
(150,694,o),
(146,699,qs),
(142,704,o),
(130,698,o),
(124,699,qs),
(102,703,o),
(55,699,o),
(29,699,qs),
(20,700,o),
(10,678,o),
(16,661,o),
(32,666,qs),
(42,670,o),
(128,667,o),
(183,668,qs),
(191,668,o),
(208,664,o),
(216,668,qs),
(223,671,o),
(237,670,o),
(244,668,qs),
(279,661,o),
(340,669,o),
(356,669,q),
(363,668,o),
(354,654,o),
(337,639,o),
(331,637,qs),
(324,636,o),
(315,624,o),
(313,618,q),
(309,612,o),
(268,572,o),
(208,516,o),
(141,456,o),
(79,402,o),
(36,363,o),
(31,358,qs),
(11,340,o),
(14,321,o),
(40,314,o),
(53,314,qs),
(116,315,l),
(130,310,l),
(161,317,l),
(355,311,ls),
(356,311,o),
(359,258,o),
(362,179,o),
(363,98,o),
(363,38,o),
(361,32,q),
(348,33,o),
(311,34,o),
(249,34,o),
(197,32,q),
(162,34,o),
(126,38,o),
(102,38,qs),
(49,38,o),
(8,27,o),
(11,11,o),
(38,0,o),
(53,0,qs),
(164,0,o)
);
},
{
closed = 1;
nodes = (
(247,185,q),
(251,194,o),
(242,204,q),
(238,210,o),
(216,221,o),
(195,226,o),
(189,220,q),
(185,214,o),
(178,200,o),
(176,192,q),
(176,188,o),
(185,176,o),
(186,170,qs),
(189,155,o),
(221,155,o),
(239,168,q),
(245,174,o)
);
},
{
closed = 1;
nodes = (
(207,181,o),
(206,185,qs),
(205,187,o),
(203,190,o),
(203,191,qs),
(203,193,o),
(205,197,o),
(206,198,qs),
(208,201,o),
(220,196,o),
(221,194,q),
(223,192,o),
(222,189,q),
(222,186,o),
(220,184,qs),
(216,181,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
88 1 3 10 20 1 12 3 12 1 0 2 3 76 59 1 7 74 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
88 1 3 10 20 1 12 3 12 1 0 1 3 76 59 1 7 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
88 1 3 10 20 1 12 3 12 1 0 2 3 76 59 1 7 74 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 12 3 1 3 12 1 128 0 1 2 2 1 112 11 1 10 4 1 3 12 10 3 105 6 1 5 5 7 97 8 1 7 7 37 77 6 1 5 5 9 97 0 9 9 39 77 0 2 2 0 96 13 1 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 12 3 1 3 12 1 128 11 1 10 4 1 3 12 10 3 105 6 1 5 5 7 97 9 8 2 7 7 37 77 2 1 1 1 0 95 13 1 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
0 12 3 1 3 12 1 128 0 1 2 2 1 112 11 1 10 4 1 3 12 10 3 105 6 1 5 5 7 97 8 1 7 7 37 77 6 1 5 5 9 97 0 9 9 39 77 0 2 2 0 96 13 1 0 0 38 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
1 0 121 120 97 94 91 90 70 69 67 64 57 56 51 48 41 39 23 21 19 17 11 7 6 4 0 118 1 113 14 8 22 
CALL[ ]	/* CallFunction */";
};
width = 436;
}
);
note = uni01B7;
unicode = 439;
},
{
glyphname = uni01EE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(291,0,o),
(351,1,o),
(369,1,o),
(371,1,qs),
(378,1,o),
(391,25,o),
(397,58,o),
(390,70,q),
(393,75,o),
(397,113,o),
(397,160,o),
(395,197,o),
(393,201,qs),
(386,212,o),
(395,224,o),
(395,233,qs),
(393,315,ls),
(393,326,o),
(387,340,o),
(373,344,qs),
(365,346,o),
(307,349,o),
(254,350,qs),
(241,350,o),
(189,344,o),
(174,348,qs),
(159,351,o),
(116,350,o),
(78,347,o),
(68,346,q),
(138,410,o),
(231,494,o),
(286,545,o),
(314,571,o),
(324,583,o),
(326,587,qs),
(329,593,o),
(356,620,o),
(388,647,o),
(395,652,qs),
(403,657,o),
(410,674,o),
(415,680,qs),
(418,684,o),
(410,697,o),
(405,698,q),
(403,699,o),
(377,695,o),
(313,694,o),
(254,699,qs),
(238,701,o),
(204,699,o),
(184,699,qs),
(175,699,o),
(150,694,o),
(146,699,qs),
(142,704,o),
(130,698,o),
(124,699,qs),
(102,703,o),
(55,699,o),
(29,699,qs),
(20,700,o),
(10,678,o),
(16,661,o),
(32,666,qs),
(42,670,o),
(128,667,o),
(183,668,qs),
(191,668,o),
(208,664,o),
(216,668,qs),
(223,671,o),
(237,670,o),
(244,668,qs),
(279,661,o),
(340,669,o),
(356,669,q),
(363,668,o),
(354,654,o),
(337,639,o),
(331,637,qs),
(324,636,o),
(315,624,o),
(313,618,q),
(309,612,o),
(268,572,o),
(208,516,o),
(141,456,o),
(79,402,o),
(36,363,o),
(31,358,qs),
(11,340,o),
(14,321,o),
(40,314,o),
(53,314,qs),
(116,315,l),
(130,310,l),
(161,317,l),
(355,311,ls),
(356,311,o),
(359,258,o),
(362,179,o),
(363,98,o),
(363,38,o),
(361,32,q),
(348,33,o),
(311,34,o),
(249,34,o),
(197,32,q),
(162,34,o),
(126,38,o),
(102,38,qs),
(49,38,o),
(8,27,o),
(11,11,o),
(38,0,o),
(53,0,qs),
(164,0,o)
);
},
{
closed = 1;
nodes = (
(247,185,q),
(251,194,o),
(242,204,q),
(238,210,o),
(216,221,o),
(195,226,o),
(189,220,q),
(185,214,o),
(178,200,o),
(176,192,q),
(176,188,o),
(185,176,o),
(186,170,qs),
(189,155,o),
(221,155,o),
(239,168,q),
(245,174,o)
);
},
{
closed = 1;
nodes = (
(207,181,o),
(206,185,qs),
(205,187,o),
(203,190,o),
(203,191,qs),
(203,193,o),
(205,197,o),
(206,198,qs),
(208,201,o),
(220,196,o),
(221,194,q),
(223,192,o),
(222,189,q),
(222,186,o),
(220,184,qs),
(216,181,o)
);
},
{
closed = 1;
nodes = (
(257,836,o),
(254,832,qs),
(252,830,o),
(239,813,o),
(237,811,qs),
(235,808,o),
(228,797,o),
(226,796,qs),
(220,793,o),
(216,793,o),
(211,795,q),
(207,800,o),
(185,820,o),
(158,843,o),
(135,859,o),
(130,859,q),
(122,861,o),
(110,859,o),
(114,850,q),
(120,844,o),
(132,831,o),
(136,824,q),
(141,821,o),
(153,806,o),
(159,803,q),
(167,796,o),
(174,787,o),
(181,781,qs),
(189,774,o),
(205,760,o),
(209,749,qs),
(211,745,o),
(219,744,o),
(221,748,q),
(232,760,o),
(263,794,o),
(293,829,o),
(313,852,o),
(312,853,qs),
(310,855,o),
(304,860,o),
(302,860,q),
(297,862,o),
(290,860,q),
(276,853,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
88 1 3 10 20 1 12 3 12 1 0 2 3 76 59 1 7 74 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
88 1 3 10 20 1 12 3 12 1 0 1 3 76 59 1 7 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
88 1 3 10 20 1 12 3 12 1 0 2 3 76 59 1 7 74 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 12 3 1 3 12 1 128 0 1 2 2 1 112 11 1 10 4 1 3 12 10 3 105 6 1 5 5 7 97 8 1 7 7 37 77 6 1 5 5 9 97 0 9 9 39 77 0 2 2 0 96 13 1 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 12 3 1 3 12 1 128 11 1 10 4 1 3 12 10 3 105 6 1 5 5 7 97 9 8 2 7 7 37 77 2 1 1 1 0 95 13 1 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
0 12 3 1 3 12 1 128 0 1 2 2 1 112 11 1 10 4 1 3 12 10 3 105 6 1 5 5 7 97 8 1 7 7 37 77 6 1 5 5 9 97 0 9 9 39 77 0 2 2 0 96 13 1 0 0 38 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
1 0 121 120 97 94 91 90 70 69 67 64 57 56 51 48 41 39 23 21 19 17 11 7 6 4 0 118 1 113 14 8 22 
CALL[ ]	/* CallFunction */";
};
width = 436;
}
);
note = uni01EE;
unicode = 494;
},
{
glyphname = uni01B8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(425,11,o),
(428,27,o),
(387,38,o),
(334,38,qs),
(310,38,o),
(274,34,o),
(239,32,q),
(187,34,o),
(125,34,o),
(88,33,o),
(75,32,q),
(74,38,o),
(73,98,o),
(74,179,o),
(77,258,o),
(80,311,o),
(81,311,qs),
(275,317,l),
(306,310,l),
(320,315,l),
(383,314,ls),
(396,314,o),
(422,321,o),
(426,340,o),
(405,358,qs),
(400,363,o),
(357,402,o),
(295,456,o),
(228,516,o),
(168,572,o),
(127,612,o),
(123,618,q),
(121,624,o),
(113,636,o),
(105,637,q),
(99,639,o),
(82,654,o),
(74,668,o),
(80,669,q),
(97,669,o),
(158,661,o),
(192,668,qs),
(200,670,o),
(213,671,o),
(220,668,qs),
(228,664,o),
(245,668,o),
(253,668,qs),
(309,667,o),
(394,670,o),
(404,666,qs),
(420,661,o),
(426,678,o),
(416,700,o),
(407,699,qs),
(381,699,o),
(334,703,o),
(312,699,qs),
(306,698,o),
(294,704,o),
(290,699,qs),
(286,694,o),
(261,699,o),
(252,699,qs),
(233,699,o),
(198,701,o),
(182,699,qs),
(123,694,o),
(59,695,o),
(34,699,o),
(31,698,qs),
(26,697,o),
(18,684,o),
(21,680,qs),
(26,674,o),
(34,657,o),
(41,652,qs),
(49,647,o),
(80,620,o),
(108,593,o),
(110,587,qs),
(112,583,o),
(122,571,o),
(150,545,o),
(205,494,o),
(298,410,o),
(368,346,q),
(359,347,o),
(320,350,o),
(278,351,o),
(262,348,qs),
(247,344,o),
(195,350,o),
(182,350,qs),
(129,349,o),
(71,346,o),
(63,344,qs),
(50,340,o),
(43,326,o),
(43,315,qs),
(41,233,ls),
(41,224,o),
(51,212,o),
(43,201,q),
(41,197,o),
(39,160,o),
(39,113,o),
(43,75,o),
(46,70,q),
(40,58,o),
(45,25,o),
(59,1,o),
(65,1,qs),
(67,1,o),
(85,1,o),
(145,0,o),
(272,0,o),
(383,0,qs),
(398,0,o)
);
},
{
closed = 1;
nodes = (
(247,155,o),
(250,170,qs),
(252,176,o),
(260,188,o),
(260,192,qs),
(259,200,o),
(251,214,o),
(247,220,qs),
(242,226,o),
(220,221,o),
(199,210,o),
(194,204,qs),
(185,194,o),
(189,185,q),
(191,174,o),
(197,168,q),
(215,155,o)
);
},
{
closed = 1;
nodes = (
(214,189,q),
(213,192,o),
(215,194,qs),
(217,196,o),
(228,201,o),
(230,198,qs),
(231,197,o),
(233,193,o),
(233,191,qs),
(233,190,o),
(231,187,o),
(230,185,qs),
(229,181,o),
(221,181,o),
(216,184,q),
(214,186,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
31 1 8 1 150 145 142 130 99 5 12 8 9 1 11 12 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
31 1 8 1 150 145 142 130 99 5 12 8 9 1 10 12 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
31 1 8 1 150 145 142 130 99 5 12 8 9 1 11 12 3 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 12 8 11 8 12 11 128 0 11 10 10 11 112 2 1 1 9 1 8 12 1 8 105 7 1 6 6 4 97 5 1 4 4 37 77 7 1 6 6 3 97 0 3 3 39 77 0 10 10 0 98 13 1 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 12 8 10 8 12 10 128 2 1 1 9 1 8 12 1 8 105 0 4 4 37 77 7 1 6 6 3 97 5 1 3 3 39 77 11 1 10 10 0 97 13 1 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
0 12 8 11 8 12 11 128 0 11 10 10 11 112 2 1 1 9 1 8 12 1 8 105 7 1 6 6 4 97 5 1 4 4 37 77 7 1 6 6 3 97 0 3 3 39 77 0 10 10 0 98 13 1 0 0 38 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
4 0 135 134 115 113 112 108 101 100 98 96 79 78 70 68 63 62 55 52 50 49 29 28 25 22 0 118 4 118 14 8 22 
CALL[ ]	/* CallFunction */";
};
width = 436;
}
);
note = uni01B8;
unicode = 440;
},
{
glyphname = F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(212,5,o),
(222,9,o),
(226,10,qs),
(231,12,o),
(243,5,o),
(248,5,qs),
(252,5,o),
(282,5,o),
(317,5,o),
(344,5,o),
(344,6,q),
(348,9,o),
(356,17,o),
(357,21,qs),
(359,26,o),
(350,29,o),
(347,31,qs),
(333,39,o),
(320,39,qs),
(190,39,ls),
(188,39,o),
(182,48,o),
(182,72,qs),
(183,360,l),
(179,386,l),
(182,389,o),
(184,443,o),
(184,519,o),
(183,596,o),
(182,652,o),
(182,658,qs),
(182,666,o),
(188,667,qs),
(193,667,o),
(228,669,o),
(248,670,qs),
(269,671,o),
(292,676,o),
(317,670,q),
(320,665,o),
(342,667,o),
(364,668,qs),
(367,668,o),
(378,668,o),
(381,671,qs),
(386,676,o),
(395,669,o),
(397,669,qs),
(410,669,o),
(430,674,o),
(434,673,qs),
(451,669,o),
(474,677,o),
(475,681,qs),
(480,694,o),
(463,700,o),
(452,700,qs),
(370,702,o),
(268,701,o),
(214,699,o),
(195,697,o),
(194,696,qs),
(188,690,o),
(174,690,o),
(166,689,qs),
(159,688,o),
(148,678,o),
(148,670,qs),
(149,613,o),
(147,559,o),
(144,540,o),
(141,535,q),
(149,525,o),
(148,508,o),
(148,495,qs),
(148,50,ls),
(148,43,o),
(143,38,o),
(135,38,qs),
(79,38,ls),
(75,38,o),
(67,38,o),
(63,37,qs),
(59,36,o),
(50,24,o),
(51,22,qs),
(56,11,o),
(63,6,qs),
(65,5,o),
(72,5,o),
(76,5,qs),
(207,5,ls)
);
},
{
closed = 1;
nodes = (
(354,249,o),
(354,251,q),
(356,255,o),
(355,261,o),
(355,265,qs),
(354,269,o),
(351,279,o),
(350,283,qs),
(349,289,o),
(353,300,o),
(352,306,qs),
(349,335,o),
(354,393,o),
(351,422,qs),
(350,432,ls),
(348,442,o),
(352,448,q),
(352,453,o),
(354,465,o),
(348,470,q),
(341,468,o),
(318,446,o),
(312,441,q),
(308,435,o),
(286,410,o),
(284,408,qs),
(279,401,o),
(270,392,o),
(265,387,qs),
(254,375,ls),
(249,370,o),
(240,358,o),
(232,351,qs),
(222,344,o),
(229,337,qs),
(243,325,o),
(281,292,o),
(317,261,o),
(343,241,o),
(344,241,qs),
(349,241,o)
);
},
{
closed = 1;
nodes = (
(319,294,qs),
(307,308,o),
(299,315,o),
(297,315,q),
(280,320,o),
(276,332,q),
(276,334,o),
(273,338,o),
(272,340,qs),
(268,346,o),
(269,350,o),
(273,354,qs),
(316,402,ls),
(322,409,o),
(326,387,o),
(326,347,o),
(324,305,o),
(325,293,q),
(321,292,o)
);
},
{
closed = 1;
nodes = (
(102,328,o),
(109,335,q),
(117,347,o),
(109,358,qs),
(103,366,o),
(90,374,o),
(80,372,q),
(61,372,o),
(40,355,o),
(40,343,qs),
(40,336,o),
(54,311,o),
(72,311,qs),
(83,311,o)
);
},
{
closed = 1;
nodes = (
(69,342,o),
(69,343,qs),
(69,349,o),
(78,349,q),
(82,350,o),
(84,347,qs),
(86,343,o),
(84,341,q),
(83,335,o),
(75,335,qs),
(71,335,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
40 23 2 4 2 19 1 10 4 5 1 0 1 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 10 4 11 11 10 114 14 1 11 13 1 9 1 11 9 106 0 2 2 39 77 6 5 2 4 4 3 97 0 3 3 37 77 7 1 1 1 0 97 8 12 2 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 10 4 11 4 10 11 128 14 1 11 13 1 9 1 11 9 106 0 2 2 39 77 6 5 2 4 4 3 97 0 3 3 37 77 7 1 1 1 0 97 8 12 2 0 0 38 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 39 values pushed */
167 166 153 152 2 0 166 176 167 176 158 157 152 165 153 165 86 82 73 70 57 54 50 48 43 42 35 31 28 27 12 9 0 91 2 90 15 8 22 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = F;
unicode = 70;
},
{
glyphname = uni1E1E;
layers = (
{
layerId = m01;
shapes = (
{
ref = F;
},
{
pos = (194,116);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
116 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = uni1E1E;
unicode = 7710;
},
{
glyphname = uni0191;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(144,77,o),
(143,89,o),
(142,94,q),
(143,360,l),
(139,386,l),
(142,389,o),
(144,443,o),
(144,519,o),
(143,596,o),
(142,652,o),
(142,658,qs),
(142,666,o),
(148,667,qs),
(153,667,o),
(188,669,o),
(208,670,qs),
(229,671,o),
(252,676,o),
(277,670,q),
(280,665,o),
(302,667,o),
(324,668,qs),
(327,668,o),
(338,668,o),
(341,671,qs),
(346,676,o),
(355,669,o),
(357,669,qs),
(370,669,o),
(390,674,o),
(394,673,qs),
(411,669,o),
(434,677,o),
(435,681,qs),
(440,694,o),
(423,700,o),
(412,700,qs),
(330,702,o),
(228,701,o),
(174,699,o),
(155,697,o),
(154,696,qs),
(148,690,o),
(134,690,o),
(126,689,qs),
(119,688,o),
(108,678,o),
(108,670,qs),
(109,613,o),
(107,559,o),
(104,540,o),
(101,535,q),
(109,525,o),
(108,508,o),
(108,495,qs),
(108,50,ls),
(108,45,o),
(108,41,qs),
(109,10,o),
(108,-57,o),
(96,-104,o),
(81,-103,qs),
(76,-103,o),
(53,-103,o),
(48,-102,qs),
(42,-100,o),
(36,-103,o),
(23,-104,o),
(3,-102,qs),
(-2,-101,o),
(-12,-107,o),
(-18,-104,q),
(-31,-111,o),
(-28,-123,o),
(-18,-128,qs),
(-6,-135,o),
(14,-139,o),
(27,-134,qs),
(31,-132,o),
(61,-133,o),
(66,-133,qs),
(89,-134,o),
(94,-134,o),
(98,-134,qs),
(117,-133,o),
(134,-108,o),
(141,-35,o),
(142,36,qs),
(142,41,o),
(140,51,o),
(140,56,q),
(142,64,o),
(142,72,qs),
(142,74,l)
);
},
{
closed = 1;
nodes = (
(304,249,o),
(304,251,q),
(306,255,o),
(305,261,o),
(305,265,qs),
(304,269,o),
(301,279,o),
(300,283,qs),
(299,289,o),
(303,300,o),
(302,306,qs),
(299,335,o),
(304,393,o),
(301,422,qs),
(300,432,ls),
(298,442,o),
(302,448,q),
(302,453,o),
(304,465,o),
(298,470,q),
(291,468,o),
(268,446,o),
(262,441,q),
(258,435,o),
(236,410,o),
(234,408,qs),
(229,401,o),
(220,392,o),
(215,387,qs),
(204,375,ls),
(199,370,o),
(190,358,o),
(182,351,qs),
(172,344,o),
(179,337,qs),
(193,325,o),
(231,292,o),
(267,261,o),
(293,241,o),
(294,241,qs),
(299,241,o)
);
},
{
closed = 1;
nodes = (
(269,294,qs),
(257,308,o),
(249,315,o),
(247,315,q),
(230,320,o),
(226,332,q),
(226,334,o),
(223,338,o),
(222,340,qs),
(218,346,o),
(219,350,o),
(223,354,qs),
(266,402,ls),
(272,409,o),
(276,387,o),
(276,347,o),
(274,305,o),
(275,293,q),
(271,292,o)
);
},
{
closed = 1;
nodes = (
(62,328,o),
(69,335,q),
(77,347,o),
(69,358,qs),
(63,366,o),
(50,374,o),
(40,372,q),
(21,372,o),
(0,355,o),
(0,343,qs),
(0,336,o),
(14,311,o),
(32,311,qs),
(43,311,o)
);
},
{
closed = 1;
nodes = (
(29,342,o),
(29,343,qs),
(29,349,o),
(38,349,q),
(42,350,o),
(44,347,qs),
(46,343,o),
(44,341,q),
(43,335,o),
(35,335,qs),
(31,335,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
62 45 2 4 2 41 1 8 4 90 2 2 1 7 3 76 21 1 1 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 8 4 9 9 8 114 11 1 9 10 1 7 1 9 7 106 0 1 0 0 1 0 101 0 2 2 39 77 6 5 2 4 4 3 97 0 3 3 37 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 8 4 9 4 8 9 128 11 1 9 10 1 7 1 9 7 106 0 1 0 0 1 0 101 0 2 2 39 77 6 5 2 4 4 3 97 0 3 3 37 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
169 168 155 154 168 178 169 178 160 159 154 167 155 167 79 76 72 70 65 64 57 53 50 49 63 104 12 8 24 
CALL[ ]	/* CallFunction */";
};
width = 436;
}
);
note = uni0191;
unicode = 401;
},
{
glyphname = G;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(368,0,ls),
(375,0,o),
(391,5,o),
(397,-1,q),
(399,-2,o),
(421,-2,o),
(443,0,o),
(444,1,qs),
(452,9,o),
(445,155,o),
(449,307,qs),
(449,312,o),
(445,328,o),
(431,328,qs),
(400,330,o),
(374,330,o),
(361,331,o),
(335,333,o),
(304,336,q),
(295,328,o),
(281,328,qs),
(265,328,o),
(249,330,o),
(232,328,q),
(226,326,o),
(224,320,q),
(224,308,o),
(227,295,o),
(233,290,qs),
(259,268,o),
(304,216,o),
(333,197,q),
(341,193,o),
(374,161,o),
(408,129,o),
(414,122,q),
(414,35,l),
(411,35,o),
(362,33,o),
(293,32,o),
(224,31,o),
(175,32,o),
(173,33,qs),
(166,37,o),
(154,35,o),
(148,33,qs),
(143,32,o),
(136,34,qs),
(123,36,o),
(98,39,o),
(86,30,q),
(82,28,o),
(74,33,o),
(74,37,qs),
(74,302,ls),
(74,306,o),
(73,315,o),
(75,318,qs),
(83,329,o),
(83,343,qs),
(83,527,ls),
(83,535,o),
(79,549,o),
(74,555,q),
(74,569,o),
(81,579,o),
(81,586,q),
(77,592,o),
(73,619,o),
(74,650,qs),
(74,671,o),
(97,671,qs),
(397,671,ls),
(407,671,o),
(407,661,qs),
(407,597,o),
(407,536,o),
(408,517,o),
(408,514,qs),
(409,508,o),
(416,498,o),
(416,491,qs),
(416,481,o),
(431,482,qs),
(441,482,o),
(441,492,qs),
(441,686,ls),
(441,696,o),
(431,696,qs),
(403,697,o),
(382,696,o),
(378,699,qs),
(375,701,o),
(300,703,o),
(177,703,o),
(101,702,q),
(95,697,o),
(87,702,q),
(83,706,o),
(76,704,qs),
(63,699,o),
(35,684,o),
(43,672,q),
(47,670,o),
(47,666,qs),
(44,622,o),
(42,575,o),
(45,554,o),
(48,548,q),
(48,531,o),
(49,473,o),
(48,456,qs),
(48,452,o),
(42,444,o),
(43,442,qs),
(47,437,o),
(43,428,q),
(37,419,o),
(43,409,qs),
(45,405,o),
(48,398,o),
(48,394,qs),
(48,388,o),
(48,350,o),
(47,304,o),
(46,270,o),
(45,268,qs),
(40,256,o),
(40,248,qs),
(40,223,o),
(40,143,o),
(41,62,o),
(40,37,qs),
(39,30,o),
(50,1,o),
(59,1,qs),
(66,1,o),
(93,0,o),
(118,0,o),
(120,-2,qs),
(125,-6,o),
(136,-1,o),
(141,-1,qs),
(152,-1,l)
);
},
{
closed = 1;
nodes = (
(268,477,o),
(275,484,q),
(283,496,o),
(275,507,qs),
(269,515,o),
(256,523,o),
(246,521,q),
(227,521,o),
(206,504,o),
(206,492,qs),
(206,485,o),
(220,460,o),
(238,460,qs),
(249,460,o)
);
},
{
closed = 1;
nodes = (
(234,491,o),
(234,492,qs),
(234,499,o),
(244,499,q),
(247,500,o),
(251,496,q),
(253,492,o),
(251,490,q),
(248,483,o),
(241,483,qs),
(237,483,o)
);
},
{
closed = 1;
nodes = (
(377,199,o),
(337,233,o),
(297,267,o),
(269,294,o),
(267,299,q),
(286,301,l),
(294,303,o),
(315,305,o),
(322,300,q),
(359,298,o),
(396,297,o),
(412,296,o),
(415,292,q),
(418,291,o),
(418,255,o),
(416,209,o),
(416,192,qs),
(416,165,o),
(411,170,qs),
(407,174,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
79 76 38 34 4 11 4 160 61 2 12 11 124 28 2 6 10 183 117 2 13 6 107 89 16 14 4 5 13 5 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 11 4 12 12 11 114 0 3 12 10 12 3 10 128 7 1 6 0 13 5 6 13 105 0 2 2 39 77 0 4 4 1 97 0 1 1 37 77 15 1 10 10 12 97 16 1 12 12 46 77 0 5 5 0 97 14 9 8 3 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 11 4 12 12 11 114 0 3 12 10 12 3 10 128 16 1 12 15 1 10 6 12 10 106 7 1 6 0 13 5 6 13 105 0 2 2 39 77 0 4 4 1 97 0 1 1 37 77 0 5 5 0 97 14 9 8 3 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 11 4 12 12 11 114 0 3 12 10 12 3 10 128 7 1 6 0 13 5 6 13 105 0 2 2 39 77 0 4 4 1 97 0 1 1 37 77 15 1 10 10 12 97 16 1 12 12 46 77 0 5 5 0 97 14 9 8 3 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 11 4 12 12 11 114 0 3 12 10 12 3 10 128 16 1 12 15 1 10 6 12 10 106 7 1 6 0 13 5 6 13 105 0 2 2 39 77 0 4 4 1 97 0 1 1 37 77 0 5 5 0 97 14 9 8 3 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 11 4 12 4 11 12 128 0 3 12 10 12 3 10 128 16 1 12 15 1 10 6 12 10 106 7 1 6 0 13 5 6 13 105 0 2 2 39 77 0 4 4 1 97 0 1 1 37 77 0 5 5 0 97 14 9 8 3 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 11 4 12 12 11 114 0 3 12 10 12 3 10 128 16 1 12 15 1 10 6 12 10 106 7 1 6 0 13 5 6 13 105 0 2 2 39 77 0 4 4 1 97 0 1 1 37 77 0 5 5 0 97 14 9 8 3 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
0 11 4 12 4 11 12 128 0 3 12 10 12 3 10 128 16 1 12 15 1 10 6 12 10 106 7 1 6 0 13 5 6 13 105 0 2 2 39 77 0 4 4 1 97 0 1 1 37 77 0 5 5 0 97 14 9 8 3 0 0 38 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
159 158 145 144 0 0 179 176 158 168 159 168 150 149 144 157 145 157 0 143 0 141 138 137 130 127 123 121 105 100 72 69 60 58 55 52 50 47 53 17 8 23 
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = G;
unicode = 71;
},
{
glyphname = uni01F4;
layers = (
{
layerId = m01;
shapes = (
{
ref = G;
},
{
pos = (176,140);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
140 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = uni01F4;
unicode = 500;
},
{
glyphname = Gbreve;
layers = (
{
layerId = m01;
shapes = (
{
ref = G;
},
{
pos = (114,118);
ref = uni0306;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
118 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = Gbreve;
unicode = 286;
},
{
glyphname = Gcaron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(368,0,ls),
(375,0,o),
(391,5,o),
(397,-1,q),
(399,-2,o),
(421,-2,o),
(443,0,o),
(444,1,qs),
(452,9,o),
(445,155,o),
(449,307,qs),
(449,312,o),
(445,328,o),
(431,328,qs),
(400,330,o),
(374,330,o),
(361,331,o),
(335,333,o),
(304,336,q),
(295,328,o),
(281,328,qs),
(265,328,o),
(249,330,o),
(232,328,q),
(226,326,o),
(224,320,q),
(224,308,o),
(227,295,o),
(233,290,qs),
(259,268,o),
(304,216,o),
(333,197,q),
(341,193,o),
(374,161,o),
(408,129,o),
(414,122,q),
(414,35,l),
(411,35,o),
(362,33,o),
(293,32,o),
(224,31,o),
(175,32,o),
(173,33,qs),
(166,37,o),
(154,35,o),
(148,33,qs),
(143,32,o),
(136,34,qs),
(123,36,o),
(98,39,o),
(86,30,q),
(82,28,o),
(74,33,o),
(74,37,qs),
(74,302,ls),
(74,306,o),
(73,315,o),
(75,318,qs),
(83,329,o),
(83,343,qs),
(83,527,ls),
(83,535,o),
(79,549,o),
(74,555,q),
(74,569,o),
(81,579,o),
(81,586,q),
(77,592,o),
(73,619,o),
(74,650,qs),
(74,671,o),
(97,671,qs),
(397,671,ls),
(407,671,o),
(407,661,qs),
(407,597,o),
(407,536,o),
(408,517,o),
(408,514,qs),
(409,508,o),
(416,498,o),
(416,491,qs),
(416,481,o),
(431,482,qs),
(441,482,o),
(441,492,qs),
(441,686,ls),
(441,696,o),
(431,696,qs),
(403,697,o),
(382,696,o),
(378,699,qs),
(375,701,o),
(300,703,o),
(177,703,o),
(101,702,q),
(95,697,o),
(87,702,q),
(83,706,o),
(76,704,qs),
(63,699,o),
(35,684,o),
(43,672,q),
(47,670,o),
(47,666,qs),
(44,622,o),
(42,575,o),
(45,554,o),
(48,548,q),
(48,531,o),
(49,473,o),
(48,456,qs),
(48,452,o),
(42,444,o),
(43,442,qs),
(47,437,o),
(43,428,q),
(37,419,o),
(43,409,qs),
(45,405,o),
(48,398,o),
(48,394,qs),
(48,388,o),
(48,350,o),
(47,304,o),
(46,270,o),
(45,268,qs),
(40,256,o),
(40,248,qs),
(40,223,o),
(40,143,o),
(41,62,o),
(40,37,qs),
(39,30,o),
(50,1,o),
(59,1,qs),
(66,1,o),
(93,0,o),
(118,0,o),
(120,-2,qs),
(125,-6,o),
(136,-1,o),
(141,-1,qs),
(152,-1,l)
);
},
{
closed = 1;
nodes = (
(268,477,o),
(275,484,q),
(283,496,o),
(275,507,qs),
(269,515,o),
(256,523,o),
(246,521,q),
(227,521,o),
(206,504,o),
(206,492,qs),
(206,485,o),
(220,460,o),
(238,460,qs),
(249,460,o)
);
},
{
closed = 1;
nodes = (
(234,491,o),
(234,492,qs),
(234,499,o),
(244,499,q),
(247,500,o),
(251,496,q),
(253,492,o),
(251,490,q),
(248,483,o),
(241,483,qs),
(237,483,o)
);
},
{
closed = 1;
nodes = (
(377,199,o),
(337,233,o),
(297,267,o),
(269,294,o),
(267,299,q),
(286,301,l),
(294,303,o),
(315,305,o),
(322,300,q),
(359,298,o),
(396,297,o),
(412,296,o),
(415,292,q),
(418,291,o),
(418,255,o),
(416,209,o),
(416,192,qs),
(416,165,o),
(411,170,qs),
(407,174,o)
);
},
{
closed = 1;
nodes = (
(297,833,o),
(294,829,qs),
(292,827,o),
(279,810,o),
(277,808,qs),
(275,805,o),
(268,794,o),
(266,793,qs),
(260,790,o),
(256,790,o),
(251,792,q),
(247,797,o),
(225,817,o),
(198,840,o),
(175,856,o),
(170,856,q),
(162,858,o),
(150,856,o),
(154,847,q),
(160,841,o),
(172,828,o),
(176,821,q),
(181,818,o),
(193,803,o),
(199,800,q),
(207,793,o),
(214,784,o),
(221,778,qs),
(229,771,o),
(245,757,o),
(249,746,qs),
(251,742,o),
(259,741,o),
(261,745,q),
(272,757,o),
(303,791,o),
(333,826,o),
(353,849,o),
(352,850,qs),
(350,852,o),
(344,857,o),
(342,857,q),
(337,859,o),
(330,857,q),
(316,850,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
79 76 38 34 4 11 4 160 61 2 12 11 124 28 2 6 10 183 117 2 13 6 107 89 16 14 4 5 13 5 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 11 4 12 12 11 114 0 3 12 10 12 3 10 128 7 1 6 0 13 5 6 13 105 0 2 2 39 77 0 4 4 1 97 0 1 1 37 77 15 1 10 10 12 97 16 1 12 12 46 77 0 5 5 0 97 14 9 8 3 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 11 4 12 12 11 114 0 3 12 10 12 3 10 128 16 1 12 15 1 10 6 12 10 106 7 1 6 0 13 5 6 13 105 0 2 2 39 77 0 4 4 1 97 0 1 1 37 77 0 5 5 0 97 14 9 8 3 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 11 4 12 12 11 114 0 3 12 10 12 3 10 128 7 1 6 0 13 5 6 13 105 0 2 2 39 77 0 4 4 1 97 0 1 1 37 77 15 1 10 10 12 97 16 1 12 12 46 77 0 5 5 0 97 14 9 8 3 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 11 4 12 12 11 114 0 3 12 10 12 3 10 128 16 1 12 15 1 10 6 12 10 106 7 1 6 0 13 5 6 13 105 0 2 2 39 77 0 4 4 1 97 0 1 1 37 77 0 5 5 0 97 14 9 8 3 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 11 4 12 4 11 12 128 0 3 12 10 12 3 10 128 16 1 12 15 1 10 6 12 10 106 7 1 6 0 13 5 6 13 105 0 2 2 39 77 0 4 4 1 97 0 1 1 37 77 0 5 5 0 97 14 9 8 3 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 11 4 12 12 11 114 0 3 12 10 12 3 10 128 16 1 12 15 1 10 6 12 10 106 7 1 6 0 13 5 6 13 105 0 2 2 39 77 0 4 4 1 97 0 1 1 37 77 0 5 5 0 97 14 9 8 3 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
0 11 4 12 4 11 12 128 0 3 12 10 12 3 10 128 16 1 12 15 1 10 6 12 10 106 7 1 6 0 13 5 6 13 105 0 2 2 39 77 0 4 4 1 97 0 1 1 37 77 0 5 5 0 97 14 9 8 3 0 0 38 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
159 158 145 144 0 0 179 176 158 168 159 168 150 149 144 157 145 157 0 143 0 141 138 137 130 127 123 121 105 100 72 69 60 58 55 52 50 47 53 17 8 23 
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = Gcaron;
unicode = 486;
},
{
glyphname = Gcircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = G;
},
{
pos = (117,128);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
128 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = Gcircumflex;
unicode = 284;
},
{
glyphname = uni0122;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(368,0,ls),
(375,0,o),
(391,5,o),
(397,-1,q),
(399,-2,o),
(421,-2,o),
(443,0,o),
(444,1,qs),
(452,9,o),
(445,155,o),
(449,307,qs),
(449,312,o),
(445,328,o),
(431,328,qs),
(400,330,o),
(374,330,o),
(361,331,o),
(335,333,o),
(304,336,q),
(295,328,o),
(281,328,qs),
(265,328,o),
(249,330,o),
(232,328,q),
(226,326,o),
(224,320,q),
(224,308,o),
(227,295,o),
(233,290,qs),
(259,268,o),
(304,216,o),
(333,197,q),
(341,193,o),
(374,161,o),
(408,129,o),
(414,122,q),
(414,35,l),
(411,35,o),
(362,33,o),
(293,32,o),
(224,31,o),
(175,32,o),
(173,33,qs),
(166,37,o),
(154,35,o),
(148,33,qs),
(143,32,o),
(136,34,qs),
(123,36,o),
(98,39,o),
(86,30,q),
(82,28,o),
(74,33,o),
(74,37,qs),
(74,302,ls),
(74,306,o),
(73,315,o),
(75,318,qs),
(83,329,o),
(83,343,qs),
(83,527,ls),
(83,535,o),
(79,549,o),
(74,555,q),
(74,569,o),
(81,579,o),
(81,586,q),
(77,592,o),
(73,619,o),
(74,650,qs),
(74,671,o),
(97,671,qs),
(397,671,ls),
(407,671,o),
(407,661,qs),
(407,597,o),
(407,536,o),
(408,517,o),
(408,514,qs),
(409,508,o),
(416,498,o),
(416,491,qs),
(416,481,o),
(431,482,qs),
(441,482,o),
(441,492,qs),
(441,686,ls),
(441,696,o),
(431,696,qs),
(403,697,o),
(382,696,o),
(378,699,qs),
(375,701,o),
(300,703,o),
(177,703,o),
(101,702,q),
(95,697,o),
(87,702,q),
(83,706,o),
(76,704,qs),
(63,699,o),
(35,684,o),
(43,672,q),
(47,670,o),
(47,666,qs),
(44,622,o),
(42,575,o),
(45,554,o),
(48,548,q),
(48,531,o),
(49,473,o),
(48,456,qs),
(48,452,o),
(42,444,o),
(43,442,qs),
(47,437,o),
(43,428,q),
(37,419,o),
(43,409,qs),
(45,405,o),
(48,398,o),
(48,394,qs),
(48,388,o),
(48,350,o),
(47,304,o),
(46,270,o),
(45,268,qs),
(40,256,o),
(40,248,qs),
(40,223,o),
(40,143,o),
(41,62,o),
(40,37,qs),
(39,30,o),
(50,1,o),
(59,1,qs),
(66,1,o),
(93,0,o),
(118,0,o),
(120,-2,qs),
(125,-6,o),
(136,-1,o),
(141,-1,qs),
(152,-1,l)
);
},
{
closed = 1;
nodes = (
(268,477,o),
(275,484,q),
(283,496,o),
(275,507,qs),
(269,515,o),
(256,523,o),
(246,521,q),
(227,521,o),
(206,504,o),
(206,492,qs),
(206,485,o),
(220,460,o),
(238,460,qs),
(249,460,o)
);
},
{
closed = 1;
nodes = (
(234,491,o),
(234,492,qs),
(234,499,o),
(244,499,q),
(247,500,o),
(251,496,q),
(253,492,o),
(251,490,q),
(248,483,o),
(241,483,qs),
(237,483,o)
);
},
{
closed = 1;
nodes = (
(377,199,o),
(337,233,o),
(297,267,o),
(269,294,o),
(267,299,q),
(286,301,l),
(294,303,o),
(315,305,o),
(322,300,q),
(359,298,o),
(396,297,o),
(412,296,o),
(415,292,q),
(418,291,o),
(418,255,o),
(416,209,o),
(416,192,qs),
(416,165,o),
(411,170,qs),
(407,174,o)
);
},
{
closed = 1;
nodes = (
(218,-201,o),
(220,-198,q),
(224,-198,o),
(241,-174,o),
(243,-172,q),
(252,-158,o),
(255,-143,o),
(262,-129,qs),
(268,-113,o),
(281,-102,qs),
(294,-91,o),
(298,-65,o),
(299,-48,qs),
(300,-37,o),
(293,-27,o),
(287,-31,q),
(282,-36,o),
(262,-51,o),
(260,-58,qs),
(257,-69,o),
(246,-91,o),
(240,-103,qs),
(232,-124,o),
(212,-159,o),
(198,-194,q),
(201,-199,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
79 76 38 34 4 11 4 160 61 2 12 11 124 28 2 6 10 183 117 2 13 6 107 89 16 14 4 5 13 5 76 201 1 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 11 4 12 12 11 114 0 3 12 10 12 3 10 128 7 1 6 0 13 5 6 13 105 0 2 2 39 77 0 4 4 1 97 0 1 1 37 77 15 1 10 10 12 97 16 1 12 12 46 77 0 5 5 0 97 14 9 8 3 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 11 4 12 12 11 114 0 3 12 10 12 3 10 128 16 1 12 15 1 10 6 12 10 106 7 1 6 0 13 5 6 13 105 0 2 2 39 77 0 4 4 1 97 0 1 1 37 77 0 5 5 0 97 14 9 8 3 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 11 4 12 12 11 114 0 3 12 10 12 3 10 128 7 1 6 0 13 5 6 13 105 0 2 2 39 77 0 4 4 1 97 0 1 1 37 77 15 1 10 10 12 97 16 1 12 12 46 77 0 5 5 0 97 14 9 8 3 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 11 4 12 12 11 114 0 3 12 10 12 3 10 128 16 1 12 15 1 10 6 12 10 106 7 1 6 0 13 5 6 13 105 0 2 2 39 77 0 4 4 1 97 0 1 1 37 77 0 5 5 0 97 14 9 8 3 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 11 4 12 4 11 12 128 0 3 12 10 12 3 10 128 16 1 12 15 1 10 6 12 10 106 7 1 6 0 13 5 6 13 105 0 2 2 39 77 0 4 4 1 97 0 1 1 37 77 0 5 5 0 97 14 9 8 3 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 11 4 12 12 11 114 0 3 12 10 12 3 10 128 16 1 12 15 1 10 6 12 10 106 7 1 6 0 13 5 6 13 105 0 2 2 39 77 0 4 4 1 97 0 1 1 37 77 0 5 5 0 97 14 9 8 3 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
0 11 4 12 4 11 12 128 0 3 12 10 12 3 10 128 16 1 12 15 1 10 6 12 10 106 7 1 6 0 13 5 6 13 105 0 2 2 39 77 0 4 4 1 97 0 1 1 37 77 0 5 5 0 97 14 9 8 3 0 0 38 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
159 158 145 144 0 0 179 176 158 168 159 168 150 149 144 157 145 157 0 143 0 141 138 137 130 127 123 121 105 100 72 69 60 58 55 52 50 47 53 17 8 23 
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = uni0122;
unicode = 290;
},
{
glyphname = Gdotaccent;
layers = (
{
layerId = m01;
shapes = (
{
ref = G;
},
{
pos = (180,113);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
113 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = Gdotaccent;
unicode = 288;
},
{
glyphname = uni0193;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(368,0,ls),
(375,0,o),
(391,5,o),
(397,-1,q),
(399,-2,o),
(421,-2,o),
(443,0,o),
(444,1,qs),
(452,9,o),
(445,155,o),
(449,307,qs),
(449,312,o),
(445,328,o),
(431,328,qs),
(400,330,o),
(374,330,o),
(361,331,o),
(335,333,o),
(304,336,q),
(295,328,o),
(281,328,qs),
(265,328,o),
(249,330,o),
(232,328,q),
(226,326,o),
(224,320,q),
(224,308,o),
(227,295,o),
(233,290,qs),
(259,268,o),
(304,216,o),
(333,197,q),
(341,193,o),
(374,161,o),
(408,129,o),
(414,122,q),
(414,35,l),
(411,35,o),
(362,33,o),
(293,32,o),
(224,31,o),
(175,32,o),
(173,33,qs),
(166,37,o),
(154,35,o),
(148,33,qs),
(143,32,o),
(136,34,qs),
(123,36,o),
(98,39,o),
(86,30,q),
(82,28,o),
(74,33,o),
(74,37,qs),
(74,302,ls),
(74,306,o),
(73,315,o),
(75,318,qs),
(83,329,o),
(83,343,qs),
(83,527,ls),
(83,535,o),
(79,549,o),
(74,555,q),
(74,569,o),
(81,579,o),
(81,586,q),
(77,592,o),
(73,619,o),
(74,650,qs),
(74,671,o),
(97,671,qs),
(397,671,ls),
(411,671,o),
(430,667,o),
(441,672,o),
(441,686,qs),
(441,687,ls),
(443,700,o),
(441,749,o),
(442,800,o),
(454,836,o),
(469,835,qs),
(474,835,o),
(497,836,o),
(502,834,q),
(509,833,o),
(514,835,o),
(528,837,o),
(547,834,qs),
(552,833,o),
(562,839,o),
(568,836,q),
(581,844,o),
(579,855,o),
(568,860,q),
(556,868,o),
(537,871,o),
(523,866,qs),
(519,865,o),
(489,865,o),
(484,865,qs),
(461,866,o),
(456,866,o),
(452,866,qs),
(424,865,o),
(408,808,o),
(408,746,qs),
(408,736,o),
(413,715,o),
(408,708,qs),
(406,705,o),
(407,696,q),
(381,696,o),
(378,699,qs),
(375,701,o),
(300,703,o),
(177,703,o),
(101,702,q),
(95,697,o),
(87,702,q),
(83,706,o),
(76,704,qs),
(63,699,o),
(35,684,o),
(43,672,q),
(47,670,o),
(47,666,qs),
(44,622,o),
(42,575,o),
(45,554,o),
(48,548,q),
(48,531,o),
(49,473,o),
(48,456,qs),
(48,452,o),
(42,444,o),
(43,442,qs),
(47,437,o),
(43,428,q),
(37,419,o),
(43,409,qs),
(45,405,o),
(48,398,o),
(48,394,qs),
(48,388,o),
(48,350,o),
(47,304,o),
(46,270,o),
(45,268,qs),
(40,256,o),
(40,248,qs),
(40,223,o),
(40,143,o),
(41,62,o),
(40,37,qs),
(39,30,o),
(50,1,o),
(59,1,qs),
(66,1,o),
(93,0,o),
(118,0,o),
(120,-2,qs),
(125,-6,o),
(136,-1,o),
(141,-1,qs),
(152,-1,l)
);
},
{
closed = 1;
nodes = (
(268,477,o),
(275,484,q),
(283,496,o),
(275,507,qs),
(269,515,o),
(256,523,o),
(246,521,q),
(227,521,o),
(206,504,o),
(206,492,qs),
(206,485,o),
(220,460,o),
(238,460,qs),
(249,460,o)
);
},
{
closed = 1;
nodes = (
(234,491,o),
(234,492,qs),
(234,499,o),
(244,499,q),
(247,500,o),
(251,496,q),
(253,492,o),
(251,490,q),
(248,483,o),
(241,483,qs),
(237,483,o)
);
},
{
closed = 1;
nodes = (
(377,199,o),
(337,233,o),
(297,267,o),
(269,294,o),
(267,299,q),
(286,301,l),
(294,303,o),
(315,305,o),
(322,300,q),
(359,298,o),
(396,297,o),
(412,296,o),
(415,292,q),
(418,291,o),
(418,255,o),
(416,209,o),
(416,192,qs),
(416,165,o),
(411,170,qs),
(407,174,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
73 1 4 3 88 1 5 2 102 99 38 34 4 12 5 183 1 13 12 147 28 2 7 11 206 140 2 14 7 130 112 16 14 4 6 14 7 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 12 5 13 13 12 114 0 3 0 4 1 3 4 105 8 1 7 0 14 6 7 14 105 0 2 2 39 77 0 5 5 1 97 0 1 1 37 77 16 1 11 11 13 97 17 1 13 13 46 77 0 6 6 0 97 15 10 9 3 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 12 5 13 13 12 114 0 3 0 4 1 3 4 105 17 1 13 16 1 11 7 13 11 106 8 1 7 0 14 6 7 14 105 0 2 2 39 77 0 5 5 1 97 0 1 1 37 77 0 6 6 0 97 15 10 9 3 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 12 5 13 13 12 114 0 3 0 4 1 3 4 105 8 1 7 0 14 6 7 14 105 0 2 2 39 77 0 5 5 1 97 0 1 1 37 77 16 1 11 11 13 97 17 1 13 13 46 77 0 6 6 0 97 15 10 9 3 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 12 5 13 13 12 114 0 3 0 4 1 3 4 105 17 1 13 16 1 11 7 13 11 106 8 1 7 0 14 6 7 14 105 0 2 2 39 77 0 5 5 1 97 0 1 1 37 77 0 6 6 0 97 15 10 9 3 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 12 5 13 5 12 13 128 0 3 0 4 1 3 4 105 17 1 13 16 1 11 7 13 11 106 8 1 7 0 14 6 7 14 105 0 2 2 39 77 0 5 5 1 97 0 1 1 37 77 0 6 6 0 97 15 10 9 3 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 12 5 13 13 12 114 0 3 0 4 1 3 4 105 17 1 13 16 1 11 7 13 11 106 8 1 7 0 14 6 7 14 105 0 2 2 39 77 0 5 5 1 97 0 1 1 37 77 0 6 6 0 97 15 10 9 3 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
0 12 5 13 5 12 13 128 0 3 0 4 1 3 4 105 17 1 13 16 1 11 7 13 11 106 8 1 7 0 14 6 7 14 105 0 2 2 39 77 0 5 5 1 97 0 1 1 37 77 0 6 6 0 97 15 10 9 3 0 0 38 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 44 values pushed */
182 181 168 167 0 0 202 199 181 191 182 191 173 172 167 180 168 180 0 166 0 164 161 160 153 150 146 144 128 123 95 92 84 80 66 60 53 52 50 47 53 18 8 23 
CALL[ ]	/* CallFunction */";
};
width = 480;
}
);
note = uni0193;
unicode = 403;
},
{
glyphname = uni0241;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(134,93,o),
(135,171,o),
(137,243,o),
(141,292,o),
(143,298,qs),
(145,303,o),
(160,309,o),
(166,310,qs),
(171,311,o),
(180,310,o),
(184,310,q),
(206,315,o),
(227,324,o),
(236,324,qs),
(241,324,o),
(274,341,o),
(323,360,o),
(350,363,qs),
(361,365,o),
(375,396,o),
(375,411,qs),
(375,423,o),
(371,428,q),
(379,434,o),
(375,447,o),
(370,453,q),
(371,513,ls),
(371,518,o),
(380,527,o),
(375,532,qs),
(367,539,o),
(378,548,o),
(378,553,qs),
(377,588,o),
(377,658,o),
(377,693,qs),
(377,700,o),
(365,712,o),
(358,712,qs),
(38,712,ls),
(26,712,o),
(20,707,o),
(15,694,q),
(11,687,o),
(10,671,o),
(14,663,qs),
(25,646,o),
(15,627,q),
(12,623,o),
(18,617,o),
(17,614,qs),
(16,609,o),
(7,591,o),
(11,587,q),
(16,578,o),
(20,559,o),
(20,549,qs),
(20,543,o),
(19,531,o),
(19,525,qs),
(19,511,o),
(32,501,qs),
(34,499,o),
(40,491,o),
(45,496,q),
(48,501,o),
(71,514,o),
(96,529,o),
(99,535,qs),
(110,559,o),
(136,567,qs),
(144,569,o),
(145,579,o),
(149,581,qs),
(159,588,o),
(177,591,o),
(183,601,qs),
(193,620,o),
(227,647,o),
(244,660,q),
(249,665,o),
(259,674,o),
(261,678,q),
(261,679,o),
(278,678,o),
(298,678,o),
(300,678,qs),
(334,678,ls),
(343,678,o),
(343,667,qs),
(343,654,o),
(343,613,o),
(343,571,o),
(343,539,o),
(344,536,q),
(347,531,o),
(340,506,o),
(336,482,o),
(341,476,q),
(340,470,o),
(335,427,o),
(335,406,qs),
(335,398,o),
(328,398,qs),
(323,398,o),
(303,391,o),
(260,374,o),
(220,357,qs),
(215,355,o),
(202,360,o),
(200,356,qs),
(194,344,o),
(181,345,o),
(174,345,qs),
(160,346,o),
(148,343,o),
(136,339,o),
(121,338,qs),
(114,338,o),
(103,321,o),
(106,313,qs),
(110,303,o),
(108,268,o),
(108,259,q),
(106,257,o),
(104,223,o),
(102,175,o),
(101,126,o),
(101,92,o),
(101,90,qs),
(101,6,l),
(102,-2,o),
(130,0,o),
(134,3,q),
(134,25,o)
);
},
{
closed = 1;
nodes = (
(47,578,o),
(47,626,o),
(51,669,o),
(56,678,q),
(71,678,o),
(100,679,o),
(116,679,qs),
(222,679,l),
(197,659,o),
(149,619,o),
(123,599,qs),
(107,586,o),
(71,549,o),
(50,542,q),
(49,543,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
111 108 101 80 4 3 4 1 76 3 0 2 6 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 3 4 2 4 3 2 128 0 2 1 4 2 1 126 0 1 0 4 1 0 126 0 0 6 4 0 6 126 0 6 6 132 7 1 4 4 5 95 0 5 5 37 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 3 4 2 4 3 2 128 0 2 1 4 2 1 126 0 1 0 4 1 0 126 0 0 6 4 0 6 126 0 6 6 132 0 5 4 4 5 87 0 5 5 4 97 7 1 4 5 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
145 141 121 119 95 93 94 36 33 35 47 8 8 27 
CALL[ ]	/* CallFunction */";
};
width = 418;
}
);
note = uni0241;
unicode = 577;
},
{
glyphname = uni1E20;
layers = (
{
layerId = m01;
shapes = (
{
ref = G;
},
{
pos = (81,547);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
547 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = uni1E20;
unicode = 7712;
},
{
glyphname = uni01E4;
layers = (
{
layerId = m01;
shapes = (
{
ref = G;
},
{
pos = (257,-108);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-108 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = uni01E4;
unicode = 484;
},
{
glyphname = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(73,10,o),
(74,15,q),
(73,26,o),
(73,82,o),
(73,155,o),
(73,233,o),
(74,301,o),
(74,323,qs),
(74,334,o),
(82,337,o),
(99,337,qs),
(389,337,ls),
(417,337,o),
(428,327,o),
(428,303,qs),
(428,241,o),
(428,169,o),
(428,135,o),
(429,122,o),
(429,119,qs),
(430,112,o),
(419,99,o),
(428,92,qs),
(429,91,o),
(427,87,o),
(426,85,qs),
(417,69,o),
(421,37,o),
(422,18,qs),
(422,9,o),
(439,0,o),
(455,6,o),
(455,19,qs),
(455,24,o),
(455,41,o),
(455,89,o),
(454,139,q),
(462,162,l),
(462,185,o),
(463,271,o),
(463,369,o),
(464,455,o),
(464,478,qs),
(464,482,o),
(465,509,o),
(466,542,o),
(469,568,o),
(471,571,q),
(469,574,o),
(466,604,o),
(465,641,o),
(464,673,o),
(464,677,qs),
(464,681,ls),
(464,689,o),
(449,698,o),
(440,697,qs),
(437,697,o),
(430,694,o),
(430,692,qs),
(429,686,o),
(429,672,o),
(429,665,qs),
(429,393,ls),
(429,374,o),
(408,370,qs),
(404,369,o),
(396,368,o),
(391,368,qs),
(89,368,ls),
(83,368,o),
(77,370,q),
(73,374,o),
(78,380,o),
(79,384,q),
(83,392,o),
(83,402,qs),
(83,473,o),
(83,601,o),
(84,671,qs),
(84,681,o),
(63,703,o),
(57,698,qs),
(45,686,o),
(41,677,o),
(42,675,q),
(48,669,o),
(48,656,o),
(48,649,qs),
(48,580,o),
(47,516,o),
(44,496,o),
(41,493,q),
(40,475,o),
(40,453,o),
(40,433,qs),
(40,8,ls),
(40,0,o),
(52,0,qs),
(60,1,o)
);
},
{
closed = 1;
nodes = (
(287,512,o),
(288,519,qs),
(288,524,o),
(280,535,o),
(278,541,qs),
(275,555,o),
(243,556,o),
(225,543,q),
(219,537,o),
(217,526,q),
(213,517,o),
(222,508,qs),
(227,503,o),
(248,491,o),
(270,487,o),
(275,492,q),
(279,498,o)
);
},
{
closed = 1;
nodes = (
(245,515,o),
(243,517,qs),
(241,519,o),
(242,522,q),
(242,525,o),
(244,527,q),
(249,530,o),
(257,530,o),
(258,526,q),
(259,525,o),
(261,522,o),
(261,520,qs),
(261,518,o),
(259,515,o),
(258,513,q),
(256,511,o)
);
},
{
closed = 1;
nodes = (
(279,155,o),
(285,162,qs),
(293,174,o),
(285,185,qs),
(278,193,o),
(259,209,o),
(248,209,qs),
(230,209,o),
(216,184,o),
(216,177,qs),
(216,165,o),
(237,148,o),
(256,148,qs),
(266,147,o)
);
},
{
closed = 1;
nodes = (
(244,178,qs),
(244,180,o),
(247,187,o),
(251,187,qs),
(258,187,o),
(261,180,q),
(263,179,o),
(261,174,q),
(257,170,o),
(254,171,q),
(244,171,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
6 1 1 3 136 1 7 6 61 1 4 7 97 62 2 0 4 4 76 13 1 3 74 0 3 1 3 133 0 1 0 2 5 1 2 104 0 5 0 6 7 5 6 105 8 1 7 0 4 0 7 4 105 0 0 0 38 0 78 147 147 147 157 147 157 154 152 140 138 134 133 110 109 89 86 30 28 16 9 8 23 
CALL[ ]	/* CallFunction */";
};
width = 511;
}
);
note = H;
unicode = 72;
},
{
glyphname = Hbar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(137,12,o),
(138,17,q),
(137,28,o),
(137,83,o),
(137,156,o),
(137,233,o),
(138,301,o),
(138,323,qs),
(138,334,o),
(146,337,o),
(163,337,qs),
(453,337,ls),
(481,337,o),
(492,327,o),
(492,303,qs),
(492,241,o),
(492,169,o),
(492,134,o),
(493,121,o),
(493,118,qs),
(494,111,o),
(483,98,o),
(492,91,qs),
(493,90,o),
(491,86,o),
(490,84,qs),
(481,68,o),
(493,36,o),
(494,17,qs),
(494,8,o),
(511,-1,o),
(527,5,o),
(527,18,qs),
(527,80,o),
(527,216,o),
(527,347,o),
(528,455,o),
(529,524,o),
(529,530,q),
(559,531,o),
(614,530,o),
(629,537,q),
(627,544,l),
(612,551,o),
(571,560,o),
(538,562,o),
(533,560,q),
(533,561,o),
(532,593,o),
(530,636,o),
(528,673,o),
(528,677,qs),
(528,681,ls),
(528,689,o),
(513,698,o),
(504,697,qs),
(501,697,o),
(494,694,o),
(494,692,qs),
(493,686,o),
(493,672,o),
(493,665,qs),
(493,562,l),
(471,562,ls),
(460,562,o),
(403,562,o),
(329,562,o),
(255,562,o),
(197,563,o),
(186,563,qs),
(176,563,o),
(157,564,o),
(147,564,q),
(147,590,o),
(148,643,o),
(148,671,qs),
(148,681,o),
(127,703,o),
(121,698,qs),
(109,686,o),
(105,677,o),
(106,675,q),
(112,669,o),
(112,656,o),
(112,649,qs),
(112,566,l),
(67,566,ls),
(48,566,o),
(22,557,o),
(7,556,qs),
(1,555,o),
(0,538,o),
(5,538,qs),
(21,539,o),
(53,537,o),
(70,537,qs),
(77,537,o),
(90,535,o),
(97,536,qs),
(111,539,l),
(110,506,o),
(104,466,o),
(104,433,qs),
(104,10,ls),
(104,2,o),
(116,2,qs),
(124,3,o)
);
},
{
closed = 1;
nodes = (
(150,370,q),
(146,374,o),
(142,380,o),
(143,384,q),
(147,392,o),
(147,402,qs),
(147,538,l),
(167,538,o),
(203,536,o),
(216,536,qs),
(233,535,o),
(274,537,o),
(290,537,qs),
(296,537,o),
(307,537,o),
(311,535,q),
(326,531,o),
(358,534,o),
(373,534,qs),
(390,534,o),
(422,536,o),
(438,535,qs),
(449,535,o),
(477,534,o),
(493,534,q),
(493,393,ls),
(493,377,o),
(469,368,o),
(455,368,qs),
(162,368,ls),
(156,368,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
6 1 1 4 133 1 7 5 104 1 0 6 3 76 64 1 1 1 75 24 1 2 74 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
6 1 1 2 133 1 7 5 104 1 0 6 3 76 64 1 1 1 75 24 1 2 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
6 1 1 4 133 1 7 5 104 1 0 6 3 76 64 1 1 1 75 24 1 2 74 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
3 1 2 9 8 2 1 5 2 1 103 0 4 0 5 7 4 5 105 10 1 7 0 6 0 7 6 103 0 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
9 1 1 5 2 1 87 4 3 2 2 8 1 5 7 2 5 105 10 1 7 0 6 0 7 6 103 0 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
3 1 2 9 8 2 1 5 2 1 103 0 4 0 5 7 4 5 105 10 1 7 0 6 0 7 6 103 0 0 0 38 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
109 107 130 123 119 112 107 137 109 137 96 93 36 63 173 37 102 16 11 8 28 
CALL[ ]	/* CallFunction */";
};
width = 629;
}
);
note = Hbar;
unicode = 294;
},
{
glyphname = uni1E2A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(73,10,o),
(74,15,q),
(73,26,o),
(73,82,o),
(73,155,o),
(73,233,o),
(74,301,o),
(74,323,qs),
(74,334,o),
(82,337,o),
(99,337,qs),
(389,337,ls),
(417,337,o),
(428,327,o),
(428,303,qs),
(428,241,o),
(428,169,o),
(428,135,o),
(429,122,o),
(429,119,qs),
(430,112,o),
(419,99,o),
(428,92,qs),
(429,91,o),
(427,87,o),
(426,85,qs),
(417,69,o),
(421,37,o),
(422,18,qs),
(422,9,o),
(439,0,o),
(455,6,o),
(455,19,qs),
(455,24,o),
(455,41,o),
(455,89,o),
(454,139,q),
(462,162,l),
(462,185,o),
(463,271,o),
(463,369,o),
(464,455,o),
(464,478,qs),
(464,482,o),
(465,509,o),
(466,542,o),
(469,568,o),
(471,571,q),
(469,574,o),
(466,604,o),
(465,641,o),
(464,673,o),
(464,677,qs),
(464,681,ls),
(464,689,o),
(449,698,o),
(440,697,qs),
(437,697,o),
(430,694,o),
(430,692,qs),
(429,686,o),
(429,672,o),
(429,665,qs),
(429,393,ls),
(429,374,o),
(408,370,qs),
(404,369,o),
(396,368,o),
(391,368,qs),
(89,368,ls),
(83,368,o),
(77,370,q),
(73,374,o),
(78,380,o),
(79,384,q),
(83,392,o),
(83,402,qs),
(83,473,o),
(83,601,o),
(84,671,qs),
(84,681,o),
(63,703,o),
(57,698,qs),
(45,686,o),
(41,677,o),
(42,675,q),
(48,669,o),
(48,656,o),
(48,649,qs),
(48,580,o),
(47,516,o),
(44,496,o),
(41,493,q),
(40,475,o),
(40,453,o),
(40,433,qs),
(40,8,ls),
(40,0,o),
(52,0,qs),
(60,1,o)
);
},
{
closed = 1;
nodes = (
(287,512,o),
(288,519,qs),
(288,524,o),
(280,535,o),
(278,541,qs),
(275,555,o),
(243,556,o),
(225,543,q),
(219,537,o),
(217,526,q),
(213,517,o),
(222,508,qs),
(227,503,o),
(248,491,o),
(270,487,o),
(275,492,q),
(279,498,o)
);
},
{
closed = 1;
nodes = (
(245,515,o),
(243,517,qs),
(241,519,o),
(242,522,q),
(242,525,o),
(244,527,q),
(249,530,o),
(257,530,o),
(258,526,q),
(259,525,o),
(261,522,o),
(261,520,qs),
(261,518,o),
(259,515,o),
(258,513,q),
(256,511,o)
);
},
{
closed = 1;
nodes = (
(279,155,o),
(285,162,qs),
(293,174,o),
(285,185,qs),
(278,193,o),
(259,209,o),
(248,209,qs),
(230,209,o),
(216,184,o),
(216,177,qs),
(216,165,o),
(237,148,o),
(256,148,qs),
(266,147,o)
);
},
{
closed = 1;
nodes = (
(244,178,qs),
(244,180,o),
(247,187,o),
(251,187,qs),
(258,187,o),
(261,180,q),
(263,179,o),
(261,174,q),
(257,170,o),
(254,171,q),
(244,171,o)
);
},
{
closed = 1;
nodes = (
(361,-140,o),
(360,-129,qs),
(354,-50,l),
(334,-44,o),
(324,-58,o),
(324,-64,qs),
(324,-67,o),
(324,-90,o),
(325,-98,q),
(327,-104,o),
(323,-117,o),
(320,-122,q),
(308,-123,o),
(262,-124,o),
(250,-121,qs),
(247,-120,o),
(243,-117,o),
(239,-120,qs),
(236,-123,o),
(228,-123,qs),
(220,-124,o),
(203,-127,o),
(195,-125,q),
(189,-125,o),
(176,-110,o),
(181,-102,q),
(185,-73,l),
(185,-66,o),
(175,-46,o),
(164,-53,qs),
(158,-57,o),
(153,-92,o),
(153,-128,o),
(154,-136,qs),
(154,-141,o),
(167,-153,o),
(172,-153,qs),
(178,-154,o),
(215,-153,o),
(260,-151,o),
(296,-150,o),
(302,-150,qs),
(310,-150,o),
(327,-152,o),
(335,-157,qs),
(336,-158,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 96 values pushed */
6 1 1 3 136 1 7 6 61 1 4 7 97 62 2 0 4 185 1 9 0 5 76 13 1 3 74 0 3 1 3 133 0 1 0 2 5 1 2 104 0 5 0 6 7 5 6 105 10 1 7 0 4 0 7 4 105 0 9 0 8 9 8 101 0 0 0 38 0 78 147 147 190 189 165 160 147 157 147 157 154 152 140 138 134 133 110 109 89 86 30 28 16 11 8 23 
CALL[ ]	/* CallFunction */";
};
width = 511;
}
);
note = uni1E2A;
unicode = 7722;
},
{
glyphname = uni021E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(73,10,o),
(74,15,q),
(73,26,o),
(73,82,o),
(73,155,o),
(73,233,o),
(74,301,o),
(74,323,qs),
(74,334,o),
(82,337,o),
(99,337,qs),
(389,337,ls),
(417,337,o),
(428,327,o),
(428,303,qs),
(428,241,o),
(428,169,o),
(428,135,o),
(429,122,o),
(429,119,qs),
(430,112,o),
(419,99,o),
(428,92,qs),
(429,91,o),
(427,87,o),
(426,85,qs),
(417,69,o),
(421,37,o),
(422,18,qs),
(422,9,o),
(439,0,o),
(455,6,o),
(455,19,qs),
(455,24,o),
(455,41,o),
(455,89,o),
(454,139,q),
(462,162,l),
(462,185,o),
(463,271,o),
(463,369,o),
(464,455,o),
(464,478,qs),
(464,482,o),
(465,509,o),
(466,542,o),
(469,568,o),
(471,571,q),
(469,574,o),
(466,604,o),
(465,641,o),
(464,673,o),
(464,677,qs),
(464,681,ls),
(464,689,o),
(449,698,o),
(440,697,qs),
(437,697,o),
(430,694,o),
(430,692,qs),
(429,686,o),
(429,672,o),
(429,665,qs),
(429,393,ls),
(429,374,o),
(408,370,qs),
(404,369,o),
(396,368,o),
(391,368,qs),
(89,368,ls),
(83,368,o),
(77,370,q),
(73,374,o),
(78,380,o),
(79,384,q),
(83,392,o),
(83,402,qs),
(83,473,o),
(83,601,o),
(84,671,qs),
(84,681,o),
(63,703,o),
(57,698,qs),
(45,686,o),
(41,677,o),
(42,675,q),
(48,669,o),
(48,656,o),
(48,649,qs),
(48,580,o),
(47,516,o),
(44,496,o),
(41,493,q),
(40,475,o),
(40,453,o),
(40,433,qs),
(40,8,ls),
(40,0,o),
(52,0,qs),
(60,1,o)
);
},
{
closed = 1;
nodes = (
(287,512,o),
(288,519,qs),
(288,524,o),
(280,535,o),
(278,541,qs),
(275,555,o),
(243,556,o),
(225,543,q),
(219,537,o),
(217,526,q),
(213,517,o),
(222,508,qs),
(227,503,o),
(248,491,o),
(270,487,o),
(275,492,q),
(279,498,o)
);
},
{
closed = 1;
nodes = (
(245,515,o),
(243,517,qs),
(241,519,o),
(242,522,q),
(242,525,o),
(244,527,q),
(249,530,o),
(257,530,o),
(258,526,q),
(259,525,o),
(261,522,o),
(261,520,qs),
(261,518,o),
(259,515,o),
(258,513,q),
(256,511,o)
);
},
{
closed = 1;
nodes = (
(279,155,o),
(285,162,qs),
(293,174,o),
(285,185,qs),
(278,193,o),
(259,209,o),
(248,209,qs),
(230,209,o),
(216,184,o),
(216,177,qs),
(216,165,o),
(237,148,o),
(256,148,qs),
(266,147,o)
);
},
{
closed = 1;
nodes = (
(244,178,qs),
(244,180,o),
(247,187,o),
(251,187,qs),
(258,187,o),
(261,180,q),
(263,179,o),
(261,174,q),
(257,170,o),
(254,171,q),
(244,171,o)
);
},
{
closed = 1;
nodes = (
(301,836,o),
(298,832,qs),
(296,830,o),
(283,813,o),
(281,811,qs),
(279,808,o),
(272,797,o),
(270,796,qs),
(264,793,o),
(260,793,o),
(255,795,q),
(251,800,o),
(229,820,o),
(202,843,o),
(179,859,o),
(174,859,q),
(166,861,o),
(154,859,o),
(158,850,q),
(164,844,o),
(176,831,o),
(180,824,q),
(185,821,o),
(197,806,o),
(203,803,q),
(211,796,o),
(218,787,o),
(225,781,qs),
(233,774,o),
(249,760,o),
(253,749,qs),
(255,745,o),
(263,744,o),
(265,748,q),
(276,760,o),
(307,794,o),
(337,829,o),
(357,852,o),
(356,853,qs),
(354,855,o),
(348,860,o),
(346,860,q),
(341,862,o),
(334,860,q),
(320,853,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
6 1 1 3 136 1 7 6 61 1 4 7 97 62 2 0 4 4 76 13 1 3 74 0 3 1 3 133 0 1 0 2 5 1 2 104 0 5 0 6 7 5 6 105 8 1 7 0 4 0 7 4 105 0 0 0 38 0 78 147 147 147 157 147 157 154 152 140 138 134 133 110 109 89 86 30 28 16 9 8 23 
CALL[ ]	/* CallFunction */";
};
width = 511;
}
);
note = uni021E;
unicode = 542;
},
{
glyphname = uni1E28;
layers = (
{
layerId = m01;
shapes = (
{
ref = H;
},
{
pos = (176,-6);
ref = uni0327.alt;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
-6 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 511;
}
);
note = uni1E28;
unicode = 7720;
},
{
glyphname = Hcircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = H;
},
{
pos = (121,131);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
131 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 511;
}
);
note = Hcircumflex;
unicode = 292;
},
{
glyphname = uni1E26;
layers = (
{
layerId = m01;
shapes = (
{
ref = H;
},
{
pos = (98,130);
ref = uni0308;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 2 
PUSHB[ ]	/* 1 value pushed */
130 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 511;
}
);
note = uni1E26;
unicode = 7718;
},
{
glyphname = uni1E22;
layers = (
{
layerId = m01;
shapes = (
{
ref = H;
},
{
pos = (184,116);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
116 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 511;
}
);
note = uni1E22;
unicode = 7714;
},
{
glyphname = uni1E24;
layers = (
{
layerId = m01;
shapes = (
{
ref = H;
},
{
pos = (183,-114);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 511;
}
);
note = uni1E24;
unicode = 7716;
},
{
glyphname = uniA726;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(73,10,o),
(74,15,q),
(73,26,o),
(73,82,o),
(73,155,o),
(73,233,o),
(74,301,o),
(74,323,qs),
(74,334,o),
(82,337,o),
(99,337,qs),
(389,337,ls),
(417,337,o),
(428,327,o),
(428,303,qs),
(428,241,o),
(428,169,o),
(428,135,o),
(429,122,o),
(429,119,qs),
(430,112,o),
(419,99,o),
(428,92,qs),
(429,91,o),
(427,87,o),
(426,85,qs),
(417,69,o),
(421,37,o),
(422,18,qs),
(422,13,o),
(425,10,q),
(424,7,o),
(422,1,o),
(422,-2,qs),
(425,-21,o),
(423,-35,o),
(421,-40,o),
(422,-47,q),
(424,-52,o),
(422,-75,o),
(422,-80,qs),
(423,-97,o),
(397,-109,o),
(361,-110,o),
(329,-109,o),
(323,-114,q),
(317,-114,o),
(317,-140,o),
(329,-140,q),
(332,-139,o),
(351,-142,o),
(355,-140,qs),
(362,-135,o),
(383,-141,o),
(393,-140,qs),
(418,-138,o),
(452,-125,o),
(453,-97,qs),
(453,-65,ls),
(453,-60,o),
(453,-30,o),
(454,-26,qs),
(461,-7,o),
(453,10,q),
(455,13,o),
(455,19,qs),
(455,24,o),
(455,41,o),
(455,89,o),
(454,139,q),
(462,162,l),
(462,185,o),
(463,271,o),
(463,369,o),
(464,455,o),
(464,478,qs),
(464,482,o),
(465,509,o),
(466,542,o),
(469,568,o),
(471,571,q),
(469,574,o),
(466,604,o),
(465,641,o),
(464,673,o),
(464,677,qs),
(464,681,ls),
(464,689,o),
(449,698,o),
(440,697,qs),
(437,697,o),
(430,694,o),
(430,692,qs),
(429,686,o),
(429,672,o),
(429,665,qs),
(429,393,ls),
(429,374,o),
(408,370,qs),
(404,369,o),
(396,368,o),
(391,368,qs),
(89,368,ls),
(83,368,o),
(77,370,q),
(73,374,o),
(78,380,o),
(79,384,q),
(83,392,o),
(83,402,qs),
(83,473,o),
(83,601,o),
(84,671,qs),
(84,681,o),
(63,703,o),
(57,698,qs),
(45,686,o),
(41,677,o),
(42,675,q),
(48,669,o),
(48,656,o),
(48,649,qs),
(48,580,o),
(47,516,o),
(44,496,o),
(41,493,q),
(40,475,o),
(40,453,o),
(40,433,qs),
(40,8,ls),
(40,0,o),
(52,0,qs),
(60,1,o)
);
},
{
closed = 1;
nodes = (
(287,512,o),
(288,519,qs),
(288,524,o),
(280,535,o),
(278,541,qs),
(275,555,o),
(243,556,o),
(225,543,q),
(219,537,o),
(217,526,q),
(213,517,o),
(222,508,qs),
(227,503,o),
(248,491,o),
(270,487,o),
(275,492,q),
(279,498,o)
);
},
{
closed = 1;
nodes = (
(245,515,o),
(243,517,qs),
(241,519,o),
(242,522,q),
(242,525,o),
(244,527,q),
(249,530,o),
(257,530,o),
(258,526,q),
(259,525,o),
(261,522,o),
(261,520,qs),
(261,518,o),
(259,515,o),
(258,513,q),
(256,511,o)
);
},
{
closed = 1;
nodes = (
(279,155,o),
(285,162,qs),
(293,174,o),
(285,185,qs),
(278,193,o),
(259,209,o),
(248,209,qs),
(230,209,o),
(216,184,o),
(216,177,qs),
(216,165,o),
(237,148,o),
(256,148,qs),
(266,147,o)
);
},
{
closed = 1;
nodes = (
(244,178,qs),
(244,180,o),
(247,187,o),
(251,187,qs),
(258,187,o),
(261,180,q),
(263,179,o),
(261,174,q),
(257,170,o),
(254,171,q),
(244,171,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 99 values pushed */
6 1 1 5 169 1 9 8 61 1 6 9 130 103 62 3 0 6 98 91 70 3 3 0 5 76 13 1 5 74 0 5 1 5 133 0 1 0 4 7 1 4 104 0 7 0 8 9 7 8 105 10 1 9 0 6 0 9 6 105 0 3 0 2 3 2 101 0 0 0 38 0 78 180 180 180 190 180 190 187 185 173 171 167 166 143 142 122 119 89 87 84 80 30 28 16 11 8 23 
CALL[ ]	/* CallFunction */";
};
width = 511;
}
);
note = uniA726;
unicode = 42790;
},
{
glyphname = uniA7AA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(168,10,o),
(169,15,q),
(168,26,o),
(168,82,o),
(168,155,o),
(168,233,o),
(169,301,o),
(169,323,qs),
(169,334,o),
(177,337,o),
(194,337,qs),
(484,337,ls),
(512,337,o),
(523,327,o),
(523,303,qs),
(523,241,o),
(523,169,o),
(523,135,o),
(524,122,o),
(524,119,qs),
(525,112,o),
(514,99,o),
(523,92,qs),
(524,91,o),
(522,87,o),
(521,85,qs),
(512,69,o),
(516,37,o),
(517,18,qs),
(517,9,o),
(534,0,o),
(550,6,o),
(550,19,qs),
(550,24,o),
(550,41,o),
(550,89,o),
(549,139,q),
(557,162,l),
(557,185,o),
(558,271,o),
(558,369,o),
(559,455,o),
(559,478,qs),
(559,482,o),
(560,509,o),
(561,542,o),
(564,568,o),
(566,571,q),
(564,574,o),
(561,604,o),
(560,641,o),
(559,673,o),
(559,677,qs),
(559,681,ls),
(559,689,o),
(544,698,o),
(535,697,qs),
(532,697,o),
(525,694,o),
(525,692,qs),
(524,686,o),
(524,672,o),
(524,665,qs),
(524,393,ls),
(524,374,o),
(503,370,qs),
(499,369,o),
(491,368,o),
(486,368,qs),
(184,368,ls),
(178,368,o),
(172,370,q),
(168,374,o),
(173,380,o),
(174,384,q),
(178,392,o),
(178,402,qs),
(178,473,o),
(178,601,o),
(179,671,qs),
(179,679,o),
(171,689,q),
(170,692,o),
(165,695,q),
(162,698,o),
(159,699,q),
(148,706,o),
(129,709,o),
(115,704,qs),
(111,703,o),
(81,703,o),
(76,703,qs),
(53,704,o),
(48,704,o),
(44,704,qs),
(16,703,o),
(2,669,o),
(0,644,qs),
(-1,634,o),
(5,613,o),
(0,606,qs),
(-2,602,o),
(1,583,o),
(0,580,q),
(0,568,o),
(26,568,o),
(26,574,q),
(31,580,o),
(31,612,o),
(32,648,o),
(44,674,o),
(61,673,qs),
(66,673,o),
(89,674,o),
(94,672,q),
(101,671,o),
(106,673,o),
(120,675,o),
(139,672,q),
(139,672,l),
(144,668,o),
(143,656,o),
(143,649,qs),
(143,580,o),
(142,516,o),
(139,496,o),
(136,493,q),
(135,475,o),
(135,453,o),
(135,433,qs),
(135,8,ls),
(135,0,o),
(147,0,qs),
(155,1,o)
);
},
{
closed = 1;
nodes = (
(382,512,o),
(383,519,qs),
(383,524,o),
(375,535,o),
(373,541,qs),
(370,555,o),
(338,556,o),
(320,543,q),
(314,537,o),
(312,526,q),
(308,517,o),
(317,508,qs),
(322,503,o),
(343,491,o),
(365,487,o),
(370,492,q),
(374,498,o)
);
},
{
closed = 1;
nodes = (
(340,515,o),
(338,517,qs),
(336,519,o),
(337,522,q),
(337,525,o),
(339,527,q),
(344,530,o),
(352,530,o),
(353,526,q),
(354,525,o),
(356,522,o),
(356,520,qs),
(356,518,o),
(354,515,o),
(353,513,q),
(351,511,o)
);
},
{
closed = 1;
nodes = (
(374,155,o),
(380,162,qs),
(388,174,o),
(380,185,qs),
(373,193,o),
(354,209,o),
(343,209,qs),
(325,209,o),
(311,184,o),
(311,177,qs),
(311,165,o),
(332,148,o),
(351,148,qs),
(361,147,o)
);
},
{
closed = 1;
nodes = (
(339,178,qs),
(339,180,o),
(342,187,o),
(346,187,qs),
(353,187,o),
(356,180,q),
(358,179,o),
(356,174,q),
(352,170,o),
(349,171,q),
(339,171,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 98 values pushed */
29 1 5 1 6 1 3 5 170 1 9 8 95 1 6 9 131 96 2 0 6 5 76 0 5 1 3 1 5 3 128 0 3 0 4 7 3 4 104 0 7 0 8 9 7 8 105 10 1 9 0 6 0 9 6 105 0 1 1 2 97 0 2 2 37 77 0 0 0 38 0 78 181 181 181 191 181 191 188 186 174 172 168 167 144 143 123 120 64 62 43 37 22 18 16 11 8 23 
CALL[ ]	/* CallFunction */";
};
width = 606;
}
);
note = uniA7AA;
unicode = 42922;
},
{
glyphname = uniA78D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(42,343,o),
(60,335,o),
(88,337,o),
(99,337,qs),
(389,337,ls),
(417,337,o),
(428,327,o),
(428,303,qs),
(428,241,o),
(428,169,o),
(428,135,o),
(429,122,o),
(429,119,qs),
(430,112,o),
(419,99,o),
(428,92,qs),
(429,91,o),
(427,87,o),
(426,85,qs),
(417,69,o),
(421,37,o),
(422,18,qs),
(422,9,o),
(439,0,o),
(455,6,o),
(455,19,qs),
(455,24,o),
(455,41,o),
(455,89,o),
(454,139,q),
(462,162,l),
(462,185,o),
(463,271,o),
(463,369,o),
(464,455,o),
(464,478,qs),
(464,482,o),
(465,509,o),
(466,542,o),
(469,568,o),
(471,571,q),
(469,574,o),
(466,604,o),
(465,642,o),
(464,674,o),
(464,678,qs),
(464,682,ls),
(464,690,o),
(449,699,o),
(440,698,qs),
(437,698,o),
(430,695,o),
(430,693,qs),
(429,687,o),
(429,673,o),
(429,666,qs),
(429,393,ls),
(429,374,o),
(408,370,qs),
(404,369,o),
(396,368,o),
(391,368,qs),
(89,368,ls),
(83,368,o),
(77,370,q),
(73,374,o),
(78,380,o),
(79,384,q),
(83,392,o),
(83,402,qs),
(83,473,o),
(83,602,o),
(84,672,qs),
(84,682,o),
(63,704,o),
(57,699,qs),
(45,687,o),
(41,678,o),
(42,676,q),
(48,670,o),
(48,657,o),
(48,650,qs),
(48,581,o),
(47,517,o),
(44,496,o),
(41,493,q),
(40,475,o),
(40,453,o),
(40,433,qs),
(42,358,ls)
);
},
{
closed = 1;
nodes = (
(286,512,o),
(287,519,qs),
(287,524,o),
(279,535,o),
(277,541,qs),
(274,555,o),
(242,556,o),
(224,543,q),
(218,537,o),
(216,526,q),
(212,517,o),
(221,508,qs),
(226,503,o),
(247,491,o),
(269,487,o),
(274,492,q),
(278,498,o)
);
},
{
closed = 1;
nodes = (
(244,515,o),
(242,517,qs),
(240,519,o),
(241,522,q),
(241,525,o),
(243,527,q),
(248,530,o),
(256,530,o),
(257,526,q),
(258,525,o),
(260,522,o),
(260,520,qs),
(260,518,o),
(258,515,o),
(257,513,q),
(255,511,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
3 1 0 2 1 76 10 1 2 74 59 58 2 1 73 0 2 0 2 133 0 0 1 1 0 87 0 0 0 1 96 0 1 0 1 80 100 99 86 83 27 25 3 8 22 
CALL[ ]	/* CallFunction */";
};
width = 511;
}
);
note = uniA78D;
unicode = 42893;
},
{
glyphname = I;
kernLeft = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(407,8,o),
(420,9,qs),
(442,10,o),
(442,32,qs),
(442,73,o),
(442,155,o),
(443,195,q),
(429,212,l),
(415,217,o),
(413,206,qs),
(413,204,o),
(412,167,o),
(412,117,o),
(412,71,o),
(412,60,qs),
(412,42,o),
(405,37,o),
(394,37,qs),
(383,37,o),
(361,37,o),
(350,29,q),
(329,29,o),
(285,29,o),
(264,30,qs),
(262,30,o),
(257,36,o),
(257,38,qs),
(257,40,o),
(257,98,o),
(257,192,o),
(257,308,o),
(257,431,o),
(257,545,o),
(257,635,o),
(257,660,q),
(263,663,o),
(309,660,o),
(364,667,q),
(376,667,o),
(387,659,q),
(392,657,o),
(402,660,o),
(405,663,q),
(410,666,o),
(411,661,qs),
(411,658,o),
(412,648,o),
(412,618,o),
(412,556,o),
(412,502,qs),
(412,490,o),
(427,488,o),
(442,501,o),
(442,511,qs),
(442,678,ls),
(442,682,o),
(442,682,q),
(430,700,o),
(407,700,qs),
(363,699,o),
(340,700,o),
(338,698,qs),
(333,694,o),
(295,689,o),
(253,692,o),
(242,699,q),
(225,697,o),
(172,703,o),
(152,692,qs),
(141,687,o),
(125,691,o),
(109,700,o),
(96,700,qs),
(86,700,o),
(60,697,o),
(41,684,o),
(41,670,qs),
(41,649,o),
(41,585,o),
(41,521,o),
(41,499,qs),
(41,492,o),
(56,487,o),
(71,494,o),
(71,505,qs),
(71,559,o),
(71,620,o),
(71,649,o),
(72,658,o),
(72,660,qs),
(72,665,o),
(77,665,qs),
(82,666,o),
(98,669,o),
(101,667,qs),
(107,663,o),
(119,660,o),
(126,660,qs),
(131,660,o),
(161,660,o),
(195,660,o),
(223,661,o),
(226,662,q),
(228,651,o),
(226,627,o),
(232,616,q),
(225,581,l),
(225,559,o),
(225,474,o),
(225,367,o),
(226,251,o),
(226,144,o),
(226,59,o),
(226,37,qs),
(226,27,o),
(214,29,q),
(209,29,o),
(206,30,qs),
(186,37,o),
(147,31,o),
(102,27,o),
(72,36,q),
(72,47,o),
(70,75,o),
(75,84,q),
(81,91,o),
(75,102,qs),
(71,110,o),
(71,122,qs),
(71,184,ls),
(71,188,o),
(72,195,o),
(70,196,q),
(65,204,o),
(54,209,q),
(52,211,o),
(43,200,o),
(42,197,qs),
(41,195,o),
(40,191,o),
(40,189,qs),
(40,30,ls),
(40,21,o),
(52,9,o),
(61,9,qs),
(69,8,o),
(95,9,o),
(102,7,qs),
(114,3,o),
(150,6,o),
(153,6,qs),
(155,6,o),
(181,3,o),
(183,1,q),
(344,1,ls),
(349,1,o),
(361,0,o),
(371,-1,qs),
(384,-1,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 102 values pushed */
101 92 2 4 5 151 123 52 51 17 5 10 3 36 1 9 10 3 76 8 1 3 4 10 4 3 10 128 7 1 4 4 5 97 6 1 5 5 37 77 0 10 10 0 97 13 12 2 0 0 38 77 11 2 2 1 1 38 77 0 9 9 0 97 13 12 2 0 0 38 0 78 0 0 0 158 0 158 156 155 141 138 137 133 122 121 120 119 100 96 86 84 65 63 61 55 17 23 34 14 8 25 
CALL[ ]	/* CallFunction */";
};
width = 483;
}
);
note = I;
unicode = 73;
},
{
glyphname = IJ;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (483,0);
ref = J;
}
);
width = 984;
}
);
note = IJ;
unicode = 306;
},
{
glyphname = Iacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (166,143);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
143 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 483;
}
);
note = Iacute;
unicode = 205;
},
{
glyphname = uni01CF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(407,8,o),
(420,9,qs),
(442,10,o),
(442,32,qs),
(442,73,o),
(442,155,o),
(443,195,q),
(429,212,l),
(415,217,o),
(413,206,qs),
(413,204,o),
(412,167,o),
(412,117,o),
(412,71,o),
(412,60,qs),
(412,42,o),
(405,37,o),
(394,37,qs),
(383,37,o),
(361,37,o),
(350,29,q),
(329,29,o),
(285,29,o),
(264,30,qs),
(262,30,o),
(257,36,o),
(257,38,qs),
(257,40,o),
(257,98,o),
(257,192,o),
(257,308,o),
(257,431,o),
(257,545,o),
(257,635,o),
(257,660,q),
(263,663,o),
(309,660,o),
(364,667,q),
(376,667,o),
(387,659,q),
(392,657,o),
(402,660,o),
(405,663,q),
(410,666,o),
(411,661,qs),
(411,658,o),
(412,648,o),
(412,618,o),
(412,556,o),
(412,502,qs),
(412,490,o),
(427,488,o),
(442,501,o),
(442,511,qs),
(442,678,ls),
(442,682,o),
(442,682,q),
(430,700,o),
(407,700,qs),
(363,699,o),
(340,700,o),
(338,698,qs),
(333,694,o),
(295,689,o),
(253,692,o),
(242,699,q),
(225,697,o),
(172,703,o),
(152,692,qs),
(141,687,o),
(125,691,o),
(109,700,o),
(96,700,qs),
(86,700,o),
(60,697,o),
(41,684,o),
(41,670,qs),
(41,649,o),
(41,585,o),
(41,521,o),
(41,499,qs),
(41,492,o),
(56,487,o),
(71,494,o),
(71,505,qs),
(71,559,o),
(71,620,o),
(71,649,o),
(72,658,o),
(72,660,qs),
(72,665,o),
(77,665,qs),
(82,666,o),
(98,669,o),
(101,667,qs),
(107,663,o),
(119,660,o),
(126,660,qs),
(131,660,o),
(161,660,o),
(195,660,o),
(223,661,o),
(226,662,q),
(228,651,o),
(226,627,o),
(232,616,q),
(225,581,l),
(225,559,o),
(225,474,o),
(225,367,o),
(226,251,o),
(226,144,o),
(226,59,o),
(226,37,qs),
(226,27,o),
(214,29,q),
(209,29,o),
(206,30,qs),
(186,37,o),
(147,31,o),
(102,27,o),
(72,36,q),
(72,47,o),
(70,75,o),
(75,84,q),
(81,91,o),
(75,102,qs),
(71,110,o),
(71,122,qs),
(71,184,ls),
(71,188,o),
(72,195,o),
(70,196,q),
(65,204,o),
(54,209,q),
(52,211,o),
(43,200,o),
(42,197,qs),
(41,195,o),
(40,191,o),
(40,189,qs),
(40,30,ls),
(40,21,o),
(52,9,o),
(61,9,qs),
(69,8,o),
(95,9,o),
(102,7,qs),
(114,3,o),
(150,6,o),
(153,6,qs),
(155,6,o),
(181,3,o),
(183,1,q),
(344,1,ls),
(349,1,o),
(361,0,o),
(371,-1,qs),
(384,-1,o)
);
},
{
closed = 1;
nodes = (
(287,836,o),
(284,832,qs),
(282,830,o),
(269,813,o),
(267,811,qs),
(265,808,o),
(258,797,o),
(256,796,qs),
(250,793,o),
(246,793,o),
(241,795,q),
(237,800,o),
(215,820,o),
(188,843,o),
(165,859,o),
(160,859,q),
(152,861,o),
(140,859,o),
(144,850,q),
(150,844,o),
(162,831,o),
(166,824,q),
(171,821,o),
(183,806,o),
(189,803,q),
(197,796,o),
(204,787,o),
(211,781,qs),
(219,774,o),
(235,760,o),
(239,749,qs),
(241,745,o),
(249,744,o),
(251,748,q),
(262,760,o),
(293,794,o),
(323,829,o),
(343,852,o),
(342,853,qs),
(340,855,o),
(334,860,o),
(332,860,q),
(327,862,o),
(320,860,q),
(306,853,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 102 values pushed */
101 92 2 4 5 151 123 52 51 17 5 10 3 36 1 9 10 3 76 8 1 3 4 10 4 3 10 128 7 1 4 4 5 97 6 1 5 5 37 77 0 10 10 0 97 13 12 2 0 0 38 77 11 2 2 1 1 38 77 0 9 9 0 97 13 12 2 0 0 38 0 78 0 0 0 158 0 158 156 155 141 138 137 133 122 121 120 119 100 96 86 84 65 63 61 55 17 23 34 14 8 25 
CALL[ ]	/* CallFunction */";
};
width = 483;
}
);
note = uni01CF;
unicode = 463;
},
{
glyphname = Icircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (107,131);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
131 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 483;
}
);
note = Icircumflex;
unicode = 206;
},
{
glyphname = uni0208;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (90,121);
ref = uni030F;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 2 
PUSHB[ ]	/* 1 value pushed */
121 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 483;
}
);
note = uni0208;
unicode = 520;
},
{
glyphname = Idieresis;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (84,130);
ref = uni0308;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 2 
PUSHB[ ]	/* 1 value pushed */
130 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 483;
}
);
note = Idieresis;
unicode = 207;
},
{
glyphname = uni1E2E;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (84,130);
ref = uni0308;
},
{
pos = (164,264);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 2 
PUSHB[ ]	/* 1 value pushed */
130 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
264 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 483;
}
);
note = uni1E2E;
unicode = 7726;
},
{
glyphname = Idotaccent;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (170,116);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
116 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 483;
}
);
note = Idotaccent;
unicode = 304;
},
{
glyphname = uni1ECA;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (169,-114);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 483;
}
);
note = uni1ECA;
unicode = 7882;
},
{
glyphname = Igrave;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(407,8,o),
(420,9,qs),
(442,10,o),
(442,32,qs),
(442,73,o),
(442,155,o),
(443,195,q),
(429,212,l),
(415,217,o),
(413,206,qs),
(413,204,o),
(412,167,o),
(412,117,o),
(412,71,o),
(412,60,qs),
(412,42,o),
(405,37,o),
(394,37,qs),
(383,37,o),
(361,37,o),
(350,29,q),
(329,29,o),
(285,29,o),
(264,30,qs),
(262,30,o),
(257,36,o),
(257,38,qs),
(257,40,o),
(257,98,o),
(257,192,o),
(257,308,o),
(257,431,o),
(257,545,o),
(257,635,o),
(257,660,q),
(263,663,o),
(309,660,o),
(364,667,q),
(376,667,o),
(387,659,q),
(392,657,o),
(402,660,o),
(405,663,q),
(410,666,o),
(411,661,qs),
(411,658,o),
(412,648,o),
(412,618,o),
(412,556,o),
(412,502,qs),
(412,490,o),
(427,488,o),
(442,501,o),
(442,511,qs),
(442,678,ls),
(442,682,o),
(442,682,q),
(430,700,o),
(407,700,qs),
(363,699,o),
(340,700,o),
(338,698,qs),
(333,694,o),
(295,689,o),
(253,692,o),
(242,699,q),
(225,697,o),
(172,703,o),
(152,692,qs),
(141,687,o),
(125,691,o),
(109,700,o),
(96,700,qs),
(86,700,o),
(60,697,o),
(41,684,o),
(41,670,qs),
(41,649,o),
(41,585,o),
(41,521,o),
(41,499,qs),
(41,492,o),
(56,487,o),
(71,494,o),
(71,505,qs),
(71,559,o),
(71,620,o),
(71,649,o),
(72,658,o),
(72,660,qs),
(72,665,o),
(77,665,qs),
(82,666,o),
(98,669,o),
(101,667,qs),
(107,663,o),
(119,660,o),
(126,660,qs),
(131,660,o),
(161,660,o),
(195,660,o),
(223,661,o),
(226,662,q),
(228,651,o),
(226,627,o),
(232,616,q),
(225,581,l),
(225,559,o),
(225,474,o),
(225,367,o),
(226,251,o),
(226,144,o),
(226,59,o),
(226,37,qs),
(226,27,o),
(214,29,q),
(209,29,o),
(206,30,qs),
(186,37,o),
(147,31,o),
(102,27,o),
(72,36,q),
(72,47,o),
(70,75,o),
(75,84,q),
(81,91,o),
(75,102,qs),
(71,110,o),
(71,122,qs),
(71,184,ls),
(71,188,o),
(72,195,o),
(70,196,q),
(65,204,o),
(54,209,q),
(52,211,o),
(43,200,o),
(42,197,qs),
(41,195,o),
(40,191,o),
(40,189,qs),
(40,30,ls),
(40,21,o),
(52,9,o),
(61,9,qs),
(69,8,o),
(95,9,o),
(102,7,qs),
(114,3,o),
(150,6,o),
(153,6,qs),
(155,6,o),
(181,3,o),
(183,1,q),
(344,1,ls),
(349,1,o),
(361,0,o),
(371,-1,qs),
(384,-1,o)
);
},
{
closed = 1;
nodes = (
(266,792,o),
(255,802,qs),
(234,820,o),
(222,836,q),
(214,843,o),
(200,856,o),
(193,864,qs),
(189,869,o),
(180,879,o),
(173,880,q),
(171,882,o),
(165,877,o),
(163,878,qs),
(160,880,o),
(149,869,o),
(150,866,qs),
(155,854,o),
(165,831,o),
(181,826,qs),
(187,824,o),
(198,816,o),
(202,811,qs),
(210,802,o),
(231,780,o),
(247,766,qs),
(265,753,o),
(293,758,o),
(297,762,q),
(287,772,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 106 values pushed */
101 92 2 4 5 151 123 52 51 17 5 10 3 36 1 9 10 3 76 171 1 5 74 8 1 3 4 10 4 3 10 128 7 1 4 4 5 97 6 1 5 5 37 77 0 10 10 0 97 13 12 2 0 0 38 77 11 2 2 1 1 38 77 0 9 9 0 97 13 12 2 0 0 38 0 78 0 0 0 158 0 158 156 155 141 138 137 133 122 121 120 119 100 96 86 84 65 63 61 55 17 23 34 14 8 25 
CALL[ ]	/* CallFunction */";
};
width = 483;
}
);
note = Igrave;
unicode = 204;
},
{
glyphname = uni1EC8;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (135,158);
ref = hookabovecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
158 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 483;
}
);
note = uni1EC8;
unicode = 7880;
},
{
glyphname = uni020A;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (139,118);
ref = uni0311;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
118 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 483;
}
);
note = uni020A;
unicode = 522;
},
{
glyphname = Imacron;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (71,550);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
550 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 483;
}
);
note = Imacron;
unicode = 298;
},
{
glyphname = Iogonek;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (358,44);
ref = uni0328;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
44 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 483;
}
);
note = Iogonek;
unicode = 302;
},
{
glyphname = Iotalatin;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(169,19,o),
(219,51,o),
(271,89,o),
(292,106,qs),
(302,114,o),
(325,119,o),
(325,136,qs),
(325,145,o),
(335,149,o),
(330,156,qs),
(325,165,o),
(294,152,o),
(265,129,q),
(152,52,l),
(145,54,o),
(145,61,qs),
(145,643,ls),
(145,649,o),
(151,668,o),
(151,691,o),
(141,701,q),
(129,703,o),
(122,698,q),
(117,697,o),
(108,688,o),
(104,683,qs),
(97,675,o),
(83,662,o),
(75,655,q),
(63,639,o),
(42,621,qs),
(31,611,o),
(11,591,o),
(0,581,q),
(5,577,o),
(32,572,o),
(50,585,qs),
(67,599,o),
(88,621,o),
(95,630,qs),
(99,634,o),
(107,640,o),
(111,643,q),
(111,509,o),
(111,338,o),
(112,241,o),
(112,197,o),
(112,185,o),
(112,183,qs),
(112,178,o),
(109,167,o),
(104,162,q),
(109,155,o),
(112,139,o),
(112,131,qs),
(112,125,o),
(112,94,o),
(111,57,o),
(111,25,o),
(111,19,qs),
(112,12,o),
(123,1,o),
(130,0,qs),
(134,0,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
41 0 1 50 
CALL[ ]	/* CallFunction */";
};
width = 352;
}
);
note = Iotalatin;
unicode = 406;
},
{
glyphname = uni0197;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (78,106);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
106 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 483;
}
);
note = uni0197;
unicode = 407;
},
{
glyphname = Itilde;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (116,95);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
95 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 483;
}
);
note = Itilde;
unicode = 296;
},
{
glyphname = uni1E2C;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (107,-785);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-785 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 483;
}
);
note = uni1E2C;
unicode = 7724;
},
{
glyphname = J;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(109,-1,o),
(201,-4,o),
(303,-4,o),
(395,-2,o),
(453,5,o),
(453,11,qs),
(453,110,l),
(450,126,o),
(450,180,o),
(454,242,o),
(459,298,o),
(461,315,q),
(456,322,o),
(452,337,o),
(452,344,qs),
(452,462,ls),
(452,470,o),
(456,486,o),
(461,493,q),
(463,498,o),
(460,501,qs),
(451,510,o),
(447,556,o),
(449,613,o),
(453,662,o),
(453,674,qs),
(454,691,o),
(438,700,o),
(414,698,o),
(400,697,qs),
(392,697,o),
(378,699,o),
(373,702,qs),
(367,706,o),
(356,708,o),
(351,702,q),
(318,700,o),
(293,701,o),
(285,704,qs),
(282,705,o),
(276,708,o),
(274,707,qs),
(267,702,o),
(233,698,o),
(193,699,o),
(160,701,o),
(154,701,q),
(150,707,o),
(115,709,o),
(79,708,o),
(74,708,qs),
(61,708,o),
(46,693,o),
(41,684,q),
(40,683,o),
(45,670,o),
(46,669,q),
(48,669,o),
(99,669,o),
(178,668,o),
(267,669,o),
(346,668,o),
(399,668,o),
(402,668,qs),
(412,668,o),
(413,659,qs),
(413,653,o),
(412,640,o),
(417,635,q),
(417,634,o),
(416,611,o),
(414,580,o),
(413,556,o),
(413,555,q),
(422,543,o),
(421,517,o),
(413,504,qs),
(410,500,o),
(421,483,o),
(420,478,q),
(418,426,l),
(427,417,o),
(419,407,qs),
(415,401,o),
(413,390,o),
(413,383,qs),
(413,348,ls),
(413,345,o),
(412,338,o),
(413,336,q),
(418,330,o),
(422,317,o),
(422,310,qs),
(417,187,ls),
(417,182,o),
(420,164,o),
(418,160,q),
(414,156,o),
(412,144,o),
(412,139,qs),
(412,131,o),
(413,92,o),
(414,53,o),
(414,44,q),
(409,46,o),
(399,60,o),
(389,72,qs),
(378,84,o),
(352,105,o),
(344,121,qs),
(341,127,o),
(330,140,o),
(324,142,qs),
(314,146,o),
(299,161,o),
(292,168,qs),
(241,218,o),
(133,326,o),
(64,395,q),
(61,397,o),
(47,399,o),
(45,397,qs),
(40,392,o),
(40,386,qs),
(40,279,o),
(41,141,o),
(44,60,o),
(47,21,o),
(49,8,o),
(50,5,qs),
(51,3,o)
);
},
{
closed = 1;
nodes = (
(277,412,o),
(285,417,q),
(293,425,o),
(292,451,o),
(279,463,qs),
(267,472,o),
(258,475,o),
(243,464,qs),
(211,443,o),
(226,417,qs),
(231,410,o),
(245,398,o),
(252,400,qs),
(260,403,o)
);
},
{
closed = 1;
nodes = (
(251,431,qs),
(247,437,o),
(254,444,q),
(260,447,o),
(264,443,qs),
(271,437,o),
(265,431,qs),
(263,429,o),
(257,427,q),
(254,425,o)
);
},
{
closed = 1;
nodes = (
(218,30,o),
(123,32,o),
(87,32,qs),
(75,32,o),
(75,45,qs),
(75,116,o),
(70,261,o),
(71,331,qs),
(71,343,o),
(80,334,qs),
(96,319,o),
(112,299,o),
(126,282,o),
(139,269,qs),
(248,164,ls),
(262,151,o),
(293,126,o),
(305,112,qs),
(311,105,o),
(337,80,o),
(363,53,o),
(378,34,o),
(373,34,qs),
(353,34,o),
(336,32,o),
(331,27,q),
(306,27,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
88 1 3 2 151 111 56 50 49 5 0 1 123 118 115 44 40 37 6 7 7 0 124 1 6 8 4 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
88 1 3 2 151 111 56 50 49 5 0 1 123 118 115 44 40 37 6 7 7 0 124 1 6 7 4 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
88 1 3 2 151 111 56 50 49 5 0 1 123 118 115 44 40 37 6 7 7 0 124 1 6 8 4 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 1 7 1 0 7 128 0 7 8 8 7 112 0 2 2 37 77 0 1 1 3 97 5 4 2 3 3 37 77 9 1 8 8 6 98 0 6 6 47 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 1 7 1 0 7 128 0 2 2 37 77 0 1 1 3 97 5 4 2 3 3 37 77 9 8 2 7 7 6 97 0 6 6 47 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 0 1 7 1 0 7 128 0 7 8 8 7 112 0 2 2 37 77 0 1 1 3 97 5 4 2 3 3 37 77 9 1 8 8 6 98 0 6 6 47 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
155 155 155 181 155 177 158 157 130 126 101 99 94 92 86 83 82 78 72 65 40 10 8 23 
CALL[ ]	/* CallFunction */";
};
width = 501;
}
);
note = J;
unicode = 74;
},
{
glyphname = uni004A0301;
layers = (
{
layerId = m01;
shapes = (
{
ref = J;
},
{
pos = (154,143);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
143 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 501;
}
);
note = uni004A0301;
},
{
glyphname = Jcircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = J;
},
{
pos = (95,131);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
131 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 501;
}
);
note = Jcircumflex;
unicode = 308;
},
{
glyphname = uniA7B2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(104,0,o),
(189,-3,o),
(286,-4,o),
(377,-3,o),
(408,0,q),
(416,-12,o),
(429,-16,qs),
(435,-18,o),
(446,-26,o),
(450,-31,qs),
(458,-40,o),
(479,-62,o),
(495,-76,qs),
(513,-89,o),
(541,-84,o),
(545,-80,q),
(535,-70,o),
(514,-50,o),
(503,-40,qs),
(482,-22,o),
(470,-6,q),
(459,3,o),
(452,10,q),
(453,10,o),
(453,11,qs),
(453,110,l),
(450,126,o),
(450,180,o),
(454,242,o),
(459,298,o),
(461,315,q),
(456,322,o),
(452,337,o),
(452,344,qs),
(452,462,ls),
(452,470,o),
(456,486,o),
(461,493,q),
(463,498,o),
(460,501,qs),
(451,510,o),
(447,556,o),
(449,613,o),
(453,662,o),
(453,674,qs),
(454,691,o),
(438,700,o),
(414,698,o),
(400,697,qs),
(392,697,o),
(378,699,o),
(373,702,qs),
(367,706,o),
(356,708,o),
(351,702,q),
(318,700,o),
(293,701,o),
(285,704,qs),
(282,705,o),
(276,708,o),
(274,707,qs),
(267,702,o),
(233,698,o),
(193,699,o),
(160,701,o),
(154,701,q),
(150,707,o),
(115,709,o),
(79,708,o),
(74,708,qs),
(61,708,o),
(46,693,o),
(41,684,q),
(40,683,o),
(45,670,o),
(46,669,q),
(48,669,o),
(99,669,o),
(178,668,o),
(267,669,o),
(346,668,o),
(399,668,o),
(402,668,qs),
(412,668,o),
(413,659,qs),
(413,653,o),
(412,640,o),
(417,635,q),
(417,634,o),
(416,611,o),
(414,580,o),
(413,556,o),
(413,555,q),
(422,543,o),
(421,517,o),
(413,504,qs),
(410,500,o),
(421,483,o),
(420,478,q),
(418,426,l),
(427,417,o),
(419,407,qs),
(415,401,o),
(413,390,o),
(413,383,qs),
(413,348,ls),
(413,345,o),
(412,338,o),
(413,336,q),
(418,330,o),
(422,317,o),
(422,310,qs),
(417,187,ls),
(417,182,o),
(420,164,o),
(418,160,q),
(414,156,o),
(412,144,o),
(412,139,qs),
(412,131,o),
(413,92,o),
(414,53,o),
(414,44,q),
(409,46,o),
(399,60,o),
(389,72,qs),
(378,84,o),
(352,105,o),
(344,121,qs),
(341,127,o),
(330,140,o),
(324,142,qs),
(314,146,o),
(299,161,o),
(292,168,qs),
(241,218,o),
(133,326,o),
(64,395,q),
(61,397,o),
(47,399,o),
(45,397,qs),
(40,392,o),
(40,386,qs),
(40,279,o),
(41,141,o),
(44,60,o),
(47,21,o),
(49,8,o),
(50,5,qs),
(51,3,o)
);
},
{
closed = 1;
nodes = (
(277,412,o),
(285,417,q),
(293,425,o),
(292,451,o),
(279,463,qs),
(267,472,o),
(258,475,o),
(243,464,qs),
(211,443,o),
(226,417,qs),
(231,410,o),
(245,398,o),
(252,400,qs),
(260,403,o)
);
},
{
closed = 1;
nodes = (
(251,431,qs),
(247,437,o),
(254,444,q),
(260,447,o),
(264,443,qs),
(271,437,o),
(265,431,qs),
(263,429,o),
(257,427,q),
(254,425,o)
);
},
{
closed = 1;
nodes = (
(218,30,o),
(123,32,o),
(87,32,qs),
(75,32,o),
(75,45,qs),
(75,116,o),
(70,261,o),
(71,331,qs),
(71,343,o),
(80,334,qs),
(96,319,o),
(112,299,o),
(126,282,o),
(139,269,qs),
(248,164,ls),
(262,151,o),
(293,126,o),
(305,112,qs),
(311,105,o),
(337,80,o),
(363,53,o),
(378,34,o),
(373,34,qs),
(353,34,o),
(336,32,o),
(331,27,q),
(306,27,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
88 1 3 2 170 111 56 50 49 5 0 1 123 118 115 44 40 37 6 7 7 0 124 1 6 8 4 76 133 1 6 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
88 1 3 2 170 111 56 50 49 5 0 1 123 118 115 44 40 37 6 7 7 0 124 1 6 7 4 76 133 1 6 73 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
88 1 3 2 170 111 56 50 49 5 0 1 123 118 115 44 40 37 6 7 7 0 124 1 6 8 4 76 133 1 6 73 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 1 7 1 0 7 128 0 7 8 8 7 112 0 2 2 37 77 0 1 1 3 97 5 4 2 3 3 37 77 9 1 8 8 6 98 0 6 6 47 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 1 7 1 0 7 128 0 2 2 37 77 0 1 1 3 97 5 4 2 3 3 37 77 9 8 2 7 7 6 97 0 6 6 47 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 0 1 7 1 0 7 128 0 7 8 8 7 112 0 2 2 37 77 0 1 1 3 97 5 4 2 3 3 37 77 9 1 8 8 6 98 0 6 6 47 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
174 174 174 200 174 196 177 176 149 145 101 99 94 92 86 83 82 78 72 65 40 10 8 23 
CALL[ ]	/* CallFunction */";
};
width = 495;
}
);
note = uniA7B2;
unicode = 42930;
},
{
glyphname = uni0248;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(109,-1,o),
(201,-4,o),
(303,-4,o),
(395,-2,o),
(453,5,o),
(453,11,qs),
(453,110,l),
(450,126,o),
(450,180,o),
(454,242,o),
(459,298,o),
(461,315,q),
(456,322,o),
(452,337,o),
(452,344,qs),
(452,418,l),
(477,420,o),
(516,424,o),
(533,426,qs),
(544,428,o),
(544,439,o),
(533,440,qs),
(523,441,o),
(518,446,o),
(510,447,qs),
(499,448,o),
(477,449,o),
(466,449,qs),
(459,449,o),
(452,449,q),
(452,462,ls),
(452,470,o),
(456,486,o),
(461,493,q),
(463,498,o),
(460,501,qs),
(451,510,o),
(447,556,o),
(449,613,o),
(453,662,o),
(453,674,qs),
(454,691,o),
(438,700,o),
(414,698,o),
(400,697,qs),
(392,697,o),
(378,699,o),
(373,702,qs),
(367,706,o),
(356,708,o),
(351,702,q),
(318,700,o),
(293,701,o),
(285,704,qs),
(282,705,o),
(276,708,o),
(274,707,qs),
(267,702,o),
(233,698,o),
(193,699,o),
(160,701,o),
(154,701,q),
(150,707,o),
(115,709,o),
(79,708,o),
(74,708,qs),
(61,708,o),
(46,693,o),
(41,684,q),
(40,683,o),
(45,670,o),
(46,669,q),
(48,669,o),
(99,669,o),
(178,668,o),
(267,669,o),
(346,668,o),
(399,668,o),
(402,668,qs),
(412,668,o),
(413,659,qs),
(413,653,o),
(412,640,o),
(417,635,q),
(417,634,o),
(416,611,o),
(414,580,o),
(413,556,o),
(413,555,q),
(422,543,o),
(421,517,o),
(413,504,qs),
(410,500,o),
(421,483,o),
(420,478,q),
(419,448,l),
(406,448,o),
(369,448,o),
(341,448,qs),
(221,448,l),
(221,441,o),
(246,423,o),
(271,418,q),
(274,418,o),
(308,418,o),
(345,417,o),
(352,417,qs),
(372,416,o),
(407,416,o),
(422,417,q),
(423,412,o),
(419,407,qs),
(415,401,o),
(413,390,o),
(413,383,qs),
(413,348,ls),
(413,345,o),
(412,338,o),
(413,336,q),
(418,330,o),
(422,317,o),
(422,310,qs),
(417,187,ls),
(417,182,o),
(420,164,o),
(418,160,q),
(414,156,o),
(412,144,o),
(412,139,qs),
(412,131,o),
(413,92,o),
(414,53,o),
(414,44,q),
(409,46,o),
(399,60,o),
(389,72,qs),
(378,84,o),
(352,105,o),
(344,121,qs),
(341,127,o),
(330,140,o),
(324,142,qs),
(314,146,o),
(299,161,o),
(292,168,qs),
(241,218,o),
(133,326,o),
(64,395,q),
(61,397,o),
(47,399,o),
(45,397,qs),
(40,392,o),
(40,386,qs),
(40,279,o),
(41,141,o),
(44,60,o),
(47,21,o),
(49,8,o),
(50,5,qs),
(51,3,o)
);
},
{
closed = 1;
nodes = (
(218,30,o),
(123,32,o),
(87,32,qs),
(75,32,o),
(75,45,qs),
(75,116,o),
(70,261,o),
(71,331,qs),
(71,343,o),
(80,334,qs),
(96,319,o),
(112,299,o),
(126,282,o),
(139,269,qs),
(248,164,ls),
(262,151,o),
(293,126,o),
(305,112,qs),
(311,105,o),
(337,80,o),
(363,53,o),
(378,34,o),
(373,34,qs),
(353,34,o),
(336,32,o),
(331,27,q),
(306,27,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
102 1 5 4 125 70 64 3 2 3 143 1 1 2 152 147 144 44 40 37 6 7 10 0 153 1 9 11 5 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
102 1 5 4 125 70 64 3 2 3 143 1 1 2 152 147 144 44 40 37 6 7 10 0 153 1 9 10 5 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
102 1 5 4 125 70 64 3 2 3 143 1 1 2 152 147 144 44 40 37 6 7 10 0 153 1 9 11 5 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 0 1 10 1 0 10 128 0 10 11 11 10 112 0 4 4 37 77 0 3 3 5 97 7 6 2 5 5 37 77 0 1 1 2 97 8 1 2 2 40 77 12 1 11 11 9 98 0 9 9 47 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 0 1 10 1 0 10 128 0 4 4 37 77 0 3 3 5 97 7 6 2 5 5 37 77 0 1 1 2 97 8 1 2 2 40 77 12 11 2 10 10 9 97 0 9 9 47 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 0 1 10 1 0 10 128 0 10 11 11 10 112 0 4 4 37 77 0 3 3 5 97 7 6 2 5 5 37 77 0 1 1 2 97 8 1 2 2 40 77 12 1 11 11 9 98 0 9 9 47 9 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
160 160 160 186 160 182 163 162 159 155 133 129 115 113 108 106 100 97 96 92 86 79 63 58 55 50 40 13 8 23 
CALL[ ]	/* CallFunction */";
};
width = 524;
}
);
note = uni0248;
unicode = 584;
},
{
glyphname = K;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(79,25,o),
(79,32,qs),
(79,39,o),
(71,47,q),
(66,67,o),
(70,110,o),
(78,142,o),
(78,146,qs),
(78,154,o),
(77,157,o),
(76,159,o),
(75,167,q),
(78,184,o),
(80,214,o),
(72,229,qs),
(65,240,o),
(75,250,qs),
(82,257,o),
(75,263,qs),
(68,270,o),
(72,276,q),
(79,283,o),
(73,288,q),
(71,292,o),
(79,300,o),
(73,304,qs),
(71,306,o),
(70,312,o),
(70,314,qs),
(70,326,o),
(79,319,qs),
(122,282,o),
(157,253,o),
(165,242,qs),
(171,235,o),
(200,207,o),
(229,181,o),
(234,175,q),
(243,173,o),
(267,154,o),
(288,134,o),
(289,131,qs),
(296,116,o),
(323,98,o),
(333,86,q),
(350,81,o),
(381,45,o),
(420,10,qs),
(429,3,o),
(451,0,o),
(451,11,qs),
(451,31,o),
(443,65,o),
(443,84,qs),
(443,90,o),
(449,108,qs),
(450,110,o),
(451,117,o),
(449,118,q),
(444,123,o),
(443,133,o),
(443,139,qs),
(443,225,ls),
(443,228,o),
(443,235,o),
(444,237,q),
(452,245,o),
(452,257,qs),
(454,301,o),
(451,355,o),
(451,362,qs),
(451,369,o),
(451,401,o),
(452,439,o),
(452,467,o),
(452,469,qs),
(452,484,o),
(444,495,qs),
(441,498,o),
(452,508,o),
(450,512,q),
(449,517,o),
(444,524,o),
(444,528,qs),
(444,539,o),
(457,552,o),
(450,560,qs),
(436,577,o),
(449,591,qs),
(450,592,o),
(447,595,o),
(446,596,qs),
(439,604,o),
(444,614,q),
(462,639,o),
(445,662,q),
(444,667,o),
(455,683,o),
(447,689,qs),
(444,691,o),
(438,697,o),
(436,699,qs),
(433,702,o),
(406,690,o),
(401,685,qs),
(384,668,o),
(345,633,o),
(330,613,q),
(328,609,o),
(296,579,o),
(255,543,o),
(221,515,o),
(216,513,qs),
(205,510,o),
(202,492,o),
(192,489,qs),
(188,488,o),
(178,483,o),
(175,479,q),
(171,476,o),
(166,466,o),
(161,462,qs),
(86,395,ls),
(82,391,o),
(78,399,q),
(78,458,o),
(78,512,o),
(77,530,o),
(75,533,qs),
(69,541,o),
(81,550,o),
(79,557,qs),
(74,571,o),
(81,590,o),
(71,600,q),
(70,608,o),
(69,621,o),
(76,628,qs),
(81,633,o),
(76,638,qs),
(72,643,o),
(79,665,o),
(79,669,qs),
(79,677,o),
(71,691,o),
(66,698,qs),
(63,703,o),
(51,691,o),
(49,686,q),
(49,684,o),
(48,674,o),
(48,647,o),
(48,588,o),
(48,536,qs),
(48,344,ls),
(48,340,o),
(46,316,o),
(41,311,q),
(40,311,o),
(43,304,o),
(44,303,qs),
(51,293,o),
(44,286,qs),
(37,278,o),
(43,272,qs),
(48,268,o),
(48,259,qs),
(48,208,o),
(48,159,o),
(47,143,o),
(47,139,q),
(39,135,o),
(49,125,o),
(44,120,qs),
(39,115,o),
(51,109,o),
(48,104,q),
(43,99,o),
(40,86,o),
(40,79,qs),
(40,72,o),
(41,43,o),
(44,14,o),
(45,7,q),
(47,2,o),
(61,0,o),
(64,5,qs),
(68,12,o)
);
},
{
closed = 1;
nodes = (
(381,85,o),
(345,122,o),
(332,133,qs),
(317,146,o),
(303,150,o),
(294,157,o),
(286,175,q),
(284,183,o),
(266,184,o),
(264,193,q),
(264,196,o),
(253,205,o),
(220,232,o),
(157,288,o),
(105,337,qs),
(101,341,o),
(93,348,o),
(89,352,q),
(88,354,o),
(88,362,o),
(89,363,qs),
(97,368,o),
(111,384,o),
(123,387,qs),
(129,389,o),
(141,401,o),
(143,408,q),
(144,409,o),
(183,446,o),
(246,503,o),
(318,569,o),
(386,630,o),
(410,651,qs),
(417,656,o),
(417,647,qs),
(417,550,o),
(421,394,o),
(421,342,qs),
(421,278,o),
(420,204,o),
(419,168,o),
(418,158,o),
(418,156,qs),
(418,150,o),
(415,140,o),
(410,136,q),
(415,132,o),
(418,98,o),
(418,63,o),
(417,56,q),
(412,56,o)
);
},
{
closed = 1;
nodes = (
(326,342,o),
(326,349,qs),
(326,361,o),
(305,378,o),
(286,378,q),
(276,380,o),
(263,372,o),
(257,364,qs),
(249,353,o),
(257,341,q),
(265,334,o),
(284,317,o),
(294,317,qs),
(312,317,o)
);
},
{
closed = 1;
nodes = (
(281,346,qs),
(280,348,o),
(281,352,q),
(285,356,o),
(288,355,q),
(298,355,o),
(298,348,qs),
(298,347,o),
(296,339,o),
(291,339,qs),
(285,339,o)
);
}
);
userData = {
assembly = "NPUSHW[ ]	/* 26 values pushed */
260 258 250 3 3 2 158 1 0 1 2 76 103 95 62 3 2 74 192 179 175 16 10 5 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 2 3 3 2 112 0 0 1 0 134 5 1 3 1 1 3 89 5 1 3 3 1 98 4 1 1 3 1 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 3 2 133 0 0 1 0 134 5 1 3 1 1 3 89 5 1 3 3 1 98 4 1 1 3 1 82 
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 19 values pushed */
254 253 240 239 253 263 254 263 248 247 239 252 240 252 230 229 6 8 22 
CALL[ ]	/* CallFunction */";
};
width = 493;
}
);
note = K;
unicode = 75;
},
{
glyphname = uni1E30;
layers = (
{
layerId = m01;
shapes = (
{
ref = K;
},
{
pos = (161,143);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
143 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 493;
}
);
note = uni1E30;
unicode = 7728;
},
{
glyphname = uni01E8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(79,25,o),
(79,32,qs),
(79,39,o),
(71,47,q),
(66,67,o),
(70,110,o),
(78,142,o),
(78,146,qs),
(78,154,o),
(77,157,o),
(76,159,o),
(75,167,q),
(78,184,o),
(80,214,o),
(72,229,qs),
(65,240,o),
(75,250,qs),
(82,257,o),
(75,263,qs),
(68,270,o),
(72,276,q),
(79,283,o),
(73,288,q),
(71,292,o),
(79,300,o),
(73,304,qs),
(71,306,o),
(70,312,o),
(70,314,qs),
(70,326,o),
(79,319,qs),
(122,282,o),
(157,253,o),
(165,242,qs),
(171,235,o),
(200,207,o),
(229,181,o),
(234,175,q),
(243,173,o),
(267,154,o),
(288,134,o),
(289,131,qs),
(296,116,o),
(323,98,o),
(333,86,q),
(350,81,o),
(381,45,o),
(420,10,qs),
(429,3,o),
(451,0,o),
(451,11,qs),
(451,31,o),
(443,65,o),
(443,84,qs),
(443,90,o),
(449,108,qs),
(450,110,o),
(451,117,o),
(449,118,q),
(444,123,o),
(443,133,o),
(443,139,qs),
(443,225,ls),
(443,228,o),
(443,235,o),
(444,237,q),
(452,245,o),
(452,257,qs),
(454,301,o),
(451,355,o),
(451,362,qs),
(451,369,o),
(451,401,o),
(452,439,o),
(452,467,o),
(452,469,qs),
(452,484,o),
(444,495,qs),
(441,498,o),
(452,508,o),
(450,512,q),
(449,517,o),
(444,524,o),
(444,528,qs),
(444,539,o),
(457,552,o),
(450,560,qs),
(436,577,o),
(449,591,qs),
(450,592,o),
(447,595,o),
(446,596,qs),
(439,604,o),
(444,614,q),
(462,639,o),
(445,662,q),
(444,667,o),
(455,683,o),
(447,689,qs),
(444,691,o),
(438,697,o),
(436,699,qs),
(433,702,o),
(406,690,o),
(401,685,qs),
(384,668,o),
(345,633,o),
(330,613,q),
(328,609,o),
(296,579,o),
(255,543,o),
(221,515,o),
(216,513,qs),
(205,510,o),
(202,492,o),
(192,489,qs),
(188,488,o),
(178,483,o),
(175,479,q),
(171,476,o),
(166,466,o),
(161,462,qs),
(86,395,ls),
(82,391,o),
(78,399,q),
(78,458,o),
(78,512,o),
(77,530,o),
(75,533,qs),
(69,541,o),
(81,550,o),
(79,557,qs),
(74,571,o),
(81,590,o),
(71,600,q),
(70,608,o),
(69,621,o),
(76,628,qs),
(81,633,o),
(76,638,qs),
(72,643,o),
(79,665,o),
(79,669,qs),
(79,677,o),
(71,691,o),
(66,698,qs),
(63,703,o),
(51,691,o),
(49,686,q),
(49,684,o),
(48,674,o),
(48,647,o),
(48,588,o),
(48,536,qs),
(48,344,ls),
(48,340,o),
(46,316,o),
(41,311,q),
(40,311,o),
(43,304,o),
(44,303,qs),
(51,293,o),
(44,286,qs),
(37,278,o),
(43,272,qs),
(48,268,o),
(48,259,qs),
(48,208,o),
(48,159,o),
(47,143,o),
(47,139,q),
(39,135,o),
(49,125,o),
(44,120,qs),
(39,115,o),
(51,109,o),
(48,104,q),
(43,99,o),
(40,86,o),
(40,79,qs),
(40,72,o),
(41,43,o),
(44,14,o),
(45,7,q),
(47,2,o),
(61,0,o),
(64,5,qs),
(68,12,o)
);
},
{
closed = 1;
nodes = (
(381,85,o),
(345,122,o),
(332,133,qs),
(317,146,o),
(303,150,o),
(294,157,o),
(286,175,q),
(284,183,o),
(266,184,o),
(264,193,q),
(264,196,o),
(253,205,o),
(220,232,o),
(157,288,o),
(105,337,qs),
(101,341,o),
(93,348,o),
(89,352,q),
(88,354,o),
(88,362,o),
(89,363,qs),
(97,368,o),
(111,384,o),
(123,387,qs),
(129,389,o),
(141,401,o),
(143,408,q),
(144,409,o),
(183,446,o),
(246,503,o),
(318,569,o),
(386,630,o),
(410,651,qs),
(417,656,o),
(417,647,qs),
(417,550,o),
(421,394,o),
(421,342,qs),
(421,278,o),
(420,204,o),
(419,168,o),
(418,158,o),
(418,156,qs),
(418,150,o),
(415,140,o),
(410,136,q),
(415,132,o),
(418,98,o),
(418,63,o),
(417,56,q),
(412,56,o)
);
},
{
closed = 1;
nodes = (
(326,342,o),
(326,349,qs),
(326,361,o),
(305,378,o),
(286,378,q),
(276,380,o),
(263,372,o),
(257,364,qs),
(249,353,o),
(257,341,q),
(265,334,o),
(284,317,o),
(294,317,qs),
(312,317,o)
);
},
{
closed = 1;
nodes = (
(281,346,qs),
(280,348,o),
(281,352,q),
(285,356,o),
(288,355,q),
(298,355,o),
(298,348,qs),
(298,347,o),
(296,339,o),
(291,339,qs),
(285,339,o)
);
},
{
closed = 1;
nodes = (
(282,836,o),
(279,832,qs),
(277,830,o),
(264,813,o),
(262,811,qs),
(260,808,o),
(253,797,o),
(251,796,qs),
(245,793,o),
(241,793,o),
(236,795,q),
(232,800,o),
(210,820,o),
(183,843,o),
(160,859,o),
(155,859,q),
(147,861,o),
(135,859,o),
(139,850,q),
(145,844,o),
(157,831,o),
(161,824,q),
(166,821,o),
(178,806,o),
(184,803,q),
(192,796,o),
(199,787,o),
(206,781,qs),
(214,774,o),
(230,760,o),
(234,749,qs),
(236,745,o),
(244,744,o),
(246,748,q),
(257,760,o),
(288,794,o),
(318,829,o),
(338,852,o),
(337,853,qs),
(335,855,o),
(329,860,o),
(327,860,q),
(322,862,o),
(315,860,q),
(301,853,o)
);
}
);
userData = {
assembly = "NPUSHW[ ]	/* 26 values pushed */
260 258 250 3 3 2 158 1 0 1 2 76 103 95 62 3 2 74 192 179 175 16 10 5 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 2 3 3 2 112 0 0 1 0 134 5 1 3 1 1 3 89 5 1 3 3 1 98 4 1 1 3 1 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 3 2 133 0 0 1 0 134 5 1 3 1 1 3 89 5 1 3 3 1 98 4 1 1 3 1 82 
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 19 values pushed */
254 253 240 239 253 263 254 263 248 247 239 252 240 252 230 229 6 8 22 
CALL[ ]	/* CallFunction */";
};
width = 493;
}
);
note = uni01E8;
unicode = 488;
},
{
glyphname = uni0136;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(79,25,o),
(79,32,qs),
(79,39,o),
(71,47,q),
(66,67,o),
(70,110,o),
(78,142,o),
(78,146,qs),
(78,154,o),
(77,157,o),
(76,159,o),
(75,167,q),
(78,184,o),
(80,214,o),
(72,229,qs),
(65,240,o),
(75,250,qs),
(82,257,o),
(75,263,qs),
(68,270,o),
(72,276,q),
(79,283,o),
(73,288,q),
(71,292,o),
(79,300,o),
(73,304,qs),
(71,306,o),
(70,312,o),
(70,314,qs),
(70,326,o),
(79,319,qs),
(122,282,o),
(157,253,o),
(165,242,qs),
(171,235,o),
(200,207,o),
(229,181,o),
(234,175,q),
(243,173,o),
(267,154,o),
(288,134,o),
(289,131,qs),
(296,116,o),
(323,98,o),
(333,86,q),
(350,81,o),
(381,45,o),
(420,10,qs),
(429,3,o),
(451,0,o),
(451,11,qs),
(451,31,o),
(443,65,o),
(443,84,qs),
(443,90,o),
(449,108,qs),
(450,110,o),
(451,117,o),
(449,118,q),
(444,123,o),
(443,133,o),
(443,139,qs),
(443,225,ls),
(443,228,o),
(443,235,o),
(444,237,q),
(452,245,o),
(452,257,qs),
(454,301,o),
(451,355,o),
(451,362,qs),
(451,369,o),
(451,401,o),
(452,439,o),
(452,467,o),
(452,469,qs),
(452,484,o),
(444,495,qs),
(441,498,o),
(452,508,o),
(450,512,q),
(449,517,o),
(444,524,o),
(444,528,qs),
(444,539,o),
(457,552,o),
(450,560,qs),
(436,577,o),
(449,591,qs),
(450,592,o),
(447,595,o),
(446,596,qs),
(439,604,o),
(444,614,q),
(462,639,o),
(445,662,q),
(444,667,o),
(455,683,o),
(447,689,qs),
(444,691,o),
(438,697,o),
(436,699,qs),
(433,702,o),
(406,690,o),
(401,685,qs),
(384,668,o),
(345,633,o),
(330,613,q),
(328,609,o),
(296,579,o),
(255,543,o),
(221,515,o),
(216,513,qs),
(205,510,o),
(202,492,o),
(192,489,qs),
(188,488,o),
(178,483,o),
(175,479,q),
(171,476,o),
(166,466,o),
(161,462,qs),
(86,395,ls),
(82,391,o),
(78,399,q),
(78,458,o),
(78,512,o),
(77,530,o),
(75,533,qs),
(69,541,o),
(81,550,o),
(79,557,qs),
(74,571,o),
(81,590,o),
(71,600,q),
(70,608,o),
(69,621,o),
(76,628,qs),
(81,633,o),
(76,638,qs),
(72,643,o),
(79,665,o),
(79,669,qs),
(79,677,o),
(71,691,o),
(66,698,qs),
(63,703,o),
(51,691,o),
(49,686,q),
(49,684,o),
(48,674,o),
(48,647,o),
(48,588,o),
(48,536,qs),
(48,344,ls),
(48,340,o),
(46,316,o),
(41,311,q),
(40,311,o),
(43,304,o),
(44,303,qs),
(51,293,o),
(44,286,qs),
(37,278,o),
(43,272,qs),
(48,268,o),
(48,259,qs),
(48,208,o),
(48,159,o),
(47,143,o),
(47,139,q),
(39,135,o),
(49,125,o),
(44,120,qs),
(39,115,o),
(51,109,o),
(48,104,q),
(43,99,o),
(40,86,o),
(40,79,qs),
(40,72,o),
(41,43,o),
(44,14,o),
(45,7,q),
(47,2,o),
(61,0,o),
(64,5,qs),
(68,12,o)
);
},
{
closed = 1;
nodes = (
(381,85,o),
(345,122,o),
(332,133,qs),
(317,146,o),
(303,150,o),
(294,157,o),
(286,175,q),
(284,183,o),
(266,184,o),
(264,193,q),
(264,196,o),
(253,205,o),
(220,232,o),
(157,288,o),
(105,337,qs),
(101,341,o),
(93,348,o),
(89,352,q),
(88,354,o),
(88,362,o),
(89,363,qs),
(97,368,o),
(111,384,o),
(123,387,qs),
(129,389,o),
(141,401,o),
(143,408,q),
(144,409,o),
(183,446,o),
(246,503,o),
(318,569,o),
(386,630,o),
(410,651,qs),
(417,656,o),
(417,647,qs),
(417,550,o),
(421,394,o),
(421,342,qs),
(421,278,o),
(420,204,o),
(419,168,o),
(418,158,o),
(418,156,qs),
(418,150,o),
(415,140,o),
(410,136,q),
(415,132,o),
(418,98,o),
(418,63,o),
(417,56,q),
(412,56,o)
);
},
{
closed = 1;
nodes = (
(326,342,o),
(326,349,qs),
(326,361,o),
(305,378,o),
(286,378,q),
(276,380,o),
(263,372,o),
(257,364,qs),
(249,353,o),
(257,341,q),
(265,334,o),
(284,317,o),
(294,317,qs),
(312,317,o)
);
},
{
closed = 1;
nodes = (
(281,346,qs),
(280,348,o),
(281,352,q),
(285,356,o),
(288,355,q),
(298,355,o),
(298,348,qs),
(298,347,o),
(296,339,o),
(291,339,qs),
(285,339,o)
);
},
{
closed = 1;
nodes = (
(181,-201,o),
(183,-198,q),
(187,-198,o),
(204,-174,o),
(206,-172,q),
(215,-158,o),
(218,-143,o),
(225,-129,qs),
(231,-113,o),
(244,-102,qs),
(257,-91,o),
(261,-65,o),
(262,-48,qs),
(263,-37,o),
(256,-27,o),
(250,-31,q),
(245,-36,o),
(225,-51,o),
(223,-58,qs),
(220,-69,o),
(209,-91,o),
(203,-103,qs),
(195,-124,o),
(175,-159,o),
(161,-194,q),
(164,-199,o)
);
}
);
userData = {
assembly = "NPUSHW[ ]	/* 27 values pushed */
260 258 250 3 3 2 158 1 0 1 2 76 103 95 62 3 2 74 276 192 179 175 16 10 6 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 2 3 3 2 112 0 0 1 0 134 5 1 3 1 1 3 89 5 1 3 3 1 98 4 1 1 3 1 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 3 2 133 0 0 1 0 134 5 1 3 1 1 3 89 5 1 3 3 1 98 4 1 1 3 1 82 
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 19 values pushed */
254 253 240 239 253 263 254 263 248 247 239 252 240 252 230 229 6 8 22 
CALL[ ]	/* CallFunction */";
};
width = 493;
}
);
note = uni0136;
unicode = 310;
},
{
glyphname = uni1E32;
layers = (
{
layerId = m01;
shapes = (
{
ref = K;
},
{
pos = (164,-114);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 493;
}
);
note = uni1E32;
unicode = 7730;
},
{
glyphname = uni0198;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(425,650,o),
(430,653,q),
(429,644,o),
(429,634,qs),
(429,629,o),
(429,626,o),
(430,601,o),
(429,561,q),
(428,554,o),
(434,539,o),
(431,530,q),
(439,511,o),
(450,514,o),
(455,530,qs),
(460,542,o),
(461,576,o),
(459,606,o),
(459,611,qs),
(460,635,o),
(460,652,o),
(460,656,o),
(460,659,qs),
(459,678,o),
(455,687,q),
(454,688,o),
(454,689,qs),
(453,692,o),
(445,697,o),
(443,699,qs),
(440,702,o),
(413,690,o),
(408,685,qs),
(391,668,o),
(352,633,o),
(337,613,q),
(335,609,o),
(303,579,o),
(262,543,o),
(228,515,o),
(223,513,qs),
(212,510,o),
(209,492,o),
(199,489,qs),
(195,488,o),
(185,483,o),
(182,479,q),
(178,476,o),
(173,466,o),
(168,462,qs),
(93,395,ls),
(89,391,o),
(85,399,q),
(85,458,o),
(85,512,o),
(84,530,o),
(82,533,qs),
(76,541,o),
(88,550,o),
(86,557,qs),
(81,571,o),
(88,590,o),
(78,600,q),
(77,608,o),
(76,621,o),
(83,628,qs),
(88,633,o),
(83,638,qs),
(79,643,o),
(86,665,o),
(86,669,qs),
(86,677,o),
(78,691,o),
(73,698,qs),
(70,703,o),
(51,691,o),
(49,686,qs),
(48,684,o),
(48,673,o),
(48,639,o),
(48,567,o),
(48,441,o),
(48,344,qs),
(48,340,o),
(46,316,o),
(41,311,q),
(40,311,o),
(43,304,o),
(44,303,qs),
(51,293,o),
(44,286,qs),
(37,278,o),
(43,272,qs),
(48,268,o),
(48,259,qs),
(48,208,o),
(48,159,o),
(47,143,o),
(47,139,q),
(39,135,o),
(49,125,o),
(44,120,qs),
(39,115,o),
(51,109,o),
(48,104,q),
(43,99,o),
(40,86,o),
(40,79,qs),
(40,72,o),
(45,43,o),
(51,14,o),
(52,7,q),
(54,2,o),
(68,0,o),
(71,5,qs),
(75,12,o),
(86,25,o),
(86,32,qs),
(86,39,o),
(78,47,q),
(73,67,o),
(77,110,o),
(85,142,o),
(85,146,qs),
(85,154,o),
(84,157,o),
(83,159,o),
(82,167,q),
(85,184,o),
(87,214,o),
(79,229,qs),
(72,240,o),
(82,250,qs),
(89,257,o),
(82,263,qs),
(75,270,o),
(79,276,q),
(86,283,o),
(80,288,q),
(78,292,o),
(86,300,o),
(80,304,qs),
(78,306,o),
(77,312,o),
(77,314,qs),
(77,326,o),
(86,319,qs),
(129,282,o),
(164,253,o),
(172,242,qs),
(178,235,o),
(207,207,o),
(236,181,o),
(241,175,q),
(250,173,o),
(274,154,o),
(295,134,o),
(296,131,qs),
(303,116,o),
(330,98,o),
(340,86,q),
(357,81,o),
(388,45,o),
(427,10,qs),
(436,3,o),
(458,0,o),
(458,11,q),
(442,34,o),
(374,102,o),
(339,139,qs),
(326,154,o),
(311,158,o),
(301,163,o),
(293,181,q),
(291,189,o),
(273,190,o),
(271,199,q),
(271,202,o),
(260,212,o),
(227,239,o),
(164,292,o),
(112,338,qs),
(108,342,o),
(100,349,o),
(96,353,qs),
(91,358,o),
(96,363,q),
(104,368,o),
(118,384,o),
(130,387,qs),
(136,389,o),
(148,401,o),
(150,408,q),
(151,409,o),
(189,444,o),
(250,497,o),
(320,559,o),
(387,618,o),
(411,639,qs),
(416,643,o)
);
},
{
closed = 1;
nodes = (
(333,342,o),
(333,349,qs),
(333,361,o),
(312,378,o),
(293,378,q),
(283,380,o),
(270,372,o),
(264,364,qs),
(256,353,o),
(264,341,q),
(272,334,o),
(291,317,o),
(301,317,qs),
(319,317,o)
);
},
{
closed = 1;
nodes = (
(288,346,qs),
(287,348,o),
(288,352,q),
(292,356,o),
(295,355,q),
(305,355,o),
(305,348,qs),
(305,347,o),
(303,339,o),
(298,339,qs),
(292,339,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
220 218 210 3 3 2 54 1 0 1 2 76 187 146 2 2 74 100 94 75 71 32 5 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 2 3 3 2 112 0 0 1 0 134 5 1 3 1 1 3 89 5 1 3 3 1 98 4 1 1 3 1 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 3 2 133 0 0 1 0 134 5 1 3 1 1 3 89 5 1 3 3 1 98 4 1 1 3 1 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
214 213 200 199 213 223 214 223 208 207 199 212 200 212 24 23 6 8 22 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uni0198;
unicode = 408;
},
{
glyphname = Kmacronbelow;
layers = (
{
layerId = m01;
shapes = (
{
ref = K;
},
{
pos = (54,-329);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-329 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 493;
}
);
note = Kmacronbelow;
unicode = 7732;
},
{
glyphname = uniA740;
layers = (
{
layerId = m01;
shapes = (
{
ref = K;
},
{
pos = (-63,330);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
330 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 493;
}
);
note = uniA740;
unicode = 42816;
},
{
glyphname = L;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(461,1,o),
(466,6,o),
(472,19,qs),
(476,27,o),
(478,45,o),
(473,52,qs),
(462,69,o),
(472,88,q),
(476,93,o),
(475,114,o),
(476,118,qs),
(479,125,o),
(476,131,qs),
(468,146,o),
(468,179,o),
(468,190,qs),
(469,198,o),
(456,225,o),
(451,220,qs),
(442,211,o),
(441,211,o),
(431,208,qs),
(420,204,o),
(400,194,o),
(395,183,qs),
(382,157,o),
(356,151,qs),
(349,149,o),
(347,138,o),
(343,136,qs),
(333,130,o),
(314,127,o),
(308,116,qs),
(298,96,o),
(263,68,o),
(245,54,qs),
(234,46,o),
(231,36,q),
(170,36,ls),
(161,36,o),
(136,34,o),
(127,37,qs),
(118,40,o),
(100,45,o),
(90,45,q),
(83,47,o),
(83,55,qs),
(83,680,l),
(70,701,o),
(48,698,o),
(48,682,qs),
(48,213,ls),
(48,209,o),
(49,201,o),
(49,196,qs),
(49,181,o),
(40,172,q),
(45,164,o),
(49,147,o),
(49,139,qs),
(49,135,o),
(49,103,o),
(48,66,o),
(48,35,o),
(48,30,qs),
(48,23,o),
(60,11,o),
(67,10,qs),
(75,9,o),
(89,9,o),
(96,3,q),
(98,2,o),
(105,4,o),
(107,5,qs),
(119,13,o),
(141,10,o),
(164,1,o),
(177,1,qs),
(448,1,ls)
);
},
{
closed = 1;
nodes = (
(331,85,o),
(383,131,o),
(427,167,o),
(437,170,q),
(438,169,o),
(441,133,o),
(443,84,o),
(441,42,o),
(437,34,q),
(428,34,o),
(397,34,o),
(333,33,o),
(273,33,q),
(285,43,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
67 62 31 30 23 21 6 2 74 0 2 3 2 133 0 1 1 38 77 4 1 3 3 0 95 5 1 0 0 38 0 78 1 0 83 79 40 38 34 33 9 8 0 78 1 77 6 8 22 
CALL[ ]	/* CallFunction */";
};
width = 487;
}
);
note = L;
unicode = 76;
},
{
glyphname = Lacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = L;
},
{
pos = (-9,134);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
134 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 487;
}
);
note = Lacute;
unicode = 313;
},
{
glyphname = uni023D;
layers = (
{
layerId = m01;
shapes = (
{
ref = L;
},
{
pos = (-99,80);
ref = uni0335;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
80 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 487;
}
);
note = uni023D;
unicode = 573;
},
{
glyphname = uniA7AD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(518,1,o),
(523,6,o),
(529,19,qs),
(533,27,o),
(535,45,o),
(530,52,qs),
(519,69,o),
(529,88,q),
(533,93,o),
(532,114,o),
(533,118,qs),
(536,125,o),
(533,131,qs),
(525,146,o),
(525,179,o),
(525,190,qs),
(526,198,o),
(513,225,o),
(508,220,qs),
(499,211,o),
(498,211,o),
(488,208,qs),
(477,204,o),
(457,194,o),
(452,183,qs),
(439,157,o),
(413,151,qs),
(406,149,o),
(404,138,o),
(400,136,qs),
(390,130,o),
(371,127,o),
(365,116,qs),
(355,96,o),
(320,68,o),
(302,54,qs),
(291,46,o),
(288,36,q),
(227,36,ls),
(218,36,o),
(193,34,o),
(184,37,qs),
(175,40,o),
(157,45,o),
(147,45,q),
(140,47,o),
(140,55,qs),
(140,322,l),
(143,322,o),
(145,322,qs),
(159,321,o),
(178,317,o),
(187,318,q),
(193,320,o),
(206,323,o),
(213,325,qs),
(217,326,o),
(235,327,o),
(239,327,qs),
(245,327,o),
(257,326,o),
(263,326,qs),
(284,328,o),
(292,341,o),
(274,352,o),
(255,350,qs),
(248,350,o),
(229,353,o),
(214,356,q),
(210,356,o),
(200,354,o),
(195,350,qs),
(194,349,o),
(190,350,o),
(188,350,q),
(180,353,o),
(164,350,o),
(157,348,q),
(155,350,ls),
(152,353,o),
(144,357,o),
(140,359,q),
(140,680,l),
(127,701,o),
(105,698,o),
(105,682,qs),
(105,401,l),
(91,417,o),
(64,451,o),
(49,466,qs),
(42,473,ls),
(39,476,o),
(34,482,o),
(33,486,q),
(30,489,o),
(24,500,o),
(16,500,q),
(12,493,o),
(9,462,o),
(7,454,q),
(8,447,o),
(8,414,o),
(8,410,qs),
(8,403,o),
(7,390,o),
(7,383,qs),
(7,367,ls),
(7,359,o),
(6,343,o),
(1,335,qs),
(-1,331,o),
(4,323,o),
(8,323,qs),
(27,322,o),
(80,322,o),
(105,322,q),
(105,213,ls),
(105,209,o),
(106,201,o),
(106,196,qs),
(106,181,o),
(97,172,q),
(102,164,o),
(106,147,o),
(106,139,qs),
(106,135,o),
(106,103,o),
(105,66,o),
(105,35,o),
(105,30,qs),
(105,23,o),
(117,11,o),
(124,10,qs),
(132,9,o),
(146,9,o),
(153,3,q),
(155,2,o),
(162,4,o),
(164,5,qs),
(176,13,o),
(198,10,o),
(221,1,o),
(234,1,qs),
(505,1,ls)
);
},
{
closed = 1;
nodes = (
(47,348,o),
(45,349,qs),
(38,351,o),
(36,354,o),
(36,361,qs),
(36,428,ls),
(36,439,o),
(60,416,o),
(92,376,o),
(105,362,q),
(105,349,l),
(82,348,o),
(80,346,q),
(65,339,o),
(53,346,q),
(52,348,o)
);
},
{
closed = 1;
nodes = (
(388,85,o),
(440,131,o),
(484,167,o),
(494,170,q),
(495,169,o),
(498,133,o),
(500,84,o),
(498,42,o),
(494,34,q),
(485,34,o),
(454,34,o),
(390,33,o),
(330,33,q),
(342,43,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
132 127 96 23 21 5 4 2 1 76 154 149 148 93 68 65 61 60 56 46 10 2 74 3 1 2 4 2 133 0 4 5 4 133 0 1 1 38 77 6 1 5 5 0 95 7 1 0 0 38 0 78 1 0 164 160 105 103 99 98 86 81 30 27 9 8 0 143 1 142 8 8 22 
CALL[ ]	/* CallFunction */";
};
width = 544;
}
);
note = uniA7AD;
unicode = 42925;
},
{
glyphname = Lcaron;
layers = (
{
layerId = m01;
shapes = (
{
ref = L;
},
{
pos = (124,0);
ref = uni030C.alt;
}
);
width = 487;
}
);
note = Lcaron;
unicode = 317;
},
{
glyphname = uni1E3C;
layers = (
{
layerId = m01;
shapes = (
{
ref = L;
},
{
pos = (86,-782);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHW[ ]	/* 1 value pushed */
-782 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 487;
}
);
note = uni1E3C;
unicode = 7740;
},
{
glyphname = uni013B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(461,1,o),
(466,6,o),
(472,19,qs),
(476,27,o),
(478,45,o),
(473,52,qs),
(462,69,o),
(472,88,q),
(476,93,o),
(475,114,o),
(476,118,qs),
(479,125,o),
(476,131,qs),
(468,146,o),
(468,179,o),
(468,190,qs),
(469,198,o),
(456,225,o),
(451,220,qs),
(442,211,o),
(441,211,o),
(431,208,qs),
(420,204,o),
(400,194,o),
(395,183,qs),
(382,157,o),
(356,151,qs),
(349,149,o),
(347,138,o),
(343,136,qs),
(333,130,o),
(314,127,o),
(308,116,qs),
(298,96,o),
(263,68,o),
(245,54,qs),
(234,46,o),
(231,36,q),
(170,36,ls),
(161,36,o),
(136,34,o),
(127,37,qs),
(118,40,o),
(100,45,o),
(90,45,q),
(83,47,o),
(83,55,qs),
(83,680,l),
(70,701,o),
(48,698,o),
(48,682,qs),
(48,213,ls),
(48,209,o),
(49,201,o),
(49,196,qs),
(49,181,o),
(40,172,q),
(45,164,o),
(49,147,o),
(49,139,qs),
(49,135,o),
(49,103,o),
(48,66,o),
(48,35,o),
(48,30,qs),
(48,23,o),
(60,11,o),
(67,10,qs),
(75,9,o),
(89,9,o),
(96,3,q),
(98,2,o),
(105,4,o),
(107,5,qs),
(119,13,o),
(141,10,o),
(164,1,o),
(177,1,qs),
(448,1,ls)
);
},
{
closed = 1;
nodes = (
(331,85,o),
(383,131,o),
(427,167,o),
(437,170,q),
(438,169,o),
(441,133,o),
(443,84,o),
(441,42,o),
(437,34,q),
(428,34,o),
(397,34,o),
(333,33,o),
(273,33,q),
(285,43,o)
);
},
{
closed = 1;
nodes = (
(165,-201,o),
(167,-198,q),
(171,-198,o),
(188,-174,o),
(190,-172,q),
(199,-158,o),
(202,-143,o),
(209,-129,qs),
(215,-113,o),
(228,-102,qs),
(241,-91,o),
(245,-65,o),
(246,-48,qs),
(247,-37,o),
(240,-27,o),
(234,-31,q),
(229,-36,o),
(209,-51,o),
(207,-58,qs),
(204,-69,o),
(193,-91,o),
(187,-103,qs),
(179,-124,o),
(159,-159,o),
(145,-194,q),
(148,-199,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
67 62 31 30 23 21 6 2 74 105 1 0 73 0 2 3 2 133 0 1 1 38 77 4 1 3 3 0 95 5 1 0 0 38 0 78 1 0 83 79 40 38 34 33 9 8 0 78 1 77 6 8 22 
CALL[ ]	/* CallFunction */";
};
width = 487;
}
);
note = uni013B;
unicode = 315;
},
{
glyphname = uni1E36;
layers = (
{
layerId = m01;
shapes = (
{
ref = L;
},
{
pos = (148,-114);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 487;
}
);
note = uni1E36;
unicode = 7734;
},
{
glyphname = uni1E38;
layers = (
{
layerId = m01;
shapes = (
{
ref = L;
},
{
pos = (148,-114);
ref = period;
},
{
pos = (-104,541);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
541 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 487;
}
);
note = uni1E38;
unicode = 7736;
},
{
glyphname = uni2C60;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(486,1,o),
(491,6,o),
(497,19,qs),
(501,27,o),
(503,45,o),
(498,52,qs),
(487,69,o),
(497,88,q),
(501,93,o),
(500,114,o),
(501,118,qs),
(504,125,o),
(501,131,qs),
(493,146,o),
(493,179,o),
(493,190,qs),
(494,198,o),
(481,225,o),
(476,220,qs),
(467,211,o),
(466,211,o),
(456,208,qs),
(445,204,o),
(425,194,o),
(420,183,qs),
(407,157,o),
(381,151,qs),
(374,149,o),
(372,138,o),
(368,136,qs),
(358,130,o),
(339,127,o),
(333,116,qs),
(323,96,o),
(288,68,o),
(270,54,qs),
(259,46,o),
(256,36,q),
(195,36,ls),
(186,36,o),
(161,34,o),
(152,37,qs),
(143,40,o),
(125,45,o),
(115,45,q),
(108,47,o),
(108,55,qs),
(108,348,l),
(111,349,o),
(115,349,qs),
(122,350,o),
(149,349,o),
(175,348,o),
(178,348,qs),
(192,348,o),
(220,355,o),
(234,358,qs),
(239,359,o),
(239,371,o),
(234,372,qs),
(230,372,o),
(227,378,o),
(223,379,qs),
(219,380,o),
(209,381,o),
(204,381,qs),
(194,381,o),
(172,380,o),
(162,380,qs),
(152,380,o),
(132,379,o),
(121,379,qs),
(115,379,o),
(108,378,q),
(108,454,l),
(119,454,o),
(123,452,qs),
(131,448,o),
(145,447,o),
(152,452,q),
(162,445,o),
(175,446,q),
(189,449,o),
(219,460,o),
(238,472,o),
(233,483,o),
(212,486,qs),
(208,486,o),
(181,482,o),
(154,479,o),
(150,479,qs),
(140,479,o),
(118,479,o),
(108,478,q),
(108,680,l),
(95,701,o),
(73,698,o),
(73,682,qs),
(73,481,l),
(72,481,o),
(71,482,q),
(67,484,o),
(54,484,o),
(52,481,q),
(46,478,o),
(19,476,o),
(-8,477,o),
(-15,476,qs),
(-30,474,o),
(-30,460,o),
(-19,448,o),
(-19,448,q),
(4,442,l),
(9,449,o),
(20,448,o),
(27,449,qs),
(43,450,o),
(50,450,qs),
(55,450,o),
(64,448,o),
(68,443,qs),
(69,442,o),
(73,443,q),
(73,376,l),
(65,375,o),
(46,375,o),
(35,376,qs),
(27,377,o),
(-9,376,o),
(-24,376,q),
(-24,369,o),
(-13,351,o),
(-2,346,qs),
(0,345,o),
(30,344,o),
(34,344,qs),
(60,343,o),
(73,344,q),
(73,213,ls),
(73,209,o),
(74,201,o),
(74,196,qs),
(74,181,o),
(65,172,q),
(70,164,o),
(74,147,o),
(74,139,qs),
(74,135,o),
(74,103,o),
(73,66,o),
(73,35,o),
(73,30,qs),
(73,23,o),
(85,11,o),
(92,10,qs),
(100,9,o),
(114,9,o),
(121,3,q),
(123,2,o),
(130,4,o),
(132,5,qs),
(144,13,o),
(166,10,o),
(189,1,o),
(202,1,qs),
(473,1,ls)
);
},
{
closed = 1;
nodes = (
(356,85,o),
(408,131,o),
(452,167,o),
(462,170,q),
(463,169,o),
(466,133,o),
(468,84,o),
(466,42,o),
(462,34,q),
(453,34,o),
(422,34,o),
(358,33,o),
(298,33,q),
(310,43,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
90 85 2 5 6 91 52 42 3 3 5 154 149 118 23 21 5 10 2 3 76 41 1 3 27 1 2 2 75 71 70 66 3 6 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 10 2 11 2 10 11 128 0 9 2 3 9 90 8 4 2 3 0 2 10 3 2 106 0 5 5 6 97 7 1 6 6 46 77 0 1 1 38 77 12 1 11 11 0 95 13 1 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 10 2 11 2 10 11 128 8 4 2 3 9 1 2 10 3 2 106 0 5 5 6 97 7 1 6 6 46 77 0 1 1 38 77 12 1 11 11 0 95 13 1 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 10 2 11 2 10 11 128 7 1 6 0 5 3 6 5 105 8 4 2 3 9 1 2 10 3 2 106 0 1 1 38 77 12 1 11 11 0 95 13 1 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 10 2 11 2 10 11 128 7 1 6 0 5 3 6 5 105 0 9 2 3 9 90 8 4 2 3 0 2 10 3 2 106 0 1 1 38 77 12 1 11 11 0 95 13 1 0 0 38 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
1 0 170 166 127 125 121 120 114 110 101 93 74 72 59 57 51 46 40 39 37 36 31 28 9 8 0 165 1 164 14 8 22 
CALL[ ]	/* CallFunction */";
};
width = 513;
}
);
note = uni2C60;
unicode = 11360;
},
{
glyphname = Lmacronbelow;
layers = (
{
layerId = m01;
shapes = (
{
ref = L;
},
{
pos = (38,-329);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHW[ ]	/* 1 value pushed */
-329 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 487;
}
);
note = Lmacronbelow;
unicode = 7738;
},
{
glyphname = uni2C62;
layers = (
{
layerId = m01;
shapes = (
{
ref = L;
},
{
pos = (-61,-327);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHW[ ]	/* 1 value pushed */
-327 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 487;
}
);
note = uni2C62;
unicode = 11362;
},
{
glyphname = Lslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(474,1,o),
(479,6,o),
(485,19,qs),
(489,27,o),
(491,45,o),
(486,52,qs),
(475,69,o),
(485,88,q),
(489,93,o),
(488,114,o),
(489,118,qs),
(492,125,o),
(489,131,qs),
(481,146,o),
(481,179,o),
(481,190,qs),
(482,198,o),
(469,225,o),
(464,220,qs),
(455,211,o),
(454,211,o),
(444,208,qs),
(433,204,o),
(413,194,o),
(408,183,qs),
(395,157,o),
(369,151,qs),
(362,149,o),
(360,138,o),
(356,136,qs),
(346,130,o),
(327,127,o),
(321,116,qs),
(311,96,o),
(276,68,o),
(258,54,qs),
(247,46,o),
(244,36,q),
(183,36,ls),
(174,36,o),
(149,34,o),
(140,37,qs),
(131,40,o),
(113,45,o),
(103,45,q),
(96,47,o),
(96,55,qs),
(96,384,l),
(104,387,o),
(122,396,o),
(133,402,qs),
(144,407,o),
(164,415,o),
(176,416,qs),
(182,417,o),
(195,421,o),
(200,423,qs),
(214,430,o),
(239,449,o),
(251,459,qs),
(255,463,o),
(248,478,o),
(243,476,qs),
(239,475,o),
(233,481,o),
(229,480,qs),
(219,477,o),
(208,473,qs),
(198,469,o),
(177,458,o),
(167,453,qs),
(157,449,o),
(137,439,o),
(126,434,qs),
(107,424,o),
(96,419,q),
(96,680,l),
(83,701,o),
(61,698,o),
(61,682,qs),
(61,405,l),
(56,403,o),
(51,401,qs),
(46,399,o),
(9,382,o),
(-30,364,o),
(-40,359,q),
(-36,351,o),
(-19,342,o),
(6,347,q),
(8,348,o),
(30,356,o),
(34,358,qs),
(50,364,o),
(61,368,q),
(61,213,ls),
(61,209,o),
(62,201,o),
(62,196,qs),
(62,181,o),
(53,172,q),
(58,164,o),
(62,147,o),
(62,139,qs),
(62,135,o),
(62,103,o),
(61,66,o),
(61,35,o),
(61,30,qs),
(61,23,o),
(73,11,o),
(80,10,qs),
(88,9,o),
(102,9,o),
(109,3,q),
(111,2,o),
(118,4,o),
(120,5,qs),
(132,13,o),
(154,10,o),
(177,1,o),
(190,1,qs),
(461,1,ls)
);
},
{
closed = 1;
nodes = (
(344,85,o),
(396,131,o),
(440,167,o),
(450,170,q),
(451,169,o),
(454,133,o),
(456,84,o),
(454,42,o),
(450,34,q),
(441,34,o),
(410,34,o),
(346,33,o),
(286,33,q),
(298,43,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
111 106 75 74 46 45 35 27 23 21 10 2 74 0 2 3 2 133 0 1 1 38 77 4 1 3 3 0 95 5 1 0 0 38 0 78 1 0 127 123 84 82 78 77 9 8 0 122 1 121 6 8 22 
CALL[ ]	/* CallFunction */";
};
width = 500;
}
);
note = Lslash;
unicode = 321;
},
{
glyphname = M;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(616,3,o),
(626,3,q),
(631,12,o),
(631,24,qs),
(631,26,o),
(631,40,o),
(630,91,o),
(629,201,o),
(629,300,qs),
(629,310,o),
(640,325,o),
(636,329,qs),
(633,332,o),
(629,366,o),
(628,414,o),
(629,462,o),
(632,497,o),
(635,500,q),
(638,505,o),
(638,512,qs),
(638,554,o),
(638,641,o),
(639,683,qs),
(639,693,o),
(626,694,o),
(622,698,qs),
(618,703,o),
(611,698,o),
(609,695,qs),
(602,686,o),
(575,643,o),
(543,593,o),
(514,552,o),
(505,545,q),
(503,532,o),
(484,519,o),
(479,509,qs),
(463,478,o),
(419,427,o),
(405,398,q),
(393,386,o),
(383,354,o),
(369,343,q),
(368,330,o),
(344,316,o),
(342,302,qs),
(342,298,o),
(328,306,o),
(328,310,qs),
(327,321,o),
(312,332,o),
(309,342,qs),
(306,350,o),
(295,366,o),
(290,373,qs),
(270,402,o),
(234,460,o),
(210,485,q),
(209,496,o),
(191,509,o),
(190,520,q),
(182,527,o),
(171,545,o),
(168,555,qs),
(164,566,o),
(147,578,o),
(142,587,q),
(129,619,o),
(87,666,o),
(70,691,q),
(69,694,o),
(63,698,o),
(61,699,q),
(58,702,o),
(53,699,qs),
(50,697,o),
(42,690,o),
(42,687,qs),
(41,674,o),
(40,646,o),
(44,634,qs),
(46,630,o),
(49,623,o),
(49,618,qs),
(48,612,o),
(49,598,o),
(46,594,qs),
(39,587,o),
(51,577,o),
(48,572,qs),
(45,567,o),
(43,557,o),
(48,551,qs),
(50,549,o),
(49,539,o),
(49,535,qs),
(49,271,ls),
(49,264,o),
(40,242,o),
(40,234,qs),
(40,227,o),
(49,215,o),
(49,207,qs),
(49,205,ls),
(48,200,o),
(46,190,o),
(43,185,qs),
(35,174,o),
(45,162,q),
(49,159,o),
(45,155,qs),
(41,151,o),
(45,145,q),
(50,141,o),
(40,136,o),
(40,132,qs),
(40,101,ls),
(40,97,o),
(49,92,o),
(45,87,qs),
(43,85,o),
(41,53,o),
(41,21,o),
(41,17,qs),
(41,13,o),
(48,7,o),
(51,4,qs),
(57,-1,o),
(67,7,o),
(74,7,q),
(88,-1,o),
(117,2,o),
(130,2,qs),
(138,2,ls),
(143,2,o),
(152,9,o),
(156,7,qs),
(160,6,o),
(191,3,o),
(222,2,o),
(226,2,qs),
(229,2,o),
(236,9,o),
(239,12,qs),
(246,19,o),
(232,34,o),
(225,35,qs),
(221,36,o),
(198,36,o),
(176,37,o),
(171,37,q),
(168,44,o),
(159,40,o),
(150,36,o),
(147,42,q),
(134,44,o),
(100,45,o),
(86,37,qs),
(82,34,o),
(74,39,o),
(74,43,qs),
(74,234,ls),
(74,240,o),
(75,252,o),
(79,258,qs),
(84,264,o),
(76,295,o),
(77,296,qs),
(83,302,o),
(82,317,o),
(82,324,qs),
(82,507,ls),
(82,515,o),
(81,528,o),
(77,535,qs),
(72,544,o),
(75,580,o),
(79,591,qs),
(81,597,o),
(79,598,q),
(75,603,o),
(74,615,o),
(74,626,qs),
(74,631,o),
(81,630,o),
(82,628,q),
(94,613,o),
(100,602,o),
(101,596,o),
(107,584,o),
(118,569,qs),
(123,562,o),
(137,551,o),
(140,544,qs),
(145,533,o),
(159,516,o),
(164,506,qs),
(169,496,o),
(185,479,o),
(190,469,qs),
(193,463,o),
(217,428,o),
(249,383,o),
(275,346,o),
(279,339,qs),
(288,326,o),
(306,298,o),
(313,283,qs),
(315,279,o),
(319,270,o),
(317,268,qs),
(304,258,o),
(292,230,o),
(284,216,qs),
(274,200,o),
(246,172,o),
(241,152,q),
(241,150,o),
(219,136,o),
(218,131,qs),
(216,122,o),
(231,120,o),
(235,117,qs),
(249,106,o),
(266,116,qs),
(274,121,o),
(294,121,o),
(301,117,q),
(304,116,o),
(310,113,o),
(313,113,qs),
(426,113,ls),
(434,113,o),
(447,129,o),
(442,136,qs),
(431,156,o),
(406,194,o),
(392,210,qs),
(382,221,o),
(367,250,o),
(359,262,q),
(353,275,o),
(363,285,qs),
(367,289,o),
(404,344,o),
(459,425,o),
(487,466,qs),
(509,499,o),
(550,555,o),
(577,592,o),
(578,595,qs),
(581,602,o),
(590,613,o),
(595,619,qs),
(604,632,o),
(604,616,qs),
(604,315,l),
(603,303,l),
(598,296,o),
(598,283,o),
(598,275,qs),
(598,160,ls),
(598,153,o),
(597,139,o),
(603,132,qs),
(604,131,o),
(604,107,o),
(604,74,o),
(604,47,o),
(604,44,qs),
(604,42,o),
(599,36,o),
(597,36,qs),
(592,35,o),
(581,35,o),
(576,35,qs),
(471,35,ls),
(459,35,o),
(439,25,o),
(428,23,q),
(426,22,o),
(421,16,o),
(421,14,qs),
(421,9,o),
(436,2,o),
(441,2,qs),
(477,1,o),
(548,1,o),
(584,1,qs),
(595,2,o)
);
},
{
closed = 1;
nodes = (
(372,505,o),
(372,512,qs),
(372,524,o),
(351,541,o),
(332,541,q),
(322,543,o),
(309,535,o),
(303,527,qs),
(295,516,o),
(303,504,q),
(311,497,o),
(330,480,o),
(340,480,qs),
(358,480,o)
);
},
{
closed = 1;
nodes = (
(327,509,qs),
(326,511,o),
(327,515,q),
(331,519,o),
(334,518,q),
(344,518,o),
(344,511,qs),
(344,510,o),
(342,502,o),
(337,502,qs),
(331,502,o)
);
},
{
closed = 1;
nodes = (
(305,146,o),
(282,147,qs),
(281,147,o),
(279,151,o),
(279,152,q),
(290,175,o),
(314,221,o),
(333,237,qs),
(340,244,o),
(343,233,qs),
(345,223,o),
(377,191,o),
(394,156,q),
(404,146,o),
(383,146,qs),
(360,146,o)
);
}
);
userData = {
assembly = "NPUSHW[ ]	/* 33 values pushed */
311 309 301 269 193 5 11 10 325 121 78 32 4 12 9 173 1 3 12 128 1 1 4 159 1 0 1 5 76 109 1 10 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 10 11 11 10 112 0 3 12 2 12 3 2 128 14 1 11 13 1 9 12 11 9 106 15 1 12 0 2 4 12 2 103 0 4 4 0 97 8 7 6 3 0 0 38 77 5 1 1 1 0 97 8 7 6 3 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 10 11 10 133 0 3 12 2 12 3 2 128 14 1 11 13 1 9 12 11 9 106 15 1 12 0 2 4 12 2 103 0 4 4 0 97 8 7 6 3 0 0 38 77 5 1 1 1 0 97 8 7 6 3 0 0 38 0 78 
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 39 values pushed */
316 315 305 304 291 290 315 330 316 329 304 314 305 314 299 298 290 303 291 303 289 287 157 154 150 147 141 138 133 132 63 62 58 56 72 48 16 8 24 
CALL[ ]	/* CallFunction */";
};
width = 679;
}
);
note = M;
unicode = 77;
},
{
glyphname = uni1E3E;
layers = (
{
layerId = m01;
shapes = (
{
ref = M;
},
{
pos = (249,143);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
143 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 679;
}
);
note = uni1E3E;
unicode = 7742;
},
{
glyphname = uni1E40;
layers = (
{
layerId = m01;
shapes = (
{
ref = M;
},
{
pos = (253,116);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
116 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 679;
}
);
note = uni1E40;
unicode = 7744;
},
{
glyphname = uni1E42;
layers = (
{
layerId = m01;
shapes = (
{
ref = M;
},
{
pos = (252,-114);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 679;
}
);
note = uni1E42;
unicode = 7746;
},
{
glyphname = uni019C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(477,699,o),
(441,698,qs),
(436,698,o),
(421,691,o),
(421,686,qs),
(421,685,o),
(426,678,o),
(428,677,q),
(439,675,o),
(459,665,o),
(471,665,qs),
(576,665,ls),
(581,665,o),
(592,665,o),
(597,664,qs),
(599,664,o),
(604,658,o),
(604,656,qs),
(604,653,o),
(604,626,o),
(604,593,o),
(604,569,o),
(603,568,qs),
(597,561,o),
(598,548,o),
(598,540,qs),
(598,425,ls),
(598,418,o),
(598,404,o),
(603,397,q),
(604,385,l),
(604,84,ls),
(604,68,o),
(595,81,qs),
(590,87,o),
(581,98,o),
(578,105,qs),
(577,108,o),
(550,145,o),
(509,202,o),
(487,234,qs),
(459,275,o),
(404,356,o),
(367,412,o),
(363,415,qs),
(353,425,o),
(359,438,q),
(367,450,o),
(382,479,o),
(392,490,qs),
(406,507,o),
(431,545,o),
(442,564,qs),
(447,572,o),
(434,587,o),
(426,587,qs),
(313,587,ls),
(310,587,o),
(304,585,o),
(301,583,qs),
(294,579,o),
(274,579,o),
(266,584,qs),
(249,594,o),
(235,583,qs),
(231,580,o),
(216,578,o),
(218,569,qs),
(219,565,o),
(241,550,o),
(241,548,q),
(246,528,o),
(274,501,o),
(284,484,qs),
(292,471,o),
(304,442,o),
(317,432,qs),
(319,430,o),
(315,422,o),
(313,417,qs),
(306,402,o),
(288,375,o),
(279,361,qs),
(275,354,o),
(249,317,o),
(217,272,o),
(193,237,o),
(190,231,qs),
(185,221,o),
(169,204,o),
(164,194,qs),
(159,184,o),
(145,167,o),
(140,156,qs),
(137,149,o),
(123,138,o),
(118,131,qs),
(107,116,o),
(101,104,o),
(100,98,o),
(94,87,o),
(82,72,qs),
(81,71,o),
(74,69,o),
(74,74,qs),
(74,85,o),
(75,98,o),
(79,102,q),
(81,103,o),
(79,109,qs),
(75,120,o),
(72,156,o),
(77,165,qs),
(81,173,o),
(82,186,o),
(82,193,qs),
(82,376,ls),
(82,384,o),
(83,398,o),
(77,404,q),
(76,406,o),
(84,436,o),
(79,442,qs),
(75,448,o),
(74,460,o),
(74,466,qs),
(74,657,ls),
(74,661,o),
(82,666,o),
(86,663,qs),
(100,655,o),
(134,657,o),
(147,658,q),
(150,664,o),
(159,660,o),
(168,657,o),
(171,663,q),
(176,664,o),
(198,664,o),
(221,665,o),
(225,665,q),
(232,667,o),
(246,681,o),
(239,688,qs),
(236,691,o),
(229,698,o),
(226,698,qs),
(222,698,o),
(191,697,o),
(160,695,o),
(156,693,qs),
(152,692,o),
(143,698,o),
(138,698,qs),
(130,698,ls),
(117,698,o),
(88,701,o),
(74,693,q),
(67,693,o),
(57,701,o),
(51,696,qs),
(48,693,o),
(41,687,o),
(41,683,qs),
(41,680,o),
(41,647,o),
(43,616,o),
(45,613,qs),
(49,608,o),
(40,603,o),
(40,599,qs),
(40,568,ls),
(40,564,o),
(50,560,o),
(45,555,q),
(41,549,o),
(45,545,qs),
(49,542,o),
(45,538,qs),
(35,526,o),
(43,515,qs),
(46,510,o),
(48,500,o),
(49,495,qs),
(49,493,ls),
(49,486,o),
(40,473,o),
(40,466,qs),
(40,459,o),
(49,437,o),
(49,429,qs),
(49,165,ls),
(49,161,o),
(50,151,o),
(48,149,qs),
(43,143,o),
(45,133,o),
(48,128,qs),
(51,123,o),
(39,114,o),
(46,106,qs),
(49,102,o),
(48,88,o),
(49,82,qs),
(49,78,o),
(46,70,o),
(44,66,qs),
(40,54,o),
(41,26,o),
(42,13,qs),
(42,10,o),
(50,3,o),
(53,1,qs),
(58,-2,o),
(61,1,qs),
(63,3,o),
(69,6,o),
(70,9,q),
(87,35,o),
(129,81,o),
(142,113,q),
(147,122,o),
(164,135,o),
(168,145,qs),
(171,155,o),
(182,173,o),
(190,180,q),
(191,191,o),
(209,204,o),
(210,215,q),
(234,241,o),
(270,299,o),
(290,327,qs),
(295,335,o),
(306,350,o),
(309,358,qs),
(312,368,o),
(327,379,o),
(328,390,qs),
(328,395,o),
(342,403,o),
(342,398,qs),
(344,384,o),
(368,371,o),
(369,357,q),
(383,347,o),
(393,314,o),
(405,302,q),
(419,273,o),
(463,222,o),
(479,191,qs),
(484,181,o),
(503,168,o),
(505,155,q),
(514,148,o),
(543,107,o),
(575,57,o),
(602,14,o),
(609,5,qs),
(611,2,o),
(618,-2,o),
(622,2,qs),
(626,6,o),
(639,7,o),
(639,17,qs),
(638,59,o),
(638,146,o),
(638,188,qs),
(638,196,o),
(635,200,qs),
(632,203,o),
(629,238,o),
(628,286,o),
(629,334,o),
(633,368,o),
(636,371,qs),
(640,375,o),
(629,390,o),
(629,400,qs),
(629,499,o),
(630,609,o),
(631,660,o),
(631,674,o),
(631,676,qs),
(631,688,o),
(626,697,q),
(616,697,o),
(595,698,o),
(584,699,qs),
(548,699,o)
);
},
{
closed = 1;
nodes = (
(311,204,o),
(303,196,q),
(295,185,o),
(303,173,qs),
(309,166,o),
(322,158,o),
(332,159,qs),
(351,159,o),
(372,176,o),
(372,188,qs),
(372,195,o),
(358,220,o),
(340,220,qs),
(330,220,o)
);
},
{
closed = 1;
nodes = (
(344,191,o),
(344,189,qs),
(344,182,o),
(334,182,q),
(331,181,o),
(327,185,q),
(326,190,o),
(327,191,q),
(331,198,o),
(337,198,qs),
(342,198,o)
);
},
{
closed = 1;
nodes = (
(394,544,q),
(377,510,o),
(345,477,o),
(343,467,qs),
(340,456,o),
(333,463,qs),
(314,480,o),
(290,526,o),
(279,548,q),
(279,549,o),
(281,553,o),
(282,553,qs),
(305,554,o),
(360,554,o),
(383,554,qs),
(404,554,o)
);
}
);
userData = {
assembly = "NPUSHW[ ]	/* 30 values pushed */
159 1 4 3 118 1 6 4 266 1 12 5 258 110 105 98 4 9 12 306 1 10 11 5 76 184 179 2 10 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 5 6 12 6 5 114 0 10 11 11 10 113 0 6 16 1 12 9 6 12 103 14 1 9 15 1 11 10 9 11 105 7 1 3 3 0 97 13 8 2 1 4 0 0 39 77 0 4 4 0 97 13 8 2 1 4 0 0 39 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 5 6 12 6 5 114 0 10 11 10 134 0 6 16 1 12 9 6 12 103 14 1 9 15 1 11 10 9 11 105 7 1 3 3 0 97 13 8 2 1 4 0 0 39 77 0 4 4 0 97 13 8 2 1 4 0 0 39 4 78 
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 44 values pushed */
318 315 305 304 291 290 0 0 315 330 318 330 304 314 305 314 296 295 290 303 291 303 0 289 0 286 279 273 233 231 228 227 158 157 151 148 141 139 136 133 33 17 8 23 
CALL[ ]	/* CallFunction */";
};
width = 679;
}
);
note = uni019C;
unicode = 412;
},
{
glyphname = N;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(346,5,o),
(351,4,qs),
(354,4,o),
(361,5,o),
(363,3,qs),
(369,-1,o),
(388,0,o),
(416,1,qs),
(422,1,o),
(441,16,o),
(442,22,qs),
(442,27,o),
(440,29,qs),
(434,35,o),
(434,46,qs),
(434,63,o),
(434,111,o),
(434,158,o),
(435,191,o),
(436,192,qs),
(441,197,o),
(443,207,o),
(443,211,qs),
(443,375,ls),
(443,383,o),
(445,396,o),
(449,403,qs),
(458,417,o),
(446,431,q),
(445,433,o),
(445,438,o),
(445,441,qs),
(445,442,o),
(446,468,o),
(445,468,q),
(439,477,o),
(445,486,qs),
(450,492,o),
(446,498,q),
(444,503,o),
(443,515,o),
(443,520,qs),
(443,668,ls),
(443,675,o),
(443,688,o),
(442,694,qs),
(441,701,o),
(429,701,qs),
(425,701,o),
(418,698,o),
(418,693,qs),
(417,687,o),
(417,674,o),
(417,667,qs),
(417,663,o),
(417,649,o),
(418,644,q),
(418,636,o),
(410,618,o),
(408,610,q),
(408,603,o),
(419,587,o),
(417,580,q),
(416,568,o),
(418,558,o),
(418,546,qs),
(418,540,o),
(415,527,o),
(410,522,qs),
(406,518,o),
(411,515,q),
(418,506,o),
(417,498,q),
(417,411,l),
(410,406,o),
(419,386,o),
(415,378,q),
(408,374,o),
(418,365,o),
(413,360,qs),
(408,356,o),
(409,344,o),
(409,339,qs),
(409,268,o),
(408,195,o),
(406,168,o),
(403,164,qs),
(402,163,o),
(411,137,o),
(406,130,qs),
(402,123,o),
(408,83,o),
(408,66,qs),
(408,56,o),
(411,43,o),
(400,34,q),
(397,30,o),
(392,35,o),
(390,36,qs),
(386,38,o),
(379,36,o),
(375,34,q),
(370,30,o),
(357,26,o),
(352,30,q),
(348,32,o),
(338,31,o),
(332,31,qs),
(270,31,ls),
(258,31,o),
(258,43,qs),
(258,347,ls),
(258,352,o),
(262,360,o),
(264,364,q),
(266,366,o),
(259,375,o),
(264,379,qs),
(266,381,o),
(268,391,o),
(266,393,q),
(261,401,o),
(258,427,o),
(259,463,q),
(264,467,o),
(266,477,o),
(266,483,qs),
(266,529,o),
(266,621,o),
(267,667,qs),
(267,674,o),
(261,685,o),
(258,691,qs),
(255,699,o),
(247,699,q),
(238,701,o),
(213,699,o),
(207,699,qs),
(199,699,o),
(182,702,o),
(174,706,qs),
(171,708,o),
(162,706,o),
(158,704,q),
(145,700,o),
(119,699,o),
(106,704,qs),
(101,706,o),
(91,706,o),
(86,706,qs),
(76,706,o),
(58,701,o),
(49,696,qs),
(41,690,o),
(41,683,qs),
(41,681,o),
(40,623,o),
(40,528,o),
(40,411,o),
(40,349,qs),
(40,283,o),
(41,157,o),
(41,61,o),
(41,38,qs),
(41,32,o),
(41,13,o),
(42,7,qs),
(42,6,o),
(48,3,o),
(50,1,q),
(67,1,o),
(74,6,o),
(75,15,qs),
(75,21,o),
(67,32,o),
(69,36,qs),
(75,48,o),
(75,61,qs),
(74,76,o),
(73,80,o),
(73,79,o),
(74,91,o),
(74,113,q),
(76,119,o),
(69,129,o),
(67,133,q),
(66,138,o),
(73,149,o),
(74,154,q),
(76,156,o),
(68,166,o),
(68,170,qs),
(68,174,o),
(73,180,o),
(74,184,q),
(74,189,o),
(74,200,o),
(69,205,qs),
(61,214,o),
(70,226,qs),
(82,241,o),
(70,256,qs),
(62,268,o),
(69,278,q),
(78,287,o),
(70,294,qs),
(65,298,o),
(66,318,o),
(67,319,qs),
(74,326,o),
(74,345,o),
(74,350,qs),
(74,670,l),
(75,672,o),
(78,676,o),
(82,673,q),
(85,672,o),
(122,671,o),
(161,674,o),
(166,677,q),
(221,677,ls),
(233,677,o),
(233,666,qs),
(233,604,o),
(233,533,o),
(233,504,o),
(231,501,qs),
(230,499,o),
(230,494,qs),
(230,493,o),
(232,475,o),
(232,455,o),
(228,450,qs),
(226,447,o),
(229,444,q),
(234,436,o),
(234,421,o),
(228,412,qs),
(225,408,o),
(232,404,o),
(233,400,qs),
(234,395,o),
(224,388,o),
(230,381,qs),
(234,377,o),
(232,365,o),
(233,359,qs),
(233,358,o),
(234,353,o),
(233,351,q),
(228,346,o),
(224,333,o),
(224,326,qs),
(224,321,o),
(225,310,o),
(225,305,qs),
(225,206,o),
(225,94,o),
(225,44,o),
(225,30,o),
(225,28,q),
(227,22,o),
(232,10,o),
(236,4,qs),
(239,0,o),
(263,0,o),
(306,1,qs),
(312,1,o),
(326,2,o),
(330,-1,qs),
(337,-7,o)
);
}
);
width = 492;
}
);
note = N;
unicode = 78;
},
{
glyphname = Nacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = N;
},
{
pos = (136,143);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
143 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = Nacute;
unicode = 323;
},
{
glyphname = Ncaron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(346,5,o),
(351,4,qs),
(354,4,o),
(361,5,o),
(363,3,qs),
(369,-1,o),
(388,0,o),
(416,1,qs),
(422,1,o),
(441,16,o),
(442,22,qs),
(442,27,o),
(440,29,qs),
(434,35,o),
(434,46,qs),
(434,63,o),
(434,111,o),
(434,158,o),
(435,191,o),
(436,192,qs),
(441,197,o),
(443,207,o),
(443,211,qs),
(443,375,ls),
(443,383,o),
(445,396,o),
(449,403,qs),
(458,417,o),
(446,431,q),
(445,433,o),
(445,438,o),
(445,441,qs),
(445,442,o),
(446,468,o),
(445,468,q),
(439,477,o),
(445,486,qs),
(450,492,o),
(446,498,q),
(444,503,o),
(443,515,o),
(443,520,qs),
(443,668,ls),
(443,675,o),
(443,688,o),
(442,694,qs),
(441,701,o),
(429,701,qs),
(425,701,o),
(418,698,o),
(418,693,qs),
(417,687,o),
(417,674,o),
(417,667,qs),
(417,663,o),
(417,649,o),
(418,644,q),
(418,636,o),
(410,618,o),
(408,610,q),
(408,603,o),
(419,587,o),
(417,580,q),
(416,568,o),
(418,558,o),
(418,546,qs),
(418,540,o),
(415,527,o),
(410,522,qs),
(406,518,o),
(411,515,q),
(418,506,o),
(417,498,q),
(417,411,l),
(410,406,o),
(419,386,o),
(415,378,q),
(408,374,o),
(418,365,o),
(413,360,qs),
(408,356,o),
(409,344,o),
(409,339,qs),
(409,268,o),
(408,195,o),
(406,168,o),
(403,164,qs),
(402,163,o),
(411,137,o),
(406,130,qs),
(402,123,o),
(408,83,o),
(408,66,qs),
(408,56,o),
(411,43,o),
(400,34,q),
(397,30,o),
(392,35,o),
(390,36,qs),
(386,38,o),
(379,36,o),
(375,34,q),
(370,30,o),
(357,26,o),
(352,30,q),
(348,32,o),
(338,31,o),
(332,31,qs),
(270,31,ls),
(258,31,o),
(258,43,qs),
(258,347,ls),
(258,352,o),
(262,360,o),
(264,364,q),
(266,366,o),
(259,375,o),
(264,379,qs),
(266,381,o),
(268,391,o),
(266,393,q),
(261,401,o),
(258,427,o),
(259,463,q),
(264,467,o),
(266,477,o),
(266,483,qs),
(266,529,o),
(266,621,o),
(267,667,qs),
(267,674,o),
(261,685,o),
(258,691,qs),
(255,699,o),
(247,699,q),
(238,701,o),
(213,699,o),
(207,699,qs),
(199,699,o),
(182,702,o),
(174,706,qs),
(171,708,o),
(162,706,o),
(158,704,q),
(145,700,o),
(119,699,o),
(106,704,qs),
(101,706,o),
(91,706,o),
(86,706,qs),
(76,706,o),
(58,701,o),
(49,696,qs),
(41,690,o),
(41,683,qs),
(41,681,o),
(40,623,o),
(40,528,o),
(40,411,o),
(40,349,qs),
(40,283,o),
(41,157,o),
(41,61,o),
(41,38,qs),
(41,32,o),
(41,13,o),
(42,7,qs),
(42,6,o),
(48,3,o),
(50,1,q),
(67,1,o),
(74,6,o),
(75,15,qs),
(75,21,o),
(67,32,o),
(69,36,qs),
(75,48,o),
(75,61,qs),
(74,76,o),
(73,80,o),
(73,79,o),
(74,91,o),
(74,113,q),
(76,119,o),
(69,129,o),
(67,133,q),
(66,138,o),
(73,149,o),
(74,154,q),
(76,156,o),
(68,166,o),
(68,170,qs),
(68,174,o),
(73,180,o),
(74,184,q),
(74,189,o),
(74,200,o),
(69,205,qs),
(61,214,o),
(70,226,qs),
(82,241,o),
(70,256,qs),
(62,268,o),
(69,278,q),
(78,287,o),
(70,294,qs),
(65,298,o),
(66,318,o),
(67,319,qs),
(74,326,o),
(74,345,o),
(74,350,qs),
(74,670,l),
(75,672,o),
(78,676,o),
(82,673,q),
(85,672,o),
(122,671,o),
(161,674,o),
(166,677,q),
(221,677,ls),
(233,677,o),
(233,666,qs),
(233,604,o),
(233,533,o),
(233,504,o),
(231,501,qs),
(230,499,o),
(230,494,qs),
(230,493,o),
(232,475,o),
(232,455,o),
(228,450,qs),
(226,447,o),
(229,444,q),
(234,436,o),
(234,421,o),
(228,412,qs),
(225,408,o),
(232,404,o),
(233,400,qs),
(234,395,o),
(224,388,o),
(230,381,qs),
(234,377,o),
(232,365,o),
(233,359,qs),
(233,358,o),
(234,353,o),
(233,351,q),
(228,346,o),
(224,333,o),
(224,326,qs),
(224,321,o),
(225,310,o),
(225,305,qs),
(225,206,o),
(225,94,o),
(225,44,o),
(225,30,o),
(225,28,q),
(227,22,o),
(232,10,o),
(236,4,qs),
(239,0,o),
(263,0,o),
(306,1,qs),
(312,1,o),
(326,2,o),
(330,-1,qs),
(337,-7,o)
);
},
{
closed = 1;
nodes = (
(277,836,o),
(274,832,qs),
(272,830,o),
(259,813,o),
(257,811,qs),
(255,808,o),
(248,797,o),
(246,796,qs),
(240,793,o),
(236,793,o),
(231,795,q),
(227,800,o),
(205,820,o),
(178,843,o),
(155,859,o),
(150,859,q),
(142,861,o),
(130,859,o),
(134,850,q),
(140,844,o),
(152,831,o),
(156,824,q),
(161,821,o),
(173,806,o),
(179,803,q),
(187,796,o),
(194,787,o),
(201,781,qs),
(209,774,o),
(225,760,o),
(229,749,qs),
(231,745,o),
(239,744,o),
(241,748,q),
(252,760,o),
(283,794,o),
(313,829,o),
(333,852,o),
(332,853,qs),
(330,855,o),
(324,860,o),
(322,860,q),
(317,862,o),
(310,860,q),
(296,853,o)
);
}
);
width = 492;
}
);
note = Ncaron;
unicode = 327;
},
{
glyphname = uni1E4A;
layers = (
{
layerId = m01;
shapes = (
{
ref = N;
},
{
pos = (97,-782);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-782 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = uni1E4A;
unicode = 7754;
},
{
glyphname = uni0145;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(346,5,o),
(351,4,qs),
(354,4,o),
(361,5,o),
(363,3,qs),
(369,-1,o),
(388,0,o),
(416,1,qs),
(422,1,o),
(441,16,o),
(442,22,qs),
(442,27,o),
(440,29,qs),
(434,35,o),
(434,46,qs),
(434,63,o),
(434,111,o),
(434,158,o),
(435,191,o),
(436,192,qs),
(441,197,o),
(443,207,o),
(443,211,qs),
(443,375,ls),
(443,383,o),
(445,396,o),
(449,403,qs),
(458,417,o),
(446,431,q),
(445,433,o),
(445,438,o),
(445,441,qs),
(445,442,o),
(446,468,o),
(445,468,q),
(439,477,o),
(445,486,qs),
(450,492,o),
(446,498,q),
(444,503,o),
(443,515,o),
(443,520,qs),
(443,668,ls),
(443,675,o),
(443,688,o),
(442,694,qs),
(441,701,o),
(429,701,qs),
(425,701,o),
(418,698,o),
(418,693,qs),
(417,687,o),
(417,674,o),
(417,667,qs),
(417,663,o),
(417,649,o),
(418,644,q),
(418,636,o),
(410,618,o),
(408,610,q),
(408,603,o),
(419,587,o),
(417,580,q),
(416,568,o),
(418,558,o),
(418,546,qs),
(418,540,o),
(415,527,o),
(410,522,qs),
(406,518,o),
(411,515,q),
(418,506,o),
(417,498,q),
(417,411,l),
(410,406,o),
(419,386,o),
(415,378,q),
(408,374,o),
(418,365,o),
(413,360,qs),
(408,356,o),
(409,344,o),
(409,339,qs),
(409,268,o),
(408,195,o),
(406,168,o),
(403,164,qs),
(402,163,o),
(411,137,o),
(406,130,qs),
(402,123,o),
(408,83,o),
(408,66,qs),
(408,56,o),
(411,43,o),
(400,34,q),
(397,30,o),
(392,35,o),
(390,36,qs),
(386,38,o),
(379,36,o),
(375,34,q),
(370,30,o),
(357,26,o),
(352,30,q),
(348,32,o),
(338,31,o),
(332,31,qs),
(270,31,ls),
(258,31,o),
(258,43,qs),
(258,347,ls),
(258,352,o),
(262,360,o),
(264,364,q),
(266,366,o),
(259,375,o),
(264,379,qs),
(266,381,o),
(268,391,o),
(266,393,q),
(261,401,o),
(258,427,o),
(259,463,q),
(264,467,o),
(266,477,o),
(266,483,qs),
(266,529,o),
(266,621,o),
(267,667,qs),
(267,674,o),
(261,685,o),
(258,691,qs),
(255,699,o),
(247,699,q),
(238,701,o),
(213,699,o),
(207,699,qs),
(199,699,o),
(182,702,o),
(174,706,qs),
(171,708,o),
(162,706,o),
(158,704,q),
(145,700,o),
(119,699,o),
(106,704,qs),
(101,706,o),
(91,706,o),
(86,706,qs),
(76,706,o),
(58,701,o),
(49,696,qs),
(41,690,o),
(41,683,qs),
(41,681,o),
(40,623,o),
(40,528,o),
(40,411,o),
(40,349,qs),
(40,283,o),
(41,157,o),
(41,61,o),
(41,38,qs),
(41,32,o),
(41,13,o),
(42,7,qs),
(42,6,o),
(48,3,o),
(50,1,q),
(67,1,o),
(74,6,o),
(75,15,qs),
(75,21,o),
(67,32,o),
(69,36,qs),
(75,48,o),
(75,61,qs),
(74,76,o),
(73,80,o),
(73,79,o),
(74,91,o),
(74,113,q),
(76,119,o),
(69,129,o),
(67,133,q),
(66,138,o),
(73,149,o),
(74,154,q),
(76,156,o),
(68,166,o),
(68,170,qs),
(68,174,o),
(73,180,o),
(74,184,q),
(74,189,o),
(74,200,o),
(69,205,qs),
(61,214,o),
(70,226,qs),
(82,241,o),
(70,256,qs),
(62,268,o),
(69,278,q),
(78,287,o),
(70,294,qs),
(65,298,o),
(66,318,o),
(67,319,qs),
(74,326,o),
(74,345,o),
(74,350,qs),
(74,670,l),
(75,672,o),
(78,676,o),
(82,673,q),
(85,672,o),
(122,671,o),
(161,674,o),
(166,677,q),
(221,677,ls),
(233,677,o),
(233,666,qs),
(233,604,o),
(233,533,o),
(233,504,o),
(231,501,qs),
(230,499,o),
(230,494,qs),
(230,493,o),
(232,475,o),
(232,455,o),
(228,450,qs),
(226,447,o),
(229,444,q),
(234,436,o),
(234,421,o),
(228,412,qs),
(225,408,o),
(232,404,o),
(233,400,qs),
(234,395,o),
(224,388,o),
(230,381,qs),
(234,377,o),
(232,365,o),
(233,359,qs),
(233,358,o),
(234,353,o),
(233,351,q),
(228,346,o),
(224,333,o),
(224,326,qs),
(224,321,o),
(225,310,o),
(225,305,qs),
(225,206,o),
(225,94,o),
(225,44,o),
(225,30,o),
(225,28,q),
(227,22,o),
(232,10,o),
(236,4,qs),
(239,0,o),
(263,0,o),
(306,1,qs),
(312,1,o),
(326,2,o),
(330,-1,qs),
(337,-7,o)
);
},
{
closed = 1;
nodes = (
(176,-201,o),
(178,-198,q),
(182,-198,o),
(199,-174,o),
(201,-172,q),
(210,-158,o),
(213,-143,o),
(220,-129,qs),
(226,-113,o),
(239,-102,qs),
(252,-91,o),
(256,-65,o),
(257,-48,qs),
(258,-37,o),
(251,-27,o),
(245,-31,q),
(240,-36,o),
(220,-51,o),
(218,-58,qs),
(215,-69,o),
(204,-91,o),
(198,-103,qs),
(190,-124,o),
(170,-159,o),
(156,-194,q),
(159,-199,o)
);
}
);
width = 492;
}
);
note = uni0145;
unicode = 325;
},
{
glyphname = uni1E44;
layers = (
{
layerId = m01;
shapes = (
{
ref = N;
},
{
pos = (160,116);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
116 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = uni1E44;
unicode = 7748;
},
{
glyphname = uni1E46;
layers = (
{
layerId = m01;
shapes = (
{
ref = N;
},
{
pos = (159,-114);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = uni1E46;
unicode = 7750;
},
{
glyphname = uni01F8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(346,5,o),
(351,4,qs),
(354,4,o),
(361,5,o),
(363,3,qs),
(369,-1,o),
(388,0,o),
(416,1,qs),
(422,1,o),
(441,16,o),
(442,22,qs),
(442,27,o),
(440,29,qs),
(434,35,o),
(434,46,qs),
(434,63,o),
(434,111,o),
(434,158,o),
(435,191,o),
(436,192,qs),
(441,197,o),
(443,207,o),
(443,211,qs),
(443,375,ls),
(443,383,o),
(445,396,o),
(449,403,qs),
(458,417,o),
(446,431,q),
(445,433,o),
(445,438,o),
(445,441,qs),
(445,442,o),
(446,468,o),
(445,468,q),
(439,477,o),
(445,486,qs),
(450,492,o),
(446,498,q),
(444,503,o),
(443,515,o),
(443,520,qs),
(443,668,ls),
(443,675,o),
(443,688,o),
(442,694,qs),
(441,701,o),
(429,701,qs),
(425,701,o),
(418,698,o),
(418,693,qs),
(417,687,o),
(417,674,o),
(417,667,qs),
(417,663,o),
(417,649,o),
(418,644,q),
(418,636,o),
(410,618,o),
(408,610,q),
(408,603,o),
(419,587,o),
(417,580,q),
(416,568,o),
(418,558,o),
(418,546,qs),
(418,540,o),
(415,527,o),
(410,522,qs),
(406,518,o),
(411,515,q),
(418,506,o),
(417,498,q),
(417,411,l),
(410,406,o),
(419,386,o),
(415,378,q),
(408,374,o),
(418,365,o),
(413,360,qs),
(408,356,o),
(409,344,o),
(409,339,qs),
(409,268,o),
(408,195,o),
(406,168,o),
(403,164,qs),
(402,163,o),
(411,137,o),
(406,130,qs),
(402,123,o),
(408,83,o),
(408,66,qs),
(408,56,o),
(411,43,o),
(400,34,q),
(397,30,o),
(392,35,o),
(390,36,qs),
(386,38,o),
(379,36,o),
(375,34,q),
(370,30,o),
(357,26,o),
(352,30,q),
(348,32,o),
(338,31,o),
(332,31,qs),
(270,31,ls),
(258,31,o),
(258,43,qs),
(258,347,ls),
(258,352,o),
(262,360,o),
(264,364,q),
(266,366,o),
(259,375,o),
(264,379,qs),
(266,381,o),
(268,391,o),
(266,393,q),
(261,401,o),
(258,427,o),
(259,463,q),
(264,467,o),
(266,477,o),
(266,483,qs),
(266,529,o),
(266,621,o),
(267,667,qs),
(267,674,o),
(261,685,o),
(258,691,qs),
(255,699,o),
(247,699,q),
(238,701,o),
(213,699,o),
(207,699,qs),
(199,699,o),
(182,702,o),
(174,706,qs),
(171,708,o),
(162,706,o),
(158,704,q),
(145,700,o),
(119,699,o),
(106,704,qs),
(101,706,o),
(91,706,o),
(86,706,qs),
(76,706,o),
(58,701,o),
(49,696,qs),
(41,690,o),
(41,683,qs),
(41,681,o),
(40,623,o),
(40,528,o),
(40,411,o),
(40,349,qs),
(40,283,o),
(41,157,o),
(41,61,o),
(41,38,qs),
(41,32,o),
(41,13,o),
(42,7,qs),
(42,6,o),
(48,3,o),
(50,1,q),
(67,1,o),
(74,6,o),
(75,15,qs),
(75,21,o),
(67,32,o),
(69,36,qs),
(75,48,o),
(75,61,qs),
(74,76,o),
(73,80,o),
(73,79,o),
(74,91,o),
(74,113,q),
(76,119,o),
(69,129,o),
(67,133,q),
(66,138,o),
(73,149,o),
(74,154,q),
(76,156,o),
(68,166,o),
(68,170,qs),
(68,174,o),
(73,180,o),
(74,184,q),
(74,189,o),
(74,200,o),
(69,205,qs),
(61,214,o),
(70,226,qs),
(82,241,o),
(70,256,qs),
(62,268,o),
(69,278,q),
(78,287,o),
(70,294,qs),
(65,298,o),
(66,318,o),
(67,319,qs),
(74,326,o),
(74,345,o),
(74,350,qs),
(74,670,l),
(75,672,o),
(78,676,o),
(82,673,q),
(85,672,o),
(122,671,o),
(161,674,o),
(166,677,q),
(221,677,ls),
(233,677,o),
(233,666,qs),
(233,604,o),
(233,533,o),
(233,504,o),
(231,501,qs),
(230,499,o),
(230,494,qs),
(230,493,o),
(232,475,o),
(232,455,o),
(228,450,qs),
(226,447,o),
(229,444,q),
(234,436,o),
(234,421,o),
(228,412,qs),
(225,408,o),
(232,404,o),
(233,400,qs),
(234,395,o),
(224,388,o),
(230,381,qs),
(234,377,o),
(232,365,o),
(233,359,qs),
(233,358,o),
(234,353,o),
(233,351,q),
(228,346,o),
(224,333,o),
(224,326,qs),
(224,321,o),
(225,310,o),
(225,305,qs),
(225,206,o),
(225,94,o),
(225,44,o),
(225,30,o),
(225,28,q),
(227,22,o),
(232,10,o),
(236,4,qs),
(239,0,o),
(263,0,o),
(306,1,qs),
(312,1,o),
(326,2,o),
(330,-1,qs),
(337,-7,o)
);
},
{
closed = 1;
nodes = (
(256,792,o),
(245,802,qs),
(224,820,o),
(212,836,q),
(204,843,o),
(190,856,o),
(183,864,qs),
(179,869,o),
(170,879,o),
(163,880,q),
(161,882,o),
(155,877,o),
(153,878,qs),
(150,880,o),
(139,869,o),
(140,866,qs),
(145,854,o),
(155,831,o),
(171,826,qs),
(177,824,o),
(188,816,o),
(192,811,qs),
(200,802,o),
(221,780,o),
(237,766,qs),
(255,753,o),
(283,758,o),
(287,762,q),
(277,772,o)
);
}
);
width = 492;
}
);
note = uni01F8;
unicode = 504;
},
{
glyphname = uni019D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(415,5,o),
(420,4,qs),
(423,4,o),
(430,5,o),
(432,3,qs),
(438,-1,o),
(457,0,o),
(485,1,qs),
(491,1,o),
(510,16,o),
(511,22,qs),
(511,27,o),
(509,29,qs),
(503,35,o),
(503,46,qs),
(503,63,o),
(503,111,o),
(503,158,o),
(504,191,o),
(505,192,qs),
(510,197,o),
(512,207,o),
(512,211,qs),
(512,375,ls),
(512,383,o),
(514,396,o),
(518,403,qs),
(527,417,o),
(515,431,q),
(514,433,o),
(514,438,o),
(514,441,qs),
(514,442,o),
(515,468,o),
(514,468,q),
(508,477,o),
(514,486,qs),
(519,492,o),
(515,498,q),
(513,503,o),
(512,515,o),
(512,520,qs),
(512,668,ls),
(512,675,o),
(512,688,o),
(511,694,qs),
(510,701,o),
(498,701,qs),
(494,701,o),
(487,698,o),
(487,693,qs),
(486,687,o),
(486,674,o),
(486,667,qs),
(486,663,o),
(486,649,o),
(487,644,q),
(487,636,o),
(479,618,o),
(477,610,q),
(477,603,o),
(488,587,o),
(486,580,q),
(485,568,o),
(487,558,o),
(487,546,qs),
(487,540,o),
(484,527,o),
(479,522,qs),
(475,518,o),
(480,515,q),
(487,506,o),
(486,498,q),
(486,411,l),
(479,406,o),
(488,386,o),
(484,378,q),
(477,374,o),
(487,365,o),
(482,360,qs),
(477,356,o),
(478,344,o),
(478,339,qs),
(478,268,o),
(477,195,o),
(475,168,o),
(472,164,qs),
(471,163,o),
(480,137,o),
(475,130,qs),
(471,123,o),
(477,83,o),
(477,66,qs),
(477,56,o),
(480,43,o),
(469,34,q),
(466,30,o),
(461,35,o),
(459,36,qs),
(455,38,o),
(448,36,o),
(444,34,q),
(439,30,o),
(426,26,o),
(421,30,q),
(417,32,o),
(407,31,o),
(401,31,qs),
(339,31,ls),
(327,31,o),
(327,43,qs),
(327,347,ls),
(327,352,o),
(331,360,o),
(333,364,q),
(335,366,o),
(328,375,o),
(333,379,qs),
(335,381,o),
(337,391,o),
(335,393,q),
(330,401,o),
(327,427,o),
(328,463,q),
(333,467,o),
(335,477,o),
(335,483,qs),
(335,529,o),
(335,621,o),
(336,667,qs),
(336,674,o),
(330,685,o),
(327,691,qs),
(324,699,o),
(316,699,q),
(307,701,o),
(282,699,o),
(276,699,qs),
(268,699,o),
(251,702,o),
(243,706,qs),
(240,708,o),
(231,706,o),
(227,704,q),
(214,700,o),
(188,699,o),
(175,704,qs),
(170,706,o),
(160,706,o),
(155,706,qs),
(145,706,o),
(127,701,o),
(118,696,qs),
(110,690,o),
(110,683,qs),
(110,681,o),
(109,623,o),
(109,528,o),
(109,411,o),
(109,349,qs),
(109,283,o),
(110,157,o),
(110,61,o),
(110,38,qs),
(110,32,o),
(110,13,o),
(111,7,qs),
(111,6,o),
(113,5,q),
(110,-8,o),
(112,-52,o),
(101,-86,o),
(81,-85,qs),
(76,-85,o),
(53,-85,o),
(48,-84,qs),
(42,-82,o),
(36,-85,o),
(23,-86,o),
(3,-84,qs),
(-2,-83,o),
(-12,-89,o),
(-18,-86,q),
(-31,-93,o),
(-28,-105,o),
(-18,-110,qs),
(-6,-117,o),
(14,-121,o),
(27,-116,qs),
(31,-114,o),
(61,-115,o),
(66,-115,qs),
(89,-116,o),
(94,-116,o),
(98,-116,qs),
(126,-114,o),
(140,-81,o),
(142,-56,qs),
(143,-46,o),
(138,-25,o),
(142,-18,qs),
(144,-14,o),
(141,4,o),
(142,6,qs),
(143,8,o),
(144,15,qs),
(144,21,o),
(136,32,o),
(138,36,qs),
(144,48,o),
(144,61,qs),
(143,76,o),
(142,80,o),
(142,79,o),
(143,91,o),
(143,113,q),
(145,119,o),
(138,129,o),
(136,133,q),
(135,138,o),
(142,149,o),
(143,154,q),
(145,156,o),
(137,166,o),
(137,170,qs),
(137,174,o),
(142,180,o),
(143,184,q),
(143,189,o),
(143,200,o),
(138,205,qs),
(130,214,o),
(139,226,qs),
(151,241,o),
(139,256,qs),
(131,268,o),
(138,278,q),
(147,287,o),
(139,294,qs),
(134,298,o),
(135,318,o),
(136,319,qs),
(143,326,o),
(143,345,o),
(143,350,qs),
(143,670,l),
(144,672,o),
(147,676,o),
(151,673,q),
(154,672,o),
(191,671,o),
(230,674,o),
(235,677,q),
(290,677,ls),
(302,677,o),
(302,666,qs),
(302,604,o),
(302,533,o),
(302,504,o),
(300,501,qs),
(299,499,o),
(299,494,qs),
(299,493,o),
(301,475,o),
(301,455,o),
(297,450,qs),
(295,447,o),
(298,444,q),
(303,436,o),
(303,421,o),
(297,412,qs),
(294,408,o),
(301,404,o),
(302,400,qs),
(303,395,o),
(293,388,o),
(299,381,qs),
(303,377,o),
(301,365,o),
(302,359,qs),
(302,358,o),
(303,353,o),
(302,351,q),
(297,346,o),
(293,333,o),
(293,326,qs),
(293,321,o),
(294,310,o),
(294,305,qs),
(294,206,o),
(294,94,o),
(294,44,o),
(294,30,o),
(294,28,q),
(296,22,o),
(301,10,o),
(305,4,qs),
(308,0,o),
(332,0,o),
(375,1,qs),
(381,1,o),
(395,2,o),
(399,-1,qs),
(406,-7,o)
);
}
);
width = 561;
}
);
note = uni019D;
unicode = 413;
},
{
glyphname = uni0220;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(73,13,o),
(74,18,q),
(73,27,o),
(73,106,o),
(73,220,o),
(73,349,o),
(74,469,o),
(74,560,o),
(74,578,qs),
(74,589,o),
(82,588,o),
(99,592,qs),
(389,673,ls),
(417,681,o),
(428,663,o),
(428,639,qs),
(428,206,ls),
(428,196,o),
(424,177,o),
(428,168,qs),
(433,157,o),
(427,135,o),
(422,113,o),
(428,101,q),
(428,101,o),
(426,76,o),
(425,41,o),
(428,26,qs),
(437,-16,o),
(428,-70,o),
(429,-72,q),
(430,-79,o),
(419,-92,o),
(428,-99,qs),
(429,-100,o),
(427,-104,o),
(426,-106,qs),
(417,-122,o),
(421,-154,o),
(422,-173,qs),
(422,-182,o),
(439,-191,o),
(455,-185,o),
(455,-172,qs),
(455,-164,o),
(463,-114,o),
(462,-69,qs),
(462,-29,ls),
(462,-16,o),
(462,69,o),
(463,191,o),
(463,331,o),
(463,472,o),
(464,594,o),
(464,678,o),
(464,691,qs),
(463,698,o),
(441,710,o),
(408,706,qs),
(404,705,o),
(396,706,o),
(391,704,q),
(93,623,ls),
(90,622,o),
(83,624,o),
(81,625,q),
(76,630,o),
(79,639,qs),
(84,649,o),
(84,671,qs),
(84,681,o),
(63,703,o),
(57,698,qs),
(45,686,o),
(41,677,o),
(42,675,q),
(48,669,o),
(48,656,o),
(48,649,q),
(46,643,o),
(43,567,o),
(42,484,qs),
(42,483,o),
(40,457,o),
(40,431,o),
(42,429,q),
(46,427,o),
(41,413,o),
(41,409,qs),
(41,397,o),
(46,379,o),
(41,365,qs),
(37,354,o),
(41,331,o),
(41,320,qs),
(41,311,o),
(45,292,o),
(41,283,qs),
(37,273,o),
(41,252,o),
(41,241,qs),
(40,165,o),
(40,41,o),
(40,11,qs),
(40,3,o),
(52,3,qs),
(60,4,o)
);
},
{
closed = 1;
nodes = (
(279,301,o),
(285,308,qs),
(293,320,o),
(285,331,qs),
(278,339,o),
(259,355,o),
(248,355,qs),
(230,355,o),
(216,330,o),
(216,323,qs),
(216,311,o),
(237,294,o),
(256,294,qs),
(266,293,o)
);
},
{
closed = 1;
nodes = (
(244,324,qs),
(244,326,o),
(247,333,o),
(251,333,qs),
(258,333,o),
(261,326,q),
(263,325,o),
(261,320,q),
(257,316,o),
(254,317,q),
(244,317,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
110 1 4 3 104 1 0 1 2 76 30 17 2 2 74 0 2 0 3 4 2 3 105 5 1 4 0 1 0 4 1 105 0 0 0 38 0 78 121 121 121 131 121 131 128 126 114 112 108 107 16 6 8 23 
CALL[ ]	/* CallFunction */";
};
width = 504;
}
);
note = uni0220;
unicode = 544;
},
{
glyphname = Nmacronbelow;
layers = (
{
layerId = m01;
shapes = (
{
ref = N;
},
{
pos = (49,-329);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-329 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = Nmacronbelow;
unicode = 7752;
},
{
glyphname = Ntilde;
layers = (
{
layerId = m01;
shapes = (
{
ref = N;
},
{
pos = (106,95);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
95 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = Ntilde;
unicode = 209;
},
{
glyphname = Eng;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(346,5,o),
(351,4,qs),
(354,4,o),
(361,5,o),
(363,3,qs),
(369,-1,o),
(387,0,o),
(413,1,q),
(418,-14,o),
(408,-30,o),
(409,-47,qs),
(411,-63,o),
(404,-80,q),
(403,-86,o),
(370,-88,o),
(361,-87,qs),
(338,-85,o),
(313,-86,o),
(307,-88,qs),
(291,-91,o),
(303,-108,o),
(308,-110,qs),
(312,-111,o),
(338,-114,o),
(368,-114,o),
(377,-113,qs),
(385,-111,o),
(413,-113,o),
(414,-112,q),
(436,-107,o),
(436,-94,qs),
(435,-70,o),
(442,-34,o),
(441,-29,qs),
(439,-19,o),
(439,8,o),
(439,16,q),
(441,19,o),
(442,22,q),
(442,27,o),
(440,29,qs),
(434,35,o),
(434,46,qs),
(434,63,o),
(434,111,o),
(434,158,o),
(435,191,o),
(436,192,qs),
(441,197,o),
(443,207,o),
(443,211,qs),
(443,375,ls),
(443,383,o),
(445,396,o),
(449,403,qs),
(458,417,o),
(446,431,q),
(445,433,o),
(445,438,o),
(445,441,qs),
(445,442,o),
(446,468,o),
(445,468,q),
(439,477,o),
(445,486,qs),
(450,492,o),
(446,498,q),
(444,503,o),
(443,515,o),
(443,520,qs),
(443,668,ls),
(443,675,o),
(443,688,o),
(442,694,qs),
(441,701,o),
(429,701,qs),
(425,701,o),
(418,698,o),
(418,693,qs),
(417,687,o),
(417,674,o),
(417,667,qs),
(417,663,o),
(417,649,o),
(418,644,q),
(418,636,o),
(410,618,o),
(408,610,q),
(408,603,o),
(419,587,o),
(417,580,q),
(416,568,o),
(418,558,o),
(418,546,qs),
(418,540,o),
(415,527,o),
(410,522,qs),
(406,518,o),
(411,515,q),
(418,506,o),
(417,498,q),
(417,411,l),
(410,406,o),
(419,386,o),
(415,378,q),
(408,374,o),
(418,365,o),
(413,360,qs),
(408,356,o),
(409,344,o),
(409,339,qs),
(409,268,o),
(408,195,o),
(406,168,o),
(403,164,qs),
(402,163,o),
(411,137,o),
(406,130,qs),
(402,123,o),
(408,83,o),
(408,66,qs),
(408,56,o),
(411,43,o),
(400,34,q),
(397,30,o),
(392,35,o),
(390,36,qs),
(386,38,o),
(379,36,o),
(375,34,q),
(370,30,o),
(357,26,o),
(352,30,q),
(348,32,o),
(338,31,o),
(332,31,qs),
(270,31,ls),
(258,31,o),
(258,43,qs),
(258,347,ls),
(258,352,o),
(262,360,o),
(264,364,q),
(266,366,o),
(259,375,o),
(264,379,qs),
(266,381,o),
(268,391,o),
(266,393,q),
(261,401,o),
(258,427,o),
(259,463,q),
(264,467,o),
(266,477,o),
(266,483,qs),
(266,529,o),
(266,621,o),
(267,667,qs),
(267,674,o),
(261,685,o),
(258,691,qs),
(255,699,o),
(247,699,q),
(238,701,o),
(213,699,o),
(207,699,qs),
(199,699,o),
(182,702,o),
(174,706,qs),
(171,708,o),
(162,706,o),
(158,704,q),
(145,700,o),
(119,699,o),
(106,704,qs),
(101,706,o),
(91,706,o),
(86,706,qs),
(76,706,o),
(58,701,o),
(49,696,qs),
(41,690,o),
(41,683,qs),
(41,681,o),
(40,623,o),
(40,528,o),
(40,411,o),
(40,349,qs),
(40,283,o),
(41,157,o),
(41,61,o),
(41,38,qs),
(41,32,o),
(41,13,o),
(42,7,qs),
(42,6,o),
(48,3,o),
(50,1,q),
(67,1,o),
(74,6,o),
(75,15,qs),
(75,21,o),
(67,32,o),
(69,36,qs),
(75,48,o),
(75,61,qs),
(74,76,o),
(73,80,o),
(73,79,o),
(74,91,o),
(74,113,q),
(76,119,o),
(69,129,o),
(67,133,q),
(66,138,o),
(73,149,o),
(74,154,q),
(76,156,o),
(68,166,o),
(68,170,qs),
(68,174,o),
(73,180,o),
(74,184,q),
(74,189,o),
(74,200,o),
(69,205,qs),
(61,214,o),
(70,226,qs),
(82,241,o),
(70,256,qs),
(62,268,o),
(69,278,q),
(78,287,o),
(70,294,qs),
(65,298,o),
(66,318,o),
(67,319,qs),
(74,326,o),
(74,345,o),
(74,350,qs),
(74,670,l),
(75,672,o),
(78,676,o),
(82,673,q),
(85,672,o),
(122,671,o),
(161,674,o),
(166,677,q),
(221,677,ls),
(233,677,o),
(233,666,qs),
(233,604,o),
(233,533,o),
(233,504,o),
(231,501,qs),
(230,499,o),
(230,494,qs),
(230,493,o),
(232,475,o),
(232,455,o),
(228,450,qs),
(226,447,o),
(229,444,q),
(234,436,o),
(234,421,o),
(228,412,qs),
(225,408,o),
(232,404,o),
(233,400,qs),
(234,395,o),
(224,388,o),
(230,381,qs),
(234,377,o),
(232,365,o),
(233,359,qs),
(233,358,o),
(234,353,o),
(233,351,q),
(228,346,o),
(224,333,o),
(224,326,qs),
(224,321,o),
(225,310,o),
(225,305,qs),
(225,206,o),
(225,94,o),
(225,44,o),
(225,30,o),
(225,28,q),
(227,22,o),
(232,10,o),
(236,4,qs),
(239,0,o),
(263,0,o),
(306,1,qs),
(312,1,o),
(326,2,o),
(330,-1,qs),
(337,-7,o)
);
}
);
width = 492;
}
);
note = Eng;
unicode = 330;
},
{
glyphname = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(420,-6,o),
(434,3,o),
(439,7,qs),
(441,9,o),
(442,18,o),
(442,22,qs),
(442,75,o),
(442,156,o),
(443,232,o),
(443,319,o),
(443,379,qs),
(443,387,o),
(446,402,o),
(450,409,q),
(452,411,o),
(444,421,o),
(445,423,qs),
(447,428,o),
(451,436,o),
(451,442,qs),
(451,581,ls),
(451,591,o),
(446,597,qs),
(442,602,o),
(451,607,o),
(451,611,qs),
(451,646,ls),
(451,655,o),
(450,673,o),
(450,682,qs),
(450,687,o),
(441,696,o),
(436,698,qs),
(433,700,o),
(424,698,o),
(420,698,qs),
(78,698,ls),
(74,698,o),
(65,699,o),
(61,698,qs),
(57,698,o),
(45,684,o),
(45,679,qs),
(45,629,ls),
(45,622,o),
(46,607,o),
(45,600,q),
(37,594,o),
(45,584,o),
(45,578,qs),
(45,477,ls),
(45,473,o),
(39,465,o),
(40,463,q),
(44,459,o),
(45,449,o),
(45,444,qs),
(45,25,ls),
(45,3,o),
(66,3,qs),
(113,3,o),
(158,3,o),
(175,2,o),
(179,0,qs),
(187,-5,o),
(198,3,o),
(205,3,qs),
(258,3,o),
(307,2,o),
(324,2,o),
(327,3,qs),
(335,5,o),
(346,-7,o),
(353,3,q),
(367,-6,o),
(382,-6,qs),
(414,-6,ls)
);
},
{
closed = 1;
nodes = (
(168,37,o),
(161,37,qs),
(78,37,ls),
(74,37,o),
(69,46,o),
(72,49,qs),
(77,55,o),
(79,66,o),
(79,73,qs),
(79,120,ls),
(79,126,o),
(77,138,o),
(72,143,q),
(70,148,o),
(74,154,qs),
(87,172,o),
(76,194,qs),
(73,202,o),
(73,214,o),
(78,220,q),
(80,221,o),
(79,227,o),
(78,228,qs),
(74,233,o),
(71,242,o),
(71,247,qs),
(71,264,o),
(72,281,o),
(78,287,q),
(81,293,o),
(76,298,qs),
(72,303,o),
(72,313,o),
(70,318,q),
(69,326,o),
(81,340,o),
(71,347,q),
(71,647,l),
(72,652,o),
(84,663,o),
(89,663,qs),
(401,663,ls),
(413,663,o),
(417,659,o),
(417,646,qs),
(417,490,ls),
(417,483,o),
(416,472,o),
(412,466,qs),
(403,454,o),
(412,438,qs),
(416,429,o),
(412,424,qs),
(411,423,o),
(408,415,o),
(409,413,q),
(414,407,o),
(417,397,o),
(412,390,qs),
(410,388,o),
(407,377,o),
(409,375,qs),
(412,371,o),
(415,352,o),
(417,298,o),
(417,241,qs),
(417,227,o),
(409,219,qs),
(408,218,o),
(410,213,o),
(409,211,qs),
(407,204,o),
(418,192,o),
(409,186,q),
(409,51,ls),
(409,39,o),
(404,30,q),
(393,30,o),
(370,29,o),
(358,29,qs),
(257,29,ls),
(250,29,o),
(236,29,o),
(229,34,qs),
(227,36,o),
(215,29,o),
(211,30,qs),
(207,32,o),
(199,36,o),
(194,30,q),
(188,27,o),
(186,29,qs),
(181,34,o)
);
},
{
closed = 1;
nodes = (
(274,342,o),
(274,349,qs),
(274,361,o),
(253,378,o),
(234,378,q),
(224,380,o),
(211,372,o),
(205,364,qs),
(197,353,o),
(205,341,q),
(213,334,o),
(232,317,o),
(242,317,qs),
(260,317,o)
);
},
{
closed = 1;
nodes = (
(229,346,qs),
(228,348,o),
(229,352,q),
(233,356,o),
(236,355,q),
(246,355,o),
(246,348,qs),
(246,347,o),
(244,339,o),
(239,339,qs),
(233,339,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
33 1 5 3 113 56 50 29 26 5 8 5 191 189 181 132 4 9 8 163 160 143 95 4 6 7 70 2 2 1 4 5 76 77 1 4 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 8 5 9 9 8 114 12 1 9 11 1 7 6 9 7 106 0 5 5 3 95 0 3 3 39 77 0 6 6 1 97 2 1 1 1 38 77 0 4 4 1 97 2 1 1 1 38 77 10 1 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 8 5 9 5 8 9 128 12 1 9 11 1 7 6 9 7 106 0 5 5 3 95 0 3 3 39 77 0 6 6 1 97 2 1 1 1 38 77 0 4 4 1 97 2 1 1 1 38 77 10 1 0 0 44 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
185 184 171 170 1 0 184 194 185 194 179 178 170 183 171 183 167 165 128 127 92 86 40 38 17 14 9 5 0 76 1 75 13 8 22 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = O;
unicode = 79;
},
{
glyphname = uni0222;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(321,-6,o),
(334,4,qs),
(344,12,o),
(379,37,o),
(390,44,q),
(395,46,o),
(394,52,o),
(398,54,q),
(403,58,o),
(420,63,o),
(418,68,q),
(442,85,o),
(469,100,o),
(469,107,q),
(487,115,o),
(507,134,o),
(523,142,qs),
(548,154,o),
(572,181,o),
(593,194,qs),
(602,199,o),
(592,204,qs),
(573,215,o),
(551,240,o),
(527,253,qs),
(522,256,o),
(513,262,o),
(513,265,qs),
(512,271,o),
(498,279,o),
(493,283,qs),
(488,288,o),
(460,307,o),
(433,327,o),
(428,331,qs),
(422,337,o),
(405,349,o),
(400,356,qs),
(395,364,o),
(374,376,o),
(364,383,q),
(350,396,o),
(330,409,o),
(312,415,q),
(356,414,o),
(440,414,o),
(502,414,o),
(511,415,qs),
(519,415,o),
(537,428,o),
(537,433,q),
(538,437,o),
(538,481,o),
(537,531,o),
(537,542,qs),
(537,566,o),
(542,580,o),
(547,590,o),
(547,604,qs),
(547,614,o),
(537,636,o),
(550,649,q),
(540,667,o),
(542,680,o),
(550,695,o),
(550,714,qs),
(550,731,o),
(536,723,o),
(526,715,qs),
(520,709,o),
(521,699,o),
(521,694,qs),
(520,664,o),
(513,591,o),
(506,521,o),
(506,471,o),
(512,466,qs),
(516,462,o),
(510,453,o),
(505,450,q),
(496,447,o),
(434,443,o),
(348,441,o),
(254,441,o),
(170,443,o),
(114,444,o),
(109,444,q),
(100,456,o),
(100,468,qs),
(100,498,o),
(102,530,o),
(102,536,qs),
(102,558,l),
(103,566,o),
(100,582,o),
(99,589,qs),
(97,605,o),
(98,618,o),
(102,629,o),
(102,641,qs),
(102,706,ls),
(102,720,o),
(87,728,o),
(71,719,o),
(71,705,qs),
(71,436,ls),
(71,425,o),
(94,414,o),
(102,407,q),
(117,412,o),
(142,416,o),
(154,416,qs),
(164,416,o),
(242,415,o),
(292,415,qs),
(291,415,o),
(290,414,q),
(279,411,o),
(270,402,o),
(265,397,qs),
(263,395,o),
(262,391,o),
(257,389,qs),
(244,385,o),
(233,373,o),
(225,368,qs),
(215,362,o),
(199,350,o),
(188,345,qs),
(178,341,o),
(180,330,o),
(167,327,q),
(166,324,o),
(131,300,o),
(83,268,o),
(38,237,o),
(26,227,qs),
(21,223,o),
(12,213,o),
(10,208,q),
(10,205,o),
(36,180,o),
(69,153,o),
(78,146,qs),
(88,139,o),
(109,127,o),
(109,119,q),
(155,86,l),
(179,76,o),
(216,53,o),
(232,41,qs),
(239,36,o),
(253,26,o),
(255,21,q),
(264,12,ls),
(276,1,o)
);
},
{
closed = 1;
nodes = (
(235,80,o),
(208,91,qs),
(199,95,o),
(187,106,o),
(175,109,qs),
(165,113,o),
(168,121,o),
(162,125,qs),
(147,135,o),
(125,155,o),
(111,168,qs),
(105,174,o),
(88,179,o),
(88,183,qs),
(88,186,o),
(74,195,o),
(61,204,o),
(60,206,qs),
(58,211,o),
(75,222,o),
(77,225,q),
(96,243,o),
(150,270,o),
(169,288,q),
(184,293,o),
(195,303,o),
(201,308,q),
(205,314,o),
(237,338,o),
(273,360,o),
(284,363,q),
(292,370,o),
(301,378,o),
(310,380,q),
(321,372,o),
(364,337,o),
(378,330,qs),
(387,326,o),
(418,304,o),
(451,278,o),
(475,258,o),
(477,255,qs),
(481,250,o),
(495,243,o),
(496,238,qs),
(496,236,o),
(504,232,o),
(507,230,qs),
(547,200,l),
(542,195,o),
(528,186,o),
(515,174,q),
(507,163,o),
(484,150,o),
(469,143,qs),
(461,139,o),
(455,128,o),
(443,124,q),
(441,118,o),
(417,110,o),
(413,105,qs),
(411,102,o),
(391,87,o),
(369,71,o),
(364,68,q),
(354,64,o),
(353,52,o),
(338,48,qs),
(328,45,o),
(328,35,o),
(318,30,qs),
(308,26,o),
(300,25,o),
(293,29,q),
(273,45,o)
);
},
{
closed = 1;
nodes = (
(340,201,o),
(338,205,qs),
(334,214,o),
(323,230,o),
(312,235,qs),
(303,238,o),
(295,231,o),
(289,230,qs),
(282,229,o),
(264,211,o),
(266,206,qs),
(269,199,o),
(275,184,o),
(280,178,qs),
(283,175,o),
(316,175,qs),
(321,175,o)
);
},
{
closed = 1;
nodes = (
(296,199,qs),
(293,203,o),
(291,207,qs),
(290,209,o),
(296,213,o),
(298,214,q),
(300,214,o),
(302,217,o),
(305,215,q),
(308,214,o),
(311,209,o),
(313,206,qs),
(314,205,o),
(308,197,o),
(306,197,qs),
(297,197,o)
);
}
);
width = 607;
}
);
note = uni0222;
unicode = 546;
},
{
glyphname = Oacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (172,143);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
143 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = Oacute;
unicode = 211;
},
{
glyphname = uni01D1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(420,-6,o),
(434,3,o),
(439,7,qs),
(441,9,o),
(442,18,o),
(442,22,qs),
(442,75,o),
(442,156,o),
(443,232,o),
(443,319,o),
(443,379,qs),
(443,387,o),
(446,402,o),
(450,409,q),
(452,411,o),
(444,421,o),
(445,423,qs),
(447,428,o),
(451,436,o),
(451,442,qs),
(451,581,ls),
(451,591,o),
(446,597,qs),
(442,602,o),
(451,607,o),
(451,611,qs),
(451,646,ls),
(451,655,o),
(450,673,o),
(450,682,qs),
(450,687,o),
(441,696,o),
(436,698,qs),
(433,700,o),
(424,698,o),
(420,698,qs),
(78,698,ls),
(74,698,o),
(65,699,o),
(61,698,qs),
(57,698,o),
(45,684,o),
(45,679,qs),
(45,629,ls),
(45,622,o),
(46,607,o),
(45,600,q),
(37,594,o),
(45,584,o),
(45,578,qs),
(45,477,ls),
(45,473,o),
(39,465,o),
(40,463,q),
(44,459,o),
(45,449,o),
(45,444,qs),
(45,25,ls),
(45,3,o),
(66,3,qs),
(113,3,o),
(158,3,o),
(175,2,o),
(179,0,qs),
(187,-5,o),
(198,3,o),
(205,3,qs),
(258,3,o),
(307,2,o),
(324,2,o),
(327,3,qs),
(335,5,o),
(346,-7,o),
(353,3,q),
(367,-6,o),
(382,-6,qs),
(414,-6,ls)
);
},
{
closed = 1;
nodes = (
(168,37,o),
(161,37,qs),
(78,37,ls),
(74,37,o),
(69,46,o),
(72,49,qs),
(77,55,o),
(79,66,o),
(79,73,qs),
(79,120,ls),
(79,126,o),
(77,138,o),
(72,143,q),
(70,148,o),
(74,154,qs),
(87,172,o),
(76,194,qs),
(73,202,o),
(73,214,o),
(78,220,q),
(80,221,o),
(79,227,o),
(78,228,qs),
(74,233,o),
(71,242,o),
(71,247,qs),
(71,264,o),
(72,281,o),
(78,287,q),
(81,293,o),
(76,298,qs),
(72,303,o),
(72,313,o),
(70,318,q),
(69,326,o),
(81,340,o),
(71,347,q),
(71,647,l),
(72,652,o),
(84,663,o),
(89,663,qs),
(401,663,ls),
(413,663,o),
(417,659,o),
(417,646,qs),
(417,490,ls),
(417,483,o),
(416,472,o),
(412,466,qs),
(403,454,o),
(412,438,qs),
(416,429,o),
(412,424,qs),
(411,423,o),
(408,415,o),
(409,413,q),
(414,407,o),
(417,397,o),
(412,390,qs),
(410,388,o),
(407,377,o),
(409,375,qs),
(412,371,o),
(415,352,o),
(417,298,o),
(417,241,qs),
(417,227,o),
(409,219,qs),
(408,218,o),
(410,213,o),
(409,211,qs),
(407,204,o),
(418,192,o),
(409,186,q),
(409,51,ls),
(409,39,o),
(404,30,q),
(393,30,o),
(370,29,o),
(358,29,qs),
(257,29,ls),
(250,29,o),
(236,29,o),
(229,34,qs),
(227,36,o),
(215,29,o),
(211,30,qs),
(207,32,o),
(199,36,o),
(194,30,q),
(188,27,o),
(186,29,qs),
(181,34,o)
);
},
{
closed = 1;
nodes = (
(274,342,o),
(274,349,qs),
(274,361,o),
(253,378,o),
(234,378,q),
(224,380,o),
(211,372,o),
(205,364,qs),
(197,353,o),
(205,341,q),
(213,334,o),
(232,317,o),
(242,317,qs),
(260,317,o)
);
},
{
closed = 1;
nodes = (
(229,346,qs),
(228,348,o),
(229,352,q),
(233,356,o),
(236,355,q),
(246,355,o),
(246,348,qs),
(246,347,o),
(244,339,o),
(239,339,qs),
(233,339,o)
);
},
{
closed = 1;
nodes = (
(293,836,o),
(290,832,qs),
(288,830,o),
(275,813,o),
(273,811,qs),
(271,808,o),
(264,797,o),
(262,796,qs),
(256,793,o),
(252,793,o),
(247,795,q),
(243,800,o),
(221,820,o),
(194,843,o),
(171,859,o),
(166,859,q),
(158,861,o),
(146,859,o),
(150,850,q),
(156,844,o),
(168,831,o),
(172,824,q),
(177,821,o),
(189,806,o),
(195,803,q),
(203,796,o),
(210,787,o),
(217,781,qs),
(225,774,o),
(241,760,o),
(245,749,qs),
(247,745,o),
(255,744,o),
(257,748,q),
(268,760,o),
(299,794,o),
(329,829,o),
(349,852,o),
(348,853,qs),
(346,855,o),
(340,860,o),
(338,860,q),
(333,862,o),
(326,860,q),
(312,853,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
33 1 5 3 113 56 50 29 26 5 8 5 191 189 181 132 4 9 8 163 160 143 95 4 6 7 70 2 2 1 4 5 76 77 1 4 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 8 5 9 9 8 114 12 1 9 11 1 7 6 9 7 106 0 5 5 3 95 0 3 3 39 77 0 6 6 1 97 2 1 1 1 38 77 0 4 4 1 97 2 1 1 1 38 77 10 1 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 8 5 9 5 8 9 128 12 1 9 11 1 7 6 9 7 106 0 5 5 3 95 0 3 3 39 77 0 6 6 1 97 2 1 1 1 38 77 0 4 4 1 97 2 1 1 1 38 77 10 1 0 0 44 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
185 184 171 170 1 0 184 194 185 194 179 178 170 183 171 183 167 165 128 127 92 86 40 38 17 14 9 5 0 76 1 75 13 8 22 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uni01D1;
unicode = 465;
},
{
glyphname = uni019F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(420,-6,o),
(434,3,o),
(439,7,qs),
(441,9,o),
(442,18,o),
(442,22,qs),
(442,75,o),
(442,156,o),
(443,232,o),
(443,319,o),
(443,379,qs),
(443,387,o),
(446,402,o),
(450,409,q),
(452,411,o),
(444,421,o),
(445,423,qs),
(447,428,o),
(451,436,o),
(451,442,qs),
(451,581,ls),
(451,591,o),
(446,597,qs),
(442,602,o),
(451,607,o),
(451,611,qs),
(451,646,ls),
(451,655,o),
(450,673,o),
(450,682,qs),
(450,687,o),
(441,696,o),
(436,698,qs),
(433,700,o),
(424,698,o),
(420,698,qs),
(78,698,ls),
(74,698,o),
(65,699,o),
(61,698,qs),
(57,698,o),
(45,684,o),
(45,679,qs),
(45,629,ls),
(45,622,o),
(46,607,o),
(45,600,q),
(37,594,o),
(45,584,o),
(45,578,qs),
(45,477,ls),
(45,473,o),
(39,465,o),
(40,463,q),
(44,459,o),
(45,449,o),
(45,444,qs),
(45,25,ls),
(45,3,o),
(66,3,qs),
(113,3,o),
(158,3,o),
(175,2,o),
(179,0,qs),
(187,-5,o),
(198,3,o),
(205,3,qs),
(258,3,o),
(307,2,o),
(324,2,o),
(327,3,qs),
(335,5,o),
(346,-7,o),
(353,3,q),
(367,-6,o),
(382,-6,qs),
(414,-6,ls)
);
},
{
closed = 1;
nodes = (
(168,37,o),
(161,37,qs),
(78,37,ls),
(74,37,o),
(69,46,o),
(72,49,qs),
(77,55,o),
(79,66,o),
(79,73,qs),
(79,120,ls),
(79,126,o),
(77,138,o),
(72,143,q),
(70,148,o),
(74,154,qs),
(87,172,o),
(76,194,qs),
(73,202,o),
(73,214,o),
(78,220,q),
(80,221,o),
(79,227,o),
(78,228,qs),
(74,233,o),
(71,242,o),
(71,247,qs),
(71,264,o),
(72,281,o),
(78,287,q),
(81,293,o),
(76,298,qs),
(72,303,o),
(72,313,o),
(70,318,q),
(71,325,o),
(72,327,q),
(76,327,o),
(79,327,qs),
(87,327,o),
(91,330,qs),
(99,335,o),
(111,333,qs),
(127,332,o),
(145,332,o),
(160,333,qs),
(162,333,o),
(173,334,o),
(174,334,qs),
(188,334,o),
(190,359,o),
(184,360,q),
(146,360,ls),
(138,360,o),
(108,360,o),
(78,360,o),
(71,360,q),
(71,647,l),
(72,652,o),
(84,663,o),
(89,663,qs),
(401,663,ls),
(413,663,o),
(417,659,o),
(417,646,qs),
(417,490,ls),
(417,483,o),
(416,472,o),
(412,466,qs),
(403,454,o),
(412,438,qs),
(416,429,o),
(412,424,qs),
(411,423,o),
(408,415,o),
(409,413,q),
(414,407,o),
(417,397,o),
(412,390,qs),
(410,388,o),
(407,377,o),
(409,375,q),
(412,370,o),
(413,363,q),
(390,363,ls),
(377,362,o),
(366,362,o),
(352,364,q),
(332,364,ls),
(327,364,o),
(316,366,o),
(311,366,qs),
(307,366,o),
(301,364,q),
(300,363,o),
(298,357,o),
(296,356,qs),
(294,355,o),
(294,333,o),
(296,332,qs),
(303,329,o),
(317,331,o),
(323,330,qs),
(329,330,o),
(335,332,q),
(340,336,o),
(350,337,o),
(355,337,qs),
(371,335,o),
(389,335,o),
(404,337,q),
(406,336,o),
(413,337,o),
(416,337,q),
(417,310,o),
(417,241,qs),
(417,227,o),
(409,219,qs),
(408,218,o),
(410,213,o),
(409,211,qs),
(407,204,o),
(418,192,o),
(409,186,q),
(409,51,ls),
(409,39,o),
(404,30,q),
(393,30,o),
(370,29,o),
(358,29,qs),
(257,29,ls),
(250,29,o),
(236,29,o),
(229,34,qs),
(227,36,o),
(215,29,o),
(211,30,qs),
(207,32,o),
(199,36,o),
(194,30,q),
(188,27,o),
(186,29,qs),
(181,34,o)
);
},
{
closed = 1;
nodes = (
(274,342,o),
(274,349,qs),
(274,361,o),
(253,378,o),
(234,378,q),
(224,380,o),
(211,372,o),
(205,364,qs),
(197,353,o),
(205,341,q),
(213,334,o),
(232,317,o),
(242,317,qs),
(260,317,o)
);
},
{
closed = 1;
nodes = (
(229,346,qs),
(228,348,o),
(229,352,q),
(233,356,o),
(236,355,q),
(246,355,o),
(246,348,qs),
(246,347,o),
(244,339,o),
(239,339,qs),
(233,339,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
33 1 12 3 143 56 50 29 26 5 18 12 137 1 8 18 240 238 230 3 19 13 105 1 5 19 212 209 192 95 4 16 17 70 2 2 1 4 7 76 77 1 4 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 18 12 8 19 18 114 11 10 9 3 8 6 1 5 7 8 5 105 0 13 15 14 2 7 17 13 7 105 22 1 19 21 1 17 16 19 17 106 0 12 12 3 95 0 3 3 39 77 0 16 16 1 97 2 1 1 1 38 77 0 4 4 1 97 2 1 1 1 38 77 20 1 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 79 values pushed */
0 18 12 8 12 18 8 128 11 10 9 3 8 6 1 5 7 8 5 105 0 13 15 14 2 7 17 13 7 105 22 1 19 21 1 17 16 19 17 106 0 12 12 3 95 0 3 3 39 77 0 16 16 1 97 2 1 1 1 38 77 0 4 4 1 97 2 1 1 1 38 77 20 1 0 0 44 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 55 values pushed */
234 233 220 219 1 0 233 243 234 243 228 227 219 232 220 232 216 214 176 172 170 169 167 162 158 157 135 134 133 132 131 129 128 126 118 116 113 111 110 107 92 86 40 38 17 14 9 5 0 76 1 75 23 8 22 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uni019F;
unicode = 415;
},
{
glyphname = Ocircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (113,131);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
131 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = Ocircumflex;
unicode = 212;
},
{
glyphname = uni1ED0;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (107,113);
ref = uni0302;
},
{
pos = (153,258);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
113 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
258 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uni1ED0;
unicode = 7888;
},
{
glyphname = uni1ED8;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (165,-105);
ref = period;
},
{
pos = (113,131);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-105 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
131 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uni1ED8;
unicode = 7896;
},
{
glyphname = uni1ED2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(420,-6,o),
(434,3,o),
(439,7,qs),
(441,9,o),
(442,18,o),
(442,22,qs),
(442,75,o),
(442,156,o),
(443,232,o),
(443,319,o),
(443,379,qs),
(443,387,o),
(446,402,o),
(450,409,q),
(452,411,o),
(444,421,o),
(445,423,qs),
(447,428,o),
(451,436,o),
(451,442,qs),
(451,581,ls),
(451,591,o),
(446,597,qs),
(442,602,o),
(451,607,o),
(451,611,qs),
(451,646,ls),
(451,655,o),
(450,673,o),
(450,682,qs),
(450,687,o),
(441,696,o),
(436,698,qs),
(433,700,o),
(424,698,o),
(420,698,qs),
(78,698,ls),
(74,698,o),
(65,699,o),
(61,698,qs),
(57,698,o),
(45,684,o),
(45,679,qs),
(45,629,ls),
(45,622,o),
(46,607,o),
(45,600,q),
(37,594,o),
(45,584,o),
(45,578,qs),
(45,477,ls),
(45,473,o),
(39,465,o),
(40,463,q),
(44,459,o),
(45,449,o),
(45,444,qs),
(45,25,ls),
(45,3,o),
(66,3,qs),
(113,3,o),
(158,3,o),
(175,2,o),
(179,0,qs),
(187,-5,o),
(198,3,o),
(205,3,qs),
(258,3,o),
(307,2,o),
(324,2,o),
(327,3,qs),
(335,5,o),
(346,-7,o),
(353,3,q),
(367,-6,o),
(382,-6,qs),
(414,-6,ls)
);
},
{
closed = 1;
nodes = (
(168,37,o),
(161,37,qs),
(78,37,ls),
(74,37,o),
(69,46,o),
(72,49,qs),
(77,55,o),
(79,66,o),
(79,73,qs),
(79,120,ls),
(79,126,o),
(77,138,o),
(72,143,q),
(70,148,o),
(74,154,qs),
(87,172,o),
(76,194,qs),
(73,202,o),
(73,214,o),
(78,220,q),
(80,221,o),
(79,227,o),
(78,228,qs),
(74,233,o),
(71,242,o),
(71,247,qs),
(71,264,o),
(72,281,o),
(78,287,q),
(81,293,o),
(76,298,qs),
(72,303,o),
(72,313,o),
(70,318,q),
(69,326,o),
(81,340,o),
(71,347,q),
(71,647,l),
(72,652,o),
(84,663,o),
(89,663,qs),
(401,663,ls),
(413,663,o),
(417,659,o),
(417,646,qs),
(417,490,ls),
(417,483,o),
(416,472,o),
(412,466,qs),
(403,454,o),
(412,438,qs),
(416,429,o),
(412,424,qs),
(411,423,o),
(408,415,o),
(409,413,q),
(414,407,o),
(417,397,o),
(412,390,qs),
(410,388,o),
(407,377,o),
(409,375,qs),
(412,371,o),
(415,352,o),
(417,298,o),
(417,241,qs),
(417,227,o),
(409,219,qs),
(408,218,o),
(410,213,o),
(409,211,qs),
(407,204,o),
(418,192,o),
(409,186,q),
(409,51,ls),
(409,39,o),
(404,30,q),
(393,30,o),
(370,29,o),
(358,29,qs),
(257,29,ls),
(250,29,o),
(236,29,o),
(229,34,qs),
(227,36,o),
(215,29,o),
(211,30,qs),
(207,32,o),
(199,36,o),
(194,30,q),
(188,27,o),
(186,29,qs),
(181,34,o)
);
},
{
closed = 1;
nodes = (
(274,342,o),
(274,349,qs),
(274,361,o),
(253,378,o),
(234,378,q),
(224,380,o),
(211,372,o),
(205,364,qs),
(197,353,o),
(205,341,q),
(213,334,o),
(232,317,o),
(242,317,qs),
(260,317,o)
);
},
{
closed = 1;
nodes = (
(229,346,qs),
(228,348,o),
(229,352,q),
(233,356,o),
(236,355,q),
(246,355,o),
(246,348,qs),
(246,347,o),
(244,339,o),
(239,339,qs),
(233,339,o)
);
},
{
closed = 1;
nodes = (
(332,738,q),
(334,738,o),
(340,744,o),
(342,745,qs),
(343,746,o),
(323,769,o),
(293,804,o),
(262,838,o),
(251,850,q),
(249,854,o),
(241,853,o),
(239,849,qs),
(235,838,o),
(219,824,o),
(211,817,qs),
(204,811,o),
(197,802,o),
(189,795,q),
(183,792,o),
(171,777,o),
(166,774,q),
(162,767,o),
(150,754,o),
(144,748,q),
(140,739,o),
(152,738,o),
(160,739,qs),
(165,739,o),
(188,755,o),
(215,778,o),
(237,799,o),
(241,803,q),
(246,805,o),
(250,805,o),
(256,802,qs),
(258,801,o),
(265,790,o),
(267,787,q),
(269,786,o),
(282,768,o),
(284,766,qs),
(287,762,o),
(306,746,o),
(320,738,q),
(327,736,o)
);
},
{
closed = 1;
nodes = (
(273,910,o),
(262,920,qs),
(241,938,o),
(229,954,q),
(221,961,o),
(207,974,o),
(200,982,qs),
(196,987,o),
(187,997,o),
(180,998,q),
(178,1000,o),
(172,995,o),
(170,996,qs),
(167,998,o),
(156,987,o),
(157,984,qs),
(162,972,o),
(172,949,o),
(188,944,qs),
(194,942,o),
(205,934,o),
(209,929,qs),
(217,920,o),
(238,898,o),
(254,884,qs),
(272,871,o),
(300,876,o),
(304,880,q),
(294,890,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
33 1 5 3 113 56 50 29 26 5 8 5 191 189 181 132 4 9 8 163 160 143 95 4 6 7 70 2 2 1 4 5 76 77 1 4 1 75 252 1 3 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 8 5 9 9 8 114 12 1 9 11 1 7 6 9 7 106 0 5 5 3 95 0 3 3 39 77 0 6 6 1 97 2 1 1 1 38 77 0 4 4 1 97 2 1 1 1 38 77 10 1 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 8 5 9 5 8 9 128 12 1 9 11 1 7 6 9 7 106 0 5 5 3 95 0 3 3 39 77 0 6 6 1 97 2 1 1 1 38 77 0 4 4 1 97 2 1 1 1 38 77 10 1 0 0 44 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
185 184 171 170 1 0 184 194 185 194 179 178 170 183 171 183 167 165 128 127 92 86 40 38 17 14 9 5 0 76 1 75 13 8 22 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uni1ED2;
unicode = 7890;
},
{
glyphname = uni1ED4;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (115,116);
ref = uni0302;
},
{
pos = (150,276);
ref = hookabovecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
116 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
276 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uni1ED4;
unicode = 7892;
},
{
glyphname = uni1ED6;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (110,131);
ref = uni0302;
},
{
pos = (126,228);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
131 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
228 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uni1ED6;
unicode = 7894;
},
{
glyphname = uni020C;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (96,121);
ref = uni030F;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 2 
PUSHB[ ]	/* 1 value pushed */
121 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uni020C;
unicode = 524;
},
{
glyphname = Odieresis;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (90,130);
ref = uni0308;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 2 
PUSHB[ ]	/* 1 value pushed */
130 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = Odieresis;
unicode = 214;
},
{
glyphname = uni022A;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (90,130);
ref = uni0308;
},
{
pos = (75,671);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 2 
PUSHB[ ]	/* 1 value pushed */
130 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHW[ ]	/* 1 value pushed */
671 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uni022A;
unicode = 554;
},
{
glyphname = uni022E;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (176,116);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
116 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uni022E;
unicode = 558;
},
{
glyphname = uni0230;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (176,116);
ref = uni0307;
},
{
pos = (77,641);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
116 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
641 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uni0230;
unicode = 560;
},
{
glyphname = uni1ECC;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (165,-105);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-105 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uni1ECC;
unicode = 7884;
},
{
glyphname = Ograve;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(420,-6,o),
(434,3,o),
(439,7,qs),
(441,9,o),
(442,18,o),
(442,22,qs),
(442,75,o),
(442,156,o),
(443,232,o),
(443,319,o),
(443,379,qs),
(443,387,o),
(446,402,o),
(450,409,q),
(452,411,o),
(444,421,o),
(445,423,qs),
(447,428,o),
(451,436,o),
(451,442,qs),
(451,581,ls),
(451,591,o),
(446,597,qs),
(442,602,o),
(451,607,o),
(451,611,qs),
(451,646,ls),
(451,655,o),
(450,673,o),
(450,682,qs),
(450,687,o),
(441,696,o),
(436,698,qs),
(433,700,o),
(424,698,o),
(420,698,qs),
(78,698,ls),
(74,698,o),
(65,699,o),
(61,698,qs),
(57,698,o),
(45,684,o),
(45,679,qs),
(45,629,ls),
(45,622,o),
(46,607,o),
(45,600,q),
(37,594,o),
(45,584,o),
(45,578,qs),
(45,477,ls),
(45,473,o),
(39,465,o),
(40,463,q),
(44,459,o),
(45,449,o),
(45,444,qs),
(45,25,ls),
(45,3,o),
(66,3,qs),
(113,3,o),
(158,3,o),
(175,2,o),
(179,0,qs),
(187,-5,o),
(198,3,o),
(205,3,qs),
(258,3,o),
(307,2,o),
(324,2,o),
(327,3,qs),
(335,5,o),
(346,-7,o),
(353,3,q),
(367,-6,o),
(382,-6,qs),
(414,-6,ls)
);
},
{
closed = 1;
nodes = (
(168,37,o),
(161,37,qs),
(78,37,ls),
(74,37,o),
(69,46,o),
(72,49,qs),
(77,55,o),
(79,66,o),
(79,73,qs),
(79,120,ls),
(79,126,o),
(77,138,o),
(72,143,q),
(70,148,o),
(74,154,qs),
(87,172,o),
(76,194,qs),
(73,202,o),
(73,214,o),
(78,220,q),
(80,221,o),
(79,227,o),
(78,228,qs),
(74,233,o),
(71,242,o),
(71,247,qs),
(71,264,o),
(72,281,o),
(78,287,q),
(81,293,o),
(76,298,qs),
(72,303,o),
(72,313,o),
(70,318,q),
(69,326,o),
(81,340,o),
(71,347,q),
(71,647,l),
(72,652,o),
(84,663,o),
(89,663,qs),
(401,663,ls),
(413,663,o),
(417,659,o),
(417,646,qs),
(417,490,ls),
(417,483,o),
(416,472,o),
(412,466,qs),
(403,454,o),
(412,438,qs),
(416,429,o),
(412,424,qs),
(411,423,o),
(408,415,o),
(409,413,q),
(414,407,o),
(417,397,o),
(412,390,qs),
(410,388,o),
(407,377,o),
(409,375,qs),
(412,371,o),
(415,352,o),
(417,298,o),
(417,241,qs),
(417,227,o),
(409,219,qs),
(408,218,o),
(410,213,o),
(409,211,qs),
(407,204,o),
(418,192,o),
(409,186,q),
(409,51,ls),
(409,39,o),
(404,30,q),
(393,30,o),
(370,29,o),
(358,29,qs),
(257,29,ls),
(250,29,o),
(236,29,o),
(229,34,qs),
(227,36,o),
(215,29,o),
(211,30,qs),
(207,32,o),
(199,36,o),
(194,30,q),
(188,27,o),
(186,29,qs),
(181,34,o)
);
},
{
closed = 1;
nodes = (
(274,342,o),
(274,349,qs),
(274,361,o),
(253,378,o),
(234,378,q),
(224,380,o),
(211,372,o),
(205,364,qs),
(197,353,o),
(205,341,q),
(213,334,o),
(232,317,o),
(242,317,qs),
(260,317,o)
);
},
{
closed = 1;
nodes = (
(229,346,qs),
(228,348,o),
(229,352,q),
(233,356,o),
(236,355,q),
(246,355,o),
(246,348,qs),
(246,347,o),
(244,339,o),
(239,339,qs),
(233,339,o)
);
},
{
closed = 1;
nodes = (
(272,792,o),
(261,802,qs),
(240,820,o),
(228,836,q),
(220,843,o),
(206,856,o),
(199,864,qs),
(195,869,o),
(186,879,o),
(179,880,q),
(177,882,o),
(171,877,o),
(169,878,qs),
(166,880,o),
(155,869,o),
(156,866,qs),
(161,854,o),
(171,831,o),
(187,826,qs),
(193,824,o),
(204,816,o),
(208,811,qs),
(216,802,o),
(237,780,o),
(253,766,qs),
(271,753,o),
(299,758,o),
(303,762,q),
(293,772,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
33 1 5 3 113 56 50 29 26 5 8 5 191 189 181 132 4 9 8 163 160 143 95 4 6 7 70 2 2 1 4 5 76 77 1 4 1 75 207 1 3 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 8 5 9 9 8 114 12 1 9 11 1 7 6 9 7 106 0 5 5 3 95 0 3 3 39 77 0 6 6 1 97 2 1 1 1 38 77 0 4 4 1 97 2 1 1 1 38 77 10 1 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 8 5 9 5 8 9 128 12 1 9 11 1 7 6 9 7 106 0 5 5 3 95 0 3 3 39 77 0 6 6 1 97 2 1 1 1 38 77 0 4 4 1 97 2 1 1 1 38 77 10 1 0 0 44 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
185 184 171 170 1 0 184 194 185 194 179 178 170 183 171 183 167 165 128 127 92 86 40 38 17 14 9 5 0 76 1 75 13 8 22 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = Ograve;
unicode = 210;
},
{
glyphname = uni1ECE;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (141,158);
ref = hookabovecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
158 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uni1ECE;
unicode = 7886;
},
{
glyphname = Ohorn;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (380,210);
ref = uni031B;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
210 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = Ohorn;
unicode = 416;
},
{
glyphname = uni1EDA;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (380,210);
ref = uni031B;
},
{
pos = (180,143);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
210 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
143 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uni1EDA;
unicode = 7898;
},
{
glyphname = uni1EE2;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (380,210);
ref = uni031B;
},
{
pos = (203,-114);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
210 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uni1EE2;
unicode = 7906;
},
{
glyphname = uni1EDC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(420,-6,o),
(434,3,o),
(439,7,qs),
(441,9,o),
(442,18,o),
(442,22,qs),
(442,75,o),
(442,156,o),
(443,232,o),
(443,319,o),
(443,379,qs),
(443,387,o),
(446,402,o),
(450,409,q),
(452,411,o),
(444,421,o),
(445,423,qs),
(447,428,o),
(451,436,o),
(451,442,qs),
(451,581,ls),
(451,591,o),
(446,597,qs),
(442,602,o),
(451,607,o),
(451,611,qs),
(451,646,ls),
(451,655,o),
(450,673,o),
(450,682,qs),
(450,687,o),
(441,696,o),
(436,698,qs),
(433,700,o),
(424,698,o),
(420,698,qs),
(78,698,ls),
(74,698,o),
(65,699,o),
(61,698,qs),
(57,698,o),
(45,684,o),
(45,679,qs),
(45,629,ls),
(45,622,o),
(46,607,o),
(45,600,q),
(37,594,o),
(45,584,o),
(45,578,qs),
(45,477,ls),
(45,473,o),
(39,465,o),
(40,463,q),
(44,459,o),
(45,449,o),
(45,444,qs),
(45,25,ls),
(45,3,o),
(66,3,qs),
(113,3,o),
(158,3,o),
(175,2,o),
(179,0,qs),
(187,-5,o),
(198,3,o),
(205,3,qs),
(258,3,o),
(307,2,o),
(324,2,o),
(327,3,qs),
(335,5,o),
(346,-7,o),
(353,3,q),
(367,-6,o),
(382,-6,qs),
(414,-6,ls)
);
},
{
closed = 1;
nodes = (
(168,37,o),
(161,37,qs),
(78,37,ls),
(74,37,o),
(69,46,o),
(72,49,qs),
(77,55,o),
(79,66,o),
(79,73,qs),
(79,120,ls),
(79,126,o),
(77,138,o),
(72,143,q),
(70,148,o),
(74,154,qs),
(87,172,o),
(76,194,qs),
(73,202,o),
(73,214,o),
(78,220,q),
(80,221,o),
(79,227,o),
(78,228,qs),
(74,233,o),
(71,242,o),
(71,247,qs),
(71,264,o),
(72,281,o),
(78,287,q),
(81,293,o),
(76,298,qs),
(72,303,o),
(72,313,o),
(70,318,q),
(69,326,o),
(81,340,o),
(71,347,q),
(71,647,l),
(72,652,o),
(84,663,o),
(89,663,qs),
(401,663,ls),
(413,663,o),
(417,659,o),
(417,646,qs),
(417,490,ls),
(417,483,o),
(416,472,o),
(412,466,qs),
(403,454,o),
(412,438,qs),
(416,429,o),
(412,424,qs),
(411,423,o),
(408,415,o),
(409,413,q),
(414,407,o),
(417,397,o),
(412,390,qs),
(410,388,o),
(407,377,o),
(409,375,qs),
(412,371,o),
(415,352,o),
(417,298,o),
(417,241,qs),
(417,227,o),
(409,219,qs),
(408,218,o),
(410,213,o),
(409,211,qs),
(407,204,o),
(418,192,o),
(409,186,q),
(409,51,ls),
(409,39,o),
(404,30,q),
(393,30,o),
(370,29,o),
(358,29,qs),
(257,29,ls),
(250,29,o),
(236,29,o),
(229,34,qs),
(227,36,o),
(215,29,o),
(211,30,qs),
(207,32,o),
(199,36,o),
(194,30,q),
(188,27,o),
(186,29,qs),
(181,34,o)
);
},
{
closed = 1;
nodes = (
(274,342,o),
(274,349,qs),
(274,361,o),
(253,378,o),
(234,378,q),
(224,380,o),
(211,372,o),
(205,364,qs),
(197,353,o),
(205,341,q),
(213,334,o),
(232,317,o),
(242,317,qs),
(260,317,o)
);
},
{
closed = 1;
nodes = (
(229,346,qs),
(228,348,o),
(229,352,q),
(233,356,o),
(236,355,q),
(246,355,o),
(246,348,qs),
(246,347,o),
(244,339,o),
(239,339,qs),
(233,339,o)
);
},
{
closed = 1;
nodes = (
(455,669,o),
(459,671,qs),
(466,676,o),
(487,670,o),
(497,671,qs),
(522,673,o),
(556,686,o),
(557,714,qs),
(557,746,ls),
(557,751,o),
(557,781,o),
(558,785,qs),
(563,799,o),
(560,818,o),
(552,830,q),
(547,841,o),
(536,843,o),
(528,830,q),
(531,824,o),
(525,814,o),
(526,809,qs),
(529,790,o),
(527,776,o),
(525,771,o),
(526,764,q),
(528,759,o),
(526,736,o),
(526,731,qs),
(527,714,o),
(501,702,o),
(465,701,o),
(433,702,o),
(427,697,q),
(421,697,o),
(421,671,o),
(433,671,q),
(436,672,o)
);
},
{
closed = 1;
nodes = (
(300,792,o),
(289,802,qs),
(268,820,o),
(256,836,q),
(248,843,o),
(234,856,o),
(227,864,qs),
(223,869,o),
(214,879,o),
(207,880,q),
(205,882,o),
(199,877,o),
(197,878,qs),
(194,880,o),
(183,869,o),
(184,866,qs),
(189,854,o),
(199,831,o),
(215,826,qs),
(221,824,o),
(232,816,o),
(236,811,qs),
(244,802,o),
(265,780,o),
(281,766,qs),
(299,753,o),
(327,758,o),
(331,762,q),
(321,772,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
33 1 10 3 113 56 50 29 26 5 8 5 191 189 181 132 4 9 8 163 160 143 95 4 6 7 70 2 2 1 4 5 76 77 1 4 1 75 244 219 213 210 203 5 3 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
0 8 5 9 9 8 114 14 1 9 13 1 7 6 9 7 106 15 1 10 10 3 97 11 1 3 3 39 77 0 5 5 3 97 11 1 3 3 39 77 0 6 6 1 97 2 1 1 1 38 77 0 4 4 1 97 2 1 1 1 38 77 12 1 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
0 8 5 9 5 8 9 128 14 1 9 13 1 7 6 9 7 106 15 1 10 10 3 97 11 1 3 3 39 77 0 5 5 3 97 11 1 3 3 39 77 0 6 6 1 97 2 1 1 1 38 77 0 4 4 1 97 2 1 1 1 38 77 12 1 0 0 44 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 43 values pushed */
196 195 185 184 171 170 1 0 201 199 195 231 196 229 184 194 185 194 179 178 170 183 171 183 167 165 128 127 92 86 40 38 17 14 9 5 0 76 1 75 16 8 22 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uni1EDC;
unicode = 7900;
},
{
glyphname = uni1EDE;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (380,210);
ref = uni031B;
},
{
pos = (169,158);
ref = hookabovecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
210 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
158 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uni1EDE;
unicode = 7902;
},
{
glyphname = uni1EE0;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (380,210);
ref = uni031B;
},
{
pos = (150,95);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
210 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
95 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uni1EE0;
unicode = 7904;
},
{
glyphname = Ohungarumlaut;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (122,120);
ref = uni030B;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 2 
PUSHB[ ]	/* 1 value pushed */
120 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = Ohungarumlaut;
unicode = 336;
},
{
glyphname = uni020E;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (145,118);
ref = uni0311;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
118 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uni020E;
unicode = 526;
},
{
glyphname = Omacron;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (77,550);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
550 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = Omacron;
unicode = 332;
},
{
glyphname = uni1E52;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (77,550);
ref = hyphen;
},
{
pos = (152,262);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
550 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
262 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uni1E52;
unicode = 7762;
},
{
glyphname = uni1E50;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(420,-6,o),
(434,3,o),
(439,7,qs),
(441,9,o),
(442,18,o),
(442,22,qs),
(442,75,o),
(442,156,o),
(443,232,o),
(443,319,o),
(443,379,qs),
(443,387,o),
(446,402,o),
(450,409,q),
(452,411,o),
(444,421,o),
(445,423,qs),
(447,428,o),
(451,436,o),
(451,442,qs),
(451,581,ls),
(451,591,o),
(446,597,qs),
(442,602,o),
(451,607,o),
(451,611,qs),
(451,646,ls),
(451,655,o),
(450,673,o),
(450,682,qs),
(450,687,o),
(441,696,o),
(436,698,qs),
(433,700,o),
(424,698,o),
(420,698,qs),
(78,698,ls),
(74,698,o),
(65,699,o),
(61,698,qs),
(57,698,o),
(45,684,o),
(45,679,qs),
(45,629,ls),
(45,622,o),
(46,607,o),
(45,600,q),
(37,594,o),
(45,584,o),
(45,578,qs),
(45,477,ls),
(45,473,o),
(39,465,o),
(40,463,q),
(44,459,o),
(45,449,o),
(45,444,qs),
(45,25,ls),
(45,3,o),
(66,3,qs),
(113,3,o),
(158,3,o),
(175,2,o),
(179,0,qs),
(187,-5,o),
(198,3,o),
(205,3,qs),
(258,3,o),
(307,2,o),
(324,2,o),
(327,3,qs),
(335,5,o),
(346,-7,o),
(353,3,q),
(367,-6,o),
(382,-6,qs),
(414,-6,ls)
);
},
{
closed = 1;
nodes = (
(168,37,o),
(161,37,qs),
(78,37,ls),
(74,37,o),
(69,46,o),
(72,49,qs),
(77,55,o),
(79,66,o),
(79,73,qs),
(79,120,ls),
(79,126,o),
(77,138,o),
(72,143,q),
(70,148,o),
(74,154,qs),
(87,172,o),
(76,194,qs),
(73,202,o),
(73,214,o),
(78,220,q),
(80,221,o),
(79,227,o),
(78,228,qs),
(74,233,o),
(71,242,o),
(71,247,qs),
(71,264,o),
(72,281,o),
(78,287,q),
(81,293,o),
(76,298,qs),
(72,303,o),
(72,313,o),
(70,318,q),
(69,326,o),
(81,340,o),
(71,347,q),
(71,647,l),
(72,652,o),
(84,663,o),
(89,663,qs),
(401,663,ls),
(413,663,o),
(417,659,o),
(417,646,qs),
(417,490,ls),
(417,483,o),
(416,472,o),
(412,466,qs),
(403,454,o),
(412,438,qs),
(416,429,o),
(412,424,qs),
(411,423,o),
(408,415,o),
(409,413,q),
(414,407,o),
(417,397,o),
(412,390,qs),
(410,388,o),
(407,377,o),
(409,375,qs),
(412,371,o),
(415,352,o),
(417,298,o),
(417,241,qs),
(417,227,o),
(409,219,qs),
(408,218,o),
(410,213,o),
(409,211,qs),
(407,204,o),
(418,192,o),
(409,186,q),
(409,51,ls),
(409,39,o),
(404,30,q),
(393,30,o),
(370,29,o),
(358,29,qs),
(257,29,ls),
(250,29,o),
(236,29,o),
(229,34,qs),
(227,36,o),
(215,29,o),
(211,30,qs),
(207,32,o),
(199,36,o),
(194,30,q),
(188,27,o),
(186,29,qs),
(181,34,o)
);
},
{
closed = 1;
nodes = (
(274,342,o),
(274,349,qs),
(274,361,o),
(253,378,o),
(234,378,q),
(224,380,o),
(211,372,o),
(205,364,qs),
(197,353,o),
(205,341,q),
(213,334,o),
(232,317,o),
(242,317,qs),
(260,317,o)
);
},
{
closed = 1;
nodes = (
(229,346,qs),
(228,348,o),
(229,352,q),
(233,356,o),
(236,355,q),
(246,355,o),
(246,348,qs),
(246,347,o),
(244,339,o),
(239,339,qs),
(233,339,o)
);
},
{
closed = 1;
nodes = (
(332,792,o),
(343,795,qs),
(346,796,o),
(346,809,o),
(343,809,qs),
(339,810,o),
(337,816,o),
(334,817,qs),
(331,818,o),
(325,819,o),
(320,819,qs),
(313,819,o),
(297,818,o),
(289,818,qs),
(259,818,ls),
(246,817,o),
(242,816,o),
(237,817,o),
(224,818,qs),
(157,818,l),
(157,811,o),
(165,799,o),
(182,794,q),
(183,793,o),
(198,792,o),
(201,792,qs),
(225,791,o),
(247,791,o),
(254,792,qs),
(262,794,o),
(277,791,o),
(284,788,qs),
(293,785,o),
(301,785,qs),
(312,785,o)
);
},
{
closed = 1;
nodes = (
(272,911,o),
(261,921,qs),
(240,939,o),
(228,955,q),
(220,962,o),
(206,975,o),
(199,983,qs),
(195,988,o),
(186,998,o),
(179,999,q),
(177,1001,o),
(171,996,o),
(169,997,qs),
(166,999,o),
(155,988,o),
(156,985,qs),
(161,973,o),
(171,950,o),
(187,945,qs),
(193,943,o),
(204,935,o),
(208,930,qs),
(216,921,o),
(237,899,o),
(253,885,qs),
(271,872,o),
(299,877,o),
(303,881,q),
(293,891,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
33 1 5 3 113 56 50 29 26 5 8 5 191 189 181 132 4 9 8 163 160 143 95 4 6 7 70 2 2 1 4 5 76 77 1 4 1 75 242 1 11 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 8 5 9 9 8 114 0 10 13 11 10 89 12 1 11 17 1 13 3 11 13 105 16 1 9 15 1 7 6 9 7 106 0 5 5 3 95 0 3 3 39 77 0 6 6 1 97 2 1 1 1 38 77 0 4 4 1 97 2 1 1 1 38 77 14 1 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 8 5 9 5 8 9 128 0 10 13 11 10 89 12 1 11 17 1 13 3 11 13 105 16 1 9 15 1 7 6 9 7 106 0 5 5 3 95 0 3 3 39 77 0 6 6 1 97 2 1 1 1 38 77 0 4 4 1 97 2 1 1 1 38 77 14 1 0 0 44 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 47 values pushed */
195 195 185 184 171 170 1 0 195 229 195 229 219 214 213 211 205 200 184 194 185 194 179 178 170 183 171 183 167 165 128 127 92 86 40 38 17 14 9 5 0 76 1 75 18 8 22 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uni1E50;
unicode = 7760;
},
{
glyphname = uniA7B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,40,o),
(32,26,q),
(29,19,o),
(33,13,qs),
(36,9,o),
(43,2,o),
(48,2,qs),
(80,2,o),
(132,1,o),
(138,3,qs),
(145,5,o),
(172,-6,o),
(176,-6,qs),
(184,-6,o),
(200,4,o),
(209,4,qs),
(215,4,o),
(227,2,o),
(233,2,qs),
(247,4,o),
(254,32,o),
(247,48,qs),
(245,53,o),
(214,112,o),
(168,204,o),
(115,312,o),
(91,365,q),
(94,382,o),
(126,429,o),
(165,475,o),
(194,507,o),
(195,510,qs),
(197,515,o),
(207,525,o),
(212,528,qs),
(219,532,o),
(251,565,o),
(288,606,o),
(319,641,o),
(326,646,qs),
(336,654,o),
(348,664,o),
(352,668,q),
(360,661,o),
(375,644,o),
(378,639,qs),
(394,618,o),
(450,558,o),
(508,498,o),
(528,478,qs),
(541,465,o),
(578,423,o),
(615,380,o),
(627,365,q),
(614,331,o),
(573,254,o),
(529,177,o),
(489,112,o),
(461,69,o),
(459,65,qs),
(455,57,o),
(450,34,o),
(443,32,qs),
(440,31,o),
(441,15,o),
(442,10,q),
(442,3,o),
(449,3,qs),
(475,3,o),
(505,3,o),
(529,3,o),
(559,3,o),
(585,3,qs),
(590,3,o),
(601,4,o),
(606,-2,q),
(611,-1,o),
(638,2,o),
(641,2,qs),
(645,2,o),
(654,4,o),
(654,14,qs),
(654,26,o),
(656,37,o),
(658,50,o),
(657,64,q),
(658,68,o),
(658,85,o),
(658,86,qs),
(660,107,o),
(635,113,o),
(633,103,qs),
(632,92,o),
(630,67,o),
(630,61,qs),
(630,54,o),
(630,35,o),
(629,31,q),
(618,30,o),
(556,29,o),
(480,29,q),
(492,55,o),
(536,131,o),
(585,215,o),
(630,295,o),
(659,356,o),
(659,369,qs),
(659,375,o),
(634,408,o),
(597,451,o),
(561,491,o),
(550,505,qs),
(541,516,o),
(510,537,o),
(503,551,qs),
(501,556,o),
(472,589,o),
(433,632,o),
(394,674,o),
(367,701,o),
(366,702,q),
(352,710,o),
(342,703,q),
(335,700,ls),
(329,698,o),
(293,661,o),
(246,608,o),
(198,554,o),
(163,515,o),
(158,511,qs),
(157,510,o),
(129,476,o),
(94,430,o),
(79,409,qs),
(75,402,o),
(66,390,o),
(63,385,qs),
(59,378,o),
(59,364,o),
(59,362,qs),
(59,357,o),
(63,343,o),
(69,331,qs),
(83,304,o),
(119,235,o),
(158,164,o),
(191,101,o),
(214,57,o),
(215,52,qs),
(218,41,o),
(210,30,o),
(204,30,qs),
(201,30,o),
(162,30,o),
(112,30,o),
(70,30,o),
(64,30,q),
(63,35,o),
(63,53,o),
(60,58,q),
(68,67,o),
(63,85,o),
(56,106,o),
(59,116,q),
(55,119,o),
(48,123,o),
(42,118,qs),
(38,114,o),
(32,100,o),
(31,83,q),
(29,73,o)
);
},
{
closed = 1;
nodes = (
(389,321,o),
(390,332,qs),
(392,348,o),
(376,354,q),
(364,356,o),
(335,361,o),
(325,354,qs),
(307,343,o),
(309,310,o),
(313,303,qs),
(321,291,o),
(353,288,o),
(371,299,q),
(382,304,o)
);
},
{
closed = 1;
nodes = (
(340,320,q),
(339,321,o),
(336,331,o),
(342,335,qs),
(348,339,o),
(358,334,q),
(360,332,o),
(362,327,q),
(361,324,o),
(360,320,o),
(356,318,qs),
(345,311,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
168 1 2 0 151 1 4 2 2 76 143 127 116 81 72 10 0 7 0 74 1 1 0 0 2 95 5 3 2 2 2 38 77 0 4 4 44 4 78 163 160 158 156 155 153 102 96 71 69 94 6 8 23 
CALL[ ]	/* CallFunction */";
};
width = 689;
}
);
note = uniA7B6;
unicode = 42934;
},
{
glyphname = uni01EA;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (354,57);
ref = uni0328;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
57 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uni01EA;
unicode = 490;
},
{
glyphname = uni01EC;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (354,57);
ref = uni0328;
},
{
pos = (77,550);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
57 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
550 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uni01EC;
unicode = 492;
},
{
glyphname = uni0186;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(437,-21,qs),
(437,8,ls),
(437,13,o),
(436,27,o),
(433,66,o),
(429,105,q),
(429,123,o),
(430,151,o),
(431,188,o),
(431,250,o),
(430,302,qs),
(430,308,o),
(427,320,o),
(422,324,q),
(418,330,o),
(422,336,qs),
(427,343,o),
(430,356,o),
(430,363,qs),
(430,420,o),
(425,473,o),
(425,474,qs),
(425,478,o),
(428,492,o),
(430,533,o),
(430,578,qs),
(430,589,o),
(417,601,o),
(422,608,qs),
(430,617,o),
(430,627,o),
(422,638,qs),
(417,646,o),
(427,668,o),
(437,689,o),
(429,695,qs),
(421,700,o),
(413,700,qs),
(406,700,o),
(361,680,o),
(308,654,o),
(264,632,o),
(256,630,qs),
(249,629,o),
(201,608,o),
(140,580,o),
(88,555,o),
(76,549,qs),
(71,546,o),
(62,550,o),
(62,556,qs),
(62,559,o),
(62,588,o),
(62,625,o),
(62,657,o),
(62,663,qs),
(62,672,o),
(56,687,o),
(53,695,qs),
(52,698,o),
(42,699,o),
(39,696,qs),
(35,693,o),
(28,686,o),
(28,681,qs),
(28,649,o),
(27,627,o),
(29,621,qs),
(31,617,o),
(23,609,o),
(20,602,o),
(26,597,q),
(21,592,o),
(21,583,qs),
(21,575,o),
(30,559,o),
(30,550,qs),
(30,544,o),
(28,532,o),
(28,526,q),
(30,513,o),
(62,506,o),
(72,513,qs),
(78,517,o),
(122,537,o),
(181,563,o),
(240,589,o),
(283,609,o),
(287,613,qs),
(294,620,o),
(309,622,qs),
(319,623,o),
(345,639,o),
(371,654,o),
(381,654,qs),
(389,654,o),
(402,641,o),
(402,624,qs),
(402,612,o),
(396,604,qs),
(394,601,o),
(394,591,o),
(394,586,qs),
(394,354,ls),
(394,349,o),
(394,338,o),
(399,333,qs),
(402,330,o),
(394,323,o),
(394,309,qs),
(394,305,o),
(395,295,o),
(394,290,qs),
(393,285,o),
(405,277,o),
(397,271,qs),
(396,270,o),
(394,247,o),
(394,219,o),
(397,197,o),
(399,195,qs),
(404,191,o),
(395,186,o),
(396,182,q),
(402,174,o),
(402,169,qs),
(402,144,o),
(403,128,o),
(403,122,o),
(403,108,o),
(403,64,o),
(402,17,q),
(401,12,o),
(385,6,o),
(379,8,qs),
(362,16,o),
(307,42,o),
(251,69,o),
(212,88,o),
(211,88,qs),
(202,88,o),
(167,101,o),
(128,119,o),
(95,135,o),
(88,139,qs),
(81,143,o),
(64,142,o),
(57,149,q),
(54,151,o),
(41,150,o),
(36,149,q),
(29,149,o),
(29,142,qs),
(29,116,o),
(29,95,o),
(29,83,o),
(29,62,o),
(29,36,qs),
(29,24,o),
(20,15,q),
(21,10,o),
(27,-17,o),
(28,-20,qs),
(29,-25,o),
(33,-33,o),
(40,-33,qs),
(47,-33,o),
(63,-24,o),
(63,-19,qs),
(63,-13,o),
(63,6,o),
(62,58,o),
(62,112,q),
(100,97,o),
(138,82,o),
(154,77,o),
(162,74,o),
(177,67,o),
(214,49,o),
(250,31,qs),
(263,25,o),
(290,19,o),
(302,10,qs),
(307,6,o),
(342,-10,o),
(384,-28,o),
(415,-40,o),
(416,-40,qs),
(437,-40,o)
);
},
{
closed = 1;
nodes = (
(251,333,o),
(251,340,qs),
(251,352,o),
(230,369,o),
(211,369,q),
(201,371,o),
(188,363,o),
(182,355,qs),
(174,344,o),
(182,332,q),
(190,325,o),
(209,308,o),
(219,308,qs),
(237,308,o)
);
},
{
closed = 1;
nodes = (
(206,338,qs),
(205,340,o),
(206,344,q),
(210,348,o),
(213,347,q),
(223,347,o),
(223,340,qs),
(223,339,o),
(221,331,o),
(216,331,qs),
(210,331,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
123 1 3 4 116 108 2 7 3 210 208 200 169 4 8 7 64 62 2 1 6 182 15 2 2 1 5 76 35 1 1 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 3 4 7 4 3 7 128 0 7 8 8 7 112 0 1 6 2 6 1 2 128 0 2 0 6 2 0 126 0 0 5 6 0 5 126 9 1 5 5 132 11 1 8 10 1 6 1 8 6 106 0 4 4 37 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 3 4 7 4 3 7 128 0 7 8 4 7 8 126 0 1 6 2 6 1 2 128 0 2 0 6 2 0 126 0 0 5 6 0 5 126 9 1 5 5 132 11 1 8 10 1 6 1 8 6 106 0 4 4 37 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 3 4 7 4 3 7 128 0 7 8 8 7 112 0 1 6 2 6 1 2 128 0 2 0 6 2 0 126 0 0 5 6 0 5 126 9 1 5 5 132 11 1 8 10 1 6 1 8 6 106 0 4 4 37 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 3 4 7 4 3 7 128 0 7 8 4 7 8 126 0 1 6 2 6 1 2 128 0 2 0 6 2 0 126 0 0 5 6 0 5 126 9 1 5 5 132 11 1 8 10 1 6 1 8 6 106 0 4 4 37 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
204 203 190 189 0 0 203 213 204 213 198 197 189 202 190 202 0 188 0 188 151 149 94 92 48 47 42 41 23 21 12 8 22 
CALL[ ]	/* CallFunction */";
};
width = 477;
}
);
note = uni0186;
unicode = 390;
},
{
glyphname = Oslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(138,-8,o),
(147,12,q),
(183,12,o),
(204,11,o),
(209,9,q),
(217,4,o),
(228,12,o),
(235,12,qs),
(288,12,o),
(337,11,o),
(354,11,o),
(357,12,qs),
(365,14,o),
(376,2,o),
(383,12,q),
(397,3,o),
(412,3,qs),
(444,3,ls),
(450,3,o),
(464,12,o),
(469,16,qs),
(471,18,o),
(472,27,o),
(472,31,qs),
(472,84,o),
(472,162,o),
(473,234,o),
(473,319,o),
(473,379,qs),
(473,387,o),
(476,402,o),
(480,409,q),
(482,411,o),
(474,421,o),
(475,423,qs),
(477,428,o),
(481,436,o),
(481,442,qs),
(481,581,ls),
(481,591,o),
(476,597,qs),
(472,602,o),
(481,607,o),
(481,611,qs),
(481,618,l),
(496,645,o),
(524,696,o),
(536,719,q),
(541,726,o),
(546,745,o),
(546,753,qs),
(546,764,o),
(539,770,q),
(536,767,o),
(517,755,o),
(504,730,q),
(502,724,o),
(485,689,o),
(481,684,qs),
(480,682,l),
(480,682,l),
(480,687,o),
(471,696,o),
(466,698,qs),
(463,700,o),
(454,698,o),
(450,698,qs),
(108,698,ls),
(104,698,o),
(95,699,o),
(91,698,qs),
(87,698,o),
(75,684,o),
(75,679,qs),
(75,629,ls),
(75,622,o),
(76,607,o),
(75,600,q),
(67,594,o),
(75,584,o),
(75,578,qs),
(75,477,ls),
(75,473,o),
(69,465,o),
(70,463,q),
(74,459,o),
(75,449,o),
(75,444,qs),
(75,34,ls),
(75,12,o),
(96,12,qs),
(104,12,l),
(103,9,o),
(101,7,q),
(92,-20,o),
(85,-45,o),
(84,-53,qs),
(84,-64,o),
(93,-63,o),
(100,-60,q),
(109,-40,o)
);
},
{
closed = 1;
nodes = (
(99,55,o),
(102,58,qs),
(107,64,o),
(109,75,o),
(109,82,qs),
(109,120,ls),
(109,126,o),
(107,138,o),
(102,143,q),
(100,148,o),
(104,154,qs),
(117,172,o),
(106,194,qs),
(103,202,o),
(103,214,o),
(108,220,q),
(110,221,o),
(109,227,o),
(108,228,qs),
(104,233,o),
(101,242,o),
(101,247,qs),
(101,264,o),
(102,281,o),
(108,287,q),
(111,293,o),
(106,298,qs),
(102,303,o),
(102,313,o),
(100,318,q),
(99,326,o),
(111,340,o),
(101,347,q),
(101,647,l),
(102,652,o),
(114,663,o),
(119,663,qs),
(431,663,ls),
(443,663,o),
(447,659,o),
(447,646,qs),
(447,621,l),
(422,574,o),
(367,474,o),
(347,438,qs),
(339,423,o),
(320,392,o),
(315,378,qs),
(307,359,o),
(282,340,o),
(280,320,q),
(272,308,o),
(256,292,o),
(250,278,qs),
(245,268,o),
(224,232,o),
(206,195,o),
(205,184,q),
(191,167,o),
(184,141,qs),
(182,135,o),
(171,116,o),
(166,107,qs),
(158,96,o),
(135,63,o),
(125,46,q),
(108,46,ls),
(104,46,o)
);
},
{
closed = 1;
nodes = (
(198,46,o),
(191,46,qs),
(167,46,l),
(172,54,o),
(177,72,o),
(180,81,q),
(193,91,o),
(205,117,o),
(207,132,q),
(233,179,o),
(284,272,o),
(311,318,qs),
(316,326,o),
(332,340,o),
(333,351,qs),
(335,370,o),
(353,383,o),
(359,395,qs),
(378,430,o),
(424,513,o),
(447,556,q),
(447,490,ls),
(447,483,o),
(446,472,o),
(442,466,qs),
(433,454,o),
(442,438,qs),
(446,429,o),
(442,424,qs),
(441,423,o),
(438,415,o),
(439,413,q),
(444,407,o),
(447,397,o),
(442,390,qs),
(440,388,o),
(437,377,o),
(439,375,qs),
(442,371,o),
(445,352,o),
(447,298,o),
(447,241,qs),
(447,227,o),
(439,219,qs),
(438,218,o),
(440,213,o),
(439,211,qs),
(437,204,o),
(448,192,o),
(439,186,q),
(439,60,ls),
(439,48,o),
(434,39,q),
(423,39,o),
(400,38,o),
(388,38,qs),
(287,38,ls),
(280,38,o),
(266,38,o),
(259,43,qs),
(257,45,o),
(245,38,o),
(241,39,qs),
(237,41,o),
(229,45,o),
(224,39,q),
(218,36,o),
(216,38,qs),
(211,43,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
26 1 6 1 216 205 187 166 163 146 135 126 62 55 22 19 12 5 6 76 1 0 7 6 1 2 0 4 76 169 1 7 85 1 0 2 75 49 1 1 74 3 1 2 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 6 6 1 95 0 1 1 39 77 8 9 2 5 5 0 97 4 3 2 0 0 38 77 0 7 7 0 97 4 3 2 0 0 38 77 0 2 2 38 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
8 9 2 5 7 0 5 89 0 7 4 3 2 0 2 7 0 105 0 6 6 1 95 0 1 1 39 77 0 2 2 38 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
102 101 235 234 184 178 131 130 101 168 102 168 98 97 92 88 84 81 33 31 25 10 8 23 
CALL[ ]	/* CallFunction */";
};
width = 551;
}
);
note = Oslash;
unicode = 216;
},
{
glyphname = Oslashacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = Oslash;
},
{
pos = (200,143);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
143 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 551;
}
);
note = Oslashacute;
unicode = 510;
},
{
glyphname = Otilde;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (122,95);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
95 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = Otilde;
unicode = 213;
},
{
glyphname = uni1E4C;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (122,95);
ref = tildecomb;
},
{
pos = (182,273);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
95 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
273 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uni1E4C;
unicode = 7756;
},
{
glyphname = uni1E4E;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (122,95);
ref = tildecomb;
},
{
pos = (100,260);
ref = uni0308;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
95 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 2 
PUSHW[ ]	/* 1 value pushed */
260 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uni1E4E;
unicode = 7758;
},
{
glyphname = uni022C;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (122,95);
ref = tildecomb;
},
{
pos = (87,680);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
95 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
680 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uni022C;
unicode = 556;
},
{
glyphname = OE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(420,-6,o),
(433,2,o),
(438,6,q),
(490,7,o),
(610,7,o),
(728,7,o),
(777,7,qs),
(797,7,o),
(810,16,q),
(817,19,o),
(821,26,o),
(822,31,q),
(819,32,o),
(799,43,o),
(772,41,qs),
(765,40,o),
(728,39,o),
(722,39,qs),
(685,39,o),
(585,39,o),
(486,38,o),
(448,38,qs),
(447,38,o),
(444,38,o),
(442,38,q),
(442,96,o),
(442,183,o),
(443,272,o),
(443,331,q),
(450,329,o),
(471,331,o),
(481,330,qs),
(489,330,o),
(499,332,q),
(507,336,o),
(523,337,o),
(531,337,qs),
(555,335,o),
(584,335,o),
(608,337,q),
(612,336,o),
(629,337,o),
(630,337,qs),
(651,337,o),
(656,362,o),
(646,363,q),
(585,363,ls),
(564,362,o),
(547,362,o),
(526,364,q),
(494,364,ls),
(487,364,o),
(470,366,o),
(462,366,qs),
(458,366,o),
(450,365,o),
(446,364,qs),
(444,363,o),
(443,361,q),
(443,370,o),
(443,379,qs),
(443,387,o),
(446,402,o),
(450,409,q),
(452,411,o),
(444,421,o),
(445,423,qs),
(447,428,o),
(451,436,o),
(451,442,qs),
(451,581,ls),
(451,591,o),
(446,597,qs),
(442,602,o),
(451,607,o),
(451,611,qs),
(451,646,ls),
(451,651,o),
(451,662,o),
(450,667,q),
(491,667,o),
(573,666,o),
(615,666,q),
(628,661,o),
(654,658,o),
(668,664,q),
(681,660,o),
(707,656,o),
(720,663,q),
(737,656,o),
(768,659,o),
(799,666,o),
(816,664,q),
(821,669,o),
(825,676,o),
(817,681,qs),
(810,685,o),
(788,691,o),
(762,696,q),
(742,697,o),
(674,691,o),
(653,689,qs),
(645,689,o),
(624,689,o),
(618,691,qs),
(595,697,o),
(574,693,q),
(565,698,o),
(528,700,o),
(490,700,o),
(481,700,qs),
(469,701,o),
(451,697,o),
(440,696,q),
(438,697,o),
(436,698,qs),
(433,700,o),
(424,698,o),
(420,698,qs),
(78,698,ls),
(74,698,o),
(65,699,o),
(61,698,qs),
(57,698,o),
(45,684,o),
(45,679,qs),
(45,629,ls),
(45,622,o),
(46,607,o),
(45,600,q),
(37,594,o),
(45,584,o),
(45,578,qs),
(45,477,ls),
(45,473,o),
(39,465,o),
(40,463,q),
(44,459,o),
(45,449,o),
(45,444,qs),
(45,25,ls),
(45,3,o),
(66,3,qs),
(113,3,o),
(158,3,o),
(175,2,o),
(179,0,qs),
(187,-5,o),
(198,3,o),
(205,3,qs),
(258,3,o),
(307,2,o),
(324,2,o),
(327,3,qs),
(335,5,o),
(346,-7,o),
(353,3,q),
(367,-6,o),
(382,-6,qs),
(414,-6,ls)
);
},
{
closed = 1;
nodes = (
(168,37,o),
(161,37,qs),
(78,37,ls),
(74,37,o),
(69,46,o),
(72,49,qs),
(77,55,o),
(79,66,o),
(79,73,qs),
(79,120,ls),
(79,126,o),
(77,138,o),
(72,143,q),
(70,148,o),
(74,154,qs),
(87,172,o),
(76,194,qs),
(73,202,o),
(73,214,o),
(78,220,q),
(80,221,o),
(79,227,o),
(78,228,qs),
(74,233,o),
(71,242,o),
(71,247,qs),
(71,264,o),
(72,281,o),
(78,287,q),
(81,293,o),
(76,298,qs),
(72,303,o),
(72,313,o),
(70,318,q),
(69,326,o),
(81,340,o),
(71,347,q),
(71,647,l),
(72,652,o),
(84,663,o),
(89,663,qs),
(401,663,ls),
(413,663,o),
(417,659,o),
(417,646,qs),
(417,490,ls),
(417,483,o),
(416,472,o),
(412,466,qs),
(403,454,o),
(412,438,qs),
(416,429,o),
(412,424,qs),
(411,423,o),
(408,415,o),
(409,413,q),
(414,407,o),
(417,397,o),
(412,390,qs),
(410,388,o),
(407,377,o),
(409,375,qs),
(412,371,o),
(415,352,o),
(417,298,o),
(417,241,qs),
(417,227,o),
(409,219,qs),
(408,218,o),
(410,213,o),
(409,211,qs),
(407,204,o),
(418,192,o),
(409,186,q),
(409,51,ls),
(409,39,o),
(404,30,q),
(393,30,o),
(370,29,o),
(358,29,qs),
(257,29,ls),
(250,29,o),
(236,29,o),
(229,34,qs),
(227,36,o),
(215,29,o),
(211,30,qs),
(207,32,o),
(199,36,o),
(194,30,q),
(188,27,o),
(186,29,qs),
(181,34,o)
);
},
{
closed = 1;
nodes = (
(746,325,o),
(753,334,qs),
(759,342,o),
(759,350,qs),
(759,358,o),
(748,377,o),
(741,378,qs),
(731,380,o),
(699,377,o),
(699,362,qs),
(699,351,o),
(685,341,o),
(693,333,qs),
(707,319,ls),
(718,309,o)
);
},
{
closed = 1;
nodes = (
(274,342,o),
(274,349,qs),
(274,361,o),
(253,378,o),
(234,378,q),
(224,380,o),
(211,372,o),
(205,364,qs),
(197,353,o),
(205,341,q),
(213,334,o),
(232,317,o),
(242,317,qs),
(260,317,o)
);
},
{
closed = 1;
nodes = (
(714,345,o),
(718,347,o),
(718,351,qs),
(718,355,o),
(726,356,o),
(729,355,qs),
(734,353,o),
(734,347,qs),
(734,344,o),
(732,343,q),
(731,341,o),
(723,336,o),
(720,339,qs),
(716,343,ls)
);
},
{
closed = 1;
nodes = (
(229,346,qs),
(228,348,o),
(229,352,q),
(233,356,o),
(236,355,q),
(246,355,o),
(246,348,qs),
(246,347,o),
(244,339,o),
(239,339,qs),
(233,339,o)
);
}
);
userData = {
assembly = "NPUSHW[ ]	/* 56 values pushed */
52 45 2 5 3 33 1 7 5 196 89 83 73 70 66 29 26 8 20 7 100 1 21 8 303 287 279 215 4 22 21 130 1 13 11 246 243 226 178 4 14 19 2 1 1 16 8 76 301 1 21 160 1 16 2 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 94 values pushed */
0 20 7 8 22 20 114 0 21 8 22 8 21 22 128 0 13 11 19 11 13 19 128 10 9 2 8 12 1 11 13 8 11 105 25 1 22 24 1 19 14 22 19 106 0 5 5 39 77 17 1 7 7 3 97 6 4 2 3 3 39 77 18 1 14 14 1 95 15 2 2 1 1 38 77 0 16 16 1 95 15 2 2 1 1 38 77 23 1 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 95 values pushed */
0 20 7 8 7 20 8 128 0 21 8 22 8 21 22 128 0 13 11 19 11 13 19 128 10 9 2 8 12 1 11 13 8 11 105 25 1 22 24 1 19 14 22 19 106 0 5 5 39 77 17 1 7 7 3 97 6 4 2 3 3 39 77 18 1 14 14 1 95 15 2 2 1 1 38 77 0 16 16 1 95 15 2 2 1 1 38 77 23 1 0 0 44 0 78 
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 61 values pushed */
297 296 269 268 1 0 296 306 297 306 291 289 277 276 268 281 269 281 250 248 211 210 175 169 156 151 143 134 128 126 124 122 121 115 113 110 109 107 106 104 79 76 60 59 58 56 51 48 40 38 17 14 9 5 0 159 1 158 26 8 22 
CALL[ ]	/* CallFunction */";
};
width = 823;
}
);
note = OE;
unicode = 338;
},
{
glyphname = P;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(78,14,o),
(78,21,qs),
(78,25,o),
(75,40,o),
(76,50,q),
(75,82,o),
(82,140,o),
(82,146,qs),
(81,158,o),
(84,196,o),
(76,211,qs),
(69,222,o),
(79,232,qs),
(86,239,o),
(79,245,qs),
(72,252,o),
(76,258,q),
(83,265,o),
(77,270,q),
(75,274,o),
(83,282,o),
(77,286,qs),
(73,288,o),
(74,302,o),
(75,306,q),
(86,308,o),
(109,312,o),
(116,308,q),
(124,307,o),
(178,307,o),
(252,307,o),
(332,308,o),
(402,311,o),
(424,313,qs),
(432,313,o),
(445,323,o),
(443,329,qs),
(441,339,o),
(448,352,o),
(453,364,o),
(446,370,q),
(453,376,o),
(449,387,o),
(445,393,q),
(453,398,o),
(450,428,o),
(444,433,q),
(444,454,o),
(444,496,o),
(445,515,q),
(446,520,o),
(453,547,o),
(453,552,qs),
(452,582,o),
(452,649,o),
(452,680,qs),
(452,687,o),
(441,697,o),
(434,697,qs),
(431,697,o),
(416,698,o),
(368,698,o),
(265,698,o),
(173,698,qs),
(166,698,o),
(152,695,o),
(148,698,qs),
(138,704,o),
(93,707,o),
(53,698,o),
(50,686,qs),
(50,685,o),
(49,685,o),
(49,684,qs),
(48,681,o),
(48,656,o),
(48,586,o),
(48,445,o),
(48,326,qs),
(48,322,o),
(46,298,o),
(41,293,q),
(40,293,o),
(48,272,o),
(44,268,qs),
(37,260,o),
(43,254,qs),
(48,250,o),
(48,241,qs),
(49,202,o),
(48,160,o),
(47,143,o),
(47,139,q),
(39,135,o),
(49,125,o),
(44,120,qs),
(39,115,o),
(51,109,o),
(48,104,q),
(43,99,o),
(40,86,o),
(40,79,qs),
(40,72,o),
(42,38,o),
(46,3,o),
(47,-4,q),
(49,-9,o),
(60,-11,o),
(63,-6,qs),
(67,1,o)
);
},
{
closed = 1;
nodes = (
(81,366,o),
(82,381,qs),
(82,440,o),
(82,503,o),
(81,530,o),
(79,533,qs),
(73,541,o),
(85,550,o),
(83,557,qs),
(78,571,o),
(85,590,o),
(75,600,q),
(74,608,o),
(73,621,o),
(80,628,qs),
(85,633,o),
(80,638,qs),
(77,642,o),
(80,660,o),
(87,674,o),
(90,671,qs),
(96,666,o),
(104,677,o),
(108,674,qs),
(115,670,o),
(128,667,o),
(135,667,qs),
(140,667,o),
(151,668,o),
(156,668,qs),
(194,668,o),
(268,667,o),
(354,667,o),
(409,667,qs),
(418,667,o),
(418,657,qs),
(418,608,o),
(417,559,o),
(418,541,o),
(419,537,q),
(422,532,o),
(415,523,o),
(411,514,o),
(416,509,q),
(415,505,o),
(409,495,o),
(410,489,qs),
(412,482,o),
(408,455,o),
(416,449,q),
(411,440,o),
(415,436,o),
(421,430,o),
(418,416,qs),
(414,395,o),
(410,379,o),
(409,375,o),
(410,366,o),
(410,351,qs),
(410,345,o),
(402,343,q),
(393,343,o),
(328,342,o),
(241,340,o),
(153,337,o),
(88,336,o),
(79,336,q),
(80,344,o)
);
},
{
closed = 1;
nodes = (
(272,484,o),
(279,493,qs),
(285,501,o),
(285,509,qs),
(285,517,o),
(274,536,o),
(267,537,qs),
(257,539,o),
(225,536,o),
(225,521,qs),
(225,510,o),
(211,500,o),
(219,492,qs),
(233,478,ls),
(244,468,o)
);
},
{
closed = 1;
nodes = (
(240,504,o),
(244,506,o),
(244,510,qs),
(244,514,o),
(252,515,o),
(255,514,qs),
(260,512,o),
(260,506,qs),
(260,503,o),
(258,502,q),
(257,500,o),
(249,495,o),
(246,498,qs),
(242,502,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 77 values pushed */
156 153 2 4 1 56 1 5 4 198 130 127 68 65 62 6 3 5 72 1 2 3 4 76 104 24 16 10 4 2 73 0 5 4 3 4 5 3 128 0 3 0 2 3 2 101 0 0 0 37 77 0 4 4 1 95 0 1 1 39 4 78 202 200 151 142 116 110 80 74 51 42 41 40 6 8 22 
CALL[ ]	/* CallFunction */";
};
width = 493;
}
);
note = P;
unicode = 80;
},
{
glyphname = uni1E54;
layers = (
{
layerId = m01;
shapes = (
{
ref = P;
},
{
pos = (128,143);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
143 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 493;
}
);
note = uni1E54;
unicode = 7764;
},
{
glyphname = uni1E56;
layers = (
{
layerId = m01;
shapes = (
{
ref = P;
},
{
pos = (132,116);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
116 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 493;
}
);
note = uni1E56;
unicode = 7766;
},
{
glyphname = uni01A4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(148,14,o),
(148,21,qs),
(148,25,o),
(145,40,o),
(146,50,q),
(145,82,o),
(152,140,o),
(152,146,qs),
(151,158,o),
(154,196,o),
(146,211,qs),
(139,222,o),
(149,232,qs),
(156,239,o),
(149,245,qs),
(142,252,o),
(146,258,q),
(153,265,o),
(147,270,q),
(145,274,o),
(153,282,o),
(147,286,qs),
(143,288,o),
(144,302,o),
(145,306,q),
(156,308,o),
(179,312,o),
(186,308,q),
(194,307,o),
(248,307,o),
(322,307,o),
(402,308,o),
(472,311,o),
(494,313,qs),
(502,313,o),
(515,323,o),
(513,329,qs),
(511,339,o),
(518,352,o),
(523,364,o),
(516,370,q),
(523,376,o),
(519,387,o),
(515,393,q),
(523,398,o),
(520,428,o),
(514,433,q),
(514,454,o),
(514,496,o),
(515,515,q),
(516,520,o),
(523,547,o),
(523,552,qs),
(522,582,o),
(522,649,o),
(522,680,qs),
(522,687,o),
(511,697,o),
(504,697,qs),
(501,697,o),
(486,698,o),
(438,698,o),
(335,698,o),
(243,698,qs),
(236,698,o),
(222,695,o),
(218,698,qs),
(209,704,o),
(166,707,o),
(148,703,q),
(133,709,o),
(116,702,qs),
(112,701,o),
(82,701,o),
(77,701,qs),
(54,702,o),
(49,702,o),
(45,702,qs),
(17,701,o),
(3,667,o),
(1,642,qs),
(0,632,o),
(6,611,o),
(1,604,qs),
(-1,600,o),
(2,581,o),
(1,578,q),
(1,566,o),
(27,566,o),
(27,572,q),
(32,578,o),
(32,610,o),
(33,646,o),
(45,672,o),
(62,671,qs),
(67,671,o),
(90,672,o),
(95,670,qs),
(102,668,o),
(107,672,o),
(118,672,q),
(118,659,o),
(118,591,o),
(118,449,o),
(118,326,qs),
(118,322,o),
(116,298,o),
(111,293,q),
(110,293,o),
(118,272,o),
(114,268,qs),
(107,260,o),
(113,254,qs),
(118,250,o),
(118,241,qs),
(119,202,o),
(118,160,o),
(117,143,o),
(117,139,q),
(109,135,o),
(119,125,o),
(114,120,qs),
(109,115,o),
(121,109,o),
(118,104,q),
(113,99,o),
(110,86,o),
(110,79,qs),
(110,72,o),
(112,38,o),
(116,3,o),
(117,-4,q),
(119,-9,o),
(130,-11,o),
(133,-6,qs),
(137,1,o)
);
},
{
closed = 1;
nodes = (
(151,366,o),
(152,381,qs),
(152,440,o),
(152,503,o),
(151,530,o),
(149,533,qs),
(143,541,o),
(155,550,o),
(153,557,qs),
(148,571,o),
(155,590,o),
(145,600,q),
(144,608,o),
(143,621,o),
(150,628,qs),
(152,630,o),
(152,637,o),
(150,638,q),
(147,642,o),
(150,660,o),
(157,674,o),
(160,671,qs),
(166,666,o),
(174,677,o),
(178,674,qs),
(185,670,o),
(198,667,o),
(205,667,qs),
(210,667,o),
(221,668,o),
(226,668,qs),
(264,668,o),
(338,667,o),
(424,667,o),
(479,667,qs),
(488,667,o),
(488,657,qs),
(488,608,o),
(487,559,o),
(488,541,o),
(489,537,q),
(492,532,o),
(485,523,o),
(481,514,o),
(486,509,q),
(485,505,o),
(479,495,o),
(480,489,qs),
(482,482,o),
(478,455,o),
(486,449,q),
(481,440,o),
(485,436,o),
(491,430,o),
(488,416,qs),
(484,395,o),
(480,379,o),
(479,375,o),
(480,366,o),
(480,351,qs),
(480,345,o),
(472,343,q),
(463,343,o),
(398,342,o),
(310,340,o),
(223,337,o),
(158,336,o),
(149,336,q),
(150,344,o)
);
},
{
closed = 1;
nodes = (
(342,484,o),
(349,493,qs),
(355,501,o),
(355,509,qs),
(355,517,o),
(344,536,o),
(337,537,qs),
(327,539,o),
(295,536,o),
(295,521,qs),
(295,510,o),
(281,500,o),
(289,492,qs),
(303,478,ls),
(314,468,o)
);
},
{
closed = 1;
nodes = (
(310,504,o),
(314,506,o),
(314,510,qs),
(314,514,o),
(322,515,o),
(325,514,qs),
(330,512,o),
(330,506,qs),
(330,503,o),
(328,502,q),
(327,500,o),
(319,495,o),
(316,498,qs),
(312,502,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
179 1 0 4 182 1 7 0 82 48 2 8 7 225 156 153 94 91 88 6 6 8 98 1 5 6 5 76 65 1 2 74 130 24 16 10 4 5 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
179 1 0 2 182 82 48 3 8 0 225 156 153 94 91 88 6 6 8 98 1 5 6 4 76 65 1 2 74 130 24 16 10 4 5 73 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
179 1 0 4 182 1 7 0 82 48 2 8 7 225 156 153 94 91 88 6 6 8 98 1 5 6 5 76 65 1 2 74 130 24 16 10 4 5 73 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 8 7 6 7 8 6 128 0 6 0 5 6 5 101 1 1 0 0 2 97 3 1 2 2 37 77 0 7 7 4 95 0 4 4 39 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 8 0 6 0 8 6 128 0 6 0 5 6 5 101 7 1 2 0 0 2 97 4 3 2 2 2 37 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 8 7 6 7 8 6 128 0 6 0 5 6 5 101 1 1 0 0 2 97 3 1 2 2 37 77 0 7 7 4 95 0 4 4 39 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
229 227 177 168 142 136 106 100 77 68 67 66 62 56 41 37 35 34 9 8 22 
CALL[ ]	/* CallFunction */";
};
width = 563;
}
);
note = uni01A4;
unicode = 420;
},
{
glyphname = Thorn;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(73,51,o),
(77,77,q),
(77,109,o),
(76,162,o),
(74,190,q),
(84,190,o),
(118,189,o),
(148,190,o),
(151,189,q),
(159,189,o),
(174,189,o),
(179,187,q),
(187,182,o),
(198,191,o),
(205,190,qs),
(211,190,o),
(240,189,o),
(275,190,o),
(302,191,o),
(305,192,qs),
(312,194,o),
(324,184,o),
(331,193,q),
(345,184,o),
(373,187,o),
(390,187,qs),
(397,187,o),
(410,193,o),
(417,197,q),
(419,199,o),
(420,208,o),
(420,211,qs),
(420,557,ls),
(420,562,o),
(411,565,o),
(406,565,qs),
(365,566,o),
(248,567,o),
(124,568,o),
(72,566,q),
(72,580,o),
(72,590,o),
(72,601,o),
(73,626,o),
(73,653,qs),
(73,678,o),
(64,695,o),
(62,699,q),
(53,696,o),
(47,688,q),
(40,674,o),
(40,657,qs),
(40,636,o),
(41,606,o),
(42,569,o),
(42,509,o),
(42,458,qs),
(42,433,o),
(47,384,o),
(47,375,qs),
(47,208,ls),
(47,198,o),
(45,176,o),
(50,165,q),
(47,152,o),
(43,107,o),
(50,95,q),
(44,83,o),
(47,55,o),
(55,25,o),
(53,8,q),
(58,4,o),
(66,-2,o),
(71,7,qs),
(75,14,o)
);
},
{
closed = 1;
nodes = (
(235,213,o),
(228,217,q),
(226,219,o),
(215,213,o),
(211,214,qs),
(207,216,o),
(199,220,o),
(194,215,qs),
(190,211,o),
(186,214,qs),
(183,217,o),
(141,218,o),
(95,217,o),
(83,217,qs),
(80,217,o),
(77,220,q),
(78,223,o),
(83,245,o),
(83,249,qs),
(83,254,o),
(83,275,o),
(82,288,q),
(83,306,o),
(81,343,o),
(82,353,qs),
(83,357,o),
(82,372,o),
(82,390,qs),
(82,395,o),
(80,404,o),
(78,408,qs),
(70,422,o),
(80,430,q),
(83,436,o),
(82,472,o),
(77,509,o),
(73,514,q),
(73,522,ls),
(73,525,o),
(76,531,o),
(77,535,q),
(88,536,o),
(128,538,o),
(139,538,qs),
(147,538,o),
(161,539,o),
(168,532,q),
(179,530,o),
(191,540,o),
(197,532,q),
(201,532,o),
(244,534,o),
(299,536,o),
(342,537,o),
(345,537,qs),
(356,536,o),
(385,534,o),
(388,534,q),
(388,503,o),
(389,452,o),
(388,402,o),
(386,369,qs),
(386,289,ls),
(386,285,o),
(386,253,o),
(384,222,o),
(382,218,q),
(344,217,o),
(268,213,o),
(256,213,qs),
(249,213,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
123 108 2 4 5 51 42 2 1 4 2 76 26 1 0 74 72 10 7 3 4 1 73 0 0 7 6 2 5 4 0 5 105 8 9 2 4 1 1 4 89 8 9 2 4 4 1 97 3 2 2 1 4 1 81 78 75 134 131 103 100 94 90 89 87 75 145 78 144 69 66 58 54 49 47 38 34 10 8 22 
CALL[ ]	/* CallFunction */";
};
width = 460;
}
);
note = Thorn;
unicode = 222;
},
{
glyphname = uni2C63;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(75,14,o),
(75,21,qs),
(75,25,o),
(72,40,o),
(73,50,q),
(72,82,o),
(79,140,o),
(79,146,qs),
(78,158,o),
(81,196,o),
(73,211,qs),
(66,222,o),
(76,232,qs),
(83,239,o),
(76,245,qs),
(69,252,o),
(73,258,q),
(80,265,o),
(74,270,q),
(72,274,o),
(80,282,o),
(74,286,qs),
(70,288,o),
(71,302,o),
(72,306,q),
(83,308,o),
(106,312,o),
(113,308,q),
(121,307,o),
(175,307,o),
(249,307,o),
(329,308,o),
(399,311,o),
(421,313,qs),
(429,313,o),
(442,323,o),
(440,329,qs),
(438,339,o),
(445,352,o),
(450,364,o),
(443,370,q),
(450,376,o),
(446,387,o),
(442,393,q),
(450,398,o),
(447,428,o),
(441,433,q),
(441,454,o),
(441,496,o),
(442,515,q),
(443,520,o),
(450,547,o),
(450,552,qs),
(449,582,o),
(449,649,o),
(449,680,qs),
(449,687,o),
(438,697,o),
(431,697,qs),
(428,697,o),
(413,698,o),
(365,698,o),
(262,698,o),
(170,698,qs),
(163,698,o),
(149,695,o),
(145,698,qs),
(135,704,o),
(90,707,o),
(50,698,o),
(47,686,qs),
(47,685,o),
(46,685,o),
(46,684,qs),
(45,681,o),
(45,657,o),
(45,590,o),
(45,520,q),
(35,521,o),
(27,523,qs),
(18,525,o),
(-16,524,o),
(-22,524,qs),
(-32,524,o),
(-42,509,o),
(-33,493,o),
(-17,493,qs),
(-6,493,o),
(33,494,o),
(42,492,q),
(45,492,l),
(45,459,o),
(45,376,o),
(45,326,qs),
(45,322,o),
(43,298,o),
(38,293,q),
(37,293,o),
(45,272,o),
(41,268,qs),
(34,260,o),
(40,254,qs),
(45,250,o),
(45,241,qs),
(46,202,o),
(45,160,o),
(44,143,o),
(44,139,q),
(36,135,o),
(46,125,o),
(41,120,qs),
(36,115,o),
(48,109,o),
(45,104,q),
(40,99,o),
(37,86,o),
(37,79,qs),
(37,72,o),
(39,38,o),
(43,3,o),
(44,-4,q),
(46,-9,o),
(57,-11,o),
(60,-6,qs),
(64,1,o)
);
},
{
closed = 1;
nodes = (
(78,366,o),
(79,381,qs),
(79,422,o),
(79,477,o),
(79,494,q),
(86,494,o),
(107,493,o),
(122,492,qs),
(132,491,o),
(150,497,o),
(159,494,q),
(182,502,o),
(179,513,o),
(159,518,q),
(138,526,o),
(103,529,o),
(79,524,qs),
(78,524,l),
(77,531,o),
(76,533,qs),
(70,541,o),
(82,550,o),
(80,557,qs),
(75,571,o),
(82,590,o),
(72,600,q),
(71,608,o),
(70,621,o),
(77,628,qs),
(82,633,o),
(77,638,qs),
(74,642,o),
(77,660,o),
(84,674,o),
(87,671,qs),
(93,666,o),
(101,677,o),
(105,674,qs),
(112,670,o),
(125,667,o),
(132,667,qs),
(137,667,o),
(148,668,o),
(153,668,qs),
(191,668,o),
(265,667,o),
(351,667,o),
(406,667,qs),
(415,667,o),
(415,657,qs),
(415,608,o),
(414,559,o),
(415,541,o),
(416,537,q),
(419,532,o),
(412,523,o),
(408,514,o),
(413,509,q),
(412,505,o),
(406,495,o),
(407,489,qs),
(409,482,o),
(405,455,o),
(413,449,q),
(408,440,o),
(412,436,o),
(418,430,o),
(415,416,qs),
(411,395,o),
(407,379,o),
(406,375,o),
(407,366,o),
(407,351,qs),
(407,345,o),
(399,343,q),
(390,343,o),
(325,342,o),
(238,340,o),
(150,337,o),
(85,336,o),
(76,336,q),
(77,344,o)
);
},
{
closed = 1;
nodes = (
(269,484,o),
(276,493,qs),
(282,501,o),
(282,509,qs),
(282,517,o),
(271,536,o),
(264,537,qs),
(254,539,o),
(222,536,o),
(222,521,qs),
(222,510,o),
(208,500,o),
(216,492,qs),
(230,478,ls),
(241,468,o)
);
},
{
closed = 1;
nodes = (
(237,504,o),
(241,506,o),
(241,510,qs),
(241,514,o),
(249,515,o),
(252,514,qs),
(257,512,o),
(257,506,qs),
(257,503,o),
(255,502,q),
(254,500,o),
(246,495,o),
(243,498,qs),
(239,502,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 106 values pushed */
171 168 2 6 3 71 1 1 6 46 1 8 1 227 195 2 0 8 145 142 83 80 77 33 6 5 0 87 1 4 5 6 76 188 1 1 1 75 119 24 16 10 4 4 73 0 8 1 0 1 8 0 128 0 1 7 1 0 5 1 0 105 0 5 0 4 5 4 101 0 2 2 37 77 0 6 6 3 95 0 3 3 39 6 78 231 229 200 198 166 157 131 125 95 89 66 57 56 55 43 40 38 35 9 8 22 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = uni2C63;
unicode = 11363;
},
{
glyphname = Q;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(481,-130,o),
(477,-114,qs),
(476,-107,o),
(472,-100,qs),
(469,-94,o),
(456,-76,o),
(445,-59,o),
(445,-58,qs),
(443,-41,o),
(427,-22,o),
(416,-6,q),
(427,-3,o),
(442,9,o),
(442,22,qs),
(442,420,ls),
(442,428,o),
(445,443,o),
(449,450,q),
(451,452,o),
(443,462,o),
(444,464,qs),
(446,469,o),
(450,477,o),
(450,483,qs),
(450,582,ls),
(450,592,o),
(445,597,qs),
(441,602,o),
(450,607,o),
(450,611,qs),
(450,647,o),
(449,674,o),
(449,682,qs),
(449,686,o),
(440,695,o),
(436,697,qs),
(432,699,o),
(424,697,o),
(419,697,qs),
(78,697,ls),
(74,697,o),
(66,698,o),
(61,697,qs),
(57,697,o),
(46,684,o),
(46,679,qs),
(45,644,o),
(45,597,o),
(46,552,o),
(46,518,qs),
(46,514,o),
(39,506,o),
(40,504,qs),
(46,496,o),
(46,484,qs),
(46,25,ls),
(46,3,o),
(67,3,qs),
(117,3,o),
(173,3,o),
(179,0,qs),
(187,-5,o),
(198,3,o),
(205,3,qs),
(302,3,ls),
(308,3,o),
(322,1,o),
(327,3,qs),
(335,5,o),
(345,-7,o),
(352,3,q),
(366,-6,o),
(380,-6,q),
(391,-21,o),
(419,-68,o),
(428,-82,qs),
(436,-95,o),
(454,-116,o),
(464,-126,q),
(466,-127,o)
);
},
{
closed = 1;
nodes = (
(168,37,o),
(161,37,qs),
(79,37,ls),
(75,37,o),
(70,46,o),
(73,49,q),
(80,60,o),
(80,73,qs),
(80,203,ls),
(80,210,o),
(78,222,o),
(73,227,qs),
(70,230,o),
(74,236,qs),
(81,246,o),
(81,267,o),
(77,278,q),
(69,293,o),
(79,303,q),
(78,311,ls),
(73,342,o),
(72,364,o),
(78,370,qs),
(80,372,o),
(78,379,o),
(76,381,qs),
(72,386,o),
(72,396,o),
(71,401,qs),
(70,409,o),
(81,423,o),
(72,430,q),
(72,423,o),
(72,459,o),
(71,523,o),
(71,592,o),
(71,643,o),
(72,648,qs),
(72,653,o),
(84,664,o),
(89,664,qs),
(94,665,o),
(105,664,o),
(110,664,qs),
(400,664,ls),
(412,664,o),
(416,659,o),
(416,646,qs),
(416,531,ls),
(416,524,o),
(415,513,o),
(411,507,qs),
(402,495,o),
(411,479,qs),
(415,472,o),
(411,465,q),
(405,459,o),
(411,449,o),
(417,439,o),
(411,432,qs),
(409,429,o),
(406,419,o),
(408,417,q),
(411,407,o),
(413,366,o),
(413,318,o),
(410,277,o),
(408,268,qs),
(408,267,o),
(405,264,o),
(404,263,q),
(397,274,o),
(387,262,q),
(373,262,o),
(343,263,o),
(328,263,qs),
(325,263,o),
(320,272,o),
(316,267,q),
(312,259,o),
(306,270,o),
(303,270,qs),
(287,270,o),
(257,269,o),
(242,269,q),
(235,260,o),
(229,261,qs),
(209,264,o),
(218,236,q),
(219,235,o),
(240,203,o),
(273,154,o),
(311,97,o),
(345,46,o),
(356,29,q),
(257,29,ls),
(250,29,o),
(236,29,o),
(229,34,qs),
(227,36,o),
(215,29,o),
(211,30,qs),
(207,32,o),
(199,36,o),
(194,30,q),
(188,27,o),
(186,29,qs),
(181,34,o)
);
},
{
closed = 1;
nodes = (
(267,435,o),
(244,442,q),
(241,442,o),
(234,433,o),
(231,433,qs),
(218,433,o),
(214,411,o),
(208,403,qs),
(207,402,o),
(212,393,o),
(213,390,qs),
(218,379,o),
(247,379,o),
(249,380,qs),
(275,391,o)
);
},
{
closed = 1;
nodes = (
(238,401,o),
(237,404,q),
(236,405,o),
(235,407,o),
(235,407,q),
(237,409,o),
(238,415,o),
(241,415,qs),
(242,415,o),
(243,417,o),
(244,417,q),
(250,415,o),
(252,404,o),
(246,401,q),
(245,401,o)
);
},
{
closed = 1;
nodes = (
(348,96,o),
(310,152,o),
(276,202,o),
(254,235,o),
(253,236,q),
(294,236,ls),
(299,236,o),
(309,234,o),
(313,236,qs),
(317,239,o),
(323,232,o),
(330,228,o),
(333,233,q),
(337,232,o),
(343,226,o),
(347,227,qs),
(355,229,o),
(372,226,o),
(376,233,q),
(381,228,o),
(384,232,o),
(390,239,o),
(400,236,qs),
(402,235,o),
(406,232,o),
(408,230,q),
(411,44,ls),
(411,40,o),
(411,28,o),
(404,29,qs),
(392,31,l),
(382,47,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
33 1 7 3 55 49 26 3 11 7 158 124 2 10 8 168 1 5 10 116 1 6 5 100 1 12 6 233 230 223 181 4 9 12 8 1 1 4 8 76 219 80 2 4 1 75 68 1 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
0 8 11 10 11 8 10 128 0 5 0 12 9 5 12 105 0 7 7 3 95 0 3 3 39 77 0 10 10 11 97 0 11 11 40 77 0 9 9 1 97 2 1 1 1 38 77 0 4 4 1 97 2 1 1 1 38 77 0 6 6 0 97 0 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
0 8 11 10 11 8 10 128 0 11 0 10 5 11 10 105 0 5 0 12 9 5 12 105 0 7 7 3 95 0 3 3 39 77 0 9 9 1 97 2 1 1 1 38 77 0 4 4 1 97 2 1 1 1 38 77 0 6 6 0 97 0 0 0 44 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
244 242 197 196 190 188 185 183 156 154 145 141 114 110 105 102 92 89 40 38 52 68 22 13 8 25 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = Q;
unicode = 81;
},
{
glyphname = uni024A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(507,-177,o),
(526,-162,qs),
(528,-160,o),
(531,-155,o),
(532,-154,qs),
(534,-152,o),
(538,-152,o),
(539,-151,qs),
(540,-149,o),
(543,-147,o),
(544,-146,q),
(547,-146,o),
(549,-144,qs),
(551,-142,o),
(555,-136,o),
(557,-135,q),
(567,-127,o),
(598,-96,o),
(623,-67,o),
(623,-65,qs),
(623,-64,o),
(628,-52,o),
(625,-41,o),
(613,-44,q),
(611,-45,o),
(606,-49,o),
(604,-49,qs),
(602,-49,o),
(584,-65,qs),
(583,-66,o),
(561,-85,o),
(541,-105,o),
(539,-106,qs),
(538,-107,o),
(538,-112,o),
(535,-113,q),
(535,-113,o),
(531,-115,o),
(529,-116,q),
(516,-126,o),
(492,-146,o),
(490,-145,qs),
(486,-143,o),
(487,-129,o),
(487,-127,qs),
(488,-51,o),
(490,123,o),
(493,301,o),
(495,466,o),
(496,600,o),
(497,687,o),
(496,697,qs),
(496,700,o),
(489,712,o),
(473,712,q),
(433,708,ls),
(427,708,o),
(414,706,o),
(408,701,qs),
(404,698,o),
(391,700,o),
(386,700,qs),
(79,700,ls),
(74,700,o),
(62,700,o),
(57,699,qs),
(51,699,o),
(40,688,o),
(40,681,qs),
(40,249,ls),
(40,244,o),
(50,235,o),
(42,228,qs),
(38,224,o),
(46,215,o),
(46,210,qs),
(47,188,o),
(47,141,o),
(47,118,q),
(35,105,o),
(46,93,q),
(42,87,o),
(39,75,o),
(46,68,q),
(38,60,o),
(48,37,o),
(48,23,q),
(47,16,o),
(57,6,o),
(63,5,q),
(66,2,o),
(72,7,qs),
(78,11,o),
(121,46,o),
(186,101,o),
(259,164,o),
(331,228,o),
(390,283,o),
(406,300,qs),
(417,311,o),
(453,335,o),
(460,354,q),
(457,91,ls),
(457,84,o),
(459,68,o),
(454,60,q),
(455,51,o),
(456,0,o),
(457,-63,o),
(458,-122,o),
(458,-138,qs),
(458,-139,o),
(460,-161,o),
(461,-166,qs),
(463,-178,o),
(463,-199,o),
(474,-199,qs),
(477,-199,o)
);
},
{
closed = 1;
nodes = (
(75,74,o),
(71,95,o),
(70,99,qs),
(69,103,o),
(69,113,o),
(70,115,qs),
(77,127,o),
(72,136,q),
(79,143,o),
(76,173,o),
(77,180,qs),
(79,187,o),
(73,197,o),
(72,203,q),
(80,211,o),
(66,224,o),
(69,233,qs),
(70,235,o),
(71,251,o),
(71,296,o),
(70,386,o),
(70,539,o),
(70,655,qs),
(70,666,o),
(78,666,qs),
(417,666,ls),
(424,666,o),
(455,669,o),
(461,673,qs),
(463,675,o),
(465,624,o),
(465,547,o),
(463,466,o),
(461,405,o),
(459,398,qs),
(458,394,o),
(438,375,o),
(412,352,o),
(391,331,o),
(389,325,qs),
(388,319,o),
(373,307,o),
(368,302,qs),
(341,274,o),
(263,204,o),
(177,133,o),
(102,71,o),
(78,51,q),
(78,54,o)
);
},
{
closed = 1;
nodes = (
(276,423,o),
(283,432,qs),
(289,440,o),
(289,448,qs),
(289,456,o),
(278,475,o),
(271,476,qs),
(261,478,o),
(229,475,o),
(229,460,qs),
(229,449,o),
(215,439,o),
(223,431,qs),
(237,417,ls),
(248,407,o)
);
},
{
closed = 1;
nodes = (
(244,443,o),
(248,445,o),
(248,449,qs),
(248,453,o),
(256,454,o),
(259,453,qs),
(264,451,o),
(264,445,qs),
(264,442,o),
(262,441,q),
(261,439,o),
(253,434,o),
(250,437,qs),
(246,441,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
48 1 3 1 143 1 4 3 187 158 155 152 41 38 36 33 15 11 10 0 4 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 4 3 0 3 4 0 128 0 2 2 37 77 0 3 3 1 95 0 1 1 37 77 5 1 0 0 48 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 2 1 2 133 0 4 3 0 3 4 0 128 0 3 3 1 95 0 1 1 37 77 5 1 0 0 48 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
1 0 191 189 141 139 63 62 55 52 0 117 1 117 6 8 22 
CALL[ ]	/* CallFunction */";
};
width = 547;
}
);
note = uni024A;
unicode = 586;
},
{
glyphname = R;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(74,20,o),
(74,30,qs),
(74,86,ls),
(74,97,o),
(82,123,o),
(85,150,o),
(77,162,qs),
(73,168,o),
(77,173,q),
(79,178,o),
(84,187,o),
(79,191,qs),
(73,196,o),
(85,208,o),
(77,212,q),
(76,213,o),
(74,218,o),
(75,219,qs),
(81,227,o),
(81,233,qs),
(81,238,o),
(77,248,o),
(75,252,qs),
(73,257,o),
(74,270,o),
(76,272,qs),
(81,277,o),
(94,283,o),
(101,285,qs),
(105,287,o),
(114,285,o),
(118,285,qs),
(202,285,ls),
(207,285,o),
(218,285,o),
(222,288,qs),
(233,296,o),
(269,293,o),
(282,285,q),
(286,281,o),
(301,295,o),
(308,295,qs),
(310,295,o),
(331,292,o),
(332,291,qs),
(338,287,o),
(350,285,o),
(356,285,qs),
(411,285,ls),
(413,285,o),
(418,279,o),
(419,277,q),
(419,204,o),
(418,120,o),
(418,80,o),
(418,67,o),
(419,65,qs),
(426,52,o),
(424,32,o),
(428,9,qs),
(430,2,o),
(453,-2,o),
(453,14,qs),
(453,113,o),
(453,228,o),
(451,285,o),
(447,309,o),
(442,316,qs),
(439,321,o),
(428,319,o),
(423,319,qs),
(132,319,ls),
(129,319,o),
(127,325,o),
(129,327,qs),
(149,344,o),
(179,386,o),
(198,405,qs),
(216,423,ls),
(220,427,o),
(226,434,o),
(227,440,qs),
(229,446,o),
(243,447,o),
(243,456,q),
(250,461,o),
(290,503,o),
(342,560,o),
(390,613,o),
(404,628,qs),
(416,639,o),
(434,667,o),
(442,681,qs),
(447,692,o),
(420,708,o),
(409,708,qs),
(402,708,o),
(379,707,o),
(350,707,qs),
(346,707,o),
(336,708,o),
(333,706,qs),
(327,702,o),
(315,699,o),
(308,699,qs),
(91,699,ls),
(86,699,o),
(76,697,o),
(72,692,qs),
(68,686,o),
(60,680,qs),
(50,671,o),
(50,654,qs),
(49,337,ls),
(49,323,o),
(41,315,qs),
(40,314,o),
(40,308,o),
(41,307,qs),
(47,301,o),
(49,288,o),
(49,280,qs),
(49,130,ls),
(49,126,o),
(51,116,o),
(49,113,qs),
(46,109,o),
(43,93,o),
(41,56,o),
(41,20,qs),
(41,13,o),
(52,6,o),
(56,2,q),
(62,-2,o)
);
},
{
closed = 1;
nodes = (
(72,338,o),
(76,340,qs),
(83,345,o),
(74,356,o),
(78,360,qs),
(83,366,o),
(82,378,o),
(82,384,qs),
(84,650,ls),
(84,661,o),
(88,665,o),
(101,665,qs),
(214,665,ls),
(226,665,o),
(233,673,o),
(245,673,qs),
(281,673,o),
(353,674,o),
(388,674,qs),
(392,674,o),
(396,663,o),
(394,661,qs),
(385,652,o),
(349,613,o),
(319,576,o),
(317,569,q),
(317,565,o),
(310,559,o),
(306,557,qs),
(275,542,o),
(257,508,q),
(256,504,o),
(247,497,o),
(243,493,qs),
(231,481,o),
(208,457,o),
(196,445,qs),
(189,438,o),
(174,426,o),
(170,418,qs),
(167,409,o),
(149,402,o),
(149,391,q),
(132,374,o),
(98,339,o),
(81,322,qs),
(77,318,o)
);
},
{
closed = 1;
nodes = (
(287,138,o),
(287,145,qs),
(287,157,o),
(266,174,o),
(247,174,q),
(237,176,o),
(224,168,o),
(218,160,qs),
(210,149,o),
(218,137,q),
(226,130,o),
(245,113,o),
(255,113,qs),
(273,113,o)
);
},
{
closed = 1;
nodes = (
(242,142,qs),
(241,144,o),
(242,148,q),
(246,152,o),
(249,151,q),
(259,151,o),
(259,144,qs),
(259,143,o),
(257,135,o),
(252,135,qs),
(246,135,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
178 175 171 137 48 5 2 7 14 1 4 2 115 81 11 3 9 3 202 200 192 3 10 9 4 76 76 1 8 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 6 0 7 7 6 114 0 4 2 3 3 4 114 0 9 3 10 10 9 114 0 2 5 1 3 9 2 3 105 12 1 10 11 1 8 10 8 102 0 1 1 37 77 0 7 7 0 96 0 0 0 37 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 6 0 7 7 6 114 0 4 2 3 3 4 114 0 9 3 10 3 9 10 128 0 2 5 1 3 9 2 3 105 12 1 10 11 1 8 10 8 102 0 1 1 37 77 0 7 7 0 96 0 0 0 37 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
196 195 182 181 195 205 196 205 190 189 181 194 182 194 169 166 165 160 101 99 92 90 85 83 62 61 38 33 28 26 13 8 22 
CALL[ ]	/* CallFunction */";
};
width = 493;
}
);
note = R;
unicode = 82;
},
{
glyphname = Racute;
layers = (
{
layerId = m01;
shapes = (
{
ref = R;
},
{
pos = (163,143);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
143 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 493;
}
);
note = Racute;
unicode = 340;
},
{
glyphname = Rcaron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(74,20,o),
(74,30,qs),
(74,86,ls),
(74,97,o),
(82,123,o),
(85,150,o),
(77,162,qs),
(73,168,o),
(77,173,q),
(79,178,o),
(84,187,o),
(79,191,qs),
(73,196,o),
(85,208,o),
(77,212,q),
(76,213,o),
(74,218,o),
(75,219,qs),
(81,227,o),
(81,233,qs),
(81,238,o),
(77,248,o),
(75,252,qs),
(73,257,o),
(74,270,o),
(76,272,qs),
(81,277,o),
(94,283,o),
(101,285,qs),
(105,287,o),
(114,285,o),
(118,285,qs),
(202,285,ls),
(207,285,o),
(218,285,o),
(222,288,qs),
(233,296,o),
(269,293,o),
(282,285,q),
(286,281,o),
(301,295,o),
(308,295,qs),
(310,295,o),
(331,292,o),
(332,291,qs),
(338,287,o),
(350,285,o),
(356,285,qs),
(411,285,ls),
(413,285,o),
(418,279,o),
(419,277,q),
(419,204,o),
(418,120,o),
(418,80,o),
(418,67,o),
(419,65,qs),
(426,52,o),
(424,32,o),
(428,9,qs),
(430,2,o),
(453,-2,o),
(453,14,qs),
(453,113,o),
(453,228,o),
(451,285,o),
(447,309,o),
(442,316,qs),
(439,321,o),
(428,319,o),
(423,319,qs),
(132,319,ls),
(129,319,o),
(127,325,o),
(129,327,qs),
(149,344,o),
(179,386,o),
(198,405,qs),
(216,423,ls),
(220,427,o),
(226,434,o),
(227,440,qs),
(229,446,o),
(243,447,o),
(243,456,q),
(250,461,o),
(290,503,o),
(342,560,o),
(390,613,o),
(404,628,qs),
(416,639,o),
(434,667,o),
(442,681,qs),
(447,692,o),
(420,708,o),
(409,708,qs),
(402,708,o),
(379,707,o),
(350,707,qs),
(346,707,o),
(336,708,o),
(333,706,qs),
(327,702,o),
(315,699,o),
(308,699,qs),
(91,699,ls),
(86,699,o),
(76,697,o),
(72,692,qs),
(68,686,o),
(60,680,qs),
(50,671,o),
(50,654,qs),
(49,337,ls),
(49,323,o),
(41,315,qs),
(40,314,o),
(40,308,o),
(41,307,qs),
(47,301,o),
(49,288,o),
(49,280,qs),
(49,130,ls),
(49,126,o),
(51,116,o),
(49,113,qs),
(46,109,o),
(43,93,o),
(41,56,o),
(41,20,qs),
(41,13,o),
(52,6,o),
(56,2,q),
(62,-2,o)
);
},
{
closed = 1;
nodes = (
(72,338,o),
(76,340,qs),
(83,345,o),
(74,356,o),
(78,360,qs),
(83,366,o),
(82,378,o),
(82,384,qs),
(84,650,ls),
(84,661,o),
(88,665,o),
(101,665,qs),
(214,665,ls),
(226,665,o),
(233,673,o),
(245,673,qs),
(281,673,o),
(353,674,o),
(388,674,qs),
(392,674,o),
(396,663,o),
(394,661,qs),
(385,652,o),
(349,613,o),
(319,576,o),
(317,569,q),
(317,565,o),
(310,559,o),
(306,557,qs),
(275,542,o),
(257,508,q),
(256,504,o),
(247,497,o),
(243,493,qs),
(231,481,o),
(208,457,o),
(196,445,qs),
(189,438,o),
(174,426,o),
(170,418,qs),
(167,409,o),
(149,402,o),
(149,391,q),
(132,374,o),
(98,339,o),
(81,322,qs),
(77,318,o)
);
},
{
closed = 1;
nodes = (
(287,138,o),
(287,145,qs),
(287,157,o),
(266,174,o),
(247,174,q),
(237,176,o),
(224,168,o),
(218,160,qs),
(210,149,o),
(218,137,q),
(226,130,o),
(245,113,o),
(255,113,qs),
(273,113,o)
);
},
{
closed = 1;
nodes = (
(242,142,qs),
(241,144,o),
(242,148,q),
(246,152,o),
(249,151,q),
(259,151,o),
(259,144,qs),
(259,143,o),
(257,135,o),
(252,135,qs),
(246,135,o)
);
},
{
closed = 1;
nodes = (
(284,836,o),
(281,832,qs),
(279,830,o),
(266,813,o),
(264,811,qs),
(262,808,o),
(255,797,o),
(253,796,qs),
(247,793,o),
(243,793,o),
(238,795,q),
(234,800,o),
(212,820,o),
(185,843,o),
(162,859,o),
(157,859,q),
(149,861,o),
(137,859,o),
(141,850,q),
(147,844,o),
(159,831,o),
(163,824,q),
(168,821,o),
(180,806,o),
(186,803,q),
(194,796,o),
(201,787,o),
(208,781,qs),
(216,774,o),
(232,760,o),
(236,749,qs),
(238,745,o),
(246,744,o),
(248,748,q),
(259,760,o),
(290,794,o),
(320,829,o),
(340,852,o),
(339,853,qs),
(337,855,o),
(331,860,o),
(329,860,q),
(324,862,o),
(317,860,q),
(303,853,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
178 175 171 137 48 5 2 7 14 1 4 2 115 81 11 3 9 3 202 200 192 3 10 9 4 76 76 1 8 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 6 0 7 7 6 114 0 4 2 3 3 4 114 0 9 3 10 10 9 114 0 2 5 1 3 9 2 3 105 12 1 10 11 1 8 10 8 102 0 1 1 37 77 0 7 7 0 96 0 0 0 37 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 6 0 7 7 6 114 0 4 2 3 3 4 114 0 9 3 10 3 9 10 128 0 2 5 1 3 9 2 3 105 12 1 10 11 1 8 10 8 102 0 1 1 37 77 0 7 7 0 96 0 0 0 37 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
196 195 182 181 195 205 196 205 190 189 181 194 182 194 169 166 165 160 101 99 92 90 85 83 62 61 38 33 28 26 13 8 22 
CALL[ ]	/* CallFunction */";
};
width = 493;
}
);
note = Rcaron;
unicode = 344;
},
{
glyphname = uni0156;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(74,20,o),
(74,30,qs),
(74,86,ls),
(74,97,o),
(82,123,o),
(85,150,o),
(77,162,qs),
(73,168,o),
(77,173,q),
(79,178,o),
(84,187,o),
(79,191,qs),
(73,196,o),
(85,208,o),
(77,212,q),
(76,213,o),
(74,218,o),
(75,219,qs),
(81,227,o),
(81,233,qs),
(81,238,o),
(77,248,o),
(75,252,qs),
(73,257,o),
(74,270,o),
(76,272,qs),
(81,277,o),
(94,283,o),
(101,285,qs),
(105,287,o),
(114,285,o),
(118,285,qs),
(202,285,ls),
(207,285,o),
(218,285,o),
(222,288,qs),
(233,296,o),
(269,293,o),
(282,285,q),
(286,281,o),
(301,295,o),
(308,295,qs),
(310,295,o),
(331,292,o),
(332,291,qs),
(338,287,o),
(350,285,o),
(356,285,qs),
(411,285,ls),
(413,285,o),
(418,279,o),
(419,277,q),
(419,204,o),
(418,120,o),
(418,80,o),
(418,67,o),
(419,65,qs),
(426,52,o),
(424,32,o),
(428,9,qs),
(430,2,o),
(453,-2,o),
(453,14,qs),
(453,113,o),
(453,228,o),
(451,285,o),
(447,309,o),
(442,316,qs),
(439,321,o),
(428,319,o),
(423,319,qs),
(132,319,ls),
(129,319,o),
(127,325,o),
(129,327,qs),
(149,344,o),
(179,386,o),
(198,405,qs),
(216,423,ls),
(220,427,o),
(226,434,o),
(227,440,qs),
(229,446,o),
(243,447,o),
(243,456,q),
(250,461,o),
(290,503,o),
(342,560,o),
(390,613,o),
(404,628,qs),
(416,639,o),
(434,667,o),
(442,681,qs),
(447,692,o),
(420,708,o),
(409,708,qs),
(402,708,o),
(379,707,o),
(350,707,qs),
(346,707,o),
(336,708,o),
(333,706,qs),
(327,702,o),
(315,699,o),
(308,699,qs),
(91,699,ls),
(86,699,o),
(76,697,o),
(72,692,qs),
(68,686,o),
(60,680,qs),
(50,671,o),
(50,654,qs),
(49,337,ls),
(49,323,o),
(41,315,qs),
(40,314,o),
(40,308,o),
(41,307,qs),
(47,301,o),
(49,288,o),
(49,280,qs),
(49,130,ls),
(49,126,o),
(51,116,o),
(49,113,qs),
(46,109,o),
(43,93,o),
(41,56,o),
(41,20,qs),
(41,13,o),
(52,6,o),
(56,2,q),
(62,-2,o)
);
},
{
closed = 1;
nodes = (
(72,338,o),
(76,340,qs),
(83,345,o),
(74,356,o),
(78,360,qs),
(83,366,o),
(82,378,o),
(82,384,qs),
(84,650,ls),
(84,661,o),
(88,665,o),
(101,665,qs),
(214,665,ls),
(226,665,o),
(233,673,o),
(245,673,qs),
(281,673,o),
(353,674,o),
(388,674,qs),
(392,674,o),
(396,663,o),
(394,661,qs),
(385,652,o),
(349,613,o),
(319,576,o),
(317,569,q),
(317,565,o),
(310,559,o),
(306,557,qs),
(275,542,o),
(257,508,q),
(256,504,o),
(247,497,o),
(243,493,qs),
(231,481,o),
(208,457,o),
(196,445,qs),
(189,438,o),
(174,426,o),
(170,418,qs),
(167,409,o),
(149,402,o),
(149,391,q),
(132,374,o),
(98,339,o),
(81,322,qs),
(77,318,o)
);
},
{
closed = 1;
nodes = (
(287,138,o),
(287,145,qs),
(287,157,o),
(266,174,o),
(247,174,q),
(237,176,o),
(224,168,o),
(218,160,qs),
(210,149,o),
(218,137,q),
(226,130,o),
(245,113,o),
(255,113,qs),
(273,113,o)
);
},
{
closed = 1;
nodes = (
(242,142,qs),
(241,144,o),
(242,148,q),
(246,152,o),
(249,151,q),
(259,151,o),
(259,144,qs),
(259,143,o),
(257,135,o),
(252,135,qs),
(246,135,o)
);
},
{
closed = 1;
nodes = (
(179,-201,o),
(181,-198,q),
(185,-198,o),
(202,-174,o),
(204,-172,q),
(213,-158,o),
(216,-143,o),
(223,-129,qs),
(229,-113,o),
(242,-102,qs),
(255,-91,o),
(259,-65,o),
(260,-48,qs),
(261,-37,o),
(254,-27,o),
(248,-31,q),
(243,-36,o),
(223,-51,o),
(221,-58,qs),
(218,-69,o),
(207,-91,o),
(201,-103,qs),
(193,-124,o),
(173,-159,o),
(159,-194,q),
(162,-199,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
178 175 171 137 48 5 2 7 14 1 4 2 115 81 11 3 9 3 202 200 192 3 10 9 4 76 218 76 2 8 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 6 0 7 7 6 114 0 4 2 3 3 4 114 0 9 3 10 10 9 114 0 2 5 1 3 9 2 3 105 12 1 10 11 1 8 10 8 102 0 1 1 37 77 0 7 7 0 96 0 0 0 37 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 6 0 7 7 6 114 0 4 2 3 3 4 114 0 9 3 10 3 9 10 128 0 2 5 1 3 9 2 3 105 12 1 10 11 1 8 10 8 102 0 1 1 37 77 0 7 7 0 96 0 0 0 37 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
196 195 182 181 195 205 196 205 190 189 181 194 182 194 169 166 165 160 101 99 92 90 85 83 62 61 38 33 28 26 13 8 22 
CALL[ ]	/* CallFunction */";
};
width = 493;
}
);
note = uni0156;
unicode = 342;
},
{
glyphname = uni0210;
layers = (
{
layerId = m01;
shapes = (
{
ref = R;
},
{
pos = (87,121);
ref = uni030F;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 2 
PUSHB[ ]	/* 1 value pushed */
121 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 493;
}
);
note = uni0210;
unicode = 528;
},
{
glyphname = uni1E58;
layers = (
{
layerId = m01;
shapes = (
{
ref = R;
},
{
pos = (167,116);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
116 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 493;
}
);
note = uni1E58;
unicode = 7768;
},
{
glyphname = uni1E5A;
layers = (
{
layerId = m01;
shapes = (
{
ref = R;
},
{
pos = (162,-114);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 493;
}
);
note = uni1E5A;
unicode = 7770;
},
{
glyphname = uni1E5C;
layers = (
{
layerId = m01;
shapes = (
{
ref = R;
},
{
pos = (162,-114);
ref = period;
},
{
pos = (68,550);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
550 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 493;
}
);
note = uni1E5C;
unicode = 7772;
},
{
glyphname = uni0212;
layers = (
{
layerId = m01;
shapes = (
{
ref = R;
},
{
pos = (136,118);
ref = uni0311;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
118 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 493;
}
);
note = uni0212;
unicode = 530;
},
{
glyphname = Rmacronbelow;
layers = (
{
layerId = m01;
shapes = (
{
ref = R;
},
{
pos = (52,-329);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-329 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 493;
}
);
note = Rmacronbelow;
unicode = 7774;
},
{
glyphname = uni024C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(76,20,o),
(76,30,qs),
(76,86,ls),
(76,97,o),
(84,123,o),
(87,150,o),
(79,162,qs),
(75,168,o),
(79,173,q),
(81,178,o),
(86,187,o),
(81,191,qs),
(75,196,o),
(87,208,o),
(79,212,q),
(78,213,o),
(76,218,o),
(77,219,qs),
(83,227,o),
(83,233,qs),
(83,238,o),
(79,248,o),
(77,252,qs),
(75,257,o),
(76,270,o),
(78,272,qs),
(83,277,o),
(96,283,o),
(103,285,qs),
(107,287,o),
(116,285,o),
(120,285,qs),
(204,285,ls),
(209,285,o),
(220,285,o),
(224,288,qs),
(235,296,o),
(271,293,o),
(284,285,q),
(288,281,o),
(303,295,o),
(310,295,qs),
(312,295,o),
(333,292,o),
(334,291,qs),
(340,287,o),
(352,285,o),
(358,285,qs),
(413,285,ls),
(415,285,o),
(420,279,o),
(421,277,q),
(421,204,o),
(420,120,o),
(420,80,o),
(420,67,o),
(421,65,qs),
(428,52,o),
(426,32,o),
(430,9,qs),
(432,2,o),
(455,-2,o),
(455,14,qs),
(455,113,o),
(455,228,o),
(453,285,o),
(449,309,o),
(444,316,qs),
(441,321,o),
(430,319,o),
(425,319,qs),
(134,319,ls),
(131,319,o),
(129,325,o),
(131,327,qs),
(151,344,o),
(181,386,o),
(200,405,qs),
(218,423,ls),
(222,427,o),
(228,434,o),
(229,440,qs),
(231,446,o),
(245,447,o),
(245,456,q),
(252,461,o),
(292,503,o),
(344,560,o),
(392,613,o),
(406,628,qs),
(418,639,o),
(436,667,o),
(444,681,qs),
(449,692,o),
(422,708,o),
(411,708,qs),
(404,708,o),
(381,707,o),
(352,707,qs),
(348,707,o),
(338,708,o),
(335,706,qs),
(329,702,o),
(317,699,o),
(310,699,qs),
(93,699,ls),
(88,699,o),
(78,697,o),
(74,692,qs),
(70,686,o),
(62,680,qs),
(52,671,o),
(52,654,qs),
(51,337,ls),
(51,323,o),
(43,315,q),
(36,315,ls),
(31,315,o),
(1,315,o),
(-3,316,qs),
(-16,321,o),
(-36,318,o),
(-48,310,qs),
(-58,305,o),
(-61,294,o),
(-48,286,q),
(-42,289,o),
(-32,283,o),
(-27,284,qs),
(-7,287,o),
(6,285,o),
(12,283,o),
(18,284,qs),
(23,285,o),
(46,285,o),
(51,285,q),
(51,284,o),
(51,280,qs),
(51,130,ls),
(51,126,o),
(53,116,o),
(51,113,qs),
(48,109,o),
(45,93,o),
(43,56,o),
(43,20,qs),
(43,13,o),
(54,6,o),
(58,2,q),
(64,-2,o)
);
},
{
closed = 1;
nodes = (
(74,338,o),
(78,340,qs),
(85,345,o),
(76,356,o),
(80,360,qs),
(85,366,o),
(84,378,o),
(84,384,qs),
(86,650,ls),
(86,661,o),
(90,665,o),
(103,665,qs),
(216,665,ls),
(228,665,o),
(235,673,o),
(247,673,qs),
(283,673,o),
(355,674,o),
(390,674,qs),
(394,674,o),
(398,663,o),
(396,661,qs),
(387,652,o),
(351,613,o),
(321,576,o),
(319,569,q),
(319,565,o),
(312,559,o),
(308,557,qs),
(277,542,o),
(259,508,q),
(258,504,o),
(249,497,o),
(245,493,qs),
(233,481,o),
(210,457,o),
(198,445,qs),
(191,438,o),
(176,426,o),
(172,418,qs),
(169,409,o),
(151,402,o),
(151,391,q),
(134,374,o),
(100,339,o),
(83,322,qs),
(79,318,o)
);
},
{
closed = 1;
nodes = (
(289,138,o),
(289,145,qs),
(289,157,o),
(268,174,o),
(249,174,q),
(239,176,o),
(226,168,o),
(220,160,qs),
(212,149,o),
(220,137,q),
(228,130,o),
(247,113,o),
(257,113,qs),
(275,113,o)
);
},
{
closed = 1;
nodes = (
(244,142,qs),
(243,144,o),
(244,148,q),
(248,152,o),
(251,151,q),
(261,151,o),
(261,144,qs),
(261,143,o),
(259,135,o),
(254,135,qs),
(248,135,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
194 191 187 153 64 5 1 9 23 1 0 6 131 97 20 11 4 11 0 218 216 208 3 12 11 4 76 92 1 10 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 8 2 9 9 8 114 0 6 1 0 0 6 114 0 11 0 12 12 11 114 4 1 1 7 5 2 0 11 1 0 105 14 1 12 13 1 10 12 10 102 0 3 3 37 77 0 9 9 2 96 0 2 2 37 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 8 2 9 9 8 114 0 6 1 0 0 6 114 0 11 0 12 0 11 12 128 4 1 1 7 5 2 0 11 1 0 105 14 1 12 13 1 10 12 10 102 0 3 3 37 77 0 9 9 2 96 0 2 2 37 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
212 211 198 197 211 221 212 221 206 205 197 210 198 210 185 182 181 176 117 115 108 106 101 99 78 77 85 41 78 30 15 8 26 
CALL[ ]	/* CallFunction */";
};
width = 495;
}
);
note = uni024C;
unicode = 588;
},
{
glyphname = uni2C64;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(41,20,l),
(41,20,l),
(41,14,o),
(42,3,o),
(44,0,qs),
(49,-7,o),
(43,-28,o),
(44,-38,qs),
(46,-63,o),
(60,-96,o),
(88,-98,qs),
(92,-98,o),
(97,-98,o),
(120,-97,qs),
(125,-97,o),
(155,-96,o),
(159,-98,q),
(175,-81,o),
(167,-67,o),
(145,-64,o),
(138,-66,qs),
(133,-67,o),
(110,-67,o),
(105,-67,qs),
(90,-68,o),
(77,-48,o),
(75,-17,o),
(75,13,o),
(73,23,q),
(74,27,o),
(74,30,qs),
(74,86,ls),
(74,97,o),
(82,123,o),
(85,150,o),
(77,162,qs),
(73,168,o),
(77,173,q),
(79,178,o),
(84,187,o),
(79,191,qs),
(73,196,o),
(85,208,o),
(77,212,q),
(76,213,o),
(74,218,o),
(75,219,qs),
(81,227,o),
(81,233,qs),
(81,238,o),
(77,248,o),
(75,252,qs),
(73,257,o),
(74,270,o),
(76,272,qs),
(81,277,o),
(94,283,o),
(101,285,qs),
(105,287,o),
(114,285,o),
(118,285,qs),
(202,285,ls),
(207,285,o),
(218,285,o),
(222,288,qs),
(233,296,o),
(269,293,o),
(282,285,q),
(286,281,o),
(301,295,o),
(308,295,qs),
(310,295,o),
(331,292,o),
(332,291,qs),
(338,287,o),
(350,285,o),
(356,285,qs),
(411,285,ls),
(413,285,o),
(418,279,o),
(419,277,q),
(419,204,o),
(418,120,o),
(418,80,o),
(418,67,o),
(419,65,qs),
(426,52,o),
(424,32,o),
(428,9,qs),
(430,2,o),
(453,-2,o),
(453,14,qs),
(453,113,o),
(453,228,o),
(451,285,o),
(447,309,o),
(442,316,qs),
(439,321,o),
(428,319,o),
(423,319,qs),
(132,319,ls),
(129,319,o),
(127,325,o),
(129,327,qs),
(149,344,o),
(179,386,o),
(198,405,qs),
(216,423,ls),
(220,427,o),
(226,434,o),
(227,440,qs),
(229,446,o),
(243,447,o),
(243,456,q),
(250,461,o),
(290,503,o),
(342,560,o),
(390,613,o),
(404,628,qs),
(416,639,o),
(434,667,o),
(442,681,qs),
(447,692,o),
(420,708,o),
(409,708,qs),
(402,708,o),
(379,707,o),
(350,707,qs),
(346,707,o),
(336,708,o),
(333,706,qs),
(327,702,o),
(315,699,o),
(308,699,qs),
(91,699,ls),
(86,699,o),
(76,697,o),
(72,692,qs),
(68,686,o),
(60,680,qs),
(50,671,o),
(50,654,qs),
(49,337,ls),
(49,323,o),
(41,315,qs),
(40,314,o),
(40,308,o),
(41,307,qs),
(47,301,o),
(49,288,o),
(49,280,qs),
(49,130,ls),
(49,126,o),
(51,116,o),
(49,113,qs),
(45,106,o),
(41,76,o),
(41,26,q),
(41,26,l),
(41,25,l)
);
},
{
closed = 1;
nodes = (
(72,338,o),
(76,340,qs),
(83,345,o),
(74,356,o),
(78,360,qs),
(83,366,o),
(82,378,o),
(82,384,qs),
(84,650,ls),
(84,661,o),
(88,665,o),
(101,665,qs),
(214,665,ls),
(226,665,o),
(233,673,o),
(245,673,qs),
(281,673,o),
(353,674,o),
(388,674,qs),
(392,674,o),
(396,663,o),
(394,661,qs),
(385,652,o),
(349,613,o),
(319,576,o),
(317,569,q),
(317,565,o),
(310,559,o),
(306,557,qs),
(275,542,o),
(257,508,q),
(256,504,o),
(247,497,o),
(243,493,qs),
(231,481,o),
(208,457,o),
(196,445,qs),
(189,438,o),
(174,426,o),
(170,418,qs),
(167,409,o),
(149,402,o),
(149,391,q),
(132,374,o),
(98,339,o),
(81,322,qs),
(77,318,o)
);
},
{
closed = 1;
nodes = (
(287,138,o),
(287,145,qs),
(287,157,o),
(266,174,o),
(247,174,q),
(237,176,o),
(224,168,o),
(218,160,qs),
(210,149,o),
(218,137,q),
(226,130,o),
(245,113,o),
(255,113,qs),
(273,113,o)
);
},
{
closed = 1;
nodes = (
(242,142,qs),
(241,144,o),
(242,148,q),
(246,152,o),
(249,151,q),
(259,151,o),
(259,144,qs),
(259,143,o),
(257,135,o),
(252,135,qs),
(246,135,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
204 201 197 163 45 5 2 9 11 1 4 2 112 78 8 3 11 3 228 226 218 3 12 11 73 1 6 10 5 76 4 1 10 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 8 0 9 9 8 114 0 4 2 3 3 4 114 0 11 3 12 12 11 114 0 2 5 1 3 11 2 3 105 14 1 12 13 1 10 6 12 10 106 0 6 0 7 6 7 99 0 1 1 37 77 0 9 9 0 96 0 0 0 37 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
0 8 0 9 9 8 114 0 4 2 3 3 4 114 0 11 3 12 3 11 12 128 0 2 5 1 3 11 2 3 105 14 1 12 13 1 10 6 12 10 106 0 6 0 7 6 7 99 0 1 1 37 77 0 9 9 0 96 0 0 0 37 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
222 221 208 207 221 231 222 231 216 215 207 220 208 220 195 192 191 186 148 142 137 134 98 96 89 87 82 80 59 58 35 30 25 23 15 8 22 
CALL[ ]	/* CallFunction */";
};
width = 493;
}
);
note = uni2C64;
unicode = 11364;
},
{
glyphname = S;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(41,105,o),
(41,65,o),
(41,34,o),
(42,31,qs),
(43,25,o),
(56,15,o),
(54,7,q),
(54,1,o),
(63,1,qs),
(107,0,o),
(127,1,o),
(130,2,qs),
(140,6,o),
(185,5,o),
(227,1,o),
(232,1,qs),
(274,0,o),
(368,1,o),
(410,1,qs),
(418,1,o),
(435,1,o),
(440,8,q),
(442,14,o),
(452,27,o),
(442,34,q),
(440,48,o),
(439,83,o),
(443,97,q),
(449,102,o),
(448,115,o),
(448,122,qs),
(449,169,o),
(449,287,o),
(448,334,qs),
(448,347,o),
(428,364,o),
(414,364,qs),
(380,364,o),
(330,369,o),
(291,369,o),
(271,361,qs),
(266,359,o),
(261,362,o),
(258,364,qs),
(255,367,o),
(222,364,o),
(214,364,qs),
(87,364,ls),
(80,364,o),
(66,376,o),
(68,380,qs),
(73,389,o),
(76,407,o),
(76,416,qs),
(76,425,o),
(75,444,o),
(75,453,qs),
(75,464,o),
(69,464,o),
(69,474,qs),
(69,477,o),
(75,483,o),
(71,487,q),
(69,488,o),
(67,495,o),
(68,496,qs),
(75,503,o),
(76,541,o),
(76,581,o),
(82,587,qs),
(87,594,o),
(83,602,q),
(78,608,o),
(76,618,o),
(82,625,qs),
(84,627,o),
(85,638,o),
(83,639,q),
(78,644,o),
(82,653,o),
(81,657,qs),
(80,661,o),
(77,667,o),
(84,667,qs),
(194,667,ls),
(200,667,o),
(231,665,o),
(241,668,q),
(248,663,o),
(252,663,q),
(254,659,o),
(264,650,o),
(269,646,qs),
(286,633,o),
(314,598,o),
(321,596,qs),
(333,592,o),
(369,567,o),
(375,554,qs),
(380,544,o),
(399,533,o),
(409,528,qs),
(431,517,o),
(450,513,o),
(448,538,qs),
(448,542,o),
(449,566,o),
(453,592,o),
(456,598,q),
(460,603,o),
(452,619,o),
(450,625,qs),
(449,628,o),
(456,633,o),
(453,638,qs),
(448,648,o),
(457,672,o),
(453,679,qs),
(447,692,o),
(441,696,o),
(430,696,qs),
(426,696,l),
(423,697,o),
(414,697,qs),
(324,697,o),
(208,697,o),
(141,697,o),
(110,696,o),
(100,694,o),
(98,692,qs),
(95,690,o),
(86,698,o),
(81,692,q),
(66,698,o),
(60,695,q),
(51,688,o),
(37,675,o),
(42,663,qs),
(48,650,o),
(47,622,o),
(43,603,qs),
(42,597,o),
(40,584,o),
(44,578,qs),
(55,562,o),
(45,546,qs),
(37,532,o),
(46,522,q),
(50,520,o),
(46,516,qs),
(42,513,o),
(41,503,o),
(41,498,qs),
(41,385,ls),
(41,372,o),
(44,356,o),
(51,346,qs),
(56,338,o),
(85,344,o),
(94,337,qs),
(96,336,o),
(104,335,o),
(105,336,qs),
(110,340,o),
(141,343,o),
(175,341,o),
(181,335,q),
(189,343,o),
(203,337,o),
(210,334,qs),
(214,333,o),
(223,332,o),
(225,330,qs),
(227,328,o),
(228,320,o),
(228,316,qs),
(228,218,ls),
(228,197,o),
(218,187,qs),
(213,183,o),
(202,183,qs),
(201,183,o),
(177,184,o),
(151,186,o),
(146,188,q),
(143,186,o),
(134,181,o),
(131,184,qs),
(122,192,o),
(105,190,o),
(93,190,qs),
(82,190,o),
(54,189,o),
(47,182,qs),
(40,175,o),
(41,151,o),
(41,141,qs),
(41,137,o)
);
},
{
closed = 1;
nodes = (
(422,624,o),
(423,597,o),
(422,559,q),
(412,562,o),
(378,588,o),
(339,622,o),
(304,654,o),
(292,664,q),
(345,664,o),
(398,661,o),
(411,661,qs),
(422,660,o),
(421,650,o),
(421,633,qs),
(421,629,o)
);
},
{
closed = 1;
nodes = (
(267,467,o),
(274,474,q),
(282,486,o),
(274,497,qs),
(268,505,o),
(255,513,o),
(245,511,q),
(226,511,o),
(205,494,o),
(205,482,qs),
(205,475,o),
(219,450,o),
(237,450,qs),
(248,450,o)
);
},
{
closed = 1;
nodes = (
(233,481,o),
(233,482,qs),
(233,489,o),
(243,489,q),
(246,490,o),
(250,486,q),
(252,482,o),
(250,480,q),
(247,473,o),
(240,473,qs),
(236,473,o)
);
},
{
closed = 1;
nodes = (
(75,151,o),
(79,160,o),
(90,160,qs),
(198,160,ls),
(210,160,o),
(227,158,o),
(245,158,qs),
(248,158,o),
(257,168,o),
(257,172,qs),
(258,183,o),
(253,194,o),
(256,220,qs),
(256,222,o),
(254,228,o),
(254,231,qs),
(254,324,ls),
(254,334,o),
(267,334,qs),
(351,333,ls),
(365,333,o),
(399,334,o),
(413,329,q),
(414,314,o),
(414,267,o),
(415,228,o),
(416,225,qs),
(421,212,o),
(424,181,o),
(416,171,qs),
(414,168,o),
(414,158,o),
(414,154,qs),
(414,32,ls),
(414,23,o),
(404,23,qs),
(392,23,o),
(347,22,o),
(296,23,o),
(255,26,o),
(249,29,q),
(247,31,o),
(240,30,o),
(237,30,qs),
(232,31,o),
(223,23,o),
(215,29,qs),
(212,31,o),
(177,32,o),
(133,31,o),
(98,29,o),
(94,29,q),
(84,26,o),
(75,36,o),
(75,43,qs),
(75,141,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHW[ ]	/* 49 values pushed */
64 1 5 4 209 198 82 3 14 5 229 131 2 15 14 140 1 13 15 146 1 7 13 156 1 2 6 277 270 266 21 4 0 3 9 1 19 0 238 1 16 19 9 76 30 1 3 1 75 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHW[ ]	/* 49 values pushed */
64 1 5 4 209 198 82 3 14 5 229 131 2 15 14 140 1 13 15 146 1 6 13 156 1 2 6 277 270 266 21 4 0 3 9 1 19 0 238 1 16 19 9 76 30 1 3 1 75 
ELSE[ ]	/* Else */
NPUSHW[ ]	/* 49 values pushed */
64 1 5 4 209 198 82 3 14 5 229 131 2 15 14 140 1 13 15 146 1 7 13 156 1 2 6 277 270 266 21 4 0 3 9 1 19 0 238 1 16 19 9 76 30 1 3 1 75 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 14 5 15 15 14 114 8 1 6 0 2 3 6 2 105 0 7 18 1 3 0 7 3 105 1 1 0 20 1 19 16 0 19 105 12 1 5 5 4 97 0 4 4 39 77 21 1 13 13 15 97 22 1 15 15 46 77 0 16 16 10 97 0 10 10 38 77 0 17 17 9 97 11 1 9 9 38 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
0 14 5 15 15 14 114 0 2 3 6 2 89 8 7 2 6 18 1 3 0 6 3 105 1 1 0 20 1 19 16 0 19 105 12 1 5 5 4 97 0 4 4 39 77 21 1 13 13 15 97 22 1 15 15 46 77 0 16 16 9 97 11 10 2 9 9 38 77 0 17 17 9 97 11 10 2 9 9 38 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
0 14 5 15 5 14 15 128 0 2 3 6 2 89 8 7 2 6 18 1 3 0 6 3 105 1 1 0 20 1 19 16 0 19 105 12 1 5 5 4 97 0 4 4 39 77 21 1 13 13 15 97 22 1 15 15 46 77 0 16 16 9 97 11 10 2 9 9 38 77 0 17 17 9 97 11 10 2 9 9 38 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
0 14 5 15 15 14 114 0 2 3 6 2 89 8 7 2 6 18 1 3 0 6 3 105 1 1 0 20 1 19 16 0 19 105 12 1 5 5 4 97 0 4 4 39 77 21 1 13 13 15 97 22 1 15 15 46 77 0 16 16 9 97 11 10 2 9 9 38 77 0 17 17 9 97 11 10 2 9 9 38 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
0 14 5 15 5 14 15 128 0 2 3 6 2 89 8 7 2 6 18 1 3 0 6 3 105 1 1 0 20 1 19 16 0 19 105 12 1 5 5 4 97 0 4 4 39 77 21 1 13 13 15 97 22 1 15 15 46 77 0 16 16 9 97 11 10 2 9 9 38 77 0 17 17 9 97 11 10 2 9 9 38 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
0 14 5 15 5 14 15 128 22 1 15 21 1 13 6 15 13 106 0 2 3 6 2 89 8 7 2 6 18 1 3 0 6 3 105 1 1 0 20 1 19 16 0 19 105 12 1 5 5 4 97 0 4 4 39 77 0 16 16 9 97 11 10 2 9 9 38 77 0 17 17 9 97 11 10 2 9 9 38 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 79 values pushed */
0 14 5 15 5 14 15 128 22 1 15 21 1 13 7 15 13 106 8 1 6 0 2 3 6 2 105 0 7 18 1 3 0 7 3 105 1 1 0 20 1 19 16 0 19 105 12 1 5 5 4 97 0 4 4 39 77 0 16 16 10 97 0 10 10 38 77 0 17 17 9 97 11 1 9 9 38 9 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 49 values pushed */
228 227 214 213 291 288 287 285 275 271 258 254 245 241 227 237 228 237 219 218 213 226 214 226 204 201 189 187 184 183 181 176 161 159 158 157 150 148 113 110 77 69 34 30 100 52 23 8 26 
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = S;
unicode = 83;
},
{
glyphname = Sacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = S;
},
{
pos = (163,143);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
143 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = Sacute;
unicode = 346;
},
{
glyphname = uni1E64;
layers = (
{
layerId = m01;
shapes = (
{
ref = S;
},
{
pos = (163,143);
ref = acutecomb;
},
{
pos = (90,117);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
143 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
117 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = uni1E64;
unicode = 7780;
},
{
glyphname = uniA78B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(72,500,qs),
(72,614,ls),
(72,620,o),
(72,647,o),
(72,674,o),
(71,680,qs),
(70,685,o),
(60,689,o),
(60,695,qs),
(60,703,o),
(44,704,o),
(42,696,qs),
(38,677,o),
(30,633,o),
(30,610,qs),
(30,583,o),
(33,563,o),
(36,552,o),
(39,529,o),
(39,500,qs),
(39,475,o),
(38,461,o),
(39,457,qs),
(44,433,o),
(52,431,o),
(56,431,qs),
(72,431,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 1 0 1 76 2 1 1 1 0 97 0 0 0 37 1 78 0 0 0 26 0 26 31 3 8 23 
CALL[ ]	/* CallFunction */";
};
width = 102;
}
);
note = uniA78B;
unicode = 42891;
},
{
glyphname = Scaron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(41,105,o),
(41,65,o),
(41,34,o),
(42,31,qs),
(43,25,o),
(56,15,o),
(54,7,q),
(54,1,o),
(63,1,qs),
(107,0,o),
(127,1,o),
(130,2,qs),
(140,6,o),
(185,5,o),
(227,1,o),
(232,1,qs),
(274,0,o),
(368,1,o),
(410,1,qs),
(418,1,o),
(435,1,o),
(440,8,q),
(442,14,o),
(452,27,o),
(442,34,q),
(440,48,o),
(439,83,o),
(443,97,q),
(449,102,o),
(448,115,o),
(448,122,qs),
(449,169,o),
(449,287,o),
(448,334,qs),
(448,347,o),
(428,364,o),
(414,364,qs),
(380,364,o),
(330,369,o),
(291,369,o),
(271,361,qs),
(266,359,o),
(261,362,o),
(258,364,qs),
(255,367,o),
(222,364,o),
(214,364,qs),
(87,364,ls),
(80,364,o),
(66,376,o),
(68,380,qs),
(73,389,o),
(76,407,o),
(76,416,qs),
(76,425,o),
(75,444,o),
(75,453,qs),
(75,464,o),
(69,464,o),
(69,474,qs),
(69,477,o),
(75,483,o),
(71,487,q),
(69,488,o),
(67,495,o),
(68,496,qs),
(75,503,o),
(76,541,o),
(76,581,o),
(82,587,qs),
(87,594,o),
(83,602,q),
(78,608,o),
(76,618,o),
(82,625,qs),
(84,627,o),
(85,638,o),
(83,639,q),
(78,644,o),
(82,653,o),
(81,657,qs),
(80,661,o),
(77,667,o),
(84,667,qs),
(194,667,ls),
(200,667,o),
(231,665,o),
(241,668,q),
(248,663,o),
(252,663,q),
(254,659,o),
(264,650,o),
(269,646,qs),
(286,633,o),
(314,598,o),
(321,596,qs),
(333,592,o),
(369,567,o),
(375,554,qs),
(380,544,o),
(399,533,o),
(409,528,qs),
(431,517,o),
(450,513,o),
(448,538,qs),
(448,542,o),
(449,566,o),
(453,592,o),
(456,598,q),
(460,603,o),
(452,619,o),
(450,625,qs),
(449,628,o),
(456,633,o),
(453,638,qs),
(448,648,o),
(457,672,o),
(453,679,qs),
(447,692,o),
(441,696,o),
(430,696,qs),
(426,696,l),
(423,697,o),
(414,697,qs),
(324,697,o),
(208,697,o),
(141,697,o),
(110,696,o),
(100,694,o),
(98,692,qs),
(95,690,o),
(86,698,o),
(81,692,q),
(66,698,o),
(60,695,q),
(51,688,o),
(37,675,o),
(42,663,qs),
(48,650,o),
(47,622,o),
(43,603,qs),
(42,597,o),
(40,584,o),
(44,578,qs),
(55,562,o),
(45,546,qs),
(37,532,o),
(46,522,q),
(50,520,o),
(46,516,qs),
(42,513,o),
(41,503,o),
(41,498,qs),
(41,385,ls),
(41,372,o),
(44,356,o),
(51,346,qs),
(56,338,o),
(85,344,o),
(94,337,qs),
(96,336,o),
(104,335,o),
(105,336,qs),
(110,340,o),
(141,343,o),
(175,341,o),
(181,335,q),
(189,343,o),
(203,337,o),
(210,334,qs),
(214,333,o),
(223,332,o),
(225,330,qs),
(227,328,o),
(228,320,o),
(228,316,qs),
(228,218,ls),
(228,197,o),
(218,187,qs),
(213,183,o),
(202,183,qs),
(201,183,o),
(177,184,o),
(151,186,o),
(146,188,q),
(143,186,o),
(134,181,o),
(131,184,qs),
(122,192,o),
(105,190,o),
(93,190,qs),
(82,190,o),
(54,189,o),
(47,182,qs),
(40,175,o),
(41,151,o),
(41,141,qs),
(41,137,o)
);
},
{
closed = 1;
nodes = (
(422,624,o),
(423,597,o),
(422,559,q),
(412,562,o),
(378,588,o),
(339,622,o),
(304,654,o),
(292,664,q),
(345,664,o),
(398,661,o),
(411,661,qs),
(422,660,o),
(421,650,o),
(421,633,qs),
(421,629,o)
);
},
{
closed = 1;
nodes = (
(267,467,o),
(274,474,q),
(282,486,o),
(274,497,qs),
(268,505,o),
(255,513,o),
(245,511,q),
(226,511,o),
(205,494,o),
(205,482,qs),
(205,475,o),
(219,450,o),
(237,450,qs),
(248,450,o)
);
},
{
closed = 1;
nodes = (
(233,481,o),
(233,482,qs),
(233,489,o),
(243,489,q),
(246,490,o),
(250,486,q),
(252,482,o),
(250,480,q),
(247,473,o),
(240,473,qs),
(236,473,o)
);
},
{
closed = 1;
nodes = (
(75,151,o),
(79,160,o),
(90,160,qs),
(198,160,ls),
(210,160,o),
(227,158,o),
(245,158,qs),
(248,158,o),
(257,168,o),
(257,172,qs),
(258,183,o),
(253,194,o),
(256,220,qs),
(256,222,o),
(254,228,o),
(254,231,qs),
(254,324,ls),
(254,334,o),
(267,334,qs),
(351,333,ls),
(365,333,o),
(399,334,o),
(413,329,q),
(414,314,o),
(414,267,o),
(415,228,o),
(416,225,qs),
(421,212,o),
(424,181,o),
(416,171,qs),
(414,168,o),
(414,158,o),
(414,154,qs),
(414,32,ls),
(414,23,o),
(404,23,qs),
(392,23,o),
(347,22,o),
(296,23,o),
(255,26,o),
(249,29,q),
(247,31,o),
(240,30,o),
(237,30,qs),
(232,31,o),
(223,23,o),
(215,29,qs),
(212,31,o),
(177,32,o),
(133,31,o),
(98,29,o),
(94,29,q),
(84,26,o),
(75,36,o),
(75,43,qs),
(75,141,ls)
);
},
{
closed = 1;
nodes = (
(284,836,o),
(281,832,qs),
(279,830,o),
(266,813,o),
(264,811,qs),
(262,808,o),
(255,797,o),
(253,796,qs),
(247,793,o),
(243,793,o),
(238,795,q),
(234,800,o),
(212,820,o),
(185,843,o),
(162,859,o),
(157,859,q),
(149,861,o),
(137,859,o),
(141,850,q),
(147,844,o),
(159,831,o),
(163,824,q),
(168,821,o),
(180,806,o),
(186,803,q),
(194,796,o),
(201,787,o),
(208,781,qs),
(216,774,o),
(232,760,o),
(236,749,qs),
(238,745,o),
(246,744,o),
(248,748,q),
(259,760,o),
(290,794,o),
(320,829,o),
(340,852,o),
(339,853,qs),
(337,855,o),
(331,860,o),
(329,860,q),
(324,862,o),
(317,860,q),
(303,853,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHW[ ]	/* 49 values pushed */
64 1 5 4 209 198 82 3 14 5 229 131 2 15 14 140 1 13 15 146 1 7 13 156 1 2 6 277 270 266 21 4 0 3 9 1 19 0 238 1 16 19 9 76 30 1 3 1 75 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHW[ ]	/* 49 values pushed */
64 1 5 4 209 198 82 3 14 5 229 131 2 15 14 140 1 13 15 146 1 6 13 156 1 2 6 277 270 266 21 4 0 3 9 1 19 0 238 1 16 19 9 76 30 1 3 1 75 
ELSE[ ]	/* Else */
NPUSHW[ ]	/* 49 values pushed */
64 1 5 4 209 198 82 3 14 5 229 131 2 15 14 140 1 13 15 146 1 7 13 156 1 2 6 277 270 266 21 4 0 3 9 1 19 0 238 1 16 19 9 76 30 1 3 1 75 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 14 5 15 15 14 114 8 1 6 0 2 3 6 2 105 0 7 18 1 3 0 7 3 105 1 1 0 20 1 19 16 0 19 105 12 1 5 5 4 97 0 4 4 39 77 21 1 13 13 15 97 22 1 15 15 46 77 0 16 16 10 97 0 10 10 38 77 0 17 17 9 97 11 1 9 9 38 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
0 14 5 15 15 14 114 0 2 3 6 2 89 8 7 2 6 18 1 3 0 6 3 105 1 1 0 20 1 19 16 0 19 105 12 1 5 5 4 97 0 4 4 39 77 21 1 13 13 15 97 22 1 15 15 46 77 0 16 16 9 97 11 10 2 9 9 38 77 0 17 17 9 97 11 10 2 9 9 38 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
0 14 5 15 5 14 15 128 0 2 3 6 2 89 8 7 2 6 18 1 3 0 6 3 105 1 1 0 20 1 19 16 0 19 105 12 1 5 5 4 97 0 4 4 39 77 21 1 13 13 15 97 22 1 15 15 46 77 0 16 16 9 97 11 10 2 9 9 38 77 0 17 17 9 97 11 10 2 9 9 38 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
0 14 5 15 15 14 114 0 2 3 6 2 89 8 7 2 6 18 1 3 0 6 3 105 1 1 0 20 1 19 16 0 19 105 12 1 5 5 4 97 0 4 4 39 77 21 1 13 13 15 97 22 1 15 15 46 77 0 16 16 9 97 11 10 2 9 9 38 77 0 17 17 9 97 11 10 2 9 9 38 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
0 14 5 15 5 14 15 128 0 2 3 6 2 89 8 7 2 6 18 1 3 0 6 3 105 1 1 0 20 1 19 16 0 19 105 12 1 5 5 4 97 0 4 4 39 77 21 1 13 13 15 97 22 1 15 15 46 77 0 16 16 9 97 11 10 2 9 9 38 77 0 17 17 9 97 11 10 2 9 9 38 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
0 14 5 15 5 14 15 128 22 1 15 21 1 13 6 15 13 106 0 2 3 6 2 89 8 7 2 6 18 1 3 0 6 3 105 1 1 0 20 1 19 16 0 19 105 12 1 5 5 4 97 0 4 4 39 77 0 16 16 9 97 11 10 2 9 9 38 77 0 17 17 9 97 11 10 2 9 9 38 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 79 values pushed */
0 14 5 15 5 14 15 128 22 1 15 21 1 13 7 15 13 106 8 1 6 0 2 3 6 2 105 0 7 18 1 3 0 7 3 105 1 1 0 20 1 19 16 0 19 105 12 1 5 5 4 97 0 4 4 39 77 0 16 16 10 97 0 10 10 38 77 0 17 17 9 97 11 1 9 9 38 9 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 49 values pushed */
228 227 214 213 291 288 287 285 275 271 258 254 245 241 227 237 228 237 219 218 213 226 214 226 204 201 189 187 184 183 181 176 161 159 158 157 150 148 113 110 77 69 34 30 100 52 23 8 26 
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = Scaron;
unicode = 352;
},
{
glyphname = uni1E66;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(41,105,o),
(41,65,o),
(41,34,o),
(42,31,qs),
(43,25,o),
(56,15,o),
(54,7,q),
(54,1,o),
(63,1,qs),
(107,0,o),
(127,1,o),
(130,2,qs),
(140,6,o),
(185,5,o),
(227,1,o),
(232,1,qs),
(274,0,o),
(368,1,o),
(410,1,qs),
(418,1,o),
(435,1,o),
(440,8,q),
(442,14,o),
(452,27,o),
(442,34,q),
(440,48,o),
(439,83,o),
(443,97,q),
(449,102,o),
(448,115,o),
(448,122,qs),
(449,169,o),
(449,287,o),
(448,334,qs),
(448,347,o),
(428,364,o),
(414,364,qs),
(380,364,o),
(330,369,o),
(291,369,o),
(271,361,qs),
(266,359,o),
(261,362,o),
(258,364,qs),
(255,367,o),
(222,364,o),
(214,364,qs),
(87,364,ls),
(80,364,o),
(66,376,o),
(68,380,qs),
(73,389,o),
(76,407,o),
(76,416,qs),
(76,425,o),
(75,444,o),
(75,453,qs),
(75,464,o),
(69,464,o),
(69,474,qs),
(69,477,o),
(75,483,o),
(71,487,q),
(69,488,o),
(67,495,o),
(68,496,qs),
(75,503,o),
(76,541,o),
(76,581,o),
(82,587,qs),
(87,594,o),
(83,602,q),
(78,608,o),
(76,618,o),
(82,625,qs),
(84,627,o),
(85,638,o),
(83,639,q),
(78,644,o),
(82,653,o),
(81,657,qs),
(80,661,o),
(77,667,o),
(84,667,qs),
(194,667,ls),
(200,667,o),
(231,665,o),
(241,668,q),
(248,663,o),
(252,663,q),
(254,659,o),
(264,650,o),
(269,646,qs),
(286,633,o),
(314,598,o),
(321,596,qs),
(333,592,o),
(369,567,o),
(375,554,qs),
(380,544,o),
(399,533,o),
(409,528,qs),
(431,517,o),
(450,513,o),
(448,538,qs),
(448,542,o),
(449,566,o),
(453,592,o),
(456,598,q),
(460,603,o),
(452,619,o),
(450,625,qs),
(449,628,o),
(456,633,o),
(453,638,qs),
(448,648,o),
(457,672,o),
(453,679,qs),
(447,692,o),
(441,696,o),
(430,696,qs),
(426,696,l),
(423,697,o),
(414,697,qs),
(324,697,o),
(208,697,o),
(141,697,o),
(110,696,o),
(100,694,o),
(98,692,qs),
(95,690,o),
(86,698,o),
(81,692,q),
(66,698,o),
(60,695,q),
(51,688,o),
(37,675,o),
(42,663,qs),
(48,650,o),
(47,622,o),
(43,603,qs),
(42,597,o),
(40,584,o),
(44,578,qs),
(55,562,o),
(45,546,qs),
(37,532,o),
(46,522,q),
(50,520,o),
(46,516,qs),
(42,513,o),
(41,503,o),
(41,498,qs),
(41,385,ls),
(41,372,o),
(44,356,o),
(51,346,qs),
(56,338,o),
(85,344,o),
(94,337,qs),
(96,336,o),
(104,335,o),
(105,336,qs),
(110,340,o),
(141,343,o),
(175,341,o),
(181,335,q),
(189,343,o),
(203,337,o),
(210,334,qs),
(214,333,o),
(223,332,o),
(225,330,qs),
(227,328,o),
(228,320,o),
(228,316,qs),
(228,218,ls),
(228,197,o),
(218,187,qs),
(213,183,o),
(202,183,qs),
(201,183,o),
(177,184,o),
(151,186,o),
(146,188,q),
(143,186,o),
(134,181,o),
(131,184,qs),
(122,192,o),
(105,190,o),
(93,190,qs),
(82,190,o),
(54,189,o),
(47,182,qs),
(40,175,o),
(41,151,o),
(41,141,qs),
(41,137,o)
);
},
{
closed = 1;
nodes = (
(422,624,o),
(423,597,o),
(422,559,q),
(412,562,o),
(378,588,o),
(339,622,o),
(304,654,o),
(292,664,q),
(345,664,o),
(398,661,o),
(411,661,qs),
(422,660,o),
(421,650,o),
(421,633,qs),
(421,629,o)
);
},
{
closed = 1;
nodes = (
(267,467,o),
(274,474,q),
(282,486,o),
(274,497,qs),
(268,505,o),
(255,513,o),
(245,511,q),
(226,511,o),
(205,494,o),
(205,482,qs),
(205,475,o),
(219,450,o),
(237,450,qs),
(248,450,o)
);
},
{
closed = 1;
nodes = (
(233,481,o),
(233,482,qs),
(233,489,o),
(243,489,q),
(246,490,o),
(250,486,q),
(252,482,o),
(250,480,q),
(247,473,o),
(240,473,qs),
(236,473,o)
);
},
{
closed = 1;
nodes = (
(75,151,o),
(79,160,o),
(90,160,qs),
(198,160,ls),
(210,160,o),
(227,158,o),
(245,158,qs),
(248,158,o),
(257,168,o),
(257,172,qs),
(258,183,o),
(253,194,o),
(256,220,qs),
(256,222,o),
(254,228,o),
(254,231,qs),
(254,324,ls),
(254,334,o),
(267,334,qs),
(351,333,ls),
(365,333,o),
(399,334,o),
(413,329,q),
(414,314,o),
(414,267,o),
(415,228,o),
(416,225,qs),
(421,212,o),
(424,181,o),
(416,171,qs),
(414,168,o),
(414,158,o),
(414,154,qs),
(414,32,ls),
(414,23,o),
(404,23,qs),
(392,23,o),
(347,22,o),
(296,23,o),
(255,26,o),
(249,29,q),
(247,31,o),
(240,30,o),
(237,30,qs),
(232,31,o),
(223,23,o),
(215,29,qs),
(212,31,o),
(177,32,o),
(133,31,o),
(98,29,o),
(94,29,q),
(84,26,o),
(75,36,o),
(75,43,qs),
(75,141,ls)
);
},
{
closed = 1;
nodes = (
(284,836,o),
(281,832,qs),
(279,830,o),
(266,813,o),
(264,811,qs),
(262,808,o),
(255,797,o),
(253,796,qs),
(247,793,o),
(243,793,o),
(238,795,q),
(234,800,o),
(212,820,o),
(185,843,o),
(162,859,o),
(157,859,q),
(149,861,o),
(137,859,o),
(141,850,q),
(147,844,o),
(159,831,o),
(163,824,q),
(168,821,o),
(180,806,o),
(186,803,q),
(194,796,o),
(201,787,o),
(208,781,qs),
(216,774,o),
(232,760,o),
(236,749,qs),
(238,745,o),
(246,744,o),
(248,748,q),
(259,760,o),
(290,794,o),
(320,829,o),
(340,852,o),
(339,853,qs),
(337,855,o),
(331,860,o),
(329,860,q),
(324,862,o),
(317,860,q),
(303,853,o)
);
},
{
closed = 1;
nodes = (
(273,938,o),
(280,951,qs),
(286,962,o),
(274,971,q),
(268,974,o),
(254,981,o),
(249,985,qs),
(242,990,o),
(222,983,o),
(213,976,q),
(199,969,o),
(195,940,o),
(197,934,qs),
(200,926,o),
(223,914,o),
(237,914,qs),
(256,914,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHW[ ]	/* 53 values pushed */
64 1 5 4 209 198 82 3 14 5 229 131 2 15 14 140 1 13 15 146 1 7 13 156 1 2 6 277 270 266 21 4 0 3 9 1 19 0 238 1 16 19 9 76 30 1 3 1 75 342 1 21 74 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHW[ ]	/* 53 values pushed */
64 1 5 4 209 198 82 3 14 5 229 131 2 15 14 140 1 13 15 146 1 6 13 156 1 2 6 277 270 266 21 4 0 3 9 1 19 0 238 1 16 19 9 76 30 1 3 1 75 342 1 21 74 
ELSE[ ]	/* Else */
NPUSHW[ ]	/* 53 values pushed */
64 1 5 4 209 198 82 3 14 5 229 131 2 15 14 140 1 13 15 146 1 7 13 156 1 2 6 277 270 266 21 4 0 3 9 1 19 0 238 1 16 19 9 76 30 1 3 1 75 342 1 21 74 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 86 values pushed */
24 1 21 4 21 133 0 14 5 15 15 14 114 8 1 6 0 2 3 6 2 105 0 7 18 1 3 0 7 3 105 1 1 0 20 1 19 16 0 19 105 12 1 5 5 4 97 0 4 4 39 77 22 1 13 13 15 97 23 1 15 15 46 77 0 16 16 10 97 0 10 10 38 77 0 17 17 9 97 11 1 9 9 38 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 88 values pushed */
24 1 21 4 21 133 0 14 5 15 15 14 114 0 2 3 6 2 89 8 7 2 6 18 1 3 0 6 3 105 1 1 0 20 1 19 16 0 19 105 12 1 5 5 4 97 0 4 4 39 77 22 1 13 13 15 97 23 1 15 15 46 77 0 16 16 9 97 11 10 2 9 9 38 77 0 17 17 9 97 11 10 2 9 9 38 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 89 values pushed */
24 1 21 4 21 133 0 14 5 15 5 14 15 128 0 2 3 6 2 89 8 7 2 6 18 1 3 0 6 3 105 1 1 0 20 1 19 16 0 19 105 12 1 5 5 4 97 0 4 4 39 77 22 1 13 13 15 97 23 1 15 15 46 77 0 16 16 9 97 11 10 2 9 9 38 77 0 17 17 9 97 11 10 2 9 9 38 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 88 values pushed */
24 1 21 4 21 133 0 14 5 15 15 14 114 0 2 3 6 2 89 8 7 2 6 18 1 3 0 6 3 105 1 1 0 20 1 19 16 0 19 105 12 1 5 5 4 97 0 4 4 39 77 22 1 13 13 15 97 23 1 15 15 46 77 0 16 16 9 97 11 10 2 9 9 38 77 0 17 17 9 97 11 10 2 9 9 38 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 89 values pushed */
24 1 21 4 21 133 0 14 5 15 5 14 15 128 0 2 3 6 2 89 8 7 2 6 18 1 3 0 6 3 105 1 1 0 20 1 19 16 0 19 105 12 1 5 5 4 97 0 4 4 39 77 22 1 13 13 15 97 23 1 15 15 46 77 0 16 16 9 97 11 10 2 9 9 38 77 0 17 17 9 97 11 10 2 9 9 38 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 87 values pushed */
24 1 21 4 21 133 0 14 5 15 5 14 15 128 23 1 15 22 1 13 6 15 13 106 0 2 3 6 2 89 8 7 2 6 18 1 3 0 6 3 105 1 1 0 20 1 19 16 0 19 105 12 1 5 5 4 97 0 4 4 39 77 0 16 16 9 97 11 10 2 9 9 38 77 0 17 17 9 97 11 10 2 9 9 38 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 85 values pushed */
24 1 21 4 21 133 0 14 5 15 5 14 15 128 23 1 15 22 1 13 7 15 13 106 8 1 6 0 2 3 6 2 105 0 7 18 1 3 0 7 3 105 1 1 0 20 1 19 16 0 19 105 12 1 5 5 4 97 0 4 4 39 77 0 16 16 10 97 0 10 10 38 77 0 17 17 9 97 11 1 9 9 38 9 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 55 values pushed */
340 339 228 227 214 213 339 355 340 355 291 288 287 285 275 271 258 254 245 241 227 237 228 237 219 218 213 226 214 226 204 201 189 187 184 183 181 176 161 159 158 157 150 148 113 110 77 69 34 30 100 52 25 8 26 
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = uni1E66;
unicode = 7782;
},
{
glyphname = Scedilla;
layers = (
{
layerId = m01;
shapes = (
{
ref = S;
},
{
pos = (187,-6);
ref = uni0327;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
-6 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = Scedilla;
unicode = 350;
},
{
glyphname = Scircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = S;
},
{
pos = (104,131);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
131 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = Scircumflex;
unicode = 348;
},
{
glyphname = uni0218;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(41,105,o),
(41,65,o),
(41,34,o),
(42,31,qs),
(43,25,o),
(56,15,o),
(54,7,q),
(54,1,o),
(63,1,qs),
(107,0,o),
(127,1,o),
(130,2,qs),
(140,6,o),
(185,5,o),
(227,1,o),
(232,1,qs),
(274,0,o),
(368,1,o),
(410,1,qs),
(418,1,o),
(435,1,o),
(440,8,q),
(442,14,o),
(452,27,o),
(442,34,q),
(440,48,o),
(439,83,o),
(443,97,q),
(449,102,o),
(448,115,o),
(448,122,qs),
(449,169,o),
(449,287,o),
(448,334,qs),
(448,347,o),
(428,364,o),
(414,364,qs),
(380,364,o),
(330,369,o),
(291,369,o),
(271,361,qs),
(266,359,o),
(261,362,o),
(258,364,qs),
(255,367,o),
(222,364,o),
(214,364,qs),
(87,364,ls),
(80,364,o),
(66,376,o),
(68,380,qs),
(73,389,o),
(76,407,o),
(76,416,qs),
(76,425,o),
(75,444,o),
(75,453,qs),
(75,464,o),
(69,464,o),
(69,474,qs),
(69,477,o),
(75,483,o),
(71,487,q),
(69,488,o),
(67,495,o),
(68,496,qs),
(75,503,o),
(76,541,o),
(76,581,o),
(82,587,qs),
(87,594,o),
(83,602,q),
(78,608,o),
(76,618,o),
(82,625,qs),
(84,627,o),
(85,638,o),
(83,639,q),
(78,644,o),
(82,653,o),
(81,657,qs),
(80,661,o),
(77,667,o),
(84,667,qs),
(194,667,ls),
(200,667,o),
(231,665,o),
(241,668,q),
(248,663,o),
(252,663,q),
(254,659,o),
(264,650,o),
(269,646,qs),
(286,633,o),
(314,598,o),
(321,596,qs),
(333,592,o),
(369,567,o),
(375,554,qs),
(380,544,o),
(399,533,o),
(409,528,qs),
(431,517,o),
(450,513,o),
(448,538,qs),
(448,542,o),
(449,566,o),
(453,592,o),
(456,598,q),
(460,603,o),
(452,619,o),
(450,625,qs),
(449,628,o),
(456,633,o),
(453,638,qs),
(448,648,o),
(457,672,o),
(453,679,qs),
(447,692,o),
(441,696,o),
(430,696,qs),
(426,696,l),
(423,697,o),
(414,697,qs),
(324,697,o),
(208,697,o),
(141,697,o),
(110,696,o),
(100,694,o),
(98,692,qs),
(95,690,o),
(86,698,o),
(81,692,q),
(66,698,o),
(60,695,q),
(51,688,o),
(37,675,o),
(42,663,qs),
(48,650,o),
(47,622,o),
(43,603,qs),
(42,597,o),
(40,584,o),
(44,578,qs),
(55,562,o),
(45,546,qs),
(37,532,o),
(46,522,q),
(50,520,o),
(46,516,qs),
(42,513,o),
(41,503,o),
(41,498,qs),
(41,385,ls),
(41,372,o),
(44,356,o),
(51,346,qs),
(56,338,o),
(85,344,o),
(94,337,qs),
(96,336,o),
(104,335,o),
(105,336,qs),
(110,340,o),
(141,343,o),
(175,341,o),
(181,335,q),
(189,343,o),
(203,337,o),
(210,334,qs),
(214,333,o),
(223,332,o),
(225,330,qs),
(227,328,o),
(228,320,o),
(228,316,qs),
(228,218,ls),
(228,197,o),
(218,187,qs),
(213,183,o),
(202,183,qs),
(201,183,o),
(177,184,o),
(151,186,o),
(146,188,q),
(143,186,o),
(134,181,o),
(131,184,qs),
(122,192,o),
(105,190,o),
(93,190,qs),
(82,190,o),
(54,189,o),
(47,182,qs),
(40,175,o),
(41,151,o),
(41,141,qs),
(41,137,o)
);
},
{
closed = 1;
nodes = (
(422,624,o),
(423,597,o),
(422,559,q),
(412,562,o),
(378,588,o),
(339,622,o),
(304,654,o),
(292,664,q),
(345,664,o),
(398,661,o),
(411,661,qs),
(422,660,o),
(421,650,o),
(421,633,qs),
(421,629,o)
);
},
{
closed = 1;
nodes = (
(267,467,o),
(274,474,q),
(282,486,o),
(274,497,qs),
(268,505,o),
(255,513,o),
(245,511,q),
(226,511,o),
(205,494,o),
(205,482,qs),
(205,475,o),
(219,450,o),
(237,450,qs),
(248,450,o)
);
},
{
closed = 1;
nodes = (
(233,481,o),
(233,482,qs),
(233,489,o),
(243,489,q),
(246,490,o),
(250,486,q),
(252,482,o),
(250,480,q),
(247,473,o),
(240,473,qs),
(236,473,o)
);
},
{
closed = 1;
nodes = (
(75,151,o),
(79,160,o),
(90,160,qs),
(198,160,ls),
(210,160,o),
(227,158,o),
(245,158,qs),
(248,158,o),
(257,168,o),
(257,172,qs),
(258,183,o),
(253,194,o),
(256,220,qs),
(256,222,o),
(254,228,o),
(254,231,qs),
(254,324,ls),
(254,334,o),
(267,334,qs),
(351,333,ls),
(365,333,o),
(399,334,o),
(413,329,q),
(414,314,o),
(414,267,o),
(415,228,o),
(416,225,qs),
(421,212,o),
(424,181,o),
(416,171,qs),
(414,168,o),
(414,158,o),
(414,154,qs),
(414,32,ls),
(414,23,o),
(404,23,qs),
(392,23,o),
(347,22,o),
(296,23,o),
(255,26,o),
(249,29,q),
(247,31,o),
(240,30,o),
(237,30,qs),
(232,31,o),
(223,23,o),
(215,29,qs),
(212,31,o),
(177,32,o),
(133,31,o),
(98,29,o),
(94,29,q),
(84,26,o),
(75,36,o),
(75,43,qs),
(75,141,ls)
);
},
{
closed = 1;
nodes = (
(183,-201,o),
(185,-198,q),
(189,-198,o),
(206,-174,o),
(208,-172,q),
(217,-158,o),
(220,-143,o),
(227,-129,qs),
(233,-113,o),
(246,-102,qs),
(259,-91,o),
(263,-65,o),
(264,-48,qs),
(265,-37,o),
(258,-27,o),
(252,-31,q),
(247,-36,o),
(227,-51,o),
(225,-58,qs),
(222,-69,o),
(211,-91,o),
(205,-103,qs),
(197,-124,o),
(177,-159,o),
(163,-194,q),
(166,-199,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHW[ ]	/* 53 values pushed */
64 1 5 4 209 198 82 3 14 5 229 131 2 15 14 140 1 13 15 146 1 7 13 156 1 2 6 277 270 266 21 4 0 3 9 1 19 0 238 1 16 19 9 76 30 1 3 1 75 306 1 9 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHW[ ]	/* 53 values pushed */
64 1 5 4 209 198 82 3 14 5 229 131 2 15 14 140 1 13 15 146 1 6 13 156 1 2 6 277 270 266 21 4 0 3 9 1 19 0 238 1 16 19 9 76 30 1 3 1 75 306 1 9 73 
ELSE[ ]	/* Else */
NPUSHW[ ]	/* 53 values pushed */
64 1 5 4 209 198 82 3 14 5 229 131 2 15 14 140 1 13 15 146 1 7 13 156 1 2 6 277 270 266 21 4 0 3 9 1 19 0 238 1 16 19 9 76 30 1 3 1 75 306 1 9 73 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 14 5 15 15 14 114 8 1 6 0 2 3 6 2 105 0 7 18 1 3 0 7 3 105 1 1 0 20 1 19 16 0 19 105 12 1 5 5 4 97 0 4 4 39 77 21 1 13 13 15 97 22 1 15 15 46 77 0 16 16 10 97 0 10 10 38 77 0 17 17 9 97 11 1 9 9 38 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
0 14 5 15 15 14 114 0 2 3 6 2 89 8 7 2 6 18 1 3 0 6 3 105 1 1 0 20 1 19 16 0 19 105 12 1 5 5 4 97 0 4 4 39 77 21 1 13 13 15 97 22 1 15 15 46 77 0 16 16 9 97 11 10 2 9 9 38 77 0 17 17 9 97 11 10 2 9 9 38 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
0 14 5 15 5 14 15 128 0 2 3 6 2 89 8 7 2 6 18 1 3 0 6 3 105 1 1 0 20 1 19 16 0 19 105 12 1 5 5 4 97 0 4 4 39 77 21 1 13 13 15 97 22 1 15 15 46 77 0 16 16 9 97 11 10 2 9 9 38 77 0 17 17 9 97 11 10 2 9 9 38 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
0 14 5 15 15 14 114 0 2 3 6 2 89 8 7 2 6 18 1 3 0 6 3 105 1 1 0 20 1 19 16 0 19 105 12 1 5 5 4 97 0 4 4 39 77 21 1 13 13 15 97 22 1 15 15 46 77 0 16 16 9 97 11 10 2 9 9 38 77 0 17 17 9 97 11 10 2 9 9 38 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
0 14 5 15 5 14 15 128 0 2 3 6 2 89 8 7 2 6 18 1 3 0 6 3 105 1 1 0 20 1 19 16 0 19 105 12 1 5 5 4 97 0 4 4 39 77 21 1 13 13 15 97 22 1 15 15 46 77 0 16 16 9 97 11 10 2 9 9 38 77 0 17 17 9 97 11 10 2 9 9 38 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
0 14 5 15 5 14 15 128 22 1 15 21 1 13 6 15 13 106 0 2 3 6 2 89 8 7 2 6 18 1 3 0 6 3 105 1 1 0 20 1 19 16 0 19 105 12 1 5 5 4 97 0 4 4 39 77 0 16 16 9 97 11 10 2 9 9 38 77 0 17 17 9 97 11 10 2 9 9 38 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 79 values pushed */
0 14 5 15 5 14 15 128 22 1 15 21 1 13 7 15 13 106 8 1 6 0 2 3 6 2 105 0 7 18 1 3 0 7 3 105 1 1 0 20 1 19 16 0 19 105 12 1 5 5 4 97 0 4 4 39 77 0 16 16 10 97 0 10 10 38 77 0 17 17 9 97 11 1 9 9 38 9 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 49 values pushed */
228 227 214 213 291 288 287 285 275 271 258 254 245 241 227 237 228 237 219 218 213 226 214 226 204 201 189 187 184 183 181 176 161 159 158 157 150 148 113 110 77 69 34 30 100 52 23 8 26 
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = uni0218;
unicode = 536;
},
{
glyphname = uni1E60;
layers = (
{
layerId = m01;
shapes = (
{
ref = S;
},
{
pos = (167,116);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
116 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = uni1E60;
unicode = 7776;
},
{
glyphname = uni1E62;
layers = (
{
layerId = m01;
shapes = (
{
ref = S;
},
{
pos = (166,-114);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = uni1E62;
unicode = 7778;
},
{
glyphname = uni1E68;
layers = (
{
layerId = m01;
shapes = (
{
ref = S;
},
{
pos = (166,-114);
ref = period;
},
{
pos = (167,116);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
116 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = uni1E68;
unicode = 7784;
},
{
glyphname = uni1E9E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(82,29,o),
(89,66,o),
(89,95,o),
(85,95,q),
(84,100,o),
(86,130,o),
(86,140,qs),
(86,145,o),
(90,169,o),
(86,174,qs),
(83,178,o),
(86,200,o),
(86,203,qs),
(86,223,o),
(93,236,o),
(87,245,qs),
(81,253,o),
(86,281,o),
(86,296,qs),
(86,301,o),
(90,311,o),
(86,314,qs),
(82,318,o),
(84,327,o),
(85,331,qs),
(90,345,o),
(92,366,o),
(91,385,qs),
(91,390,o),
(82,418,o),
(86,422,qs),
(91,427,o),
(85,437,o),
(85,442,qs),
(85,445,o),
(91,468,o),
(88,472,qs),
(80,485,o),
(85,512,o),
(85,512,q),
(80,519,o),
(79,558,o),
(81,600,o),
(81,611,qs),
(81,624,o),
(83,655,o),
(80,664,q),
(307,664,ls),
(312,664,o),
(322,667,o),
(326,671,q),
(333,672,o),
(348,673,o),
(355,673,qs),
(368,673,o),
(377,669,qs),
(381,667,o),
(389,665,o),
(392,664,q),
(389,658,o),
(386,654,o),
(379,647,q),
(369,641,o),
(357,629,o),
(357,619,qs),
(357,598,o),
(338,588,q),
(335,587,o),
(337,575,o),
(334,573,qs),
(325,567,o),
(322,561,qs),
(298,519,o),
(264,469,o),
(238,439,o),
(217,414,o),
(205,396,qs),
(201,389,o),
(201,383,qs),
(201,376,o),
(208,367,o),
(208,366,q),
(224,348,o),
(276,283,o),
(306,245,qs),
(310,241,o),
(307,235,o),
(320,227,qs),
(322,226,o),
(324,219,o),
(327,218,qs),
(332,217,o),
(337,199,o),
(343,197,qs),
(361,192,o),
(379,167,o),
(390,143,o),
(395,136,qs),
(409,119,o),
(433,102,o),
(440,79,qs),
(443,70,o),
(452,63,o),
(468,50,o),
(480,32,q),
(373,32,ls),
(370,32,o),
(335,31,o),
(289,31,o),
(248,30,o),
(239,30,qs),
(226,30,o),
(218,38,o),
(204,38,qs),
(192,38,o),
(161,30,o),
(158,28,qs),
(149,20,o),
(172,-1,o),
(180,-1,qs),
(428,-1,ls),
(454,-1,o),
(500,2,o),
(514,2,qs),
(523,2,o),
(531,19,o),
(531,24,qs),
(531,32,o),
(519,46,q),
(509,55,o),
(465,105,o),
(438,139,qs),
(434,144,o),
(409,176,o),
(379,212,o),
(354,241,o),
(349,243,qs),
(340,247,o),
(332,276,o),
(321,278,qs),
(312,280,o),
(309,293,o),
(305,297,qs),
(287,320,o),
(267,349,o),
(250,367,q),
(239,383,o),
(241,385,qs),
(256,400,o),
(305,468,o),
(357,549,o),
(401,621,o),
(412,641,qs),
(421,661,o),
(432,670,o),
(432,683,qs),
(432,700,o),
(414,700,qs),
(66,700,l),
(59,699,o),
(57,694,o),
(54,692,qs),
(47,688,o),
(40,664,o),
(40,649,qs),
(40,635,o),
(44,605,o),
(47,594,qs),
(54,569,o),
(54,542,qs),
(54,415,ls),
(54,407,o),
(56,386,o),
(56,377,qs),
(56,372,o),
(55,364,o),
(54,361,qs),
(49,342,o),
(45,301,o),
(45,281,qs),
(45,260,o),
(47,219,o),
(47,199,q),
(51,169,o),
(50,98,o),
(51,28,o),
(56,0,q),
(67,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
174 156 150 147 39 4 6 2 5 1 76 128 1 5 1 75 0 4 0 5 5 4 114 0 2 5 3 3 2 114 0 5 5 0 96 0 0 0 37 77 0 3 3 1 98 7 6 2 1 1 38 1 78 0 0 0 187 0 187 140 138 135 132 82 75 74 72 67 62 30 27 8 8 22 
CALL[ ]	/* CallFunction */";
};
width = 531;
}
);
note = uni1E9E;
unicode = 7838;
},
{
glyphname = uniA7A8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(57,105,o),
(57,65,o),
(57,34,o),
(58,31,qs),
(59,25,o),
(72,15,o),
(70,7,q),
(70,1,o),
(79,1,qs),
(123,0,o),
(143,1,o),
(146,2,qs),
(156,6,o),
(201,5,o),
(243,1,o),
(248,1,qs),
(290,0,o),
(384,1,o),
(426,1,qs),
(434,1,o),
(451,1,o),
(456,8,q),
(458,14,o),
(468,27,o),
(458,34,q),
(456,48,o),
(455,83,o),
(459,97,q),
(465,102,o),
(464,115,o),
(464,122,qs),
(465,169,o),
(465,287,o),
(464,334,qs),
(464,347,o),
(444,364,o),
(430,364,qs),
(391,364,o),
(338,370,o),
(315,368,q),
(357,391,o),
(448,445,o),
(510,483,q),
(528,489,o),
(536,504,qs),
(542,514,o),
(538,522,q),
(534,525,o),
(512,520,o),
(489,505,qs),
(483,501,o),
(451,480,o),
(445,477,qs),
(414,457,o),
(362,425,o),
(305,390,o),
(265,366,q),
(257,366,o),
(236,364,o),
(230,364,qs),
(103,364,ls),
(96,364,o),
(82,376,o),
(84,380,qs),
(89,389,o),
(92,407,o),
(92,416,qs),
(92,425,o),
(91,444,o),
(91,453,qs),
(91,464,o),
(85,464,o),
(85,474,qs),
(85,477,o),
(91,483,o),
(87,487,q),
(85,488,o),
(83,495,o),
(84,496,qs),
(91,503,o),
(92,541,o),
(92,581,o),
(98,587,qs),
(103,594,o),
(99,602,q),
(94,608,o),
(92,618,o),
(98,625,qs),
(100,627,o),
(101,638,o),
(99,639,q),
(94,644,o),
(98,653,o),
(97,657,qs),
(96,661,o),
(93,667,o),
(100,667,qs),
(210,667,ls),
(216,667,o),
(247,665,o),
(257,668,q),
(264,663,o),
(268,663,q),
(270,659,o),
(280,650,o),
(285,646,qs),
(302,633,o),
(330,598,o),
(337,596,qs),
(349,592,o),
(385,567,o),
(391,554,qs),
(396,544,o),
(415,533,o),
(425,528,qs),
(447,517,o),
(466,513,o),
(464,538,qs),
(464,542,o),
(465,566,o),
(469,592,o),
(472,598,q),
(476,603,o),
(468,619,o),
(466,625,qs),
(465,628,o),
(472,633,o),
(469,638,qs),
(464,648,o),
(473,672,o),
(469,679,qs),
(463,692,o),
(457,696,o),
(446,696,qs),
(442,696,l),
(439,697,o),
(430,697,qs),
(340,697,o),
(224,697,o),
(157,697,o),
(126,696,o),
(116,694,o),
(114,692,qs),
(111,690,o),
(102,698,o),
(97,692,q),
(82,698,o),
(76,695,q),
(67,688,o),
(53,675,o),
(58,663,qs),
(64,650,o),
(63,622,o),
(59,603,qs),
(58,597,o),
(56,584,o),
(60,578,qs),
(71,562,o),
(61,546,qs),
(53,532,o),
(62,522,q),
(66,520,o),
(62,516,qs),
(58,513,o),
(57,503,o),
(57,498,qs),
(57,385,ls),
(57,372,o),
(60,356,o),
(67,346,qs),
(72,338,o),
(101,344,o),
(110,337,qs),
(112,336,o),
(120,335,o),
(121,336,qs),
(126,340,o),
(157,343,o),
(191,341,o),
(197,335,q),
(203,342,o),
(215,339,o),
(221,336,q),
(221,336,l),
(217,332,o),
(197,320,o),
(189,315,q),
(179,311,o),
(139,290,o),
(93,265,o),
(54,244,o),
(44,238,qs),
(0,212,o),
(0,194,qs),
(0,182,o),
(17,187,o),
(24,189,q),
(39,200,o),
(64,208,o),
(88,220,o),
(100,235,q),
(110,236,o),
(146,257,o),
(181,283,o),
(187,289,q),
(195,290,o),
(227,307,o),
(244,317,q),
(244,317,o),
(244,316,qs),
(244,218,ls),
(244,197,o),
(234,187,qs),
(229,183,o),
(218,183,qs),
(217,183,o),
(193,184,o),
(167,186,o),
(162,188,q),
(159,186,o),
(150,181,o),
(147,184,qs),
(138,192,o),
(121,190,o),
(109,190,qs),
(98,190,o),
(70,189,o),
(63,182,qs),
(56,175,o),
(57,151,o),
(57,141,qs),
(57,137,o)
);
},
{
closed = 1;
nodes = (
(438,624,o),
(439,597,o),
(438,559,q),
(428,562,o),
(394,588,o),
(355,622,o),
(320,654,o),
(308,664,q),
(361,664,o),
(414,661,o),
(427,661,qs),
(438,660,o),
(437,650,o),
(437,633,qs),
(437,629,o)
);
},
{
closed = 1;
nodes = (
(283,467,o),
(290,474,q),
(298,486,o),
(290,497,qs),
(284,505,o),
(271,513,o),
(261,511,q),
(242,511,o),
(221,494,o),
(221,482,qs),
(221,475,o),
(235,450,o),
(253,450,qs),
(264,450,o)
);
},
{
closed = 1;
nodes = (
(249,481,o),
(249,482,qs),
(249,489,o),
(259,489,q),
(262,490,o),
(266,486,q),
(268,482,o),
(266,480,q),
(263,473,o),
(256,473,qs),
(252,473,o)
);
},
{
closed = 1;
nodes = (
(91,151,o),
(95,160,o),
(106,160,qs),
(214,160,ls),
(226,160,o),
(243,158,o),
(261,158,qs),
(264,158,o),
(273,168,o),
(273,172,qs),
(274,183,o),
(269,194,o),
(272,220,qs),
(272,222,o),
(270,228,o),
(270,231,qs),
(270,324,ls),
(270,334,o),
(283,334,qs),
(367,333,ls),
(381,333,o),
(415,334,o),
(429,329,q),
(430,314,o),
(430,267,o),
(431,228,o),
(432,225,qs),
(437,212,o),
(440,181,o),
(432,171,qs),
(430,168,o),
(430,158,o),
(430,154,qs),
(430,32,ls),
(430,23,o),
(420,23,qs),
(408,23,o),
(363,22,o),
(312,23,o),
(271,26,o),
(265,29,q),
(263,31,o),
(256,30,o),
(253,30,qs),
(248,31,o),
(239,23,o),
(231,29,qs),
(228,31,o),
(193,32,o),
(149,31,o),
(114,29,o),
(110,29,q),
(100,26,o),
(91,36,o),
(91,43,qs),
(91,141,ls)
);
}
);
userData = {
assembly = "NPUSHW[ ]	/* 46 values pushed */
85 1 5 4 243 232 103 3 13 5 263 152 2 14 13 161 1 12 14 191 167 2 6 12 311 304 300 21 4 0 3 9 1 18 0 272 1 15 18 8 76 51 1 3 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 13 5 14 14 13 114 0 2 3 6 2 89 7 1 6 17 1 3 0 6 3 105 1 1 0 19 1 18 15 0 18 105 11 1 5 5 4 97 0 4 4 39 77 20 1 12 12 14 97 21 1 14 14 46 77 0 15 15 9 97 0 9 9 38 77 0 16 16 8 97 10 1 8 8 38 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
0 13 5 14 14 13 114 0 2 3 6 2 89 7 1 6 17 1 3 0 6 3 105 1 1 0 19 1 18 15 0 18 105 11 1 5 5 4 97 0 4 4 39 77 20 1 12 12 14 97 21 1 14 14 46 77 0 15 15 8 97 10 9 2 8 8 38 77 0 16 16 8 97 10 9 2 8 8 38 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
0 13 5 14 5 13 14 128 0 2 3 6 2 89 7 1 6 17 1 3 0 6 3 105 1 1 0 19 1 18 15 0 18 105 11 1 5 5 4 97 0 4 4 39 77 20 1 12 12 14 97 21 1 14 14 46 77 0 15 15 8 97 10 9 2 8 8 38 77 0 16 16 8 97 10 9 2 8 8 38 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
0 13 5 14 14 13 114 0 2 3 6 2 89 7 1 6 17 1 3 0 6 3 105 1 1 0 19 1 18 15 0 18 105 11 1 5 5 4 97 0 4 4 39 77 20 1 12 12 14 97 21 1 14 14 46 77 0 15 15 8 97 10 9 2 8 8 38 77 0 16 16 8 97 10 9 2 8 8 38 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
0 13 5 14 5 13 14 128 0 2 3 6 2 89 7 1 6 17 1 3 0 6 3 105 1 1 0 19 1 18 15 0 18 105 11 1 5 5 4 97 0 4 4 39 77 20 1 12 12 14 97 21 1 14 14 46 77 0 15 15 8 97 10 9 2 8 8 38 77 0 16 16 8 97 10 9 2 8 8 38 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 13 5 14 5 13 14 128 21 1 14 20 1 12 6 14 12 106 0 2 3 6 2 89 7 1 6 17 1 3 0 6 3 105 1 1 0 19 1 18 15 0 18 105 11 1 5 5 4 97 0 4 4 39 77 0 15 15 8 97 10 9 2 8 8 38 77 0 16 16 8 97 10 9 2 8 8 38 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 77 values pushed */
0 13 5 14 5 13 14 128 21 1 14 20 1 12 6 14 12 106 0 2 3 6 2 89 7 1 6 17 1 3 0 6 3 105 1 1 0 19 1 18 15 0 18 105 11 1 5 5 4 97 0 4 4 39 77 0 15 15 9 97 0 9 9 38 77 0 16 16 8 97 10 1 8 8 38 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 49 values pushed */
262 261 248 247 325 322 321 319 309 305 292 288 279 275 261 271 262 271 253 252 247 260 248 260 238 235 223 221 218 217 215 210 195 193 171 169 134 131 98 90 57 55 53 52 100 52 22 8 24 
CALL[ ]	/* CallFunction */";
};
width = 540;
}
);
note = uniA7A8;
unicode = 42920;
},
{
glyphname = T;
kernLeft = T;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(360,-3,o),
(364,-2,qs),
(373,1,o),
(382,7,q),
(387,12,o),
(373,30,o),
(363,30,qs),
(287,30,ls),
(271,30,o),
(259,41,o),
(259,56,qs),
(259,639,ls),
(259,649,o),
(271,660,o),
(277,665,qs),
(282,670,o),
(286,661,o),
(290,661,qs),
(416,661,ls),
(420,661,o),
(427,667,o),
(431,668,qs),
(436,670,o),
(440,654,o),
(440,649,qs),
(440,523,ls),
(440,519,o),
(439,510,o),
(441,507,qs),
(443,503,o),
(451,496,o),
(455,494,q),
(460,493,o),
(464,500,o),
(465,504,q),
(473,515,o),
(473,531,qs),
(473,673,ls),
(473,676,o),
(475,683,o),
(473,686,q),
(469,697,o),
(463,699,o),
(454,697,qs),
(449,696,o),
(438,694,o),
(433,694,qs),
(271,694,o),
(86,694,o),
(43,695,qs),
(19,695,o),
(19,672,qs),
(19,607,o),
(19,547,o),
(16,528,o),
(13,523,qs),
(9,516,o),
(15,500,o),
(23,495,q),
(29,493,o),
(35,497,qs),
(39,500,o),
(45,507,o),
(45,513,qs),
(45,518,o),
(45,537,o),
(45,590,o),
(45,647,qs),
(45,664,o),
(62,670,o),
(90,667,o),
(106,669,qs),
(110,670,o),
(132,670,o),
(154,668,o),
(156,666,qs),
(161,662,o),
(173,661,o),
(179,661,qs),
(221,661,ls),
(229,661,o),
(233,657,o),
(234,649,qs),
(234,644,o),
(234,607,o),
(233,569,o),
(233,564,qs),
(233,542,o),
(237,508,o),
(227,488,q),
(230,485,o),
(235,476,o),
(233,473,q),
(226,466,o),
(223,436,o),
(228,405,o),
(231,395,q),
(227,392,o),
(228,354,o),
(230,264,o),
(225,183,qs),
(225,179,o),
(224,169,o),
(226,166,qs),
(231,159,o),
(234,145,o),
(226,137,q),
(225,135,o),
(226,124,o),
(228,121,qs),
(233,115,o),
(233,86,o),
(229,53,o),
(226,42,qs),
(225,35,o),
(220,32,o),
(213,30,qs),
(205,27,o),
(184,24,o),
(165,24,qs),
(158,24,o),
(142,28,o),
(132,33,q),
(124,28,o),
(106,21,o),
(101,13,q),
(100,10,o),
(103,0,o),
(107,0,qs),
(115,-1,o),
(132,-1,o),
(140,-1,qs),
(317,2,ls),
(323,2,o),
(341,4,o),
(348,-3,q),
(350,-4,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
95 1 3 4 111 43 13 3 6 2 2 76 0 3 4 2 2 3 114 0 1 6 0 6 1 114 5 1 2 2 4 96 0 4 4 39 77 0 6 6 0 95 0 0 0 38 0 78 130 127 118 116 89 85 63 62 59 56 41 66 7 8 24 
CALL[ ]	/* CallFunction */";
};
width = 484;
}
);
note = T;
unicode = 84;
},
{
glyphname = Tbar;
layers = (
{
layerId = m01;
shapes = (
{
ref = T;
},
{
pos = (78,80);
ref = uni0335;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
80 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 484;
}
);
note = Tbar;
unicode = 358;
},
{
glyphname = Tcaron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(360,-3,o),
(364,-2,qs),
(373,1,o),
(382,7,q),
(387,12,o),
(373,30,o),
(363,30,qs),
(287,30,ls),
(271,30,o),
(259,41,o),
(259,56,qs),
(259,639,ls),
(259,649,o),
(271,660,o),
(277,665,qs),
(282,670,o),
(286,661,o),
(290,661,qs),
(416,661,ls),
(420,661,o),
(427,667,o),
(431,668,qs),
(436,670,o),
(440,654,o),
(440,649,qs),
(440,523,ls),
(440,519,o),
(439,510,o),
(441,507,qs),
(443,503,o),
(451,496,o),
(455,494,q),
(460,493,o),
(464,500,o),
(465,504,q),
(473,515,o),
(473,531,qs),
(473,673,ls),
(473,676,o),
(475,683,o),
(473,686,q),
(469,697,o),
(463,699,o),
(454,697,qs),
(449,696,o),
(438,694,o),
(433,694,qs),
(271,694,o),
(86,694,o),
(43,695,qs),
(19,695,o),
(19,672,qs),
(19,607,o),
(19,547,o),
(16,528,o),
(13,523,qs),
(9,516,o),
(15,500,o),
(23,495,q),
(29,493,o),
(35,497,qs),
(39,500,o),
(45,507,o),
(45,513,qs),
(45,518,o),
(45,537,o),
(45,590,o),
(45,647,qs),
(45,664,o),
(62,670,o),
(90,667,o),
(106,669,qs),
(110,670,o),
(132,670,o),
(154,668,o),
(156,666,qs),
(161,662,o),
(173,661,o),
(179,661,qs),
(221,661,ls),
(229,661,o),
(233,657,o),
(234,649,qs),
(234,644,o),
(234,607,o),
(233,569,o),
(233,564,qs),
(233,542,o),
(237,508,o),
(227,488,q),
(230,485,o),
(235,476,o),
(233,473,q),
(226,466,o),
(223,436,o),
(228,405,o),
(231,395,q),
(227,392,o),
(228,354,o),
(230,264,o),
(225,183,qs),
(225,179,o),
(224,169,o),
(226,166,qs),
(231,159,o),
(234,145,o),
(226,137,q),
(225,135,o),
(226,124,o),
(228,121,qs),
(233,115,o),
(233,86,o),
(229,53,o),
(226,42,qs),
(225,35,o),
(220,32,o),
(213,30,qs),
(205,27,o),
(184,24,o),
(165,24,qs),
(158,24,o),
(142,28,o),
(132,33,q),
(124,28,o),
(106,21,o),
(101,13,q),
(100,10,o),
(103,0,o),
(107,0,qs),
(115,-1,o),
(132,-1,o),
(140,-1,qs),
(317,2,ls),
(323,2,o),
(341,4,o),
(348,-3,q),
(350,-4,o)
);
},
{
closed = 1;
nodes = (
(276,836,o),
(273,832,qs),
(271,830,o),
(258,813,o),
(256,811,qs),
(254,808,o),
(247,797,o),
(245,796,qs),
(239,793,o),
(235,793,o),
(230,795,q),
(226,800,o),
(204,820,o),
(177,843,o),
(154,859,o),
(149,859,q),
(141,861,o),
(129,859,o),
(133,850,q),
(139,844,o),
(151,831,o),
(155,824,q),
(160,821,o),
(172,806,o),
(178,803,q),
(186,796,o),
(193,787,o),
(200,781,qs),
(208,774,o),
(224,760,o),
(228,749,qs),
(230,745,o),
(238,744,o),
(240,748,q),
(251,760,o),
(282,794,o),
(312,829,o),
(332,852,o),
(331,853,qs),
(329,855,o),
(323,860,o),
(321,860,q),
(316,862,o),
(309,860,q),
(295,853,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
95 1 3 4 111 43 13 3 6 2 2 76 0 3 4 2 2 3 114 0 1 6 0 6 1 114 5 1 2 2 4 96 0 4 4 39 77 0 6 6 0 95 0 0 0 38 0 78 130 127 118 116 89 85 63 62 59 56 41 66 7 8 24 
CALL[ ]	/* CallFunction */";
};
width = 484;
}
);
note = Tcaron;
unicode = 356;
},
{
glyphname = uni0162;
layers = (
{
layerId = m01;
shapes = (
{
ref = T;
},
{
pos = (188,-6);
ref = uni0327;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-6 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 484;
}
);
note = uni0162;
unicode = 354;
},
{
glyphname = uni1E70;
layers = (
{
layerId = m01;
shapes = (
{
ref = T;
},
{
pos = (105,-782);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-782 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 484;
}
);
note = uni1E70;
unicode = 7792;
},
{
glyphname = uni021A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(360,-3,o),
(364,-2,qs),
(373,1,o),
(382,7,q),
(387,12,o),
(373,30,o),
(363,30,qs),
(287,30,ls),
(271,30,o),
(259,41,o),
(259,56,qs),
(259,639,ls),
(259,649,o),
(271,660,o),
(277,665,qs),
(282,670,o),
(286,661,o),
(290,661,qs),
(416,661,ls),
(420,661,o),
(427,667,o),
(431,668,qs),
(436,670,o),
(440,654,o),
(440,649,qs),
(440,523,ls),
(440,519,o),
(439,510,o),
(441,507,qs),
(443,503,o),
(451,496,o),
(455,494,q),
(460,493,o),
(464,500,o),
(465,504,q),
(473,515,o),
(473,531,qs),
(473,673,ls),
(473,676,o),
(475,683,o),
(473,686,q),
(469,697,o),
(463,699,o),
(454,697,qs),
(449,696,o),
(438,694,o),
(433,694,qs),
(271,694,o),
(86,694,o),
(43,695,qs),
(19,695,o),
(19,672,qs),
(19,607,o),
(19,547,o),
(16,528,o),
(13,523,qs),
(9,516,o),
(15,500,o),
(23,495,q),
(29,493,o),
(35,497,qs),
(39,500,o),
(45,507,o),
(45,513,qs),
(45,518,o),
(45,537,o),
(45,590,o),
(45,647,qs),
(45,664,o),
(62,670,o),
(90,667,o),
(106,669,qs),
(110,670,o),
(132,670,o),
(154,668,o),
(156,666,qs),
(161,662,o),
(173,661,o),
(179,661,qs),
(221,661,ls),
(229,661,o),
(233,657,o),
(234,649,qs),
(234,644,o),
(234,607,o),
(233,569,o),
(233,564,qs),
(233,542,o),
(237,508,o),
(227,488,q),
(230,485,o),
(235,476,o),
(233,473,q),
(226,466,o),
(223,436,o),
(228,405,o),
(231,395,q),
(227,392,o),
(228,354,o),
(230,264,o),
(225,183,qs),
(225,179,o),
(224,169,o),
(226,166,qs),
(231,159,o),
(234,145,o),
(226,137,q),
(225,135,o),
(226,124,o),
(228,121,qs),
(233,115,o),
(233,86,o),
(229,53,o),
(226,42,qs),
(225,35,o),
(220,32,o),
(213,30,qs),
(205,27,o),
(184,24,o),
(165,24,qs),
(158,24,o),
(142,28,o),
(132,33,q),
(124,28,o),
(106,21,o),
(101,13,q),
(100,10,o),
(103,0,o),
(107,0,qs),
(115,-1,o),
(132,-1,o),
(140,-1,qs),
(317,2,ls),
(323,2,o),
(341,4,o),
(348,-3,q),
(350,-4,o)
);
},
{
closed = 1;
nodes = (
(184,-201,o),
(186,-198,q),
(190,-198,o),
(207,-174,o),
(209,-172,q),
(218,-158,o),
(221,-143,o),
(228,-129,qs),
(234,-113,o),
(247,-102,qs),
(260,-91,o),
(264,-65,o),
(265,-48,qs),
(266,-37,o),
(259,-27,o),
(253,-31,q),
(248,-36,o),
(228,-51,o),
(226,-58,qs),
(223,-69,o),
(212,-91,o),
(206,-103,qs),
(198,-124,o),
(178,-159,o),
(164,-194,q),
(167,-199,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
95 1 3 4 111 43 13 3 6 2 2 76 149 1 0 73 0 3 4 2 2 3 114 0 1 6 0 6 1 114 5 1 2 2 4 96 0 4 4 39 77 0 6 6 0 95 0 0 0 38 0 78 130 127 118 116 89 85 63 62 59 56 41 66 7 8 24 
CALL[ ]	/* CallFunction */";
};
width = 484;
}
);
note = uni021A;
unicode = 538;
},
{
glyphname = uni023E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(96,36,o),
(117,65,o),
(120,84,q),
(132,92,o),
(143,120,o),
(147,134,q),
(161,145,o),
(173,171,o),
(176,185,q),
(189,209,o),
(216,255,o),
(229,278,q),
(229,259,o),
(227,211,o),
(225,183,qs),
(225,179,o),
(224,169,o),
(226,166,qs),
(231,159,o),
(234,145,o),
(226,137,q),
(225,135,o),
(226,124,o),
(228,121,qs),
(233,115,o),
(233,86,o),
(229,53,o),
(226,42,qs),
(225,35,o),
(220,32,o),
(213,30,qs),
(205,27,o),
(184,24,o),
(165,24,qs),
(158,24,o),
(142,28,o),
(132,33,q),
(124,28,o),
(106,21,o),
(101,13,q),
(100,10,o),
(103,0,o),
(107,0,qs),
(115,-1,o),
(132,-1,o),
(140,-1,qs),
(317,2,ls),
(323,2,o),
(341,4,o),
(348,-3,q),
(350,-4,o),
(360,-3,o),
(364,-2,qs),
(373,1,o),
(382,7,q),
(387,12,o),
(373,30,o),
(363,30,qs),
(287,30,ls),
(271,30,o),
(259,41,o),
(259,56,qs),
(259,331,l),
(271,351,o),
(282,370,qs),
(286,378,o),
(303,392,o),
(304,402,qs),
(307,421,o),
(324,435,o),
(331,445,q),
(363,503,o),
(412,589,o),
(440,640,q),
(440,523,ls),
(440,519,o),
(439,510,o),
(441,507,qs),
(443,503,o),
(451,496,o),
(455,494,q),
(460,493,o),
(464,500,o),
(465,504,q),
(473,515,o),
(473,531,qs),
(473,673,ls),
(473,676,o),
(475,683,o),
(473,686,qs),
(471,691,o),
(470,693,q),
(476,705,o),
(477,720,qs),
(477,732,o),
(469,739,q),
(467,736,o),
(448,724,o),
(435,699,q),
(434,698,o),
(433,694,q),
(271,694,o),
(86,694,o),
(43,695,qs),
(19,695,o),
(19,672,qs),
(19,607,o),
(19,547,o),
(16,528,o),
(13,523,qs),
(9,516,o),
(15,500,o),
(23,495,q),
(29,493,o),
(35,497,qs),
(39,500,o),
(45,507,o),
(45,513,qs),
(45,518,o),
(45,537,o),
(45,590,o),
(45,647,qs),
(45,664,o),
(62,670,o),
(90,667,o),
(106,669,qs),
(110,670,o),
(132,670,o),
(154,668,o),
(156,666,qs),
(161,662,o),
(173,661,o),
(179,661,qs),
(221,661,ls),
(229,661,o),
(233,657,o),
(234,649,qs),
(234,644,o),
(234,607,o),
(233,569,o),
(233,564,qs),
(233,542,o),
(237,508,o),
(227,488,q),
(230,485,o),
(235,476,o),
(233,473,q),
(226,466,o),
(223,436,o),
(228,405,o),
(231,395,q),
(227,392,o),
(228,344,q),
(223,337,o),
(220,330,qs),
(216,321,o),
(194,285,o),
(175,248,o),
(174,237,q),
(165,227,o),
(156,207,o),
(151,194,q),
(150,188,o),
(139,169,o),
(133,161,qs),
(124,148,o),
(99,111,o),
(75,74,o),
(67,61,q),
(58,34,o),
(51,9,o),
(49,1,q),
(50,-9,o),
(59,-8,o),
(66,-7,q),
(74,10,o)
);
},
{
closed = 1;
nodes = (
(271,660,o),
(277,665,qs),
(282,670,o),
(286,661,o),
(290,661,qs),
(416,661,l),
(413,655,o),
(411,653,q),
(393,620,o),
(365,571,o),
(338,523,o),
(319,489,qs),
(311,474,o),
(291,443,o),
(286,429,qs),
(281,417,o),
(265,402,o),
(259,393,q),
(259,639,ls),
(259,649,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
85 83 2 1 2 177 163 138 112 101 28 22 7 3 0 2 76 0 1 2 0 0 1 114 0 5 3 4 3 5 114 6 1 0 0 2 96 0 2 2 39 77 0 3 3 4 95 0 4 4 38 4 78 190 189 142 140 131 127 118 115 74 70 48 47 44 41 7 8 22 
CALL[ ]	/* CallFunction */";
};
width = 544;
}
);
note = uni023E;
unicode = 574;
},
{
glyphname = uni1E6A;
layers = (
{
layerId = m01;
shapes = (
{
ref = T;
},
{
pos = (159,116);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
116 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 484;
}
);
note = uni1E6A;
unicode = 7786;
},
{
glyphname = uni1E6C;
layers = (
{
layerId = m01;
shapes = (
{
ref = T;
},
{
pos = (167,-114);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 484;
}
);
note = uni1E6C;
unicode = 7788;
},
{
glyphname = uni01AC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(390,-3,o),
(394,-2,qs),
(403,1,o),
(412,7,q),
(417,12,o),
(403,30,o),
(393,30,qs),
(317,30,ls),
(301,30,o),
(289,41,o),
(289,56,qs),
(289,639,ls),
(289,649,o),
(301,660,o),
(307,665,qs),
(312,670,o),
(316,661,o),
(320,661,qs),
(446,661,ls),
(450,661,o),
(458,670,o),
(461,668,qs),
(471,661,o),
(504,663,o),
(503,673,qs),
(503,676,o),
(505,683,o),
(503,686,q),
(499,697,o),
(493,699,o),
(484,697,qs),
(479,696,o),
(468,694,o),
(463,694,qs),
(301,694,o),
(116,694,o),
(73,695,qs),
(49,695,o),
(49,672,qs),
(49,607,o),
(49,547,o),
(46,528,o),
(43,523,qs),
(39,516,o),
(45,500,o),
(53,495,q),
(59,493,o),
(65,497,qs),
(69,500,o),
(75,507,o),
(75,513,qs),
(75,518,o),
(75,537,o),
(75,590,o),
(75,647,qs),
(75,664,o),
(92,670,o),
(120,667,o),
(136,669,qs),
(140,670,o),
(162,670,o),
(184,668,o),
(186,666,qs),
(191,662,o),
(203,661,o),
(209,661,qs),
(251,661,ls),
(259,661,o),
(263,657,o),
(264,649,qs),
(264,644,o),
(264,607,o),
(263,569,o),
(263,564,qs),
(263,542,o),
(267,508,o),
(257,488,q),
(260,485,o),
(265,476,o),
(263,473,q),
(256,466,o),
(253,436,o),
(258,405,o),
(261,395,q),
(257,392,o),
(258,354,o),
(260,264,o),
(255,183,qs),
(255,179,o),
(254,169,o),
(256,166,qs),
(261,159,o),
(264,145,o),
(256,137,q),
(255,135,o),
(256,124,o),
(258,121,qs),
(263,115,o),
(263,86,o),
(259,53,o),
(256,42,qs),
(255,35,o),
(250,32,o),
(243,30,qs),
(235,27,o),
(214,24,o),
(195,24,qs),
(188,24,o),
(172,28,o),
(162,33,q),
(154,28,o),
(136,21,o),
(131,13,q),
(130,10,o),
(133,0,o),
(137,0,qs),
(145,-1,o),
(162,-1,o),
(170,-1,qs),
(347,2,ls),
(353,2,o),
(371,4,o),
(378,-3,q),
(380,-4,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
95 1 3 4 101 1 2 3 43 13 2 7 2 3 76 0 3 4 2 2 3 114 0 1 7 0 7 1 114 6 5 2 2 2 4 96 0 4 4 39 77 0 7 7 0 95 0 0 0 38 0 78 117 114 105 103 100 99 89 85 63 62 59 56 41 66 8 8 24 
CALL[ ]	/* CallFunction */";
};
width = 544;
}
);
note = uni01AC;
unicode = 428;
},
{
glyphname = Tmacronbelow;
layers = (
{
layerId = m01;
shapes = (
{
ref = T;
},
{
pos = (57,-329);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-329 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 484;
}
);
note = Tmacronbelow;
unicode = 7790;
},
{
glyphname = uni01AE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(263,-87,o),
(257,-108,o),
(258,-118,qs),
(260,-143,o),
(274,-176,o),
(302,-178,qs),
(306,-178,o),
(311,-178,o),
(334,-177,qs),
(339,-177,o),
(369,-176,o),
(373,-178,qs),
(387,-183,o),
(406,-179,o),
(418,-172,qs),
(429,-167,o),
(431,-155,o),
(418,-148,q),
(412,-151,o),
(402,-145,o),
(397,-146,qs),
(378,-148,o),
(364,-147,o),
(359,-144,o),
(352,-146,qs),
(347,-147,o),
(324,-147,o),
(319,-147,qs),
(300,-148,o),
(289,-116,o),
(289,-74,o),
(288,-60,qs),
(288,-55,o),
(289,-50,q),
(289,639,ls),
(289,649,o),
(301,660,o),
(307,665,qs),
(312,670,o),
(316,661,o),
(320,661,qs),
(446,661,ls),
(450,661,o),
(457,667,o),
(461,668,qs),
(466,670,o),
(470,654,o),
(470,649,qs),
(470,523,ls),
(470,519,o),
(469,510,o),
(471,507,qs),
(473,503,o),
(481,496,o),
(485,494,q),
(490,493,o),
(494,500,o),
(495,504,q),
(503,515,o),
(503,531,qs),
(503,673,ls),
(503,676,o),
(505,683,o),
(503,686,q),
(499,697,o),
(493,699,o),
(484,697,qs),
(479,696,o),
(468,694,o),
(463,694,qs),
(301,694,o),
(116,694,o),
(73,695,qs),
(49,695,o),
(49,672,qs),
(49,607,o),
(49,547,o),
(46,528,o),
(43,523,qs),
(39,516,o),
(45,500,o),
(53,495,q),
(59,493,o),
(65,497,qs),
(69,500,o),
(75,507,o),
(75,513,qs),
(75,518,o),
(75,537,o),
(75,590,o),
(75,647,qs),
(75,664,o),
(92,670,o),
(120,667,o),
(136,669,qs),
(140,670,o),
(162,670,o),
(184,668,o),
(186,666,qs),
(191,662,o),
(203,661,o),
(209,661,qs),
(251,661,ls),
(259,661,o),
(263,657,o),
(264,649,qs),
(264,644,o),
(264,607,o),
(263,569,o),
(263,564,qs),
(263,542,o),
(267,508,o),
(257,488,q),
(260,485,o),
(265,476,o),
(263,473,q),
(256,466,o),
(253,436,o),
(258,405,o),
(261,395,q),
(257,392,o),
(258,354,o),
(260,264,o),
(255,183,qs),
(255,179,o),
(254,169,o),
(256,166,qs),
(261,159,o),
(264,145,o),
(256,137,q),
(255,135,o),
(256,124,o),
(258,121,qs),
(261,117,o),
(263,76,o),
(263,21,o),
(261,-32,o),
(260,-48,q),
(258,-50,o),
(258,-54,qs),
(258,-80,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
76 1 1 2 140 119 108 106 92 24 0 7 4 0 2 76 122 1 4 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 1 2 0 0 1 114 3 1 0 0 2 96 0 2 2 39 77 0 4 4 5 95 0 5 5 42 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 1 2 0 0 1 114 0 4 0 5 4 5 99 3 1 0 0 2 96 0 2 2 39 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
134 128 114 111 99 97 70 66 44 43 40 37 6 8 22 
CALL[ ]	/* CallFunction */";
};
width = 544;
}
);
note = uni01AE;
unicode = 430;
},
{
glyphname = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(310,0,o),
(392,0,o),
(430,0,o),
(441,1,o),
(443,1,qs),
(450,1,o),
(450,4,q),
(452,12,o),
(461,25,o),
(461,32,qs),
(461,38,o),
(457,43,qs),
(450,51,o),
(457,64,qs),
(458,66,o),
(461,74,o),
(459,75,q),
(453,81,o),
(452,96,o),
(452,103,qs),
(452,198,ls),
(452,206,o),
(454,222,o),
(458,231,qs),
(468,254,o),
(455,271,qs),
(450,278,o),
(454,282,qs),
(459,288,o),
(461,300,o),
(461,306,qs),
(460,312,o),
(457,336,o),
(461,348,qs),
(464,354,o),
(457,361,o),
(451,369,o),
(454,376,q),
(460,385,o),
(460,407,o),
(460,413,q),
(462,424,o),
(458,429,qs),
(453,436,o),
(452,450,o),
(452,457,qs),
(452,542,ls),
(452,547,o),
(451,556,o),
(453,558,qs),
(461,569,o),
(461,582,qs),
(461,654,ls),
(461,665,o),
(452,684,o),
(446,694,q),
(443,702,o),
(430,694,o),
(428,689,q),
(428,687,o),
(427,676,o),
(426,644,o),
(426,610,qs),
(426,603,o),
(429,591,o),
(433,585,q),
(425,573,o),
(425,556,qs),
(425,552,o),
(425,506,o),
(426,447,o),
(426,394,o),
(426,383,qs),
(426,372,o),
(416,372,qs),
(317,372,l),
(305,373,o),
(293,366,qs),
(286,361,o),
(277,374,o),
(271,372,qs),
(265,371,o),
(255,365,o),
(249,372,qs),
(247,374,o),
(241,371,q),
(231,360,o),
(215,371,qs),
(208,377,o),
(193,365,o),
(185,369,qs),
(182,370,o),
(178,369,qs),
(173,367,o),
(144,368,o),
(120,370,o),
(119,369,qs),
(115,365,o),
(90,364,o),
(86,364,qs),
(74,364,o),
(74,378,qs),
(74,679,ls),
(74,686,o),
(70,690,q),
(63,700,o),
(49,699,o),
(49,687,q),
(48,683,o),
(49,627,o),
(50,548,o),
(49,471,o),
(46,416,o),
(43,413,qs),
(42,412,o),
(41,404,o),
(42,402,q),
(47,396,o),
(49,384,o),
(49,378,qs),
(49,357,o),
(49,316,o),
(48,296,qs),
(48,292,o),
(47,283,o),
(45,280,qs),
(40,273,o),
(40,260,qs),
(40,13,ls),
(40,0,o),
(53,0,qs),
(166,0,o)
);
},
{
closed = 1;
nodes = (
(281,523,o),
(281,530,qs),
(281,542,o),
(260,559,o),
(241,559,q),
(231,561,o),
(218,553,o),
(212,545,qs),
(204,534,o),
(212,522,q),
(220,515,o),
(239,498,o),
(249,498,qs),
(267,498,o)
);
},
{
closed = 1;
nodes = (
(236,527,qs),
(235,529,o),
(236,533,q),
(240,537,o),
(243,536,q),
(253,536,o),
(253,529,qs),
(253,528,o),
(251,520,o),
(246,520,qs),
(240,520,o)
);
},
{
closed = 1;
nodes = (
(66,46,qs),
(66,71,o),
(65,100,o),
(66,129,o),
(66,154,qs),
(66,163,o),
(76,183,o),
(74,192,q),
(74,195,o),
(73,210,o),
(74,264,o),
(74,325,qs),
(74,338,o),
(87,338,qs),
(413,338,ls),
(426,338,o),
(426,326,qs),
(426,39,ls),
(426,30,o),
(421,26,o),
(410,26,qs),
(88,26,ls),
(66,26,o)
);
},
{
closed = 1;
nodes = (
(281,181,q),
(285,190,o),
(276,199,q),
(272,205,o),
(250,216,o),
(229,221,o),
(223,215,q),
(219,209,o),
(212,196,o),
(210,188,q),
(210,184,o),
(219,172,o),
(220,166,qs),
(223,152,o),
(255,151,o),
(273,164,q),
(279,170,o)
);
},
{
closed = 1;
nodes = (
(241,177,o),
(240,181,qs),
(239,183,o),
(237,186,o),
(237,187,qs),
(237,189,o),
(239,193,o),
(240,194,qs),
(242,196,o),
(254,192,o),
(255,190,q),
(257,188,o),
(256,185,q),
(256,182,o),
(254,180,qs),
(250,177,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
153 151 143 3 6 5 90 14 11 3 3 4 103 1 9 8 114 1 7 9 4 76 65 28 2 5 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 5 6 6 5 112 2 1 1 3 8 3 1 114 0 9 8 7 8 9 7 128 12 1 6 11 1 4 3 6 4 106 0 3 0 8 9 3 8 103 13 1 7 7 0 97 10 1 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 5 6 5 133 2 1 1 3 8 3 1 114 0 9 8 7 8 9 7 128 12 1 6 11 1 4 3 6 4 106 0 3 0 8 9 3 8 103 13 1 7 7 0 97 10 1 0 0 38 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 39 values pushed */
159 157 147 146 133 132 1 0 182 181 166 163 157 179 159 179 146 156 147 156 141 140 132 145 133 145 57 55 37 36 33 30 0 131 1 128 14 8 22 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = U;
unicode = 85;
},
{
glyphname = Uacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (176,140);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
140 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = Uacute;
unicode = 218;
},
{
glyphname = uni0244;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(351,0,o),
(433,0,o),
(471,0,o),
(482,1,o),
(484,1,qs),
(491,1,o),
(491,4,q),
(493,12,o),
(502,25,o),
(502,32,qs),
(502,38,o),
(498,43,qs),
(491,51,o),
(498,64,qs),
(499,66,o),
(502,74,o),
(500,75,q),
(494,81,o),
(493,96,o),
(493,103,qs),
(493,198,ls),
(493,206,o),
(495,222,o),
(499,231,qs),
(509,254,o),
(496,271,qs),
(491,278,o),
(495,282,qs),
(500,288,o),
(502,300,o),
(502,306,qs),
(501,311,o),
(499,329,o),
(500,338,q),
(509,338,o),
(513,337,qs),
(520,336,o),
(525,338,o),
(539,340,o),
(558,337,qs),
(563,336,o),
(573,342,o),
(579,339,q),
(592,347,o),
(590,358,o),
(579,363,q),
(567,371,o),
(548,374,o),
(534,369,qs),
(530,368,o),
(500,368,o),
(495,368,qs),
(494,368,l),
(492,371,o),
(495,376,qs),
(501,385,o),
(501,407,o),
(501,413,q),
(503,424,o),
(499,429,qs),
(494,436,o),
(493,450,o),
(493,457,qs),
(493,542,ls),
(493,547,o),
(492,556,o),
(494,558,qs),
(502,569,o),
(502,582,qs),
(502,654,ls),
(502,665,o),
(493,684,o),
(487,694,q),
(484,702,o),
(471,694,o),
(469,689,q),
(469,687,o),
(468,676,o),
(467,644,o),
(467,610,qs),
(467,603,o),
(470,591,o),
(474,585,q),
(466,573,o),
(466,556,qs),
(466,552,o),
(466,506,o),
(467,447,o),
(467,394,o),
(467,383,qs),
(467,372,o),
(457,372,qs),
(358,372,l),
(346,373,o),
(334,366,qs),
(327,361,o),
(318,374,o),
(312,372,qs),
(306,371,o),
(296,365,o),
(290,372,qs),
(288,374,o),
(282,371,q),
(272,360,o),
(256,371,qs),
(249,377,o),
(234,365,o),
(226,369,qs),
(223,370,o),
(219,369,qs),
(214,367,o),
(185,368,o),
(161,370,o),
(160,369,qs),
(156,365,o),
(131,364,o),
(127,364,qs),
(115,364,o),
(115,378,qs),
(115,679,ls),
(115,686,o),
(111,690,q),
(104,700,o),
(90,699,o),
(90,687,q),
(89,683,o),
(90,627,o),
(91,548,o),
(90,471,o),
(87,416,o),
(84,413,qs),
(83,412,o),
(82,404,o),
(83,402,q),
(88,396,o),
(90,384,o),
(90,378,qs),
(90,368,l),
(83,368,o),
(59,368,o),
(55,368,qs),
(32,369,o),
(27,369,o),
(23,369,qs),
(-5,368,o),
(6,340,o),
(40,338,qs),
(45,338,o),
(68,339,o),
(73,337,q),
(79,336,o),
(84,338,o),
(90,338,q),
(90,328,o),
(89,307,o),
(89,296,qs),
(89,292,o),
(88,283,o),
(86,280,qs),
(81,273,o),
(81,260,qs),
(81,13,ls),
(81,0,o),
(94,0,qs),
(207,0,o)
);
},
{
closed = 1;
nodes = (
(322,523,o),
(322,530,qs),
(322,542,o),
(301,559,o),
(282,559,q),
(272,561,o),
(259,553,o),
(253,545,qs),
(245,534,o),
(253,522,q),
(261,515,o),
(280,498,o),
(290,498,qs),
(308,498,o)
);
},
{
closed = 1;
nodes = (
(277,527,qs),
(276,529,o),
(277,533,q),
(281,537,o),
(284,536,q),
(294,536,o),
(294,529,qs),
(294,528,o),
(292,520,o),
(287,520,qs),
(281,520,o)
);
},
{
closed = 1;
nodes = (
(107,46,qs),
(107,71,o),
(106,100,o),
(107,129,o),
(107,154,qs),
(107,163,o),
(117,183,o),
(115,192,q),
(115,195,o),
(114,210,o),
(115,264,o),
(115,325,qs),
(115,336,o),
(122,337,q),
(120,337,o),
(122,337,o),
(123,337,qs),
(127,338,o),
(128,338,o),
(128,338,q),
(454,338,ls),
(467,338,o),
(467,326,qs),
(467,39,ls),
(467,30,o),
(462,26,o),
(451,26,qs),
(129,26,ls),
(107,26,o)
);
},
{
closed = 1;
nodes = (
(322,181,q),
(326,190,o),
(317,199,q),
(313,205,o),
(291,216,o),
(270,221,o),
(264,215,q),
(260,209,o),
(253,196,o),
(251,188,q),
(251,184,o),
(260,172,o),
(261,166,qs),
(264,152,o),
(296,151,o),
(314,164,q),
(320,170,o)
);
},
{
closed = 1;
nodes = (
(282,177,o),
(281,181,qs),
(280,183,o),
(278,186,o),
(278,187,qs),
(278,189,o),
(280,193,o),
(281,194,qs),
(283,196,o),
(295,192,o),
(296,190,q),
(298,188,o),
(297,185,q),
(297,182,o),
(295,180,qs),
(291,177,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
186 184 176 3 9 8 106 30 27 3 2 7 206 136 130 128 11 5 12 1 147 1 10 12 4 76 121 1 1 1 75 81 44 2 8 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 8 9 9 8 112 0 12 1 10 1 12 10 128 15 1 9 14 1 7 2 9 7 106 6 5 4 3 4 2 11 1 1 12 2 1 105 16 1 10 10 0 97 13 1 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 8 9 8 133 0 12 1 10 1 12 10 128 15 1 9 14 1 7 2 9 7 106 6 5 4 3 4 2 11 1 1 12 2 1 105 16 1 10 10 0 97 13 1 0 0 38 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 45 values pushed */
192 190 180 179 166 165 1 0 221 220 198 196 190 218 192 218 179 189 180 189 174 173 165 178 166 178 114 111 73 71 53 52 49 46 25 19 18 15 0 164 1 161 17 8 22 
CALL[ ]	/* CallFunction */";
};
width = 591;
}
);
note = uni0244;
unicode = 580;
},
{
glyphname = Ubreve;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (114,118);
ref = uni0306;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
118 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = Ubreve;
unicode = 364;
},
{
glyphname = uni01D3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(310,0,o),
(392,0,o),
(430,0,o),
(441,1,o),
(443,1,qs),
(450,1,o),
(450,4,q),
(452,12,o),
(461,25,o),
(461,32,qs),
(461,38,o),
(457,43,qs),
(450,51,o),
(457,64,qs),
(458,66,o),
(461,74,o),
(459,75,q),
(453,81,o),
(452,96,o),
(452,103,qs),
(452,198,ls),
(452,206,o),
(454,222,o),
(458,231,qs),
(468,254,o),
(455,271,qs),
(450,278,o),
(454,282,qs),
(459,288,o),
(461,300,o),
(461,306,qs),
(460,312,o),
(457,336,o),
(461,348,qs),
(464,354,o),
(457,361,o),
(451,369,o),
(454,376,q),
(460,385,o),
(460,407,o),
(460,413,q),
(462,424,o),
(458,429,qs),
(453,436,o),
(452,450,o),
(452,457,qs),
(452,542,ls),
(452,547,o),
(451,556,o),
(453,558,qs),
(461,569,o),
(461,582,qs),
(461,654,ls),
(461,665,o),
(452,684,o),
(446,694,q),
(443,702,o),
(430,694,o),
(428,689,q),
(428,687,o),
(427,676,o),
(426,644,o),
(426,610,qs),
(426,603,o),
(429,591,o),
(433,585,q),
(425,573,o),
(425,556,qs),
(425,552,o),
(425,506,o),
(426,447,o),
(426,394,o),
(426,383,qs),
(426,372,o),
(416,372,qs),
(317,372,l),
(305,373,o),
(293,366,qs),
(286,361,o),
(277,374,o),
(271,372,qs),
(265,371,o),
(255,365,o),
(249,372,qs),
(247,374,o),
(241,371,q),
(231,360,o),
(215,371,qs),
(208,377,o),
(193,365,o),
(185,369,qs),
(182,370,o),
(178,369,qs),
(173,367,o),
(144,368,o),
(120,370,o),
(119,369,qs),
(115,365,o),
(90,364,o),
(86,364,qs),
(74,364,o),
(74,378,qs),
(74,679,ls),
(74,686,o),
(70,690,q),
(63,700,o),
(49,699,o),
(49,687,q),
(48,683,o),
(49,627,o),
(50,548,o),
(49,471,o),
(46,416,o),
(43,413,qs),
(42,412,o),
(41,404,o),
(42,402,q),
(47,396,o),
(49,384,o),
(49,378,qs),
(49,357,o),
(49,316,o),
(48,296,qs),
(48,292,o),
(47,283,o),
(45,280,qs),
(40,273,o),
(40,260,qs),
(40,13,ls),
(40,0,o),
(53,0,qs),
(166,0,o)
);
},
{
closed = 1;
nodes = (
(281,523,o),
(281,530,qs),
(281,542,o),
(260,559,o),
(241,559,q),
(231,561,o),
(218,553,o),
(212,545,qs),
(204,534,o),
(212,522,q),
(220,515,o),
(239,498,o),
(249,498,qs),
(267,498,o)
);
},
{
closed = 1;
nodes = (
(236,527,qs),
(235,529,o),
(236,533,q),
(240,537,o),
(243,536,q),
(253,536,o),
(253,529,qs),
(253,528,o),
(251,520,o),
(246,520,qs),
(240,520,o)
);
},
{
closed = 1;
nodes = (
(66,46,qs),
(66,71,o),
(65,100,o),
(66,129,o),
(66,154,qs),
(66,163,o),
(76,183,o),
(74,192,q),
(74,195,o),
(73,210,o),
(74,264,o),
(74,325,qs),
(74,338,o),
(87,338,qs),
(413,338,ls),
(426,338,o),
(426,326,qs),
(426,39,ls),
(426,30,o),
(421,26,o),
(410,26,qs),
(88,26,ls),
(66,26,o)
);
},
{
closed = 1;
nodes = (
(281,181,q),
(285,190,o),
(276,199,q),
(272,205,o),
(250,216,o),
(229,221,o),
(223,215,q),
(219,209,o),
(212,196,o),
(210,188,q),
(210,184,o),
(219,172,o),
(220,166,qs),
(223,152,o),
(255,151,o),
(273,164,q),
(279,170,o)
);
},
{
closed = 1;
nodes = (
(241,177,o),
(240,181,qs),
(239,183,o),
(237,186,o),
(237,187,qs),
(237,189,o),
(239,193,o),
(240,194,qs),
(242,196,o),
(254,192,o),
(255,190,q),
(257,188,o),
(256,185,q),
(256,182,o),
(254,180,qs),
(250,177,o)
);
},
{
closed = 1;
nodes = (
(297,833,o),
(294,829,qs),
(292,827,o),
(279,810,o),
(277,808,qs),
(275,805,o),
(268,794,o),
(266,793,qs),
(260,790,o),
(256,790,o),
(251,792,q),
(247,797,o),
(225,817,o),
(198,840,o),
(175,856,o),
(170,856,q),
(162,858,o),
(150,856,o),
(154,847,q),
(160,841,o),
(172,828,o),
(176,821,q),
(181,818,o),
(193,803,o),
(199,800,q),
(207,793,o),
(214,784,o),
(221,778,qs),
(229,771,o),
(245,757,o),
(249,746,qs),
(251,742,o),
(259,741,o),
(261,745,q),
(272,757,o),
(303,791,o),
(333,826,o),
(353,849,o),
(352,850,qs),
(350,852,o),
(344,857,o),
(342,857,q),
(337,859,o),
(330,857,q),
(316,850,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
153 151 143 3 6 5 90 14 11 3 3 4 103 1 9 8 114 1 7 9 4 76 65 28 2 5 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 5 6 6 5 112 2 1 1 3 8 3 1 114 0 9 8 7 8 9 7 128 12 1 6 11 1 4 3 6 4 106 0 3 0 8 9 3 8 103 13 1 7 7 0 97 10 1 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 5 6 5 133 2 1 1 3 8 3 1 114 0 9 8 7 8 9 7 128 12 1 6 11 1 4 3 6 4 106 0 3 0 8 9 3 8 103 13 1 7 7 0 97 10 1 0 0 38 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 39 values pushed */
159 157 147 146 133 132 1 0 182 181 166 163 157 179 159 179 146 156 147 156 141 140 132 145 133 145 57 55 37 36 33 30 0 131 1 128 14 8 22 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = uni01D3;
unicode = 467;
},
{
glyphname = Ucircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (117,128);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
128 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = Ucircumflex;
unicode = 219;
},
{
glyphname = uni1E76;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (113,-782);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHW[ ]	/* 1 value pushed */
-782 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = uni1E76;
unicode = 7798;
},
{
glyphname = uni0214;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (100,118);
ref = uni030F;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 2 
PUSHB[ ]	/* 1 value pushed */
118 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = uni0214;
unicode = 532;
},
{
glyphname = Udieresis;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (94,127);
ref = uni0308;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 2 
PUSHB[ ]	/* 1 value pushed */
127 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = Udieresis;
unicode = 220;
},
{
glyphname = uni01D7;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (94,127);
ref = uni0308;
},
{
pos = (174,261);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 2 
PUSHB[ ]	/* 1 value pushed */
127 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHW[ ]	/* 1 value pushed */
261 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = uni01D7;
unicode = 471;
},
{
glyphname = uni1E72;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (134,-756);
ref = uni0308;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 2 
PUSHW[ ]	/* 1 value pushed */
-756 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 562;
}
);
note = uni1E72;
unicode = 7794;
},
{
glyphname = uni01D9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(310,0,o),
(392,0,o),
(430,0,o),
(441,1,o),
(443,1,qs),
(450,1,o),
(450,4,q),
(452,12,o),
(461,25,o),
(461,32,qs),
(461,38,o),
(457,43,qs),
(450,51,o),
(457,64,qs),
(458,66,o),
(461,74,o),
(459,75,q),
(453,81,o),
(452,96,o),
(452,103,qs),
(452,198,ls),
(452,206,o),
(454,222,o),
(458,231,qs),
(468,254,o),
(455,271,qs),
(450,278,o),
(454,282,qs),
(459,288,o),
(461,300,o),
(461,306,qs),
(460,312,o),
(457,336,o),
(461,348,qs),
(464,354,o),
(457,361,o),
(451,369,o),
(454,376,q),
(460,385,o),
(460,407,o),
(460,413,q),
(462,424,o),
(458,429,qs),
(453,436,o),
(452,450,o),
(452,457,qs),
(452,542,ls),
(452,547,o),
(451,556,o),
(453,558,qs),
(461,569,o),
(461,582,qs),
(461,654,ls),
(461,665,o),
(452,684,o),
(446,694,q),
(443,702,o),
(430,694,o),
(428,689,q),
(428,687,o),
(427,676,o),
(426,644,o),
(426,610,qs),
(426,603,o),
(429,591,o),
(433,585,q),
(425,573,o),
(425,556,qs),
(425,552,o),
(425,506,o),
(426,447,o),
(426,394,o),
(426,383,qs),
(426,372,o),
(416,372,qs),
(317,372,l),
(305,373,o),
(293,366,qs),
(286,361,o),
(277,374,o),
(271,372,qs),
(265,371,o),
(255,365,o),
(249,372,qs),
(247,374,o),
(241,371,q),
(231,360,o),
(215,371,qs),
(208,377,o),
(193,365,o),
(185,369,qs),
(182,370,o),
(178,369,qs),
(173,367,o),
(144,368,o),
(120,370,o),
(119,369,qs),
(115,365,o),
(90,364,o),
(86,364,qs),
(74,364,o),
(74,378,qs),
(74,679,ls),
(74,686,o),
(70,690,q),
(63,700,o),
(49,699,o),
(49,687,q),
(48,683,o),
(49,627,o),
(50,548,o),
(49,471,o),
(46,416,o),
(43,413,qs),
(42,412,o),
(41,404,o),
(42,402,q),
(47,396,o),
(49,384,o),
(49,378,qs),
(49,357,o),
(49,316,o),
(48,296,qs),
(48,292,o),
(47,283,o),
(45,280,qs),
(40,273,o),
(40,260,qs),
(40,13,ls),
(40,0,o),
(53,0,qs),
(166,0,o)
);
},
{
closed = 1;
nodes = (
(281,523,o),
(281,530,qs),
(281,542,o),
(260,559,o),
(241,559,q),
(231,561,o),
(218,553,o),
(212,545,qs),
(204,534,o),
(212,522,q),
(220,515,o),
(239,498,o),
(249,498,qs),
(267,498,o)
);
},
{
closed = 1;
nodes = (
(236,527,qs),
(235,529,o),
(236,533,q),
(240,537,o),
(243,536,q),
(253,536,o),
(253,529,qs),
(253,528,o),
(251,520,o),
(246,520,qs),
(240,520,o)
);
},
{
closed = 1;
nodes = (
(66,46,qs),
(66,71,o),
(65,100,o),
(66,129,o),
(66,154,qs),
(66,163,o),
(76,183,o),
(74,192,q),
(74,195,o),
(73,210,o),
(74,264,o),
(74,325,qs),
(74,338,o),
(87,338,qs),
(413,338,ls),
(426,338,o),
(426,326,qs),
(426,39,ls),
(426,30,o),
(421,26,o),
(410,26,qs),
(88,26,ls),
(66,26,o)
);
},
{
closed = 1;
nodes = (
(281,181,q),
(285,190,o),
(276,199,q),
(272,205,o),
(250,216,o),
(229,221,o),
(223,215,q),
(219,209,o),
(212,196,o),
(210,188,q),
(210,184,o),
(219,172,o),
(220,166,qs),
(223,152,o),
(255,151,o),
(273,164,q),
(279,170,o)
);
},
{
closed = 1;
nodes = (
(241,177,o),
(240,181,qs),
(239,183,o),
(237,186,o),
(237,187,qs),
(237,189,o),
(239,193,o),
(240,194,qs),
(242,196,o),
(254,192,o),
(255,190,q),
(257,188,o),
(256,185,q),
(256,182,o),
(254,180,qs),
(250,177,o)
);
},
{
closed = 1;
nodes = (
(135,815,o),
(134,801,qs),
(134,790,o),
(146,781,qs),
(153,777,o),
(163,770,o),
(169,771,qs),
(178,772,o),
(193,769,o),
(202,775,qs),
(216,783,o),
(221,813,o),
(219,818,qs),
(215,829,o),
(192,838,o),
(178,838,qs),
(159,838,o)
);
},
{
closed = 1;
nodes = (
(356,786,o),
(363,799,qs),
(370,811,o),
(358,818,qs),
(352,822,o),
(338,828,o),
(333,832,qs),
(326,837,o),
(306,830,o),
(296,825,qs),
(283,818,o),
(280,789,o),
(281,782,q),
(290,763,o),
(321,763,qs),
(340,763,o)
);
},
{
closed = 1;
nodes = (
(295,954,o),
(292,950,qs),
(290,948,o),
(277,931,o),
(275,929,qs),
(273,926,o),
(266,915,o),
(264,914,qs),
(258,911,o),
(254,911,o),
(249,913,q),
(245,918,o),
(223,938,o),
(196,961,o),
(173,977,o),
(168,977,q),
(160,979,o),
(148,977,o),
(152,968,q),
(158,962,o),
(170,949,o),
(174,942,q),
(179,939,o),
(191,924,o),
(197,921,q),
(205,914,o),
(212,905,o),
(219,899,qs),
(227,892,o),
(243,878,o),
(247,867,qs),
(249,863,o),
(257,862,o),
(259,866,q),
(270,878,o),
(301,912,o),
(331,947,o),
(351,970,o),
(350,971,qs),
(348,973,o),
(342,978,o),
(340,978,q),
(335,980,o),
(328,978,q),
(314,971,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
232 227 216 3 11 10 65 28 2 5 11 153 151 143 3 6 5 90 14 11 3 3 4 103 1 9 8 114 1 7 9 6 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
16 1 10 11 10 133 17 1 11 5 11 133 0 5 6 6 5 112 2 1 1 3 8 3 1 114 0 9 8 7 8 9 7 128 14 1 6 13 1 4 3 6 4 106 0 3 0 8 9 3 8 103 15 1 7 7 0 97 12 1 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
16 1 10 11 10 133 17 1 11 5 11 133 0 5 6 5 133 2 1 1 3 8 3 1 114 0 9 8 7 8 9 7 128 14 1 6 13 1 4 3 6 4 106 0 3 0 8 9 3 8 103 15 1 7 7 0 97 12 1 0 0 38 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 51 values pushed */
231 230 214 213 159 157 147 146 133 132 1 0 230 245 231 245 213 229 214 229 182 181 166 163 157 179 159 179 146 156 147 156 141 140 132 145 133 145 57 55 37 36 33 30 0 131 1 128 18 8 22 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = uni01D9;
unicode = 473;
},
{
glyphname = uni01DB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(310,0,o),
(392,0,o),
(430,0,o),
(441,1,o),
(443,1,qs),
(450,1,o),
(450,4,q),
(452,12,o),
(461,25,o),
(461,32,qs),
(461,38,o),
(457,43,qs),
(450,51,o),
(457,64,qs),
(458,66,o),
(461,74,o),
(459,75,q),
(453,81,o),
(452,96,o),
(452,103,qs),
(452,198,ls),
(452,206,o),
(454,222,o),
(458,231,qs),
(468,254,o),
(455,271,qs),
(450,278,o),
(454,282,qs),
(459,288,o),
(461,300,o),
(461,306,qs),
(460,312,o),
(457,336,o),
(461,348,qs),
(464,354,o),
(457,361,o),
(451,369,o),
(454,376,q),
(460,385,o),
(460,407,o),
(460,413,q),
(462,424,o),
(458,429,qs),
(453,436,o),
(452,450,o),
(452,457,qs),
(452,542,ls),
(452,547,o),
(451,556,o),
(453,558,qs),
(461,569,o),
(461,582,qs),
(461,654,ls),
(461,665,o),
(452,684,o),
(446,694,q),
(443,702,o),
(430,694,o),
(428,689,q),
(428,687,o),
(427,676,o),
(426,644,o),
(426,610,qs),
(426,603,o),
(429,591,o),
(433,585,q),
(425,573,o),
(425,556,qs),
(425,552,o),
(425,506,o),
(426,447,o),
(426,394,o),
(426,383,qs),
(426,372,o),
(416,372,qs),
(317,372,l),
(305,373,o),
(293,366,qs),
(286,361,o),
(277,374,o),
(271,372,qs),
(265,371,o),
(255,365,o),
(249,372,qs),
(247,374,o),
(241,371,q),
(231,360,o),
(215,371,qs),
(208,377,o),
(193,365,o),
(185,369,qs),
(182,370,o),
(178,369,qs),
(173,367,o),
(144,368,o),
(120,370,o),
(119,369,qs),
(115,365,o),
(90,364,o),
(86,364,qs),
(74,364,o),
(74,378,qs),
(74,679,ls),
(74,686,o),
(70,690,q),
(63,700,o),
(49,699,o),
(49,687,q),
(48,683,o),
(49,627,o),
(50,548,o),
(49,471,o),
(46,416,o),
(43,413,qs),
(42,412,o),
(41,404,o),
(42,402,q),
(47,396,o),
(49,384,o),
(49,378,qs),
(49,357,o),
(49,316,o),
(48,296,qs),
(48,292,o),
(47,283,o),
(45,280,qs),
(40,273,o),
(40,260,qs),
(40,13,ls),
(40,0,o),
(53,0,qs),
(166,0,o)
);
},
{
closed = 1;
nodes = (
(281,523,o),
(281,530,qs),
(281,542,o),
(260,559,o),
(241,559,q),
(231,561,o),
(218,553,o),
(212,545,qs),
(204,534,o),
(212,522,q),
(220,515,o),
(239,498,o),
(249,498,qs),
(267,498,o)
);
},
{
closed = 1;
nodes = (
(236,527,qs),
(235,529,o),
(236,533,q),
(240,537,o),
(243,536,q),
(253,536,o),
(253,529,qs),
(253,528,o),
(251,520,o),
(246,520,qs),
(240,520,o)
);
},
{
closed = 1;
nodes = (
(66,46,qs),
(66,71,o),
(65,100,o),
(66,129,o),
(66,154,qs),
(66,163,o),
(76,183,o),
(74,192,q),
(74,195,o),
(73,210,o),
(74,264,o),
(74,325,qs),
(74,338,o),
(87,338,qs),
(413,338,ls),
(426,338,o),
(426,326,qs),
(426,39,ls),
(426,30,o),
(421,26,o),
(410,26,qs),
(88,26,ls),
(66,26,o)
);
},
{
closed = 1;
nodes = (
(281,181,q),
(285,190,o),
(276,199,q),
(272,205,o),
(250,216,o),
(229,221,o),
(223,215,q),
(219,209,o),
(212,196,o),
(210,188,q),
(210,184,o),
(219,172,o),
(220,166,qs),
(223,152,o),
(255,151,o),
(273,164,q),
(279,170,o)
);
},
{
closed = 1;
nodes = (
(241,177,o),
(240,181,qs),
(239,183,o),
(237,186,o),
(237,187,qs),
(237,189,o),
(239,193,o),
(240,194,qs),
(242,196,o),
(254,192,o),
(255,190,q),
(257,188,o),
(256,185,q),
(256,182,o),
(254,180,qs),
(250,177,o)
);
},
{
closed = 1;
nodes = (
(135,815,o),
(134,801,qs),
(134,790,o),
(146,781,qs),
(153,777,o),
(163,770,o),
(169,771,qs),
(178,772,o),
(193,769,o),
(202,775,qs),
(216,783,o),
(221,813,o),
(219,818,qs),
(215,829,o),
(192,838,o),
(178,838,qs),
(159,838,o)
);
},
{
closed = 1;
nodes = (
(356,786,o),
(363,799,qs),
(370,811,o),
(358,818,qs),
(352,822,o),
(338,828,o),
(333,832,qs),
(326,837,o),
(306,830,o),
(296,825,qs),
(283,818,o),
(280,789,o),
(281,782,q),
(290,763,o),
(321,763,qs),
(340,763,o)
);
},
{
closed = 1;
nodes = (
(274,910,o),
(263,920,qs),
(242,938,o),
(230,954,q),
(222,961,o),
(208,974,o),
(201,982,qs),
(197,987,o),
(188,997,o),
(181,998,q),
(179,1000,o),
(173,995,o),
(171,996,qs),
(168,998,o),
(157,987,o),
(158,984,qs),
(163,972,o),
(173,949,o),
(189,944,qs),
(195,942,o),
(206,934,o),
(210,929,qs),
(218,920,o),
(239,898,o),
(255,884,qs),
(273,871,o),
(301,876,o),
(305,880,q),
(295,890,o)
);
}
);
userData = {
assembly = "NPUSHW[ ]	/* 37 values pushed */
232 227 216 3 11 10 65 28 2 5 11 153 151 143 3 6 5 90 14 11 3 3 4 103 1 9 8 114 1 7 9 6 76 258 1 10 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
16 1 10 11 10 133 17 1 11 5 11 133 0 5 6 6 5 112 2 1 1 3 8 3 1 114 0 9 8 7 8 9 7 128 14 1 6 13 1 4 3 6 4 106 0 3 0 8 9 3 8 103 15 1 7 7 0 97 12 1 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
16 1 10 11 10 133 17 1 11 5 11 133 0 5 6 5 133 2 1 1 3 8 3 1 114 0 9 8 7 8 9 7 128 14 1 6 13 1 4 3 6 4 106 0 3 0 8 9 3 8 103 15 1 7 7 0 97 12 1 0 0 38 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 51 values pushed */
231 230 214 213 159 157 147 146 133 132 1 0 230 245 231 245 213 229 214 229 182 181 166 163 157 179 159 179 146 156 147 156 141 140 132 145 133 145 57 55 37 36 33 30 0 131 1 128 18 8 22 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = uni01DB;
unicode = 475;
},
{
glyphname = uni01D5;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (94,127);
ref = uni0308;
},
{
pos = (79,668);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 2 
PUSHB[ ]	/* 1 value pushed */
127 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
8 1 
PUSHW[ ]	/* 1 value pushed */
668 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = uni01D5;
unicode = 469;
},
{
glyphname = uni1EE4;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (175,-114);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = uni1EE4;
unicode = 7908;
},
{
glyphname = Ugrave;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(310,0,o),
(392,0,o),
(430,0,o),
(441,1,o),
(443,1,qs),
(450,1,o),
(450,4,q),
(452,12,o),
(461,25,o),
(461,32,qs),
(461,38,o),
(457,43,qs),
(450,51,o),
(457,64,qs),
(458,66,o),
(461,74,o),
(459,75,q),
(453,81,o),
(452,96,o),
(452,103,qs),
(452,198,ls),
(452,206,o),
(454,222,o),
(458,231,qs),
(468,254,o),
(455,271,qs),
(450,278,o),
(454,282,qs),
(459,288,o),
(461,300,o),
(461,306,qs),
(460,312,o),
(457,336,o),
(461,348,qs),
(464,354,o),
(457,361,o),
(451,369,o),
(454,376,q),
(460,385,o),
(460,407,o),
(460,413,q),
(462,424,o),
(458,429,qs),
(453,436,o),
(452,450,o),
(452,457,qs),
(452,542,ls),
(452,547,o),
(451,556,o),
(453,558,qs),
(461,569,o),
(461,582,qs),
(461,654,ls),
(461,665,o),
(452,684,o),
(446,694,q),
(443,702,o),
(430,694,o),
(428,689,q),
(428,687,o),
(427,676,o),
(426,644,o),
(426,610,qs),
(426,603,o),
(429,591,o),
(433,585,q),
(425,573,o),
(425,556,qs),
(425,552,o),
(425,506,o),
(426,447,o),
(426,394,o),
(426,383,qs),
(426,372,o),
(416,372,qs),
(317,372,l),
(305,373,o),
(293,366,qs),
(286,361,o),
(277,374,o),
(271,372,qs),
(265,371,o),
(255,365,o),
(249,372,qs),
(247,374,o),
(241,371,q),
(231,360,o),
(215,371,qs),
(208,377,o),
(193,365,o),
(185,369,qs),
(182,370,o),
(178,369,qs),
(173,367,o),
(144,368,o),
(120,370,o),
(119,369,qs),
(115,365,o),
(90,364,o),
(86,364,qs),
(74,364,o),
(74,378,qs),
(74,679,ls),
(74,686,o),
(70,690,q),
(63,700,o),
(49,699,o),
(49,687,q),
(48,683,o),
(49,627,o),
(50,548,o),
(49,471,o),
(46,416,o),
(43,413,qs),
(42,412,o),
(41,404,o),
(42,402,q),
(47,396,o),
(49,384,o),
(49,378,qs),
(49,357,o),
(49,316,o),
(48,296,qs),
(48,292,o),
(47,283,o),
(45,280,qs),
(40,273,o),
(40,260,qs),
(40,13,ls),
(40,0,o),
(53,0,qs),
(166,0,o)
);
},
{
closed = 1;
nodes = (
(281,523,o),
(281,530,qs),
(281,542,o),
(260,559,o),
(241,559,q),
(231,561,o),
(218,553,o),
(212,545,qs),
(204,534,o),
(212,522,q),
(220,515,o),
(239,498,o),
(249,498,qs),
(267,498,o)
);
},
{
closed = 1;
nodes = (
(236,527,qs),
(235,529,o),
(236,533,q),
(240,537,o),
(243,536,q),
(253,536,o),
(253,529,qs),
(253,528,o),
(251,520,o),
(246,520,qs),
(240,520,o)
);
},
{
closed = 1;
nodes = (
(66,46,qs),
(66,71,o),
(65,100,o),
(66,129,o),
(66,154,qs),
(66,163,o),
(76,183,o),
(74,192,q),
(74,195,o),
(73,210,o),
(74,264,o),
(74,325,qs),
(74,338,o),
(87,338,qs),
(413,338,ls),
(426,338,o),
(426,326,qs),
(426,39,ls),
(426,30,o),
(421,26,o),
(410,26,qs),
(88,26,ls),
(66,26,o)
);
},
{
closed = 1;
nodes = (
(281,181,q),
(285,190,o),
(276,199,q),
(272,205,o),
(250,216,o),
(229,221,o),
(223,215,q),
(219,209,o),
(212,196,o),
(210,188,q),
(210,184,o),
(219,172,o),
(220,166,qs),
(223,152,o),
(255,151,o),
(273,164,q),
(279,170,o)
);
},
{
closed = 1;
nodes = (
(241,177,o),
(240,181,qs),
(239,183,o),
(237,186,o),
(237,187,qs),
(237,189,o),
(239,193,o),
(240,194,qs),
(242,196,o),
(254,192,o),
(255,190,q),
(257,188,o),
(256,185,q),
(256,182,o),
(254,180,qs),
(250,177,o)
);
},
{
closed = 1;
nodes = (
(276,789,o),
(265,799,qs),
(244,817,o),
(232,833,q),
(224,840,o),
(210,853,o),
(203,861,qs),
(199,866,o),
(190,876,o),
(183,877,q),
(181,879,o),
(175,874,o),
(173,875,qs),
(170,877,o),
(159,866,o),
(160,863,qs),
(165,851,o),
(175,828,o),
(191,823,qs),
(197,821,o),
(208,813,o),
(212,808,qs),
(220,799,o),
(241,777,o),
(257,763,qs),
(275,750,o),
(303,755,o),
(307,759,q),
(297,769,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
153 151 143 3 6 5 90 14 11 3 3 4 103 1 9 8 114 1 7 9 4 76 225 65 28 3 5 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 5 6 6 5 112 2 1 1 3 8 3 1 114 0 9 8 7 8 9 7 128 12 1 6 11 1 4 3 6 4 106 0 3 0 8 9 3 8 103 13 1 7 7 0 97 10 1 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 5 6 5 133 2 1 1 3 8 3 1 114 0 9 8 7 8 9 7 128 12 1 6 11 1 4 3 6 4 106 0 3 0 8 9 3 8 103 13 1 7 7 0 97 10 1 0 0 38 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 39 values pushed */
159 157 147 146 133 132 1 0 182 181 166 163 157 179 159 179 146 156 147 156 141 140 132 145 133 145 57 55 37 36 33 30 0 131 1 128 14 8 22 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = Ugrave;
unicode = 217;
},
{
glyphname = uni1EE6;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (145,155);
ref = hookabovecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
155 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = uni1EE6;
unicode = 7910;
},
{
glyphname = Uhorn;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (396,214);
ref = uni031B;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
214 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = Uhorn;
unicode = 431;
},
{
glyphname = uni1EE8;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (396,214);
ref = uni031B;
},
{
pos = (185,143);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
214 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
7 1 
PUSHB[ ]	/* 1 value pushed */
143 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = uni1EE8;
unicode = 7912;
},
{
glyphname = uni1EF0;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (396,214);
ref = uni031B;
},
{
pos = (208,-114);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
214 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
7 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = uni1EF0;
unicode = 7920;
},
{
glyphname = uni1EEA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(310,0,o),
(392,0,o),
(430,0,o),
(441,1,o),
(443,1,qs),
(450,1,o),
(450,4,q),
(452,12,o),
(461,25,o),
(461,32,qs),
(461,38,o),
(457,43,qs),
(450,51,o),
(457,64,qs),
(458,66,o),
(461,74,o),
(459,75,q),
(453,81,o),
(452,96,o),
(452,103,qs),
(452,198,ls),
(452,206,o),
(454,222,o),
(458,231,qs),
(468,254,o),
(455,271,qs),
(450,278,o),
(454,282,qs),
(459,288,o),
(461,300,o),
(461,306,qs),
(460,312,o),
(457,336,o),
(461,348,qs),
(464,354,o),
(457,361,o),
(451,369,o),
(454,376,q),
(460,385,o),
(460,407,o),
(460,413,q),
(462,424,o),
(458,429,qs),
(453,436,o),
(452,450,o),
(452,457,qs),
(452,542,ls),
(452,547,o),
(451,556,o),
(453,558,qs),
(461,569,o),
(461,582,qs),
(461,654,ls),
(461,665,o),
(452,684,o),
(446,694,q),
(443,702,o),
(430,694,o),
(428,689,q),
(428,687,o),
(427,676,o),
(426,644,o),
(426,610,qs),
(426,603,o),
(429,591,o),
(433,585,q),
(425,573,o),
(425,556,qs),
(425,552,o),
(425,506,o),
(426,447,o),
(426,394,o),
(426,383,qs),
(426,372,o),
(416,372,qs),
(317,372,l),
(305,373,o),
(293,366,qs),
(286,361,o),
(277,374,o),
(271,372,qs),
(265,371,o),
(255,365,o),
(249,372,qs),
(247,374,o),
(241,371,q),
(231,360,o),
(215,371,qs),
(208,377,o),
(193,365,o),
(185,369,qs),
(182,370,o),
(178,369,qs),
(173,367,o),
(144,368,o),
(120,370,o),
(119,369,qs),
(115,365,o),
(90,364,o),
(86,364,qs),
(74,364,o),
(74,378,qs),
(74,679,ls),
(74,686,o),
(70,690,q),
(63,700,o),
(49,699,o),
(49,687,q),
(48,683,o),
(49,627,o),
(50,548,o),
(49,471,o),
(46,416,o),
(43,413,qs),
(42,412,o),
(41,404,o),
(42,402,q),
(47,396,o),
(49,384,o),
(49,378,qs),
(49,357,o),
(49,316,o),
(48,296,qs),
(48,292,o),
(47,283,o),
(45,280,qs),
(40,273,o),
(40,260,qs),
(40,13,ls),
(40,0,o),
(53,0,qs),
(166,0,o)
);
},
{
closed = 1;
nodes = (
(281,523,o),
(281,530,qs),
(281,542,o),
(260,559,o),
(241,559,q),
(231,561,o),
(218,553,o),
(212,545,qs),
(204,534,o),
(212,522,q),
(220,515,o),
(239,498,o),
(249,498,qs),
(267,498,o)
);
},
{
closed = 1;
nodes = (
(236,527,qs),
(235,529,o),
(236,533,q),
(240,537,o),
(243,536,q),
(253,536,o),
(253,529,qs),
(253,528,o),
(251,520,o),
(246,520,qs),
(240,520,o)
);
},
{
closed = 1;
nodes = (
(66,46,qs),
(66,71,o),
(65,100,o),
(66,129,o),
(66,154,qs),
(66,163,o),
(76,183,o),
(74,192,q),
(74,195,o),
(73,210,o),
(74,264,o),
(74,325,qs),
(74,338,o),
(87,338,qs),
(413,338,ls),
(426,338,o),
(426,326,qs),
(426,39,ls),
(426,30,o),
(421,26,o),
(410,26,qs),
(88,26,ls),
(66,26,o)
);
},
{
closed = 1;
nodes = (
(281,181,q),
(285,190,o),
(276,199,q),
(272,205,o),
(250,216,o),
(229,221,o),
(223,215,q),
(219,209,o),
(212,196,o),
(210,188,q),
(210,184,o),
(219,172,o),
(220,166,qs),
(223,152,o),
(255,151,o),
(273,164,q),
(279,170,o)
);
},
{
closed = 1;
nodes = (
(241,177,o),
(240,181,qs),
(239,183,o),
(237,186,o),
(237,187,qs),
(237,189,o),
(239,193,o),
(240,194,qs),
(242,196,o),
(254,192,o),
(255,190,q),
(257,188,o),
(256,185,q),
(256,182,o),
(254,180,qs),
(250,177,o)
);
},
{
closed = 1;
nodes = (
(471,673,o),
(475,675,qs),
(482,680,o),
(503,674,o),
(513,675,qs),
(538,677,o),
(572,690,o),
(573,718,qs),
(573,750,ls),
(573,755,o),
(573,785,o),
(574,789,qs),
(579,803,o),
(576,822,o),
(568,834,q),
(563,845,o),
(552,847,o),
(544,834,q),
(547,828,o),
(541,818,o),
(542,813,qs),
(545,794,o),
(543,780,o),
(541,775,o),
(542,768,q),
(544,763,o),
(542,740,o),
(542,735,qs),
(543,718,o),
(517,706,o),
(481,705,o),
(449,706,o),
(443,701,q),
(437,701,o),
(437,675,o),
(449,675,q),
(452,676,o)
);
},
{
closed = 1;
nodes = (
(305,792,o),
(294,802,qs),
(273,820,o),
(261,836,q),
(253,843,o),
(239,856,o),
(232,864,qs),
(228,869,o),
(219,879,o),
(212,880,q),
(210,882,o),
(204,877,o),
(202,878,qs),
(199,880,o),
(188,869,o),
(189,866,qs),
(194,854,o),
(204,831,o),
(220,826,qs),
(226,824,o),
(237,816,o),
(241,811,qs),
(249,802,o),
(270,780,o),
(286,766,qs),
(304,753,o),
(332,758,o),
(336,762,q),
(326,772,o)
);
}
);
userData = {
assembly = "NPUSHW[ ]	/* 38 values pushed */
28 1 10 11 65 1 5 10 153 151 143 3 6 5 90 14 11 3 3 4 103 1 9 8 114 1 7 9 6 76 262 237 231 228 221 5 11 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 5 10 6 6 5 114 2 1 1 3 8 3 1 114 0 9 8 7 8 9 7 128 14 1 6 13 1 4 3 6 4 106 0 3 0 8 9 3 8 103 16 1 10 10 11 97 0 11 11 37 77 15 1 7 7 0 97 12 1 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
0 5 10 6 10 5 6 128 2 1 1 3 8 3 1 114 0 9 8 7 8 9 7 128 14 1 6 13 1 4 3 6 4 106 0 3 0 8 9 3 8 103 16 1 10 10 11 97 0 11 11 37 77 15 1 7 7 0 97 12 1 0 0 38 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 47 values pushed */
214 213 159 157 147 146 133 132 1 0 219 217 213 249 214 247 182 181 166 163 157 179 159 179 146 156 147 156 141 140 132 145 133 145 57 55 37 36 33 30 0 131 1 128 17 8 22 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = uni1EEA;
unicode = 7914;
},
{
glyphname = uni1EEC;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (396,214);
ref = uni031B;
},
{
pos = (174,158);
ref = hookabovecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
214 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
7 1 
PUSHB[ ]	/* 1 value pushed */
158 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = uni1EEC;
unicode = 7916;
},
{
glyphname = uni1EEE;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (396,214);
ref = uni031B;
},
{
pos = (155,95);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
214 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
7 1 
PUSHB[ ]	/* 1 value pushed */
95 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = uni1EEE;
unicode = 7918;
},
{
glyphname = Uhungarumlaut;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (126,117);
ref = uni030B;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 2 
PUSHB[ ]	/* 1 value pushed */
117 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = Uhungarumlaut;
unicode = 368;
},
{
glyphname = uni0216;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (149,115);
ref = uni0311;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
115 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = uni0216;
unicode = 534;
},
{
glyphname = Umacron;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (81,547);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHW[ ]	/* 1 value pushed */
547 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = Umacron;
unicode = 362;
},
{
glyphname = uni1E7A;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (81,547);
ref = hyphen;
},
{
pos = (94,246);
ref = uni0308;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHW[ ]	/* 1 value pushed */
547 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
7 2 
PUSHB[ ]	/* 1 value pushed */
246 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = uni1E7A;
unicode = 7802;
},
{
glyphname = Uogonek;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (366,45);
ref = uni0328;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
45 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = Uogonek;
unicode = 370;
},
{
glyphname = Upsilonlatin;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(740,-3,o),
(750,10,o),
(750,20,qs),
(750,21,o),
(737,54,o),
(719,98,o),
(703,135,o),
(699,140,qs),
(690,153,o),
(683,181,o),
(678,194,qs),
(638,285,o),
(585,407,o),
(552,484,o),
(532,531,o),
(520,561,o),
(510,589,o),
(495,630,o),
(482,664,q),
(536,664,o),
(588,663,o),
(608,662,o),
(613,662,qs),
(618,662,o),
(626,680,o),
(626,687,qs),
(626,695,o),
(618,698,o),
(613,699,qs),
(610,700,o),
(583,707,o),
(578,708,q),
(573,702,o),
(562,698,o),
(557,698,qs),
(531,698,o),
(510,698,o),
(498,698,o),
(477,698,o),
(451,698,qs),
(444,698,o),
(444,691,q),
(443,686,o),
(442,672,o),
(445,669,qs),
(452,662,o),
(451,644,o),
(455,636,qs),
(458,631,o),
(483,573,o),
(521,486,o),
(562,390,o),
(598,303,o),
(621,243,o),
(621,236,qs),
(621,235,o),
(640,194,o),
(667,134,o),
(694,77,o),
(702,59,q),
(704,52,o),
(698,36,o),
(693,34,q),
(646,33,o),
(602,33,o),
(588,33,o),
(582,33,o),
(566,34,o),
(541,34,qs),
(538,34,o),
(531,39,o),
(528,41,qs),
(524,43,o),
(520,32,o),
(515,36,q),
(514,39,o),
(491,41,o),
(463,42,o),
(441,41,o),
(439,39,qs),
(433,31,o),
(425,43,o),
(420,42,qs),
(416,41,o),
(406,42,o),
(401,42,qs),
(387,42,o),
(380,33,o),
(377,36,q),
(373,42,o),
(361,42,o),
(356,42,qs),
(124,41,ls),
(120,41,o),
(109,41,o),
(106,39,qs),
(101,35,o),
(91,32,o),
(86,32,qs),
(70,32,o),
(56,47,o),
(56,54,qs),
(56,65,o),
(71,92,o),
(86,120,o),
(87,130,qs),
(89,146,o),
(96,153,qs),
(99,156,o),
(124,212,o),
(160,298,o),
(203,401,o),
(245,504,o),
(282,592,o),
(306,649,o),
(309,653,qs),
(316,664,o),
(309,698,o),
(295,699,qs),
(289,699,o),
(277,697,o),
(271,697,qs),
(262,697,o),
(246,707,o),
(238,707,qs),
(229,707,o),
(224,701,q),
(220,708,o),
(212,704,o),
(205,697,o),
(200,698,qs),
(194,700,o),
(172,699,o),
(140,699,qs),
(135,699,o),
(128,693,o),
(125,688,qs),
(122,684,o),
(123,675,o),
(126,673,q),
(135,670,o),
(150,663,o),
(159,663,qs),
(165,663,o),
(197,663,o),
(234,663,o),
(263,663,o),
(266,663,qs),
(272,663,o),
(276,654,o),
(273,649,qs),
(269,641,o),
(239,570,o),
(195,468,o),
(148,357,o),
(106,257,o),
(80,191,o),
(79,186,qs),
(77,178,o),
(56,132,o),
(30,75,o),
(10,29,o),
(10,21,qs),
(10,12,o),
(15,4,qs),
(21,-4,o),
(42,6,o),
(64,17,o),
(72,11,qs),
(83,4,o),
(93,3,o),
(102,11,qs),
(110,17,o),
(121,3,o),
(132,3,qs),
(177,4,o),
(218,6,o),
(232,9,o),
(236,9,qs),
(237,9,o),
(290,4,o),
(347,4,qs),
(354,4,o),
(367,7,o),
(374,12,qs),
(380,16,o),
(386,12,q),
(391,7,o),
(402,4,o),
(408,4,qs),
(460,3,o),
(522,4,o),
(559,5,o),
(587,6,o),
(605,6,qs),
(645,3,o),
(683,-1,o),
(698,-3,o),
(702,-3,qs),
(731,-3,ls)
);
},
{
closed = 1;
nodes = (
(415,254,o),
(415,272,qs),
(415,283,o),
(399,302,o),
(391,309,qs),
(380,317,o),
(368,309,qs),
(361,303,o),
(353,290,o),
(354,280,qs),
(354,261,o),
(371,240,o),
(383,240,qs),
(390,240,o)
);
},
{
closed = 1;
nodes = (
(376,278,q),
(375,281,o),
(379,285,q),
(384,287,o),
(385,285,q),
(392,282,o),
(392,275,qs),
(392,271,o),
(385,268,o),
(383,268,qs),
(376,268,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 138 values pushed */
72 1 4 5 219 203 2 17 3 97 1 9 16 110 1 8 9 36 1 0 8 5 76 167 1 5 74 20 1 17 19 1 16 9 17 16 105 0 5 5 37 77 14 1 3 3 4 97 13 7 6 3 4 4 37 77 11 10 2 9 9 0 97 2 1 2 0 0 38 77 12 1 8 8 0 98 2 1 2 0 0 38 77 18 1 15 15 47 15 78 215 214 201 200 0 0 214 224 215 224 200 213 201 213 0 199 0 198 180 175 164 158 136 129 122 121 115 112 109 105 100 99 81 79 77 76 74 73 67 64 57 50 52 39 84 21 8 25 
CALL[ ]	/* CallFunction */";
};
width = 760;
}
);
note = Upsilonlatin;
unicode = 433;
},
{
glyphname = Uring;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (127,80);
ref = uni030A;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 2 
PUSHB[ ]	/* 1 value pushed */
80 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = Uring;
unicode = 366;
},
{
glyphname = Utilde;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (126,92);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
92 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = Utilde;
unicode = 360;
},
{
glyphname = uni1E78;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (126,92);
ref = tildecomb;
},
{
pos = (186,270);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHB[ ]	/* 1 value pushed */
92 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
7 1 
PUSHW[ ]	/* 1 value pushed */
270 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = uni1E78;
unicode = 7800;
},
{
glyphname = uni1E74;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (113,-785);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHW[ ]	/* 1 value pushed */
-785 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = uni1E74;
unicode = 7796;
},
{
glyphname = V;
kernLeft = V;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(233,0,o),
(234,4,qs),
(239,16,o),
(252,37,o),
(259,47,qs),
(267,58,o),
(279,83,o),
(283,96,qs),
(288,112,o),
(303,141,o),
(309,157,qs),
(324,190,o),
(363,252,o),
(378,285,qs),
(383,296,o),
(394,319,o),
(404,328,qs),
(407,331,o),
(407,335,qs),
(407,349,o),
(421,371,o),
(426,381,qs),
(434,397,o),
(434,410,qs),
(434,419,o),
(431,426,qs),
(425,439,o),
(425,472,o),
(432,486,qs),
(436,492,o),
(433,509,o),
(433,516,q),
(424,525,o),
(424,539,qs),
(425,559,o),
(427,581,o),
(432,590,qs),
(434,594,o),
(434,597,qs),
(434,604,o),
(423,618,o),
(423,626,qs),
(423,627,o),
(426,649,o),
(430,654,qs),
(432,657,o),
(433,666,o),
(433,670,qs),
(433,695,o),
(410,695,qs),
(398,695,o),
(394,689,o),
(392,678,qs),
(392,677,o),
(399,660,o),
(399,655,qs),
(399,621,o),
(400,587,o),
(402,575,o),
(405,571,q),
(407,570,o),
(407,562,o),
(405,560,qs),
(401,556,o),
(399,537,o),
(399,480,o),
(399,418,qs),
(399,412,o),
(398,399,o),
(398,393,q),
(390,388,o),
(391,370,o),
(386,362,qs),
(372,338,o),
(348,287,o),
(333,263,qs),
(326,252,o),
(312,229,o),
(307,217,q),
(149,217,ls),
(140,217,o),
(133,213,q),
(131,218,o),
(118,242,o),
(106,268,o),
(106,274,qs),
(106,285,o),
(90,296,o),
(86,306,qs),
(81,323,o),
(65,361,o),
(49,389,q),
(46,397,o),
(46,406,qs),
(46,439,ls),
(46,443,o),
(45,449,o),
(46,452,qs),
(49,460,o),
(58,474,o),
(47,482,q),
(52,489,o),
(55,504,o),
(55,511,qs),
(55,667,l),
(56,670,o),
(56,681,o),
(56,684,qs),
(55,689,o),
(42,698,o),
(34,698,qs),
(20,698,o),
(20,685,qs),
(20,399,ls),
(20,393,o),
(24,382,o),
(26,376,qs),
(38,349,o),
(66,299,o),
(75,270,qs),
(78,262,o),
(95,227,o),
(117,186,o),
(133,151,o),
(134,142,q),
(154,120,o),
(175,65,o),
(191,40,qs),
(196,31,o),
(206,13,o),
(211,4,qs),
(214,0,o)
);
},
{
closed = 1;
nodes = (
(249,365,o),
(255,372,qs),
(263,384,o),
(255,395,qs),
(248,403,o),
(229,419,o),
(218,419,qs),
(200,419,o),
(186,394,o),
(186,387,qs),
(186,375,o),
(207,358,o),
(226,358,qs),
(236,357,o)
);
},
{
closed = 1;
nodes = (
(214,387,qs),
(214,389,o),
(217,396,o),
(221,396,qs),
(228,396,o),
(231,389,q),
(233,388,o),
(231,383,q),
(227,379,o),
(224,380,q),
(214,380,o)
);
},
{
closed = 1;
nodes = (
(221,46,o),
(218,52,q),
(197,83,o),
(162,155,o),
(145,188,q),
(153,188,o),
(178,184,o),
(188,191,qs),
(192,193,o),
(210,191,o),
(213,191,qs),
(294,191,l),
(292,187,o),
(276,153,o),
(254,108,o),
(233,65,o),
(226,51,qs),
(223,45,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
83 75 33 30 27 5 4 0 135 61 2 6 5 112 45 2 1 3 3 76 0 4 0 5 6 4 5 105 8 1 6 0 3 1 6 3 105 0 1 0 7 1 7 99 2 1 0 0 39 0 78 146 146 163 161 146 156 146 156 153 151 139 137 133 132 82 80 52 50 20 19 9 8 22 
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = V;
unicode = 86;
},
{
glyphname = Gammalatin;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(561,674,o),
(558,666,qs),
(549,643,o),
(531,601,o),
(520,578,qs),
(513,564,o),
(505,535,o),
(497,521,qs),
(494,516,o),
(473,472,o),
(445,411,o),
(418,351,o),
(398,306,o),
(395,300,qs),
(389,287,o),
(375,259,o),
(370,245,qs),
(358,213,o),
(331,147,o),
(312,111,q),
(310,110,o),
(302,111,o),
(302,112,q),
(295,131,o),
(283,147,o),
(276,165,o),
(273,185,q),
(260,196,o),
(253,231,o),
(245,245,qs),
(238,258,o),
(226,287,o),
(214,297,q),
(209,309,o),
(181,371,o),
(144,449,o),
(107,527,o),
(80,585,o),
(76,594,q),
(70,599,o),
(52,633,o),
(36,670,o),
(32,677,q),
(31,680,o),
(28,683,o),
(27,685,q),
(18,696,o),
(0,677,o),
(0,662,q),
(35,601,ls),
(39,595,o),
(61,551,o),
(87,498,o),
(109,457,o),
(112,454,qs),
(119,445,o),
(119,437,qs),
(119,428,o),
(129,412,o),
(133,406,qs),
(137,401,o),
(151,372,o),
(163,344,o),
(163,337,qs),
(164,329,o),
(174,310,o),
(180,302,q),
(182,298,o),
(204,253,o),
(233,191,o),
(262,129,o),
(284,84,o),
(286,79,q),
(295,64,o),
(284,51,q),
(270,39,o),
(273,23,q),
(262,6,o),
(249,-32,o),
(236,-47,qs),
(229,-57,o),
(225,-81,o),
(215,-91,qs),
(208,-98,o),
(201,-120,o),
(196,-130,q),
(195,-134,o),
(200,-149,o),
(202,-149,qs),
(210,-150,o),
(225,-151,o),
(232,-151,q),
(254,-146,o),
(289,-147,o),
(328,-151,o),
(356,-151,qs),
(388,-151,ls),
(396,-151,o),
(408,-140,o),
(415,-138,qs),
(417,-137,o),
(414,-124,o),
(413,-121,q),
(404,-107,o),
(385,-79,o),
(380,-61,q),
(379,-50,o),
(367,-30,o),
(362,-22,qs),
(358,-14,o),
(348,-3,o),
(349,7,q),
(350,9,o),
(345,17,o),
(343,18,q),
(333,26,o),
(332,52,o),
(325,62,qs),
(322,67,o),
(327,79,o),
(330,83,q),
(392,220,o),
(477,409,o),
(529,525,o),
(554,579,o),
(555,581,qs),
(560,589,o),
(561,605,o),
(571,634,o),
(588,662,qs),
(594,671,o),
(594,691,o),
(585,699,o),
(578,688,qs),
(574,683,o)
);
},
{
closed = 1;
nodes = (
(276,478,o),
(270,470,qs),
(262,459,o),
(270,447,q),
(278,440,o),
(297,423,o),
(307,423,qs),
(325,423,o),
(339,448,o),
(339,455,qs),
(339,467,o),
(318,484,o),
(299,484,q),
(289,486,o)
);
},
{
closed = 1;
nodes = (
(311,455,qs),
(311,454,o),
(309,446,o),
(304,446,qs),
(298,446,o),
(294,453,qs),
(293,455,o),
(294,459,q),
(298,463,o),
(301,462,q),
(311,462,o)
);
},
{
closed = 1;
nodes = (
(308,23,o),
(312,15,qs),
(326,-13,o),
(353,-72,o),
(366,-101,q),
(365,-106,o),
(379,-121,o),
(377,-121,qs),
(360,-121,o),
(314,-125,o),
(298,-120,qs),
(291,-117,o),
(262,-119,o),
(239,-121,o),
(239,-119,qs),
(243,-98,o),
(265,-48,o),
(291,2,o),
(300,20,q),
(302,22,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
138 1 5 3 77 1 4 5 2 76 85 1 3 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 3 5 5 3 112 7 1 6 2 1 2 0 6 0 101 0 4 4 5 97 0 5 5 40 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 3 5 3 133 7 1 6 2 1 2 0 6 0 101 0 4 4 5 97 0 5 5 40 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
171 170 167 164 156 154 142 140 136 135 44 42 41 40 39 36 8 8 22 
CALL[ ]	/* CallFunction */";
};
width = 594;
}
);
note = Gammalatin;
unicode = 404;
},
{
glyphname = uni1E7E;
layers = (
{
layerId = m01;
shapes = (
{
ref = V;
},
{
pos = (174,-114);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = uni1E7E;
unicode = 7806;
},
{
glyphname = uni01B2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(50,12,o),
(54,6,qs),
(59,-1,o),
(82,2,o),
(83,4,qs),
(90,15,o),
(110,31,o),
(119,38,qs),
(130,46,o),
(148,73,o),
(155,84,qs),
(165,97,o),
(187,122,o),
(198,135,qs),
(222,162,o),
(277,211,o),
(299,238,qs),
(304,243,o),
(329,272,o),
(361,307,o),
(388,335,o),
(394,338,q),
(398,342,o),
(399,344,qs),
(403,357,o),
(422,374,o),
(429,383,q),
(441,393,o),
(442,401,o),
(442,410,qs),
(442,419,o),
(439,426,qs),
(433,439,o),
(433,472,o),
(440,486,qs),
(444,492,o),
(441,509,o),
(441,516,q),
(432,525,o),
(432,539,qs),
(433,559,o),
(435,581,o),
(440,590,qs),
(442,594,o),
(442,597,qs),
(442,604,o),
(431,618,o),
(431,626,qs),
(431,627,o),
(434,653,o),
(438,658,qs),
(440,661,o),
(441,670,o),
(441,674,qs),
(441,699,o),
(418,699,qs),
(412,699,o),
(363,700,o),
(304,700,o),
(261,695,o),
(260,690,qs),
(260,689,o),
(254,674,o),
(269,673,qs),
(291,673,ls),
(295,673,o),
(325,669,o),
(329,673,qs),
(333,676,o),
(340,671,o),
(344,673,qs),
(348,675,o),
(369,683,o),
(380,673,q),
(380,673,o),
(407,672,o),
(407,670,qs),
(407,618,o),
(409,576,o),
(413,571,q),
(415,570,o),
(415,562,o),
(413,560,qs),
(409,556,o),
(407,537,o),
(407,480,o),
(407,418,qs),
(407,403,o),
(406,394,o),
(398,388,o),
(386,376,qs),
(376,366,o),
(339,326,o),
(297,279,o),
(261,239,o),
(250,230,qs),
(240,221,o),
(230,200,o),
(216,200,qs),
(211,200,o),
(174,201,o),
(127,201,o),
(84,200,o),
(72,197,q),
(73,238,o),
(73,319,o),
(74,359,qs),
(74,367,o),
(82,383,o),
(77,391,qs),
(70,405,o),
(79,421,o),
(79,431,qs),
(77,663,l),
(79,671,o),
(74,686,o),
(70,691,qs),
(65,699,o),
(55,700,q),
(54,697,o),
(44,682,o),
(45,659,qs),
(45,653,o),
(47,623,o),
(47,617,qs),
(47,572,o),
(48,504,o),
(48,457,qs),
(47,444,o),
(46,415,o),
(48,403,qs),
(51,387,o),
(38,364,o),
(45,348,q),
(45,337,o),
(39,319,o),
(40,307,qs),
(41,299,o),
(40,265,o),
(42,232,o),
(46,224,q),
(43,214,o),
(44,196,o),
(47,185,q),
(49,181,o),
(49,163,o),
(48,155,qs),
(47,143,o),
(42,105,o),
(40,67,o),
(40,55,q),
(45,32,o)
);
},
{
closed = 1;
nodes = (
(250,395,o),
(256,402,qs),
(264,414,o),
(256,425,qs),
(249,433,o),
(230,449,o),
(219,449,qs),
(201,449,o),
(187,424,o),
(187,417,qs),
(187,405,o),
(208,388,o),
(227,388,qs),
(237,387,o)
);
},
{
closed = 1;
nodes = (
(218,426,o),
(222,426,qs),
(229,426,o),
(232,419,q),
(234,418,o),
(232,413,q),
(228,409,o),
(225,410,q),
(215,410,o),
(215,417,qs),
(215,419,o)
);
},
{
closed = 1;
nodes = (
(78,169,q),
(192,172,ls),
(196,172,o),
(173,143,o),
(136,102,o),
(99,63,o),
(88,52,qs),
(74,38,l),
(77,51,o),
(80,82,o),
(74,96,q),
(81,107,o),
(77,131,o),
(73,142,q),
(80,154,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
97 1 1 2 74 37 23 3 4 1 170 155 2 5 6 17 10 2 0 3 47 1 7 0 5 76 183 180 0 3 7 73 0 1 2 4 2 1 4 128 0 5 0 3 0 5 3 105 0 0 0 7 0 7 99 0 2 2 37 77 0 6 6 4 97 0 4 4 40 6 78 190 188 175 173 168 167 159 157 153 152 96 92 88 85 53 48 8 8 22 
CALL[ ]	/* CallFunction */";
};
width = 483;
}
);
note = uni01B2;
unicode = 434;
},
{
glyphname = uni1E7C;
layers = (
{
layerId = m01;
shapes = (
{
ref = V;
},
{
pos = (124,95);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
95 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = uni1E7C;
unicode = 7804;
},
{
glyphname = uni0245;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(196,669,o),
(191,660,qs),
(175,635,o),
(154,581,o),
(134,558,q),
(133,549,o),
(117,514,o),
(95,473,o),
(78,438,o),
(75,430,qs),
(66,402,o),
(38,351,o),
(26,324,qs),
(24,318,o),
(20,307,o),
(20,301,qs),
(20,15,ls),
(20,2,o),
(34,2,qs),
(42,2,o),
(55,11,o),
(56,16,qs),
(56,19,o),
(56,30,o),
(55,33,q),
(55,189,ls),
(55,197,o),
(52,211,o),
(47,218,q),
(58,226,o),
(49,241,o),
(46,248,qs),
(45,251,o),
(46,257,o),
(46,261,qs),
(46,294,ls),
(46,304,o),
(49,311,qs),
(65,340,o),
(81,377,o),
(86,394,qs),
(90,404,o),
(106,416,o),
(106,426,qs),
(106,433,o),
(118,458,o),
(131,483,o),
(133,487,q),
(140,483,o),
(149,483,qs),
(307,483,l),
(312,471,o),
(326,448,o),
(333,437,qs),
(348,413,o),
(372,362,o),
(386,338,qs),
(391,331,o),
(390,312,o),
(398,307,q),
(398,301,o),
(399,288,o),
(399,282,qs),
(399,221,o),
(399,164,o),
(401,145,o),
(405,140,q),
(407,139,o),
(407,131,o),
(405,129,qs),
(402,126,o),
(400,113,o),
(399,80,o),
(399,45,qs),
(399,40,o),
(392,23,o),
(392,22,qs),
(394,12,o),
(398,5,o),
(410,5,qs),
(433,5,o),
(433,30,qs),
(433,34,o),
(432,43,o),
(430,46,qs),
(426,51,o),
(423,73,o),
(423,74,qs),
(423,82,o),
(434,96,o),
(434,103,qs),
(434,106,o),
(432,110,qs),
(427,119,o),
(425,141,o),
(424,161,qs),
(424,175,o),
(433,184,q),
(433,192,o),
(436,208,o),
(432,214,qs),
(425,228,o),
(425,261,o),
(431,274,qs),
(434,282,o),
(434,290,qs),
(434,303,o),
(426,319,qs),
(421,330,o),
(407,352,o),
(407,365,qs),
(407,369,o),
(404,372,qs),
(394,381,o),
(383,404,o),
(378,415,qs),
(363,448,o),
(324,510,o),
(309,543,qs),
(303,559,o),
(288,588,o),
(283,604,qs),
(279,617,o),
(267,642,o),
(259,653,qs),
(252,663,o),
(239,684,o),
(234,696,q),
(233,701,o),
(214,701,o),
(211,696,qs),
(206,687,o)
);
},
{
closed = 1;
nodes = (
(186,325,o),
(186,313,qs),
(186,306,o),
(200,281,o),
(218,281,qs),
(229,281,o),
(248,298,o),
(255,305,q),
(263,317,o),
(255,328,qs),
(249,336,o),
(236,344,o),
(226,342,q),
(207,342,o)
);
},
{
closed = 1;
nodes = (
(231,317,q),
(233,313,o),
(231,311,q),
(228,304,o),
(221,304,qs),
(217,304,o),
(214,312,o),
(214,313,qs),
(214,320,o),
(224,320,q),
(227,321,o)
);
},
{
closed = 1;
nodes = (
(254,592,o),
(276,547,o),
(292,513,o),
(294,509,q),
(213,509,ls),
(210,509,o),
(192,507,o),
(188,509,qs),
(178,516,o),
(153,512,o),
(145,512,q),
(162,545,o),
(197,617,o),
(218,648,q),
(221,654,o),
(223,655,o),
(226,649,qs),
(233,636,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
83 1 1 6 20 1 4 1 153 1 5 4 115 25 2 3 5 106 102 96 54 40 5 0 3 5 76 163 1 6 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
7 1 4 1 5 5 4 114 0 6 0 1 4 6 1 103 0 5 0 3 0 5 3 106 2 1 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
7 1 4 1 5 1 4 5 128 0 6 0 1 4 6 1 103 0 5 0 3 0 5 3 106 2 1 0 0 38 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
132 132 170 166 152 150 132 145 132 145 141 139 113 111 82 80 52 50 8 8 22 
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = uni0245;
unicode = 581;
},
{
glyphname = W;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(635,6,o),
(642,25,o),
(645,32,q),
(637,51,l),
(637,124,ls),
(637,141,o),
(645,166,o),
(645,183,qs),
(645,205,l),
(635,212,o),
(647,223,o),
(645,228,qs),
(643,235,o),
(636,251,o),
(641,255,q),
(650,266,o),
(643,276,qs),
(636,284,o),
(638,303,o),
(638,312,q),
(646,320,o),
(646,330,qs),
(646,341,o),
(646,401,o),
(645,476,o),
(645,545,o),
(645,565,qs),
(645,570,o),
(645,579,o),
(646,583,q),
(646,588,o),
(640,597,o),
(639,600,q),
(639,605,o),
(644,612,o),
(639,616,qs),
(636,619,o),
(645,632,o),
(645,636,qs),
(646,642,o),
(646,676,o),
(645,681,qs),
(644,685,o),
(627,691,o),
(611,686,o),
(611,673,qs),
(611,457,ls),
(611,443,o),
(618,433,q),
(613,428,o),
(610,416,o),
(610,410,qs),
(610,403,o),
(612,389,o),
(612,381,qs),
(611,311,o),
(611,168,o),
(611,97,qs),
(611,83,o),
(602,84,o),
(595,94,qs),
(593,97,o),
(550,176,o),
(453,354,o),
(370,504,q),
(367,508,o),
(362,517,o),
(365,521,qs),
(372,529,o),
(373,551,o),
(383,557,q),
(385,559,o),
(390,565,o),
(389,566,q),
(388,574,o),
(398,584,o),
(402,590,qs),
(407,597,o),
(419,614,o),
(420,622,q),
(425,637,o),
(444,660,o),
(453,672,qs),
(454,674,o),
(457,685,o),
(455,686,qs),
(448,688,o),
(436,696,o),
(428,696,qs),
(396,696,ls),
(376,696,o),
(363,691,o),
(354,687,o),
(338,688,qs),
(337,688,o),
(308,689,o),
(277,693,o),
(272,696,q),
(265,696,o),
(250,696,o),
(242,695,qs),
(240,695,o),
(235,683,o),
(236,679,q),
(241,671,o),
(248,653,o),
(255,647,qs),
(265,639,o),
(269,619,o),
(276,611,qs),
(289,598,o),
(302,567,o),
(313,553,q),
(310,540,o),
(324,530,qs),
(336,520,o),
(326,507,q),
(324,503,o),
(302,466,o),
(273,415,o),
(244,364,o),
(222,328,o),
(220,324,q),
(214,317,o),
(204,302,o),
(203,295,qs),
(203,290,o),
(191,266,o),
(177,243,o),
(173,238,qs),
(169,234,o),
(159,221,o),
(159,213,qs),
(159,206,o),
(152,199,qs),
(149,196,o),
(127,162,o),
(101,119,o),
(79,83,o),
(75,78,q),
(73,74,o),
(66,77,o),
(66,81,qs),
(66,214,ls),
(66,218,o),
(65,226,o),
(68,229,q),
(67,289,ls),
(67,290,o),
(75,296,o),
(74,303,q),
(64,313,o),
(74,321,q),
(74,326,o),
(72,360,o),
(67,365,q),
(65,369,o),
(69,375,qs),
(82,390,o),
(72,410,qs),
(68,418,o),
(66,432,o),
(66,440,qs),
(66,523,ls),
(66,527,o),
(65,534,o),
(66,538,qs),
(68,543,o),
(77,551,o),
(71,557,qs),
(65,563,o),
(75,572,o),
(74,577,q),
(74,669,ls),
(74,671,o),
(75,675,o),
(73,676,q),
(60,688,o),
(45,686,o),
(40,674,o),
(40,670,qs),
(40,28,ls),
(40,15,o),
(58,-1,o),
(67,9,q),
(68,11,o),
(71,13,o),
(72,15,qs),
(76,21,o),
(91,51,o),
(110,80,o),
(116,84,q),
(120,91,o),
(147,139,o),
(184,202,o),
(221,267,o),
(249,318,o),
(254,328,q),
(266,336,o),
(278,361,o),
(285,371,qs),
(293,382,o),
(300,411,o),
(313,420,q),
(316,437,o),
(323,451,o),
(335,465,o),
(342,480,q),
(342,482,o),
(350,482,o),
(352,481,q),
(371,451,o),
(398,397,o),
(410,371,qs),
(415,359,o),
(429,336,o),
(435,325,qs),
(438,321,o),
(458,284,o),
(485,234,o),
(513,184,o),
(534,148,o),
(537,144,qs),
(545,133,o),
(553,108,o),
(560,97,qs),
(571,78,o),
(589,44,o),
(598,24,qs),
(601,17,o),
(614,11,o),
(618,6,qs),
(625,-2,o)
);
},
{
closed = 1;
nodes = (
(301,625,o),
(288,647,q),
(286,655,o),
(295,657,o),
(310,658,o),
(315,663,qs),
(316,664,o),
(339,658,o),
(341,659,qs),
(355,668,o),
(385,664,o),
(402,664,qs),
(405,664,o),
(406,655,q),
(393,631,o),
(366,583,o),
(352,560,qs),
(348,553,o),
(342,554,o),
(340,556,q),
(327,579,o)
);
},
{
closed = 1;
nodes = (
(379,181,o),
(379,193,qs),
(379,200,o),
(365,225,o),
(347,225,qs),
(337,225,o),
(318,209,o),
(310,201,q),
(302,190,o),
(310,178,qs),
(316,171,o),
(329,163,o),
(339,164,qs),
(358,164,o)
);
},
{
closed = 1;
nodes = (
(334,189,q),
(333,194,o),
(334,195,q),
(338,202,o),
(344,202,qs),
(349,202,o),
(351,195,o),
(351,193,qs),
(351,186,o),
(341,186,q),
(338,185,o)
);
}
);
userData = {
assembly = "NPUSHW[ ]	/* 40 values pushed */
146 128 55 51 4 3 1 244 1 4 3 220 212 183 177 158 85 81 69 68 59 10 5 4 223 1 7 5 275 1 6 7 5 76 229 228 89 3 6 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 4 3 5 3 4 5 128 8 1 6 7 7 6 113 0 5 0 7 6 5 7 105 0 1 1 39 77 0 3 3 0 97 2 1 0 0 39 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 5 3 4 5 128 8 1 6 7 6 134 0 5 0 7 6 5 7 105 0 1 1 39 77 0 3 3 0 97 2 1 0 0 39 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 3 0 1 3 128 0 4 3 5 3 4 5 128 8 1 6 7 6 134 0 5 0 7 6 5 7 105 0 3 3 0 97 2 1 0 0 39 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 23 values pushed */
254 254 274 272 254 267 254 267 263 261 249 248 242 240 143 141 139 136 133 132 9 8 22 
CALL[ ]	/* CallFunction */";
};
width = 686;
}
);
note = W;
unicode = 87;
},
{
glyphname = Wacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = W;
},
{
pos = (253,143);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
143 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 686;
}
);
note = Wacute;
unicode = 7810;
},
{
glyphname = Wcircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = W;
},
{
pos = (194,131);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
131 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 686;
}
);
note = Wcircumflex;
unicode = 372;
},
{
glyphname = Wdieresis;
layers = (
{
layerId = m01;
shapes = (
{
ref = W;
},
{
pos = (171,130);
ref = uni0308;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 2 
PUSHB[ ]	/* 1 value pushed */
130 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 686;
}
);
note = Wdieresis;
unicode = 7812;
},
{
glyphname = uni1E86;
layers = (
{
layerId = m01;
shapes = (
{
ref = W;
},
{
pos = (257,116);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
116 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 686;
}
);
note = uni1E86;
unicode = 7814;
},
{
glyphname = uni1E88;
layers = (
{
layerId = m01;
shapes = (
{
ref = W;
},
{
pos = (256,-114);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 686;
}
);
note = uni1E88;
unicode = 7816;
},
{
glyphname = Wgrave;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(635,6,o),
(642,25,o),
(645,32,q),
(637,51,l),
(637,124,ls),
(637,141,o),
(645,166,o),
(645,183,qs),
(645,205,l),
(635,212,o),
(647,223,o),
(645,228,qs),
(643,235,o),
(636,251,o),
(641,255,q),
(650,266,o),
(643,276,qs),
(636,284,o),
(638,303,o),
(638,312,q),
(646,320,o),
(646,330,qs),
(646,341,o),
(646,401,o),
(645,476,o),
(645,545,o),
(645,565,qs),
(645,570,o),
(645,579,o),
(646,583,q),
(646,588,o),
(640,597,o),
(639,600,q),
(639,605,o),
(644,612,o),
(639,616,qs),
(636,619,o),
(645,632,o),
(645,636,qs),
(646,642,o),
(646,676,o),
(645,681,qs),
(644,685,o),
(627,691,o),
(611,686,o),
(611,673,qs),
(611,457,ls),
(611,443,o),
(618,433,q),
(613,428,o),
(610,416,o),
(610,410,qs),
(610,403,o),
(612,389,o),
(612,381,qs),
(611,311,o),
(611,168,o),
(611,97,qs),
(611,83,o),
(602,84,o),
(595,94,qs),
(593,97,o),
(550,176,o),
(453,354,o),
(370,504,q),
(367,508,o),
(362,517,o),
(365,521,qs),
(372,529,o),
(373,551,o),
(383,557,q),
(385,559,o),
(390,565,o),
(389,566,q),
(388,574,o),
(398,584,o),
(402,590,qs),
(407,597,o),
(419,614,o),
(420,622,q),
(425,637,o),
(444,660,o),
(453,672,qs),
(454,674,o),
(457,685,o),
(455,686,qs),
(448,688,o),
(436,696,o),
(428,696,qs),
(396,696,ls),
(376,696,o),
(363,691,o),
(354,687,o),
(338,688,qs),
(337,688,o),
(308,689,o),
(277,693,o),
(272,696,q),
(265,696,o),
(250,696,o),
(242,695,qs),
(240,695,o),
(235,683,o),
(236,679,q),
(241,671,o),
(248,653,o),
(255,647,qs),
(265,639,o),
(269,619,o),
(276,611,qs),
(289,598,o),
(302,567,o),
(313,553,q),
(310,540,o),
(324,530,qs),
(336,520,o),
(326,507,q),
(324,503,o),
(302,466,o),
(273,415,o),
(244,364,o),
(222,328,o),
(220,324,q),
(214,317,o),
(204,302,o),
(203,295,qs),
(203,290,o),
(191,266,o),
(177,243,o),
(173,238,qs),
(169,234,o),
(159,221,o),
(159,213,qs),
(159,206,o),
(152,199,qs),
(149,196,o),
(127,162,o),
(101,119,o),
(79,83,o),
(75,78,q),
(73,74,o),
(66,77,o),
(66,81,qs),
(66,214,ls),
(66,218,o),
(65,226,o),
(68,229,q),
(67,289,ls),
(67,290,o),
(75,296,o),
(74,303,q),
(64,313,o),
(74,321,q),
(74,326,o),
(72,360,o),
(67,365,q),
(65,369,o),
(69,375,qs),
(82,390,o),
(72,410,qs),
(68,418,o),
(66,432,o),
(66,440,qs),
(66,523,ls),
(66,527,o),
(65,534,o),
(66,538,qs),
(68,543,o),
(77,551,o),
(71,557,qs),
(65,563,o),
(75,572,o),
(74,577,q),
(74,669,ls),
(74,671,o),
(75,675,o),
(73,676,q),
(60,688,o),
(45,686,o),
(40,674,o),
(40,670,qs),
(40,28,ls),
(40,15,o),
(58,-1,o),
(67,9,q),
(68,11,o),
(71,13,o),
(72,15,qs),
(76,21,o),
(91,51,o),
(110,80,o),
(116,84,q),
(120,91,o),
(147,139,o),
(184,202,o),
(221,267,o),
(249,318,o),
(254,328,q),
(266,336,o),
(278,361,o),
(285,371,qs),
(293,382,o),
(300,411,o),
(313,420,q),
(316,437,o),
(323,451,o),
(335,465,o),
(342,480,q),
(342,482,o),
(350,482,o),
(352,481,q),
(371,451,o),
(398,397,o),
(410,371,qs),
(415,359,o),
(429,336,o),
(435,325,qs),
(438,321,o),
(458,284,o),
(485,234,o),
(513,184,o),
(534,148,o),
(537,144,qs),
(545,133,o),
(553,108,o),
(560,97,qs),
(571,78,o),
(589,44,o),
(598,24,qs),
(601,17,o),
(614,11,o),
(618,6,qs),
(625,-2,o)
);
},
{
closed = 1;
nodes = (
(301,625,o),
(288,647,q),
(286,655,o),
(295,657,o),
(310,658,o),
(315,663,qs),
(316,664,o),
(339,658,o),
(341,659,qs),
(355,668,o),
(385,664,o),
(402,664,qs),
(405,664,o),
(406,655,q),
(393,631,o),
(366,583,o),
(352,560,qs),
(348,553,o),
(342,554,o),
(340,556,q),
(327,579,o)
);
},
{
closed = 1;
nodes = (
(379,181,o),
(379,193,qs),
(379,200,o),
(365,225,o),
(347,225,qs),
(337,225,o),
(318,209,o),
(310,201,q),
(302,190,o),
(310,178,qs),
(316,171,o),
(329,163,o),
(339,164,qs),
(358,164,o)
);
},
{
closed = 1;
nodes = (
(334,189,q),
(333,194,o),
(334,195,q),
(338,202,o),
(344,202,qs),
(349,202,o),
(351,195,o),
(351,193,qs),
(351,186,o),
(341,186,q),
(338,185,o)
);
},
{
closed = 1;
nodes = (
(353,792,o),
(342,802,qs),
(321,820,o),
(309,836,q),
(301,843,o),
(287,856,o),
(280,864,qs),
(276,869,o),
(267,879,o),
(260,880,q),
(258,882,o),
(252,877,o),
(250,878,qs),
(247,880,o),
(236,869,o),
(237,866,qs),
(242,854,o),
(252,831,o),
(268,826,qs),
(274,824,o),
(285,816,o),
(289,811,qs),
(297,802,o),
(318,780,o),
(334,766,qs),
(352,753,o),
(380,758,o),
(384,762,q),
(374,772,o)
);
}
);
userData = {
assembly = "NPUSHW[ ]	/* 44 values pushed */
146 128 55 51 4 3 1 244 1 4 3 220 212 183 177 158 85 81 69 68 59 10 5 4 223 1 7 5 275 1 6 7 5 76 291 1 0 74 229 228 89 3 6 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 4 3 5 3 4 5 128 8 1 6 7 7 6 113 0 5 0 7 6 5 7 105 0 1 1 39 77 0 3 3 0 97 2 1 0 0 39 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 5 3 4 5 128 8 1 6 7 6 134 0 5 0 7 6 5 7 105 0 1 1 39 77 0 3 3 0 97 2 1 0 0 39 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 3 0 1 3 128 0 4 3 5 3 4 5 128 8 1 6 7 6 134 0 5 0 7 6 5 7 105 0 3 3 0 97 2 1 0 0 39 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 23 values pushed */
254 254 274 272 254 267 254 267 263 261 249 248 242 240 143 141 139 136 133 132 9 8 22 
CALL[ ]	/* CallFunction */";
};
width = 686;
}
);
note = Wgrave;
unicode = 7808;
},
{
glyphname = uni2C72;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(635,6,o),
(642,25,o),
(645,32,q),
(637,51,l),
(637,124,ls),
(637,141,o),
(645,166,o),
(645,183,qs),
(645,205,l),
(635,212,o),
(647,223,o),
(645,228,qs),
(643,235,o),
(636,251,o),
(641,255,q),
(650,266,o),
(643,276,qs),
(636,284,o),
(638,303,o),
(638,312,q),
(646,320,o),
(646,330,qs),
(646,341,o),
(646,401,o),
(645,476,o),
(645,545,o),
(645,565,qs),
(645,570,o),
(645,579,o),
(646,583,q),
(646,588,o),
(640,597,o),
(639,600,q),
(639,605,o),
(644,612,o),
(639,616,qs),
(636,619,o),
(645,632,o),
(645,636,qs),
(646,642,o),
(646,676,o),
(645,681,qs),
(644,685,o),
(627,691,o),
(611,686,o),
(611,673,qs),
(611,457,ls),
(611,443,o),
(618,433,q),
(613,428,o),
(610,416,o),
(610,410,qs),
(610,403,o),
(612,389,o),
(612,381,qs),
(611,311,o),
(611,168,o),
(611,97,qs),
(611,83,o),
(602,84,o),
(595,94,qs),
(593,97,o),
(550,176,o),
(453,354,o),
(370,504,q),
(367,508,o),
(362,517,o),
(365,521,qs),
(372,529,o),
(373,551,o),
(383,557,q),
(385,559,o),
(390,565,o),
(389,566,q),
(388,574,o),
(398,584,o),
(402,590,qs),
(407,597,o),
(419,614,o),
(420,622,q),
(425,637,o),
(444,660,o),
(453,672,qs),
(454,674,o),
(457,685,o),
(455,686,qs),
(448,688,o),
(436,696,o),
(428,696,qs),
(396,696,ls),
(376,696,o),
(363,691,o),
(354,687,o),
(338,688,qs),
(337,688,o),
(308,689,o),
(277,693,o),
(272,696,q),
(265,696,o),
(250,696,o),
(242,695,qs),
(240,695,o),
(235,683,o),
(236,679,q),
(241,671,o),
(248,653,o),
(255,647,qs),
(265,639,o),
(269,619,o),
(276,611,qs),
(289,598,o),
(302,567,o),
(313,553,q),
(310,540,o),
(324,530,qs),
(336,520,o),
(326,507,q),
(324,503,o),
(302,466,o),
(273,415,o),
(244,364,o),
(222,328,o),
(220,324,q),
(214,317,o),
(204,302,o),
(203,295,qs),
(203,290,o),
(191,266,o),
(177,243,o),
(173,238,qs),
(169,234,o),
(159,221,o),
(159,213,qs),
(159,206,o),
(152,199,qs),
(149,196,o),
(127,162,o),
(101,119,o),
(79,83,o),
(75,78,q),
(73,74,o),
(66,77,o),
(66,81,qs),
(66,214,ls),
(66,218,o),
(65,226,o),
(68,229,q),
(67,289,ls),
(67,290,o),
(75,296,o),
(74,303,q),
(64,313,o),
(74,321,q),
(74,326,o),
(72,360,o),
(67,365,q),
(65,369,o),
(69,375,qs),
(82,390,o),
(72,410,qs),
(68,418,o),
(66,432,o),
(66,440,qs),
(66,523,ls),
(66,527,o),
(65,534,o),
(66,538,qs),
(68,543,o),
(77,551,o),
(71,557,qs),
(65,563,o),
(75,572,o),
(74,577,q),
(74,669,ls),
(74,671,o),
(75,675,o),
(73,676,q),
(60,688,o),
(45,686,o),
(40,674,o),
(40,670,qs),
(40,28,ls),
(40,15,o),
(58,-1,o),
(67,9,q),
(68,11,o),
(71,13,o),
(72,15,qs),
(76,21,o),
(91,51,o),
(110,80,o),
(116,84,q),
(120,91,o),
(147,139,o),
(184,202,o),
(221,267,o),
(249,318,o),
(254,328,q),
(266,336,o),
(278,361,o),
(285,371,qs),
(293,382,o),
(300,411,o),
(313,420,q),
(316,437,o),
(323,451,o),
(335,465,o),
(342,480,q),
(342,482,o),
(350,482,o),
(352,481,q),
(371,451,o),
(398,397,o),
(410,371,qs),
(415,359,o),
(429,336,o),
(435,325,qs),
(438,321,o),
(458,284,o),
(485,234,o),
(513,184,o),
(534,148,o),
(537,144,qs),
(545,133,o),
(553,108,o),
(560,97,qs),
(571,78,o),
(589,44,o),
(598,24,qs),
(601,17,o),
(614,11,o),
(618,6,qs),
(625,-2,o)
);
},
{
closed = 1;
nodes = (
(675,657,o),
(704,657,o),
(710,657,qs),
(731,657,o),
(774,663,o),
(795,666,q),
(802,668,o),
(802,679,o),
(795,680,qs),
(788,681,o),
(784,686,o),
(779,687,qs),
(772,688,o),
(757,689,o),
(749,689,qs),
(650,689,l),
(647,663,l),
(647,657,l),
(649,657,o)
);
},
{
closed = 1;
nodes = (
(301,625,o),
(288,647,q),
(286,655,o),
(295,657,o),
(310,658,o),
(315,663,qs),
(316,664,o),
(339,658,o),
(341,659,qs),
(355,668,o),
(385,664,o),
(402,664,qs),
(405,664,o),
(406,655,q),
(393,631,o),
(366,583,o),
(352,560,qs),
(348,553,o),
(342,554,o),
(340,556,q),
(327,579,o)
);
},
{
closed = 1;
nodes = (
(379,181,o),
(379,193,qs),
(379,200,o),
(365,225,o),
(347,225,qs),
(337,225,o),
(318,209,o),
(310,201,q),
(302,190,o),
(310,178,qs),
(316,171,o),
(329,163,o),
(339,164,qs),
(358,164,o)
);
},
{
closed = 1;
nodes = (
(334,189,q),
(333,194,o),
(334,195,q),
(338,202,o),
(344,202,qs),
(349,202,o),
(351,195,o),
(351,193,qs),
(351,186,o),
(341,186,q),
(338,185,o)
);
}
);
userData = {
assembly = "NPUSHW[ ]	/* 40 values pushed */
146 128 55 51 4 5 1 263 1 4 5 220 212 183 177 158 85 81 69 68 59 10 7 4 223 1 9 7 294 1 8 9 5 76 229 228 89 3 8 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
10 1 8 9 9 8 113 0 7 0 9 8 7 9 105 0 5 5 0 97 2 1 0 0 39 77 6 1 4 4 1 97 3 1 1 1 39 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
10 1 8 9 8 134 0 7 0 9 8 7 9 105 0 5 5 0 97 2 1 0 0 39 77 6 1 4 4 1 97 3 1 1 1 39 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
10 1 8 9 8 134 3 1 1 6 1 4 7 1 4 105 0 7 0 9 8 7 9 105 0 5 5 0 97 2 1 0 0 39 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 27 values pushed */
273 273 293 291 273 286 273 286 282 280 268 267 261 259 251 247 238 235 143 141 139 136 133 132 11 8 22 
CALL[ ]	/* CallFunction */";
};
width = 746;
}
);
note = uni2C72;
unicode = 11378;
},
{
glyphname = X;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(58,18,qs),
(58,23,o),
(57,49,o),
(54,76,o),
(50,81,qs),
(48,84,o),
(51,98,o),
(53,102,qs),
(56,109,o),
(58,133,o),
(58,139,qs),
(58,154,o),
(64,175,o),
(74,184,qs),
(80,189,o),
(103,213,o),
(129,237,o),
(137,240,qs),
(146,245,o),
(161,260,o),
(168,267,qs),
(173,271,o),
(183,279,o),
(185,283,qs),
(191,297,o),
(214,314,o),
(224,324,qs),
(232,332,o),
(239,324,qs),
(249,315,o),
(272,298,o),
(278,285,qs),
(284,274,o),
(301,268,o),
(311,257,qs),
(325,244,o),
(355,215,o),
(370,201,qs),
(375,197,o),
(387,189,o),
(394,186,q),
(406,183,o),
(406,168,qs),
(406,147,ls),
(406,134,o),
(415,120,q),
(417,118,o),
(406,98,o),
(406,95,qs),
(406,93,o),
(414,88,o),
(415,86,qs),
(416,83,o),
(406,78,o),
(410,74,qs),
(417,68,o),
(412,60,qs),
(404,47,o),
(409,17,o),
(418,4,qs),
(422,-2,o),
(432,5,o),
(441,18,o),
(441,21,qs),
(441,151,ls),
(441,177,o),
(424,193,q),
(417,198,o),
(403,209,o),
(400,216,qs),
(397,224,o),
(369,247,o),
(365,251,q),
(358,250,o),
(354,258,o),
(351,267,o),
(345,267,qs),
(341,267,o),
(338,270,q),
(330,285,o),
(305,307,o),
(288,315,qs),
(284,317,o),
(279,326,o),
(275,330,q),
(274,332,o),
(268,335,o),
(266,336,qs),
(254,343,o),
(262,351,qs),
(266,354,o),
(292,378,o),
(324,407,o),
(351,430,o),
(355,433,qs),
(363,438,o),
(371,458,o),
(380,462,qs),
(391,467,o),
(399,481,o),
(406,488,qs),
(415,496,o),
(433,511,o),
(441,518,q),
(441,561,ls),
(441,568,o),
(439,581,o),
(434,587,qs),
(429,593,o),
(440,603,o),
(440,611,qs),
(440,628,o),
(441,665,o),
(441,683,q),
(440,687,o),
(428,699,o),
(423,694,q),
(422,691,o),
(416,688,o),
(415,686,q),
(414,679,o),
(413,663,o),
(409,656,qs),
(407,652,o),
(406,642,o),
(406,637,qs),
(406,557,ls),
(406,534,o),
(397,518,o),
(389,504,qs),
(387,500,o),
(378,498,o),
(376,495,qs),
(369,482,o),
(343,464,o),
(335,452,qs),
(326,439,o),
(300,425,o),
(290,414,qs),
(280,403,o),
(255,383,o),
(244,373,qs),
(237,366,o),
(230,371,qs),
(211,388,o),
(174,423,o),
(151,435,qs),
(144,439,o),
(137,456,o),
(130,457,q),
(123,460,o),
(119,472,o),
(114,473,qs),
(106,475,o),
(95,483,o),
(93,490,qs),
(91,498,o),
(78,498,o),
(73,502,qs),
(67,508,o),
(58,521,o),
(58,530,qs),
(58,562,o),
(59,625,o),
(59,656,qs),
(59,667,o),
(48,685,o),
(46,695,qs),
(46,696,o),
(41,698,o),
(39,697,q),
(24,693,o),
(24,681,qs),
(24,644,ls),
(24,637,o),
(27,621,o),
(32,613,q),
(32,568,ls),
(32,558,o),
(24,537,o),
(24,526,qs),
(24,514,o),
(32,507,qs),
(50,492,o),
(88,462,o),
(99,442,qs),
(102,437,o),
(106,437,qs),
(111,436,o),
(138,416,o),
(172,386,o),
(205,357,o),
(215,348,q),
(198,327,o),
(153,294,o),
(133,274,qs),
(128,270,o),
(94,243,o),
(54,211,o),
(25,183,o),
(24,178,qs),
(22,166,o),
(20,136,o),
(20,121,qs),
(20,100,o),
(22,78,o),
(23,62,o),
(24,40,o),
(24,19,qs),
(24,12,o),
(37,1,o),
(44,1,qs),
(58,1,o)
);
},
{
closed = 1;
nodes = (
(265,553,o),
(265,560,qs),
(265,572,o),
(244,589,o),
(225,589,q),
(215,591,o),
(202,583,o),
(196,575,qs),
(188,564,o),
(196,552,q),
(204,545,o),
(223,528,o),
(233,528,qs),
(251,528,o)
);
},
{
closed = 1;
nodes = (
(220,557,qs),
(219,559,o),
(220,563,q),
(224,567,o),
(227,566,q),
(237,566,o),
(237,559,qs),
(237,558,o),
(235,550,o),
(230,550,qs),
(224,550,o)
);
},
{
closed = 1;
nodes = (
(264,151,q),
(268,160,o),
(259,169,q),
(255,175,o),
(233,186,o),
(212,191,o),
(206,185,q),
(202,179,o),
(195,166,o),
(193,158,q),
(193,154,o),
(202,142,o),
(203,136,qs),
(206,122,o),
(238,121,o),
(256,134,q),
(262,140,o)
);
},
{
closed = 1;
nodes = (
(224,147,o),
(223,151,qs),
(222,153,o),
(220,156,o),
(220,157,qs),
(220,159,o),
(222,163,o),
(223,164,qs),
(225,166,o),
(237,162,o),
(238,160,q),
(240,158,o),
(239,155,q),
(239,152,o),
(237,150,qs),
(233,147,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
234 232 224 3 4 3 108 1 0 2 19 1 5 0 157 148 2 1 5 4 76 101 41 35 3 3 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 3 4 4 3 112 0 0 2 5 2 0 5 128 0 5 1 2 5 1 126 8 1 4 7 1 2 0 4 2 106 6 1 1 1 38 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 4 3 133 0 0 2 5 2 0 5 128 0 5 1 2 5 1 126 8 1 4 7 1 2 0 4 2 106 6 1 1 1 38 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
228 227 214 213 0 0 240 239 227 237 228 237 222 221 213 226 214 226 0 212 0 212 55 54 9 8 22 
CALL[ ]	/* CallFunction */";
};
width = 461;
}
);
note = X;
unicode = 88;
},
{
glyphname = uni1E8C;
layers = (
{
layerId = m01;
shapes = (
{
ref = X;
},
{
pos = (116,130);
ref = uni0308;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 2 
PUSHB[ ]	/* 1 value pushed */
130 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 461;
}
);
note = uni1E8C;
unicode = 7820;
},
{
glyphname = uni1E8A;
layers = (
{
layerId = m01;
shapes = (
{
ref = X;
},
{
pos = (202,116);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
116 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 461;
}
);
note = uni1E8A;
unicode = 7818;
},
{
glyphname = Y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(432,1,o),
(451,23,o),
(451,34,qs),
(451,35,o),
(450,78,o),
(444,102,q),
(444,113,o),
(447,123,qs),
(453,141,o),
(451,183,o),
(448,202,q),
(448,212,o),
(435,212,o),
(420,204,o),
(417,199,qs),
(416,198,o),
(417,190,o),
(417,187,qs),
(417,174,o),
(416,129,o),
(415,81,o),
(414,44,o),
(414,39,q),
(406,35,o),
(396,35,qs),
(392,35,o),
(358,35,o),
(323,36,o),
(318,35,q),
(308,35,o),
(290,45,o),
(280,45,qs),
(279,45,o),
(276,44,o),
(274,44,qs),
(270,43,o),
(256,64,o),
(259,68,qs),
(264,74,o),
(264,85,qs),
(264,89,o),
(263,96,o),
(263,100,qs),
(264,106,o),
(264,163,o),
(264,245,o),
(264,289,qs),
(264,300,o),
(269,317,o),
(281,323,qs),
(302,332,o),
(312,351,qs),
(315,357,o),
(339,384,o),
(371,417,o),
(401,447,o),
(410,455,qs),
(421,465,o),
(436,491,o),
(446,501,qs),
(448,503,o),
(450,512,o),
(450,516,qs),
(450,689,ls),
(450,698,o),
(434,700,o),
(417,690,o),
(417,680,qs),
(416,649,o),
(417,590,o),
(417,558,qs),
(417,553,o),
(420,543,o),
(424,538,qs),
(426,536,o),
(424,531,qs),
(418,515,o),
(404,501,o),
(391,488,q),
(386,481,o),
(378,467,o),
(372,461,qs),
(346,433,o),
(291,379,o),
(264,352,qs),
(256,344,o),
(246,352,q),
(203,393,o),
(123,479,o),
(75,515,qs),
(71,518,o),
(68,528,o),
(68,533,qs),
(68,659,ls),
(68,664,o),
(69,675,o),
(73,679,qs),
(74,680,o),
(74,684,o),
(72,685,q),
(68,690,o),
(54,701,o),
(50,697,qs),
(42,691,o),
(42,679,qs),
(42,674,o),
(42,632,o),
(42,582,o),
(41,541,o),
(40,537,qs),
(40,534,ls),
(40,527,o),
(44,503,o),
(47,500,qs),
(58,492,o),
(75,470,o),
(88,465,q),
(93,464,o),
(100,455,o),
(102,450,qs),
(109,437,o),
(130,416,o),
(142,408,qs),
(153,401,o),
(171,384,o),
(178,374,qs),
(180,372,o),
(183,366,o),
(185,365,qs),
(199,359,o),
(218,335,o),
(229,326,qs),
(237,320,o),
(240,303,o),
(237,296,q),
(229,245,l),
(229,233,o),
(237,225,q),
(240,220,o),
(237,217,qs),
(229,209,o),
(229,196,qs),
(229,188,o),
(229,144,o),
(229,92,o),
(229,51,o),
(229,46,qs),
(229,35,o),
(220,35,qs),
(88,35,ls),
(76,35,o),
(76,48,qs),
(76,95,o),
(76,156,o),
(77,183,qs),
(77,204,o),
(51,210,o),
(51,200,qs),
(51,138,o),
(50,83,o),
(47,67,o),
(43,63,qs),
(42,62,o),
(42,53,o),
(43,51,qs),
(48,44,o),
(51,28,o),
(51,19,qs),
(52,12,o),
(64,1,o),
(71,1,qs),
(418,1,ls)
);
},
{
closed = 1;
nodes = (
(286,539,q),
(290,548,o),
(281,557,q),
(277,563,o),
(255,574,o),
(234,579,o),
(228,573,q),
(224,567,o),
(217,554,o),
(215,546,q),
(215,542,o),
(224,530,o),
(225,524,qs),
(228,510,o),
(260,509,o),
(278,522,q),
(284,528,o)
);
},
{
closed = 1;
nodes = (
(246,535,o),
(245,539,qs),
(244,541,o),
(242,544,o),
(242,545,qs),
(242,547,o),
(244,551,o),
(245,552,qs),
(247,554,o),
(259,550,o),
(260,548,q),
(262,546,o),
(261,543,q),
(261,540,o),
(259,538,qs),
(255,535,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
35 31 2 3 5 165 160 153 133 131 5 1 3 148 1 0 1 3 76 108 78 71 68 4 5 74 0 5 3 5 133 0 3 1 3 133 0 1 0 0 1 112 2 1 0 0 4 96 6 1 4 4 38 4 78 0 0 174 173 0 171 0 170 159 158 147 141 140 138 23 20 7 8 22 
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = Y;
unicode = 89;
},
{
glyphname = Yacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y;
},
{
pos = (179,143);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
143 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = Yacute;
unicode = 221;
},
{
glyphname = Ycircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y;
},
{
pos = (120,131);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
131 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = Ycircumflex;
unicode = 374;
},
{
glyphname = Ydieresis;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y;
},
{
pos = (97,130);
ref = uni0308;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 2 
PUSHB[ ]	/* 1 value pushed */
130 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = Ydieresis;
unicode = 376;
},
{
glyphname = uni1E8E;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y;
},
{
pos = (183,116);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
116 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = uni1E8E;
unicode = 7822;
},
{
glyphname = uni1EF4;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y;
},
{
pos = (182,-114);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = uni1EF4;
unicode = 7924;
},
{
glyphname = Ygrave;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(432,1,o),
(451,23,o),
(451,34,qs),
(451,35,o),
(450,78,o),
(444,102,q),
(444,113,o),
(447,123,qs),
(453,141,o),
(451,183,o),
(448,202,q),
(448,212,o),
(435,212,o),
(420,204,o),
(417,199,qs),
(416,198,o),
(417,190,o),
(417,187,qs),
(417,174,o),
(416,129,o),
(415,81,o),
(414,44,o),
(414,39,q),
(406,35,o),
(396,35,qs),
(392,35,o),
(358,35,o),
(323,36,o),
(318,35,q),
(308,35,o),
(290,45,o),
(280,45,qs),
(279,45,o),
(276,44,o),
(274,44,qs),
(270,43,o),
(256,64,o),
(259,68,qs),
(264,74,o),
(264,85,qs),
(264,89,o),
(263,96,o),
(263,100,qs),
(264,106,o),
(264,163,o),
(264,245,o),
(264,289,qs),
(264,300,o),
(269,317,o),
(281,323,qs),
(302,332,o),
(312,351,qs),
(315,357,o),
(339,384,o),
(371,417,o),
(401,447,o),
(410,455,qs),
(421,465,o),
(436,491,o),
(446,501,qs),
(448,503,o),
(450,512,o),
(450,516,qs),
(450,689,ls),
(450,698,o),
(434,700,o),
(417,690,o),
(417,680,qs),
(416,649,o),
(417,590,o),
(417,558,qs),
(417,553,o),
(420,543,o),
(424,538,qs),
(426,536,o),
(424,531,qs),
(418,515,o),
(404,501,o),
(391,488,q),
(386,481,o),
(378,467,o),
(372,461,qs),
(346,433,o),
(291,379,o),
(264,352,qs),
(256,344,o),
(246,352,q),
(203,393,o),
(123,479,o),
(75,515,qs),
(71,518,o),
(68,528,o),
(68,533,qs),
(68,659,ls),
(68,664,o),
(69,675,o),
(73,679,qs),
(74,680,o),
(74,684,o),
(72,685,q),
(68,690,o),
(54,701,o),
(50,697,qs),
(42,691,o),
(42,679,qs),
(42,674,o),
(42,632,o),
(42,582,o),
(41,541,o),
(40,537,qs),
(40,534,ls),
(40,527,o),
(44,503,o),
(47,500,qs),
(58,492,o),
(75,470,o),
(88,465,q),
(93,464,o),
(100,455,o),
(102,450,qs),
(109,437,o),
(130,416,o),
(142,408,qs),
(153,401,o),
(171,384,o),
(178,374,qs),
(180,372,o),
(183,366,o),
(185,365,qs),
(199,359,o),
(218,335,o),
(229,326,qs),
(237,320,o),
(240,303,o),
(237,296,q),
(229,245,l),
(229,233,o),
(237,225,q),
(240,220,o),
(237,217,qs),
(229,209,o),
(229,196,qs),
(229,188,o),
(229,144,o),
(229,92,o),
(229,51,o),
(229,46,qs),
(229,35,o),
(220,35,qs),
(88,35,ls),
(76,35,o),
(76,48,qs),
(76,95,o),
(76,156,o),
(77,183,qs),
(77,204,o),
(51,210,o),
(51,200,qs),
(51,138,o),
(50,83,o),
(47,67,o),
(43,63,qs),
(42,62,o),
(42,53,o),
(43,51,qs),
(48,44,o),
(51,28,o),
(51,19,qs),
(52,12,o),
(64,1,o),
(71,1,qs),
(418,1,ls)
);
},
{
closed = 1;
nodes = (
(286,539,q),
(290,548,o),
(281,557,q),
(277,563,o),
(255,574,o),
(234,579,o),
(228,573,q),
(224,567,o),
(217,554,o),
(215,546,q),
(215,542,o),
(224,530,o),
(225,524,qs),
(228,510,o),
(260,509,o),
(278,522,q),
(284,528,o)
);
},
{
closed = 1;
nodes = (
(246,535,o),
(245,539,qs),
(244,541,o),
(242,544,o),
(242,545,qs),
(242,547,o),
(244,551,o),
(245,552,qs),
(247,554,o),
(259,550,o),
(260,548,q),
(262,546,o),
(261,543,q),
(261,540,o),
(259,538,qs),
(255,535,o)
);
},
{
closed = 1;
nodes = (
(279,792,o),
(268,802,qs),
(247,820,o),
(235,836,q),
(227,843,o),
(213,856,o),
(206,864,qs),
(202,869,o),
(193,879,o),
(186,880,q),
(184,882,o),
(178,877,o),
(176,878,qs),
(173,880,o),
(162,869,o),
(163,866,qs),
(168,854,o),
(178,831,o),
(194,826,qs),
(200,824,o),
(211,816,o),
(215,811,qs),
(223,802,o),
(244,780,o),
(260,766,qs),
(278,753,o),
(306,758,o),
(310,762,q),
(300,772,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
35 31 2 3 5 165 160 153 133 131 5 1 3 148 1 0 1 3 76 217 108 78 71 68 5 5 74 0 5 3 5 133 0 3 1 3 133 0 1 0 0 1 112 2 1 0 0 4 96 6 1 4 4 38 4 78 0 0 174 173 0 171 0 170 159 158 147 141 140 138 23 20 7 8 22 
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = Ygrave;
unicode = 7922;
},
{
glyphname = uni01B3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(432,1,o),
(451,23,o),
(451,34,qs),
(451,35,o),
(450,78,o),
(444,102,q),
(444,113,o),
(447,123,qs),
(453,141,o),
(451,183,o),
(448,202,q),
(448,212,o),
(435,212,o),
(420,204,o),
(417,199,qs),
(416,198,o),
(417,190,o),
(417,187,qs),
(417,174,o),
(416,129,o),
(415,81,o),
(414,44,o),
(414,39,q),
(406,35,o),
(396,35,qs),
(392,35,o),
(358,35,o),
(323,36,o),
(318,35,q),
(308,35,o),
(290,45,o),
(280,45,qs),
(279,45,o),
(276,44,o),
(274,44,qs),
(270,43,o),
(256,64,o),
(259,68,qs),
(264,74,o),
(264,85,qs),
(264,89,o),
(263,96,o),
(263,100,qs),
(264,106,o),
(264,163,o),
(264,245,o),
(264,289,qs),
(264,300,o),
(269,317,o),
(281,323,qs),
(302,332,o),
(312,351,qs),
(315,357,o),
(339,384,o),
(371,417,o),
(401,447,o),
(410,455,qs),
(421,465,o),
(436,491,o),
(446,501,qs),
(448,503,o),
(450,512,o),
(450,516,qs),
(450,670,l),
(456,669,o),
(462,669,qs),
(467,669,o),
(490,670,o),
(495,668,q),
(502,667,o),
(507,669,o),
(521,671,o),
(540,668,qs),
(545,667,o),
(555,673,o),
(561,670,q),
(574,678,o),
(572,689,o),
(561,694,q),
(549,702,o),
(530,705,o),
(516,700,qs),
(512,699,o),
(482,699,o),
(477,699,qs),
(454,700,o),
(449,700,o),
(445,700,qs),
(438,699,ls),
(431,699,o),
(417,689,o),
(417,680,qs),
(416,649,o),
(417,590,o),
(417,558,qs),
(417,553,o),
(420,543,o),
(424,538,qs),
(426,536,o),
(424,531,qs),
(418,515,o),
(404,501,o),
(391,488,q),
(386,481,o),
(378,467,o),
(372,461,qs),
(346,433,o),
(291,379,o),
(264,352,qs),
(256,344,o),
(246,352,q),
(203,393,o),
(123,479,o),
(75,515,qs),
(71,518,o),
(68,528,o),
(68,533,qs),
(68,659,ls),
(68,664,o),
(69,675,o),
(73,679,qs),
(74,680,o),
(74,684,o),
(72,685,q),
(68,690,o),
(54,701,o),
(50,697,qs),
(42,691,o),
(42,679,qs),
(42,674,o),
(42,632,o),
(42,582,o),
(41,541,o),
(40,537,qs),
(40,534,ls),
(40,527,o),
(44,503,o),
(47,500,qs),
(58,492,o),
(75,470,o),
(88,465,q),
(93,464,o),
(100,455,o),
(102,450,qs),
(109,437,o),
(130,416,o),
(142,408,qs),
(153,401,o),
(171,384,o),
(178,374,qs),
(180,372,o),
(183,366,o),
(185,365,qs),
(199,359,o),
(218,335,o),
(229,326,qs),
(237,320,o),
(240,303,o),
(237,296,q),
(229,245,l),
(229,233,o),
(237,225,q),
(240,220,o),
(237,217,qs),
(229,209,o),
(229,196,qs),
(229,188,o),
(229,144,o),
(229,92,o),
(229,51,o),
(229,46,qs),
(229,35,o),
(220,35,qs),
(88,35,ls),
(76,35,o),
(76,48,qs),
(76,95,o),
(76,156,o),
(77,183,qs),
(77,204,o),
(51,210,o),
(51,200,qs),
(51,138,o),
(50,83,o),
(47,67,o),
(43,63,qs),
(42,62,o),
(42,53,o),
(43,51,qs),
(48,44,o),
(51,28,o),
(51,19,qs),
(52,12,o),
(64,1,o),
(71,1,qs),
(418,1,ls)
);
},
{
closed = 1;
nodes = (
(286,539,q),
(290,548,o),
(281,557,q),
(277,563,o),
(255,574,o),
(234,579,o),
(228,573,q),
(224,567,o),
(217,554,o),
(215,546,q),
(215,542,o),
(224,530,o),
(225,524,qs),
(228,510,o),
(260,509,o),
(278,522,q),
(284,528,o)
);
},
{
closed = 1;
nodes = (
(246,535,o),
(245,539,qs),
(244,541,o),
(242,544,o),
(242,545,qs),
(242,547,o),
(244,551,o),
(245,552,qs),
(247,554,o),
(259,550,o),
(260,548,q),
(262,546,o),
(261,543,q),
(261,540,o),
(259,538,qs),
(255,535,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 97 values pushed */
119 71 68 3 2 1 132 78 2 7 2 35 31 2 5 7 189 184 177 157 155 5 3 5 172 1 0 3 5 76 0 7 2 5 2 7 5 128 0 5 3 2 5 3 126 0 3 0 0 3 112 0 2 2 1 97 0 1 1 37 77 4 1 0 0 6 96 8 1 6 6 38 6 78 0 0 198 197 0 195 0 194 183 182 171 165 164 162 130 126 112 107 23 20 9 8 22 
CALL[ ]	/* CallFunction */";
};
width = 543;
}
);
note = uni01B3;
unicode = 435;
},
{
glyphname = uni1EF6;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y;
},
{
pos = (148,158);
ref = hookabovecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
158 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = uni1EF6;
unicode = 7926;
},
{
glyphname = uni0232;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y;
},
{
pos = (84,550);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
550 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = uni0232;
unicode = 562;
},
{
glyphname = uni024E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(509,1,o),
(528,23,o),
(528,34,qs),
(528,35,o),
(527,78,o),
(521,102,q),
(521,113,o),
(524,123,qs),
(530,141,o),
(528,183,o),
(525,202,q),
(525,212,o),
(512,212,o),
(497,204,o),
(494,199,qs),
(493,198,o),
(494,190,o),
(494,187,qs),
(494,174,o),
(493,129,o),
(492,81,o),
(491,44,o),
(491,39,q),
(483,35,o),
(473,35,qs),
(469,35,o),
(435,35,o),
(400,36,o),
(395,35,q),
(385,35,o),
(367,45,o),
(357,45,qs),
(356,45,o),
(353,44,o),
(351,44,qs),
(347,43,o),
(333,64,o),
(336,68,qs),
(341,74,o),
(341,85,qs),
(341,89,o),
(340,96,o),
(340,100,qs),
(341,106,o),
(341,163,o),
(341,245,o),
(341,289,qs),
(341,300,o),
(346,317,o),
(358,323,qs),
(379,332,o),
(389,351,qs),
(392,357,o),
(416,384,o),
(448,417,o),
(478,447,o),
(487,455,qs),
(498,465,o),
(513,491,o),
(523,501,qs),
(525,503,o),
(527,512,o),
(527,516,qs),
(527,557,l),
(559,557,o),
(621,562,o),
(637,568,q),
(634,574,l),
(620,584,o),
(573,590,o),
(541,589,q),
(535,587,o),
(527,587,q),
(527,689,ls),
(527,698,o),
(511,700,o),
(494,690,o),
(494,680,qs),
(493,656,o),
(493,611,o),
(494,588,q),
(477,588,ls),
(466,588,o),
(408,588,o),
(333,588,o),
(258,588,o),
(200,589,o),
(188,589,qs),
(177,589,o),
(156,589,o),
(145,590,q),
(145,659,ls),
(145,664,o),
(146,675,o),
(150,679,qs),
(151,680,o),
(151,684,o),
(149,685,q),
(145,690,o),
(131,701,o),
(127,697,qs),
(119,691,o),
(119,679,qs),
(119,673,o),
(119,618,o),
(119,590,q),
(68,590,ls),
(48,590,o),
(22,584,o),
(7,583,qs),
(1,582,o),
(0,570,o),
(6,569,qs),
(21,565,o),
(54,558,o),
(71,558,qs),
(86,558,o),
(99,561,qs),
(107,563,o),
(118,563,q),
(118,541,o),
(117,537,qs),
(117,534,ls),
(117,527,o),
(121,503,o),
(124,500,qs),
(135,492,o),
(152,470,o),
(165,465,q),
(170,464,o),
(177,455,o),
(179,450,qs),
(186,437,o),
(207,416,o),
(219,408,qs),
(230,401,o),
(248,384,o),
(255,374,qs),
(257,372,o),
(260,366,o),
(262,365,qs),
(276,359,o),
(295,335,o),
(306,326,qs),
(314,320,o),
(317,303,o),
(314,296,q),
(306,245,l),
(306,233,o),
(314,225,q),
(317,220,o),
(314,217,qs),
(306,209,o),
(306,196,qs),
(306,188,o),
(306,144,o),
(306,92,o),
(306,51,o),
(306,46,qs),
(306,35,o),
(297,35,qs),
(165,35,ls),
(153,35,o),
(153,48,qs),
(153,95,o),
(153,156,o),
(154,183,qs),
(154,204,o),
(128,210,o),
(128,200,qs),
(128,138,o),
(127,83,o),
(124,67,o),
(120,63,qs),
(119,62,o),
(119,53,o),
(120,51,qs),
(125,44,o),
(128,28,o),
(128,19,qs),
(129,12,o),
(141,1,o),
(148,1,qs),
(495,1,ls)
);
},
{
closed = 1;
nodes = (
(428,558,o),
(444,557,qs),
(454,557,o),
(479,557,o),
(494,557,q),
(494,552,o),
(497,543,o),
(501,538,qs),
(503,536,o),
(501,531,qs),
(495,515,o),
(481,501,o),
(468,488,qs),
(465,485,o),
(436,452,o),
(395,408,o),
(355,366,o),
(341,352,qs),
(333,344,o),
(323,352,q),
(280,393,o),
(200,479,o),
(152,515,qs),
(148,518,o),
(145,528,o),
(145,533,qs),
(145,565,l),
(165,565,o),
(206,564,o),
(219,564,qs),
(236,563,o),
(277,564,o),
(294,564,qs),
(300,564,o),
(311,564,o),
(315,563,qs),
(330,559,o),
(362,557,o),
(378,557,qs),
(395,557,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
116 110 2 1 3 213 197 120 35 31 5 9 2 177 172 165 145 143 5 7 9 160 1 0 7 4 76 92 85 82 3 3 74 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
116 110 2 1 3 213 197 120 35 31 5 9 6 177 172 165 145 143 5 7 9 160 1 0 7 4 76 92 85 82 3 3 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
116 110 2 1 3 213 197 120 35 31 5 9 2 177 172 165 145 143 5 7 9 160 1 0 7 4 76 92 85 82 3 3 74 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 9 2 7 2 9 7 128 0 7 0 0 7 112 12 1 1 2 3 1 89 5 4 2 3 14 11 6 3 2 9 3 2 105 8 1 0 0 10 96 13 1 10 10 38 10 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 9 6 7 6 9 7 128 0 7 0 0 7 112 12 2 2 1 6 3 1 89 5 4 2 3 14 11 2 6 9 3 6 105 8 1 0 0 10 96 13 1 10 10 38 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 9 2 7 2 9 7 128 0 7 0 0 7 112 12 1 1 2 3 1 89 5 4 2 3 14 11 6 3 2 9 3 2 105 8 1 0 0 10 96 13 1 10 10 38 10 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
186 184 0 0 196 187 184 223 186 219 0 183 0 182 171 170 159 153 152 150 119 118 113 112 102 93 77 75 68 66 64 63 23 20 15 8 22 
CALL[ ]	/* CallFunction */";
};
width = 637;
}
);
note = uni024E;
unicode = 590;
},
{
glyphname = uni1EF8;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y;
},
{
pos = (129,95);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
95 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = uni1EF8;
unicode = 7928;
},
{
glyphname = Z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(431,3,o),
(431,22,qs),
(431,339,ls),
(431,344,o),
(430,347,qs),
(429,349,o),
(423,351,qs),
(416,352,o),
(401,347,o),
(399,340,qs),
(393,325,o),
(373,299,o),
(371,283,qs),
(371,279,o),
(365,273,qs),
(358,268,o),
(351,253,o),
(346,245,qs),
(340,235,o),
(314,190,o),
(281,136,o),
(248,84,o),
(224,48,o),
(220,45,q),
(216,37,o),
(210,33,o),
(203,33,qs),
(100,33,ls),
(87,33,o),
(84,38,o),
(88,50,qs),
(93,63,o),
(121,94,o),
(123,108,qs),
(125,115,o),
(138,145,o),
(154,174,o),
(159,178,qs),
(164,183,o),
(169,196,o),
(171,202,qs),
(172,205,o),
(173,212,o),
(177,215,qs),
(182,219,o),
(194,244,o),
(204,271,o),
(205,277,qs),
(206,281,o),
(228,322,o),
(260,380,o),
(293,438,o),
(318,478,o),
(321,481,qs),
(331,489,o),
(333,510,o),
(340,517,qs),
(345,523,o),
(358,552,o),
(372,581,o),
(378,585,qs),
(385,591,o),
(387,609,o),
(391,616,qs),
(399,627,o),
(412,653,o),
(419,665,qs),
(422,670,o),
(434,682,o),
(430,686,qs),
(426,691,o),
(412,696,o),
(405,698,qs),
(400,700,o),
(390,698,o),
(385,698,qs),
(57,698,ls),
(31,698,o),
(31,676,qs),
(31,574,ls),
(31,567,o),
(30,530,o),
(34,520,q),
(31,515,o),
(30,488,o),
(31,463,o),
(31,459,qs),
(31,364,ls),
(31,360,o),
(30,352,o),
(31,349,qs),
(32,347,o),
(41,343,o),
(42,344,qs),
(50,349,o),
(62,361,o),
(66,369,qs),
(74,386,o),
(97,418,o),
(101,437,qs),
(104,449,o),
(133,482,o),
(134,493,qs),
(136,504,o),
(143,513,qs),
(150,521,o),
(173,556,o),
(197,600,o),
(218,637,o),
(223,646,qs),
(225,650,o),
(234,655,o),
(238,659,q),
(248,659,o),
(264,667,o),
(272,667,qs),
(318,667,ls),
(325,667,o),
(332,664,o),
(354,659,q),
(356,660,o),
(359,666,o),
(361,667,qs),
(367,669,o),
(385,662,o),
(381,654,qs),
(373,640,o),
(344,588,o),
(310,528,o),
(279,471,o),
(258,432,o),
(256,428,qs),
(249,414,o),
(234,385,o),
(222,374,qs),
(214,366,o),
(214,359,qs),
(214,354,o),
(198,319,o),
(177,282,o),
(167,273,q),
(166,263,o),
(143,216,o),
(109,157,o),
(74,99,o),
(45,57,o),
(39,50,qs),
(32,43,o),
(25,26,o),
(21,17,qs),
(19,13,o),
(25,3,o),
(30,3,qs),
(410,3,ls)
);
},
{
closed = 1;
nodes = (
(57,431,o),
(57,441,q),
(58,447,o),
(56,460,o),
(62,467,q),
(56,487,o),
(59,505,o),
(63,521,q),
(59,545,o),
(58,558,o),
(56,561,q),
(55,566,o),
(65,572,o),
(63,577,qs),
(56,591,o),
(59,631,o),
(59,647,qs),
(59,650,o),
(61,659,o),
(63,660,q),
(71,668,o),
(83,669,q),
(86,670,o),
(93,660,o),
(99,666,qs),
(102,669,o),
(119,664,o),
(136,658,o),
(138,660,q),
(152,669,o),
(192,670,o),
(199,665,q),
(193,653,o),
(186,646,q),
(178,634,o),
(163,609,o),
(159,593,qs),
(158,590,o),
(154,585,o),
(151,581,qs),
(133,559,o),
(112,511,o),
(95,489,q),
(90,485,o),
(90,473,o),
(87,468,qs),
(82,457,o),
(69,433,o),
(63,422,qs),
(60,415,o)
);
},
{
closed = 1;
nodes = (
(261,38,o),
(265,46,qs),
(270,55,o),
(299,105,o),
(338,170,o),
(376,232,o),
(401,272,o),
(402,272,q),
(402,188,o),
(402,94,o),
(402,49,o),
(401,36,o),
(399,33,q),
(370,31,o),
(335,31,o),
(302,33,o),
(275,32,qs),
(265,31,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
174 1 1 0 213 198 195 189 150 59 6 3 1 2 76 0 1 0 3 0 1 114 5 1 0 0 2 95 0 2 2 39 77 6 1 3 3 4 95 7 1 4 4 38 4 78 0 0 208 204 173 172 0 153 0 152 126 125 77 75 40 39 37 35 8 8 22 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = Z;
unicode = 90;
},
{
glyphname = Zacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = Z;
},
{
pos = (149,141);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
141 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = Zacute;
unicode = 377;
},
{
glyphname = Zcaron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(431,3,o),
(431,22,qs),
(431,339,ls),
(431,344,o),
(430,347,qs),
(429,349,o),
(423,351,qs),
(416,352,o),
(401,347,o),
(399,340,qs),
(393,325,o),
(373,299,o),
(371,283,qs),
(371,279,o),
(365,273,qs),
(358,268,o),
(351,253,o),
(346,245,qs),
(340,235,o),
(314,190,o),
(281,136,o),
(248,84,o),
(224,48,o),
(220,45,q),
(216,37,o),
(210,33,o),
(203,33,qs),
(100,33,ls),
(87,33,o),
(84,38,o),
(88,50,qs),
(93,63,o),
(121,94,o),
(123,108,qs),
(125,115,o),
(138,145,o),
(154,174,o),
(159,178,qs),
(164,183,o),
(169,196,o),
(171,202,qs),
(172,205,o),
(173,212,o),
(177,215,qs),
(182,219,o),
(194,244,o),
(204,271,o),
(205,277,qs),
(206,281,o),
(228,322,o),
(260,380,o),
(293,438,o),
(318,478,o),
(321,481,qs),
(331,489,o),
(333,510,o),
(340,517,qs),
(345,523,o),
(358,552,o),
(372,581,o),
(378,585,qs),
(385,591,o),
(387,609,o),
(391,616,qs),
(399,627,o),
(412,653,o),
(419,665,qs),
(422,670,o),
(434,682,o),
(430,686,qs),
(426,691,o),
(412,696,o),
(405,698,qs),
(400,700,o),
(390,698,o),
(385,698,qs),
(57,698,ls),
(31,698,o),
(31,676,qs),
(31,574,ls),
(31,567,o),
(30,530,o),
(34,520,q),
(31,515,o),
(30,488,o),
(31,463,o),
(31,459,qs),
(31,364,ls),
(31,360,o),
(30,352,o),
(31,349,qs),
(32,347,o),
(41,343,o),
(42,344,qs),
(50,349,o),
(62,361,o),
(66,369,qs),
(74,386,o),
(97,418,o),
(101,437,qs),
(104,449,o),
(133,482,o),
(134,493,qs),
(136,504,o),
(143,513,qs),
(150,521,o),
(173,556,o),
(197,600,o),
(218,637,o),
(223,646,qs),
(225,650,o),
(234,655,o),
(238,659,q),
(248,659,o),
(264,667,o),
(272,667,qs),
(318,667,ls),
(325,667,o),
(332,664,o),
(354,659,q),
(356,660,o),
(359,666,o),
(361,667,qs),
(367,669,o),
(385,662,o),
(381,654,qs),
(373,640,o),
(344,588,o),
(310,528,o),
(279,471,o),
(258,432,o),
(256,428,qs),
(249,414,o),
(234,385,o),
(222,374,qs),
(214,366,o),
(214,359,qs),
(214,354,o),
(198,319,o),
(177,282,o),
(167,273,q),
(166,263,o),
(143,216,o),
(109,157,o),
(74,99,o),
(45,57,o),
(39,50,qs),
(32,43,o),
(25,26,o),
(21,17,qs),
(19,13,o),
(25,3,o),
(30,3,qs),
(410,3,ls)
);
},
{
closed = 1;
nodes = (
(57,431,o),
(57,441,q),
(58,447,o),
(56,460,o),
(62,467,q),
(56,487,o),
(59,505,o),
(63,521,q),
(59,545,o),
(58,558,o),
(56,561,q),
(55,566,o),
(65,572,o),
(63,577,qs),
(56,591,o),
(59,631,o),
(59,647,qs),
(59,650,o),
(61,659,o),
(63,660,q),
(71,668,o),
(83,669,q),
(86,670,o),
(93,660,o),
(99,666,qs),
(102,669,o),
(119,664,o),
(136,658,o),
(138,660,q),
(152,669,o),
(192,670,o),
(199,665,q),
(193,653,o),
(186,646,q),
(178,634,o),
(163,609,o),
(159,593,qs),
(158,590,o),
(154,585,o),
(151,581,qs),
(133,559,o),
(112,511,o),
(95,489,q),
(90,485,o),
(90,473,o),
(87,468,qs),
(82,457,o),
(69,433,o),
(63,422,qs),
(60,415,o)
);
},
{
closed = 1;
nodes = (
(261,38,o),
(265,46,qs),
(270,55,o),
(299,105,o),
(338,170,o),
(376,232,o),
(401,272,o),
(402,272,q),
(402,188,o),
(402,94,o),
(402,49,o),
(401,36,o),
(399,33,q),
(370,31,o),
(335,31,o),
(302,33,o),
(275,32,qs),
(265,31,o)
);
},
{
closed = 1;
nodes = (
(270,834,o),
(267,830,qs),
(265,828,o),
(252,811,o),
(250,809,qs),
(248,806,o),
(241,795,o),
(239,794,qs),
(233,791,o),
(229,791,o),
(224,793,q),
(220,798,o),
(198,818,o),
(171,841,o),
(148,857,o),
(143,857,q),
(135,859,o),
(123,857,o),
(127,848,q),
(133,842,o),
(145,829,o),
(149,822,q),
(154,819,o),
(166,804,o),
(172,801,q),
(180,794,o),
(187,785,o),
(194,779,qs),
(202,772,o),
(218,758,o),
(222,747,qs),
(224,743,o),
(232,742,o),
(234,746,q),
(245,758,o),
(276,792,o),
(306,827,o),
(326,850,o),
(325,851,qs),
(323,853,o),
(317,858,o),
(315,858,q),
(310,860,o),
(303,858,q),
(289,851,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
174 1 1 0 213 198 195 189 150 59 6 3 1 2 76 0 1 0 3 0 1 114 5 1 0 0 2 95 0 2 2 39 77 6 1 3 3 4 95 7 1 4 4 38 4 78 0 0 208 204 173 172 0 153 0 152 126 125 77 75 40 39 37 35 8 8 22 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = Zcaron;
unicode = 381;
},
{
glyphname = uni1E90;
layers = (
{
layerId = m01;
shapes = (
{
ref = Z;
},
{
pos = (90,129);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
129 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = uni1E90;
unicode = 7824;
},
{
glyphname = Zdotaccent;
layers = (
{
layerId = m01;
shapes = (
{
ref = Z;
},
{
pos = (153,114);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = Zdotaccent;
unicode = 379;
},
{
glyphname = uni1E92;
layers = (
{
layerId = m01;
shapes = (
{
ref = Z;
},
{
pos = (154,-114);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = uni1E92;
unicode = 7826;
},
{
glyphname = Zmacronbelow;
layers = (
{
layerId = m01;
shapes = (
{
ref = Z;
},
{
pos = (44,-329);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-329 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = Zmacronbelow;
unicode = 7828;
},
{
glyphname = uni01B5;
layers = (
{
layerId = m01;
shapes = (
{
ref = Z;
},
{
pos = (64,81);
ref = uni0335;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
81 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = uni01B5;
unicode = 437;
},
{
glyphname = S.001;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(36,77,o),
(37,71,qs),
(38,68,o),
(31,63,o),
(34,58,qs),
(39,48,o),
(30,25,o),
(34,17,qs),
(40,4,o),
(46,0,o),
(57,0,qs),
(109,0,o),
(207,0,o),
(229,1,qs),
(271,0,o),
(365,1,o),
(407,1,qs),
(415,1,o),
(432,1,o),
(437,8,q),
(439,14,o),
(449,27,o),
(439,34,q),
(437,48,o),
(436,83,o),
(440,97,q),
(446,102,o),
(445,115,o),
(445,122,qs),
(446,169,o),
(446,287,o),
(445,334,qs),
(445,347,o),
(425,364,o),
(411,364,qs),
(377,364,o),
(327,369,o),
(288,369,o),
(268,361,q),
(84,364,ls),
(77,364,o),
(63,376,o),
(65,380,qs),
(70,389,o),
(73,407,o),
(73,416,qs),
(73,425,o),
(72,444,o),
(72,453,qs),
(72,464,o),
(66,464,o),
(66,474,qs),
(66,477,o),
(72,483,o),
(68,487,q),
(66,488,o),
(64,495,o),
(65,496,qs),
(72,503,o),
(73,540,o),
(73,577,o),
(79,583,qs),
(84,590,o),
(80,598,q),
(75,604,o),
(73,614,o),
(79,621,qs),
(81,623,o),
(82,634,o),
(80,635,q),
(75,640,o),
(79,649,o),
(78,653,qs),
(77,657,o),
(74,663,o),
(81,663,qs),
(191,663,ls),
(197,663,o),
(227,661,o),
(237,663,q),
(241,658,o),
(252,646,o),
(260,641,qs),
(277,628,o),
(305,597,o),
(312,595,qs),
(324,591,o),
(360,566,o),
(366,553,qs),
(371,543,o),
(390,532,o),
(400,527,qs),
(422,516,o),
(441,512,o),
(439,537,qs),
(439,541,o),
(440,565,o),
(444,591,o),
(447,597,q),
(451,602,o),
(443,618,o),
(441,624,qs),
(440,627,o),
(447,632,o),
(444,637,qs),
(439,647,o),
(448,671,o),
(444,678,qs),
(439,689,o),
(434,695,o),
(427,695,q),
(424,696,o),
(416,697,o),
(411,697,qs),
(321,697,o),
(205,697,o),
(138,697,o),
(107,696,o),
(97,694,o),
(95,692,qs),
(92,690,o),
(83,698,o),
(78,692,q),
(63,698,o),
(57,695,q),
(48,688,o),
(34,675,o),
(39,663,qs),
(45,650,o),
(44,622,o),
(40,603,qs),
(39,597,o),
(37,584,o),
(41,578,qs),
(52,562,o),
(42,546,qs),
(34,532,o),
(43,522,q),
(47,520,o),
(43,516,qs),
(39,513,o),
(38,503,o),
(38,498,qs),
(38,385,ls),
(38,372,o),
(41,353,o),
(48,343,qs),
(53,335,o),
(82,341,o),
(91,334,qs),
(93,333,o),
(101,332,o),
(102,333,qs),
(107,337,o),
(138,340,o),
(172,338,o),
(178,332,q),
(186,340,o),
(200,334,o),
(207,331,q),
(348,333,ls),
(362,333,o),
(396,334,o),
(410,329,q),
(411,314,o),
(411,267,o),
(412,228,o),
(413,225,qs),
(418,212,o),
(421,181,o),
(413,171,qs),
(411,168,o),
(411,158,o),
(411,154,qs),
(411,37,ls),
(411,28,o),
(401,28,qs),
(389,28,o),
(344,27,o),
(293,28,o),
(252,31,o),
(246,34,qs),
(244,35,o),
(239,35,q),
(236,40,o),
(225,46,o),
(218,50,q),
(202,64,o),
(174,98,o),
(166,100,qs),
(154,104,o),
(118,129,o),
(112,142,qs),
(107,152,o),
(88,163,o),
(78,168,qs),
(56,179,o),
(37,184,o),
(39,158,qs),
(39,155,o),
(38,130,o),
(35,104,o),
(31,98,qs),
(27,93,o)
);
},
{
closed = 1;
nodes = (
(383,660,o),
(396,660,q),
(407,657,l),
(410,651,o),
(412,638,o),
(412,632,qs),
(412,628,o),
(411,626,o),
(410,602,o),
(409,564,q),
(396,569,o),
(353,605,o),
(309,648,o),
(293,661,q),
(340,661,o)
);
},
{
closed = 1;
nodes = (
(268,482,o),
(268,489,qs),
(268,501,o),
(247,518,o),
(228,518,q),
(218,520,o),
(205,512,o),
(199,504,qs),
(191,493,o),
(199,481,q),
(207,474,o),
(226,457,o),
(236,457,qs),
(254,457,o)
);
},
{
closed = 1;
nodes = (
(223,486,qs),
(222,488,o),
(223,492,q),
(227,496,o),
(230,495,q),
(240,495,o),
(240,488,qs),
(240,487,o),
(238,479,o),
(233,479,qs),
(227,479,o)
);
},
{
closed = 1;
nodes = (
(264,204,q),
(268,213,o),
(259,222,q),
(255,228,o),
(233,239,o),
(212,244,o),
(206,238,q),
(202,232,o),
(195,219,o),
(193,211,q),
(193,207,o),
(202,195,o),
(203,189,qs),
(206,175,o),
(238,174,o),
(256,187,q),
(262,193,o)
);
},
{
closed = 1;
nodes = (
(224,200,o),
(223,204,qs),
(222,206,o),
(220,209,o),
(220,210,qs),
(220,212,o),
(222,216,o),
(223,217,qs),
(225,219,o),
(237,215,o),
(238,213,q),
(240,211,o),
(239,208,q),
(239,205,o),
(237,203,qs),
(233,200,o)
);
},
{
closed = 1;
nodes = (
(70,44,o),
(68,44,q),
(67,49,o),
(66,59,o),
(66,63,qs),
(66,67,o),
(67,69,o),
(68,93,o),
(69,131,q),
(82,127,o),
(125,90,o),
(170,47,o),
(185,34,q),
(130,34,o),
(87,35,o),
(74,35,q),
(72,39,o),
(72,43,q),
(71,43,o)
);
}
);
userData = {
assembly = "NPUSHW[ ]	/* 38 values pushed */
80 1 5 4 208 98 2 12 5 240 238 230 145 4 13 12 160 154 2 7 11 39 35 2 14 1 286 198 2 15 14 6 76 46 1 1 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
0 12 5 13 13 12 114 0 7 11 6 6 7 114 0 2 6 1 1 2 114 0 14 1 15 1 14 15 128 0 15 0 0 15 112 0 4 16 10 2 5 12 4 5 103 18 1 13 17 1 11 7 13 11 106 8 1 6 3 1 1 14 6 1 106 0 0 9 9 0 89 0 0 0 9 96 0 9 0 9 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 82 values pushed */
0 12 5 13 5 12 13 128 0 7 11 6 6 7 114 0 2 6 1 1 2 114 0 14 1 15 1 14 15 128 0 15 0 0 15 112 0 4 16 10 2 5 12 4 5 103 18 1 13 17 1 11 7 13 11 106 8 1 6 3 1 1 14 6 1 106 0 0 9 9 0 89 0 0 0 9 96 0 9 0 9 80 
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 47 values pushed */
234 233 220 219 204 204 282 279 246 245 233 243 234 243 228 227 219 232 220 232 204 218 204 216 193 184 169 167 166 165 164 162 127 124 89 85 52 50 48 47 43 40 27 23 19 6 22 
CALL[ ]	/* CallFunction */";
};
width = 478;
}
);
note = S.001;
},
{
glyphname = F.alt;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(199,5,o),
(209,9,o),
(213,10,qs),
(218,12,o),
(230,5,o),
(235,5,qs),
(239,5,o),
(269,5,o),
(304,5,o),
(331,5,o),
(331,6,q),
(335,9,o),
(343,17,o),
(344,21,qs),
(346,26,o),
(337,29,o),
(334,31,qs),
(320,39,o),
(307,39,qs),
(177,39,ls),
(175,39,o),
(169,48,o),
(169,72,qs),
(169,377,l),
(290,377,l),
(301,382,o),
(300,387,o),
(316,389,qs),
(319,389,o),
(320,395,o),
(319,396,qs),
(312,406,o),
(303,410,o),
(291,410,qs),
(168,410,l),
(168,485,o),
(168,573,o),
(169,619,o),
(169,640,o),
(169,647,qs),
(169,655,o),
(175,656,q),
(186,655,o),
(205,667,o),
(221,664,q),
(225,655,o),
(235,647,qs),
(252,634,o),
(286,608,o),
(296,588,qs),
(300,581,o),
(322,574,o),
(329,569,qs),
(333,567,o),
(335,557,o),
(342,555,qs),
(367,547,o),
(379,524,qs),
(387,510,o),
(418,493,o),
(427,491,q),
(432,482,o),
(446,487,o),
(458,506,o),
(457,514,qs),
(457,518,o),
(458,542,o),
(462,568,o),
(465,574,q),
(469,579,o),
(461,595,o),
(459,601,qs),
(458,604,o),
(465,610,o),
(462,615,qs),
(453,633,o),
(462,650,qs),
(467,658,o),
(466,673,o),
(462,681,qs),
(456,694,o),
(450,698,o),
(439,698,qs),
(357,700,o),
(255,700,o),
(201,699,o),
(182,697,o),
(181,696,qs),
(175,690,o),
(161,690,o),
(153,689,qs),
(146,688,o),
(135,678,o),
(135,670,qs),
(136,613,o),
(134,559,o),
(131,540,o),
(128,535,q),
(136,525,o),
(135,508,o),
(135,495,qs),
(135,50,ls),
(135,43,o),
(130,38,o),
(122,38,qs),
(28,38,ls),
(24,38,o),
(16,38,o),
(12,37,qs),
(8,36,o),
(-1,24,o),
(0,22,qs),
(5,11,o),
(12,6,qs),
(14,5,o),
(21,5,o),
(25,5,qs),
(194,5,ls)
);
},
{
closed = 1;
nodes = (
(371,566,o),
(316,615,o),
(267,659,o),
(256,668,q),
(429,668,l),
(432,664,o),
(432,617,o),
(430,555,o),
(428,525,q),
(418,528,o)
);
},
{
closed = 1;
nodes = (
(89,378,o),
(96,385,q),
(104,397,o),
(96,408,qs),
(90,416,o),
(77,424,o),
(67,422,q),
(48,422,o),
(27,405,o),
(27,393,qs),
(27,386,o),
(41,361,o),
(59,361,qs),
(70,361,o)
);
},
{
closed = 1;
nodes = (
(56,392,o),
(56,393,qs),
(56,399,o),
(65,399,q),
(69,400,o),
(71,397,qs),
(73,393,o),
(71,391,q),
(70,385,o),
(62,385,qs),
(58,385,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
23 1 8 2 118 77 75 42 19 5 10 8 86 1 11 4 5 1 0 1 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 2 3 8 3 2 8 128 0 10 8 4 11 10 114 0 3 0 8 10 3 8 103 0 4 0 5 9 4 5 103 14 1 11 13 1 9 1 11 9 106 6 1 1 0 0 1 87 6 1 1 1 0 97 7 12 2 0 1 0 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 2 3 8 3 2 8 128 0 10 8 4 8 10 4 128 0 3 0 8 10 3 8 103 0 4 0 5 9 4 5 103 14 1 11 13 1 9 1 11 9 106 6 1 1 0 0 1 87 6 1 1 1 0 97 7 12 2 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 39 values pushed */
143 142 129 128 2 0 142 152 143 152 134 133 128 141 129 141 123 121 112 108 99 96 93 92 84 82 35 31 28 27 12 9 0 117 2 116 15 6 22 
CALL[ ]	/* CallFunction */";
};
width = 477;
}
);
note = F.alt;
},
{
glyphname = uni013B.loclMAH;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(461,1,o),
(466,6,o),
(472,19,qs),
(476,27,o),
(478,45,o),
(473,52,qs),
(462,69,o),
(472,88,q),
(476,93,o),
(475,114,o),
(476,118,qs),
(479,125,o),
(476,131,qs),
(468,146,o),
(468,179,o),
(468,190,qs),
(469,198,o),
(456,225,o),
(451,220,qs),
(442,211,o),
(441,211,o),
(431,208,qs),
(420,204,o),
(400,194,o),
(395,183,qs),
(382,157,o),
(356,151,qs),
(349,149,o),
(347,138,o),
(343,136,qs),
(333,130,o),
(314,127,o),
(308,116,qs),
(298,96,o),
(263,68,o),
(245,54,qs),
(234,46,o),
(231,36,q),
(170,36,ls),
(161,36,o),
(136,34,o),
(127,37,qs),
(118,40,o),
(100,45,o),
(90,45,q),
(83,47,o),
(83,55,qs),
(83,680,l),
(70,701,o),
(48,698,o),
(48,682,qs),
(48,213,ls),
(48,209,o),
(49,201,o),
(49,196,qs),
(49,181,o),
(40,172,q),
(45,164,o),
(49,147,o),
(49,139,qs),
(49,135,o),
(49,103,o),
(48,66,o),
(48,35,o),
(48,30,qs),
(48,23,o),
(60,11,o),
(67,10,qs),
(75,9,o),
(89,9,o),
(96,3,q),
(98,2,o),
(105,4,o),
(107,5,qs),
(119,13,o),
(141,10,o),
(164,1,o),
(177,1,qs),
(448,1,ls)
);
},
{
closed = 1;
nodes = (
(331,85,o),
(383,131,o),
(427,167,o),
(437,170,q),
(438,169,o),
(441,133,o),
(443,84,o),
(441,42,o),
(437,34,q),
(428,34,o),
(397,34,o),
(333,33,o),
(273,33,q),
(285,43,o)
);
},
{
closed = 1;
nodes = (
(165,-201,o),
(167,-198,q),
(171,-198,o),
(188,-174,o),
(190,-172,q),
(199,-158,o),
(202,-143,o),
(209,-129,qs),
(215,-113,o),
(228,-102,qs),
(241,-91,o),
(245,-65,o),
(246,-48,qs),
(247,-37,o),
(240,-27,o),
(234,-31,q),
(229,-36,o),
(209,-51,o),
(207,-58,qs),
(204,-69,o),
(193,-91,o),
(187,-103,qs),
(179,-124,o),
(159,-159,o),
(145,-194,q),
(148,-199,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
67 62 31 30 23 21 6 2 74 105 1 0 73 0 2 3 2 133 0 1 1 38 77 4 1 3 3 0 95 5 1 0 0 38 0 78 1 0 83 79 40 38 34 33 9 8 0 78 1 77 6 8 22 
CALL[ ]	/* CallFunction */";
};
width = 487;
}
);
note = uni013B.loclMAH;
},
{
glyphname = uni0145.loclMAH;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(346,5,o),
(351,4,qs),
(354,4,o),
(361,5,o),
(363,3,qs),
(369,-1,o),
(388,0,o),
(416,1,qs),
(422,1,o),
(441,16,o),
(442,22,qs),
(442,27,o),
(440,29,qs),
(434,35,o),
(434,46,qs),
(434,63,o),
(434,111,o),
(434,158,o),
(435,191,o),
(436,192,qs),
(441,197,o),
(443,207,o),
(443,211,qs),
(443,375,ls),
(443,383,o),
(445,396,o),
(449,403,qs),
(458,417,o),
(446,431,q),
(445,433,o),
(445,438,o),
(445,441,qs),
(445,442,o),
(446,468,o),
(445,468,q),
(439,477,o),
(445,486,qs),
(450,492,o),
(446,498,q),
(444,503,o),
(443,515,o),
(443,520,qs),
(443,668,ls),
(443,675,o),
(443,688,o),
(442,694,qs),
(441,701,o),
(429,701,qs),
(425,701,o),
(418,698,o),
(418,693,qs),
(417,687,o),
(417,674,o),
(417,667,qs),
(417,663,o),
(417,649,o),
(418,644,q),
(418,636,o),
(410,618,o),
(408,610,q),
(408,603,o),
(419,587,o),
(417,580,q),
(416,568,o),
(418,558,o),
(418,546,qs),
(418,540,o),
(415,527,o),
(410,522,qs),
(406,518,o),
(411,515,q),
(418,506,o),
(417,498,q),
(417,411,l),
(410,406,o),
(419,386,o),
(415,378,q),
(408,374,o),
(418,365,o),
(413,360,qs),
(408,356,o),
(409,344,o),
(409,339,qs),
(409,268,o),
(408,195,o),
(406,168,o),
(403,164,qs),
(402,163,o),
(411,137,o),
(406,130,qs),
(402,123,o),
(408,83,o),
(408,66,qs),
(408,56,o),
(411,43,o),
(400,34,q),
(397,30,o),
(392,35,o),
(390,36,qs),
(386,38,o),
(379,36,o),
(375,34,q),
(370,30,o),
(357,26,o),
(352,30,q),
(348,32,o),
(338,31,o),
(332,31,qs),
(270,31,ls),
(258,31,o),
(258,43,qs),
(258,347,ls),
(258,352,o),
(262,360,o),
(264,364,q),
(266,366,o),
(259,375,o),
(264,379,qs),
(266,381,o),
(268,391,o),
(266,393,q),
(261,401,o),
(258,427,o),
(259,463,q),
(264,467,o),
(266,477,o),
(266,483,qs),
(266,529,o),
(266,621,o),
(267,667,qs),
(267,674,o),
(261,685,o),
(258,691,qs),
(255,699,o),
(247,699,q),
(238,701,o),
(213,699,o),
(207,699,qs),
(199,699,o),
(182,702,o),
(174,706,qs),
(171,708,o),
(162,706,o),
(158,704,q),
(145,700,o),
(119,699,o),
(106,704,qs),
(101,706,o),
(91,706,o),
(86,706,qs),
(76,706,o),
(58,701,o),
(49,696,qs),
(41,690,o),
(41,683,qs),
(41,681,o),
(40,623,o),
(40,528,o),
(40,411,o),
(40,349,qs),
(40,283,o),
(41,157,o),
(41,61,o),
(41,38,qs),
(41,32,o),
(41,13,o),
(42,7,qs),
(42,6,o),
(48,3,o),
(50,1,q),
(67,1,o),
(74,6,o),
(75,15,qs),
(75,21,o),
(67,32,o),
(69,36,qs),
(75,48,o),
(75,61,qs),
(74,76,o),
(73,80,o),
(73,79,o),
(74,91,o),
(74,113,q),
(76,119,o),
(69,129,o),
(67,133,q),
(66,138,o),
(73,149,o),
(74,154,q),
(76,156,o),
(68,166,o),
(68,170,qs),
(68,174,o),
(73,180,o),
(74,184,q),
(74,189,o),
(74,200,o),
(69,205,qs),
(61,214,o),
(70,226,qs),
(82,241,o),
(70,256,qs),
(62,268,o),
(69,278,q),
(78,287,o),
(70,294,qs),
(65,298,o),
(66,318,o),
(67,319,qs),
(74,326,o),
(74,345,o),
(74,350,qs),
(74,670,l),
(75,672,o),
(78,676,o),
(82,673,q),
(85,672,o),
(122,671,o),
(161,674,o),
(166,677,q),
(221,677,ls),
(233,677,o),
(233,666,qs),
(233,604,o),
(233,533,o),
(233,504,o),
(231,501,qs),
(230,499,o),
(230,494,qs),
(230,493,o),
(232,475,o),
(232,455,o),
(228,450,qs),
(226,447,o),
(229,444,q),
(234,436,o),
(234,421,o),
(228,412,qs),
(225,408,o),
(232,404,o),
(233,400,qs),
(234,395,o),
(224,388,o),
(230,381,qs),
(234,377,o),
(232,365,o),
(233,359,qs),
(233,358,o),
(234,353,o),
(233,351,q),
(228,346,o),
(224,333,o),
(224,326,qs),
(224,321,o),
(225,310,o),
(225,305,qs),
(225,206,o),
(225,94,o),
(225,44,o),
(225,30,o),
(225,28,q),
(227,22,o),
(232,10,o),
(236,4,qs),
(239,0,o),
(263,0,o),
(306,1,qs),
(312,1,o),
(326,2,o),
(330,-1,qs),
(337,-7,o)
);
},
{
closed = 1;
nodes = (
(176,-201,o),
(178,-198,q),
(182,-198,o),
(199,-174,o),
(201,-172,q),
(210,-158,o),
(213,-143,o),
(220,-129,qs),
(226,-113,o),
(239,-102,qs),
(252,-91,o),
(256,-65,o),
(257,-48,qs),
(258,-37,o),
(251,-27,o),
(245,-31,q),
(240,-36,o),
(220,-51,o),
(218,-58,qs),
(215,-69,o),
(204,-91,o),
(198,-103,qs),
(190,-124,o),
(170,-159,o),
(156,-194,q),
(159,-199,o)
);
}
);
width = 492;
}
);
note = uni0145.loclMAH;
},
{
glyphname = uni026A;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
}
);
width = 374;
}
);
note = uni026A;
unicode = 618;
},
{
glyphname = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(335,-2,o),
(345,-2,qs),
(364,-2,o),
(379,0,o),
(388,3,o),
(404,5,o),
(423,4,qs),
(439,3,o),
(450,27,o),
(454,44,q),
(450,53,o),
(448,70,o),
(448,80,qs),
(448,87,o),
(448,101,o),
(449,108,qs),
(452,150,o),
(453,201,o),
(453,239,o),
(451,283,o),
(449,349,o),
(449,404,qs),
(449,416,o),
(445,440,o),
(440,444,q),
(436,452,o),
(398,457,o),
(370,452,qs),
(366,451,o),
(313,451,o),
(238,451,o),
(162,451,o),
(107,452,o),
(101,452,qs),
(91,452,o),
(82,442,o),
(73,440,qs),
(70,439,o),
(69,427,o),
(73,426,qs),
(82,424,o),
(100,415,o),
(110,415,qs),
(120,415,o),
(126,420,q),
(134,423,o),
(157,425,o),
(164,425,qs),
(183,424,o),
(214,423,o),
(232,425,qs),
(240,425,o),
(256,426,o),
(261,424,qs),
(270,419,o),
(289,416,o),
(298,416,qs),
(304,416,o),
(345,419,o),
(386,421,o),
(390,421,qs),
(409,421,o),
(422,383,o),
(422,370,qs),
(422,356,o),
(405,346,o),
(382,339,o),
(373,329,q),
(353,322,o),
(327,307,o),
(318,299,qs),
(300,283,o),
(265,253,o),
(247,238,qs),
(228,222,o),
(180,195,o),
(162,173,qs),
(153,161,o),
(120,142,o),
(85,120,o),
(72,104,q),
(60,94,o),
(40,75,o),
(29,67,qs),
(0,46,o),
(0,24,qs),
(0,14,o),
(21,-1,o),
(46,-1,qs),
(59,-1,ls),
(69,0,o),
(102,3,o),
(135,3,o),
(143,-2,q),
(162,7,o),
(224,5,o),
(286,-4,o),
(305,-4,qs),
(315,-4,o)
);
},
{
closed = 1;
nodes = (
(101,33,o),
(69,31,o),
(62,31,qs),
(53,31,o),
(56,45,o),
(70,64,o),
(85,81,o),
(88,83,qs),
(97,91,o),
(143,121,o),
(192,155,o),
(206,169,qs),
(213,176,o),
(229,191,o),
(236,194,qs),
(263,204,o),
(304,248,o),
(327,266,q),
(335,282,o),
(373,297,o),
(413,312,o),
(422,327,q),
(420,306,o),
(417,238,o),
(416,161,o),
(416,93,o),
(417,72,qs),
(418,52,o),
(398,36,o),
(373,33,o),
(365,33,qs),
(347,32,o),
(310,32,o),
(292,32,qs),
(283,32,o),
(242,34,o),
(193,35,o),
(151,31,o),
(142,26,q),
(134,31,o)
);
},
{
closed = 1;
nodes = (
(316,116,o),
(323,123,q),
(331,135,o),
(323,146,qs),
(317,154,o),
(304,162,o),
(294,160,q),
(275,160,o),
(254,143,o),
(254,131,qs),
(254,124,o),
(268,99,o),
(286,99,qs),
(297,99,o)
);
},
{
closed = 1;
nodes = (
(282,130,o),
(282,131,qs),
(282,138,o),
(292,138,q),
(295,139,o),
(299,135,q),
(301,131,o),
(299,129,q),
(296,122,o),
(289,122,qs),
(285,122,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
116 1 15 8 155 1 16 15 82 1 14 16 88 1 12 14 99 1 1 12 4 1 0 1 6 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
116 1 15 4 155 1 16 15 82 1 14 16 88 1 12 14 99 1 1 12 4 1 0 1 6 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
116 1 15 8 155 1 16 15 82 1 14 16 88 1 12 14 99 1 1 12 4 1 0 1 6 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 6 9 4 4 6 114 0 8 4 15 4 8 114 0 15 16 16 15 112 19 1 16 18 1 14 12 16 14 106 7 5 2 4 4 9 98 0 9 9 40 77 13 1 12 12 1 97 10 2 2 1 1 38 77 11 3 17 3 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 15 4 16 16 15 114 19 1 16 18 1 14 12 16 14 106 8 7 6 5 4 4 4 9 97 0 9 9 40 77 13 1 12 12 1 97 10 2 2 1 1 38 77 11 3 17 3 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 15 4 16 4 15 16 128 19 1 16 18 1 14 12 16 14 106 8 7 6 5 4 4 4 9 97 0 9 9 40 77 13 1 12 12 1 97 10 2 2 1 1 38 77 11 3 17 3 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 6 9 4 4 6 114 0 8 4 15 4 8 114 0 15 16 4 15 16 126 19 1 16 18 1 14 12 16 14 106 7 5 2 4 4 9 98 0 9 9 40 77 13 1 12 12 1 97 10 2 2 1 1 38 77 11 3 17 3 0 0 44 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 49 values pushed */
154 153 140 139 1 0 153 163 154 163 145 144 139 152 140 152 138 134 107 101 97 95 92 90 69 63 56 54 52 48 46 44 42 40 39 36 10 8 6 5 3 2 0 98 1 98 20 8 22 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = a;
unicode = 97;
},
{
glyphname = aacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (200,-107);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-107 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = aacute;
unicode = 225;
},
{
glyphname = abreve;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (138,-129);
ref = uni0306;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-129 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = abreve;
unicode = 259;
},
{
glyphname = uni1EAF;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (137,-130);
ref = uni0306;
},
{
pos = (179,54);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-130 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
54 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = uni1EAF;
unicode = 7855;
},
{
glyphname = uni1EB7;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (173,-109);
ref = period;
},
{
pos = (138,-129);
ref = uni0306;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-109 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
-129 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = uni1EB7;
unicode = 7863;
},
{
glyphname = uni1EB1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(335,-2,o),
(345,-2,qs),
(364,-2,o),
(379,0,o),
(388,3,o),
(404,5,o),
(423,4,qs),
(439,3,o),
(450,27,o),
(454,44,q),
(450,53,o),
(448,70,o),
(448,80,qs),
(448,87,o),
(448,101,o),
(449,108,qs),
(452,150,o),
(453,201,o),
(453,239,o),
(451,283,o),
(449,349,o),
(449,404,qs),
(449,416,o),
(445,440,o),
(440,444,q),
(436,452,o),
(398,457,o),
(370,452,qs),
(366,451,o),
(313,451,o),
(238,451,o),
(162,451,o),
(107,452,o),
(101,452,qs),
(91,452,o),
(82,442,o),
(73,440,qs),
(70,439,o),
(69,427,o),
(73,426,qs),
(82,424,o),
(100,415,o),
(110,415,qs),
(120,415,o),
(126,420,q),
(134,423,o),
(157,425,o),
(164,425,qs),
(183,424,o),
(214,423,o),
(232,425,qs),
(240,425,o),
(256,426,o),
(261,424,qs),
(270,419,o),
(289,416,o),
(298,416,qs),
(304,416,o),
(345,419,o),
(386,421,o),
(390,421,qs),
(409,421,o),
(422,383,o),
(422,370,qs),
(422,356,o),
(405,346,o),
(382,339,o),
(373,329,q),
(353,322,o),
(327,307,o),
(318,299,qs),
(300,283,o),
(265,253,o),
(247,238,qs),
(228,222,o),
(180,195,o),
(162,173,qs),
(153,161,o),
(120,142,o),
(85,120,o),
(72,104,q),
(60,94,o),
(40,75,o),
(29,67,qs),
(0,46,o),
(0,24,qs),
(0,14,o),
(21,-1,o),
(46,-1,qs),
(59,-1,ls),
(69,0,o),
(102,3,o),
(135,3,o),
(143,-2,q),
(162,7,o),
(224,5,o),
(286,-4,o),
(305,-4,qs),
(315,-4,o)
);
},
{
closed = 1;
nodes = (
(101,33,o),
(69,31,o),
(62,31,qs),
(53,31,o),
(56,45,o),
(70,64,o),
(85,81,o),
(88,83,qs),
(97,91,o),
(143,121,o),
(192,155,o),
(206,169,qs),
(213,176,o),
(229,191,o),
(236,194,qs),
(263,204,o),
(304,248,o),
(327,266,q),
(335,282,o),
(373,297,o),
(413,312,o),
(422,327,q),
(420,306,o),
(417,238,o),
(416,161,o),
(416,93,o),
(417,72,qs),
(418,52,o),
(398,36,o),
(373,33,o),
(365,33,qs),
(347,32,o),
(310,32,o),
(292,32,qs),
(283,32,o),
(242,34,o),
(193,35,o),
(151,31,o),
(142,26,q),
(134,31,o)
);
},
{
closed = 1;
nodes = (
(316,116,o),
(323,123,q),
(331,135,o),
(323,146,qs),
(317,154,o),
(304,162,o),
(294,160,q),
(275,160,o),
(254,143,o),
(254,131,qs),
(254,124,o),
(268,99,o),
(286,99,qs),
(297,99,o)
);
},
{
closed = 1;
nodes = (
(282,130,o),
(282,131,qs),
(282,138,o),
(292,138,q),
(295,139,o),
(299,135,q),
(301,131,o),
(299,129,q),
(296,122,o),
(289,122,qs),
(285,122,o)
);
},
{
closed = 1;
nodes = (
(231,489,qs),
(237,489,o),
(274,488,o),
(318,487,o),
(355,487,o),
(361,488,qs),
(366,488,o),
(379,501,o),
(379,506,qs),
(380,514,o),
(380,550,o),
(375,585,o),
(368,588,qs),
(356,595,o),
(347,575,o),
(347,568,q),
(352,539,l),
(357,531,o),
(344,516,o),
(338,516,q),
(330,514,o),
(313,517,o),
(305,517,qs),
(297,517,o),
(294,520,qs),
(290,523,o),
(286,520,o),
(283,519,qs),
(271,516,o),
(225,516,o),
(213,517,q),
(210,522,o),
(206,534,o),
(207,540,qs),
(208,548,o),
(208,571,o),
(208,574,qs),
(208,580,o),
(198,594,o),
(178,588,q),
(173,509,ls),
(172,498,o),
(198,480,o),
(199,481,q),
(212,489,o)
);
},
{
closed = 1;
nodes = (
(300,668,o),
(289,678,qs),
(268,696,o),
(256,712,q),
(248,719,o),
(234,732,o),
(227,740,qs),
(223,745,o),
(214,755,o),
(207,756,q),
(205,758,o),
(199,753,o),
(197,754,qs),
(194,756,o),
(183,745,o),
(184,742,qs),
(189,730,o),
(199,707,o),
(215,702,qs),
(221,700,o),
(232,692,o),
(236,687,qs),
(244,678,o),
(265,656,o),
(281,642,qs),
(299,629,o),
(327,634,o),
(331,638,q),
(321,648,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
167 1 19 17 116 1 15 8 155 1 16 15 82 1 14 16 88 1 12 14 99 1 1 12 4 1 0 1 7 76 221 192 168 3 17 74 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
167 1 19 17 116 1 15 4 155 1 16 15 82 1 14 16 88 1 12 14 99 1 1 12 4 1 0 1 7 76 221 192 168 3 17 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
167 1 19 17 116 1 15 8 155 1 16 15 82 1 14 16 88 1 12 14 99 1 1 12 4 1 0 1 7 76 221 192 168 3 17 74 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 6 9 4 4 6 114 0 8 4 15 4 8 114 0 15 16 16 15 112 18 1 17 0 19 9 17 19 105 22 1 16 21 1 14 12 16 14 106 7 5 2 4 4 9 98 0 9 9 40 77 13 1 12 12 1 97 10 2 2 1 1 38 77 11 3 20 3 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 15 4 16 16 15 114 18 1 17 0 19 9 17 19 105 22 1 16 21 1 14 12 16 14 106 8 7 6 5 4 4 4 9 97 0 9 9 40 77 13 1 12 12 1 97 10 2 2 1 1 38 77 11 3 20 3 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 15 4 16 4 15 16 128 18 1 17 0 19 9 17 19 105 22 1 16 21 1 14 12 16 14 106 8 7 6 5 4 4 4 9 97 0 9 9 40 77 13 1 12 12 1 97 10 2 2 1 1 38 77 11 3 20 3 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
0 6 9 4 4 6 114 0 8 4 15 4 8 114 0 15 16 4 15 16 126 18 1 17 0 19 9 17 19 105 22 1 16 21 1 14 12 16 14 106 7 5 2 4 4 9 98 0 9 9 40 77 13 1 12 12 1 97 10 2 2 1 1 38 77 11 3 20 3 0 0 44 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 55 values pushed */
154 153 140 139 1 0 208 203 186 184 179 178 153 163 154 163 145 144 139 152 140 152 138 134 107 101 97 95 92 90 69 63 56 54 52 48 46 44 42 40 39 36 10 8 6 5 3 2 0 98 1 98 23 8 22 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = uni1EB1;
unicode = 7857;
},
{
glyphname = uni1EB3;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (130,-146);
ref = uni0306;
},
{
pos = (161,53);
ref = hookabovecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-146 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
53 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = uni1EB3;
unicode = 7859;
},
{
glyphname = uni1EB5;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (131,-150);
ref = uni0306;
},
{
pos = (143,-14);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-150 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
-14 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = uni1EB5;
unicode = 7861;
},
{
glyphname = uni01CE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(335,-2,o),
(345,-2,qs),
(364,-2,o),
(379,0,o),
(388,3,o),
(404,5,o),
(423,4,qs),
(439,3,o),
(450,27,o),
(454,44,q),
(450,53,o),
(448,70,o),
(448,80,qs),
(448,87,o),
(448,101,o),
(449,108,qs),
(452,150,o),
(453,201,o),
(453,239,o),
(451,283,o),
(449,349,o),
(449,404,qs),
(449,416,o),
(445,440,o),
(440,444,q),
(436,452,o),
(398,457,o),
(370,452,qs),
(366,451,o),
(313,451,o),
(238,451,o),
(162,451,o),
(107,452,o),
(101,452,qs),
(91,452,o),
(82,442,o),
(73,440,qs),
(70,439,o),
(69,427,o),
(73,426,qs),
(82,424,o),
(100,415,o),
(110,415,qs),
(120,415,o),
(126,420,q),
(134,423,o),
(157,425,o),
(164,425,qs),
(183,424,o),
(214,423,o),
(232,425,qs),
(240,425,o),
(256,426,o),
(261,424,qs),
(270,419,o),
(289,416,o),
(298,416,qs),
(304,416,o),
(345,419,o),
(386,421,o),
(390,421,qs),
(409,421,o),
(422,383,o),
(422,370,qs),
(422,356,o),
(405,346,o),
(382,339,o),
(373,329,q),
(353,322,o),
(327,307,o),
(318,299,qs),
(300,283,o),
(265,253,o),
(247,238,qs),
(228,222,o),
(180,195,o),
(162,173,qs),
(153,161,o),
(120,142,o),
(85,120,o),
(72,104,q),
(60,94,o),
(40,75,o),
(29,67,qs),
(0,46,o),
(0,24,qs),
(0,14,o),
(21,-1,o),
(46,-1,qs),
(59,-1,ls),
(69,0,o),
(102,3,o),
(135,3,o),
(143,-2,q),
(162,7,o),
(224,5,o),
(286,-4,o),
(305,-4,qs),
(315,-4,o)
);
},
{
closed = 1;
nodes = (
(101,33,o),
(69,31,o),
(62,31,qs),
(53,31,o),
(56,45,o),
(70,64,o),
(85,81,o),
(88,83,qs),
(97,91,o),
(143,121,o),
(192,155,o),
(206,169,qs),
(213,176,o),
(229,191,o),
(236,194,qs),
(263,204,o),
(304,248,o),
(327,266,q),
(335,282,o),
(373,297,o),
(413,312,o),
(422,327,q),
(420,306,o),
(417,238,o),
(416,161,o),
(416,93,o),
(417,72,qs),
(418,52,o),
(398,36,o),
(373,33,o),
(365,33,qs),
(347,32,o),
(310,32,o),
(292,32,qs),
(283,32,o),
(242,34,o),
(193,35,o),
(151,31,o),
(142,26,q),
(134,31,o)
);
},
{
closed = 1;
nodes = (
(316,116,o),
(323,123,q),
(331,135,o),
(323,146,qs),
(317,154,o),
(304,162,o),
(294,160,q),
(275,160,o),
(254,143,o),
(254,131,qs),
(254,124,o),
(268,99,o),
(286,99,qs),
(297,99,o)
);
},
{
closed = 1;
nodes = (
(282,130,o),
(282,131,qs),
(282,138,o),
(292,138,q),
(295,139,o),
(299,135,q),
(301,131,o),
(299,129,q),
(296,122,o),
(289,122,qs),
(285,122,o)
);
},
{
closed = 1;
nodes = (
(321,586,o),
(318,582,qs),
(316,580,o),
(303,563,o),
(301,561,qs),
(299,558,o),
(292,547,o),
(290,546,qs),
(284,543,o),
(280,543,o),
(275,545,q),
(271,550,o),
(249,570,o),
(222,593,o),
(199,609,o),
(194,609,q),
(186,611,o),
(174,609,o),
(178,600,q),
(184,594,o),
(196,581,o),
(200,574,q),
(205,571,o),
(217,556,o),
(223,553,q),
(231,546,o),
(238,537,o),
(245,531,qs),
(253,524,o),
(269,510,o),
(273,499,qs),
(275,495,o),
(283,494,o),
(285,498,q),
(296,510,o),
(327,544,o),
(357,579,o),
(377,602,o),
(376,603,qs),
(374,605,o),
(368,610,o),
(366,610,q),
(361,612,o),
(354,610,q),
(340,603,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
116 1 15 8 155 1 16 15 82 1 14 16 88 1 12 14 99 1 1 12 4 1 0 1 6 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
116 1 15 4 155 1 16 15 82 1 14 16 88 1 12 14 99 1 1 12 4 1 0 1 6 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
116 1 15 8 155 1 16 15 82 1 14 16 88 1 12 14 99 1 1 12 4 1 0 1 6 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 6 9 4 4 6 114 0 8 4 15 4 8 114 0 15 16 16 15 112 19 1 16 18 1 14 12 16 14 106 7 5 2 4 4 9 98 0 9 9 40 77 13 1 12 12 1 97 10 2 2 1 1 38 77 11 3 17 3 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 15 4 16 16 15 114 19 1 16 18 1 14 12 16 14 106 8 7 6 5 4 4 4 9 97 0 9 9 40 77 13 1 12 12 1 97 10 2 2 1 1 38 77 11 3 17 3 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 15 4 16 4 15 16 128 19 1 16 18 1 14 12 16 14 106 8 7 6 5 4 4 4 9 97 0 9 9 40 77 13 1 12 12 1 97 10 2 2 1 1 38 77 11 3 17 3 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 6 9 4 4 6 114 0 8 4 15 4 8 114 0 15 16 4 15 16 126 19 1 16 18 1 14 12 16 14 106 7 5 2 4 4 9 98 0 9 9 40 77 13 1 12 12 1 97 10 2 2 1 1 38 77 11 3 17 3 0 0 44 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 49 values pushed */
154 153 140 139 1 0 153 163 154 163 145 144 139 152 140 152 138 134 107 101 97 95 92 90 69 63 56 54 52 48 46 44 42 40 39 36 10 8 6 5 3 2 0 98 1 98 20 8 22 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = uni01CE;
unicode = 462;
},
{
glyphname = acircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (141,-119);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-119 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = acircumflex;
unicode = 226;
},
{
glyphname = uni1EA5;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (135,-137);
ref = uni0302;
},
{
pos = (181,8);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-137 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
8 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = uni1EA5;
unicode = 7845;
},
{
glyphname = uni1EAD;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (173,-109);
ref = period;
},
{
pos = (141,-119);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-109 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
-119 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = uni1EAD;
unicode = 7853;
},
{
glyphname = uni1EA7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(335,-2,o),
(345,-2,qs),
(364,-2,o),
(379,0,o),
(388,3,o),
(404,5,o),
(423,4,qs),
(439,3,o),
(450,27,o),
(454,44,q),
(450,53,o),
(448,70,o),
(448,80,qs),
(448,87,o),
(448,101,o),
(449,108,qs),
(452,150,o),
(453,201,o),
(453,239,o),
(451,283,o),
(449,349,o),
(449,404,qs),
(449,416,o),
(445,440,o),
(440,444,q),
(436,452,o),
(398,457,o),
(370,452,qs),
(366,451,o),
(313,451,o),
(238,451,o),
(162,451,o),
(107,452,o),
(101,452,qs),
(91,452,o),
(82,442,o),
(73,440,qs),
(70,439,o),
(69,427,o),
(73,426,qs),
(82,424,o),
(100,415,o),
(110,415,qs),
(120,415,o),
(126,420,q),
(134,423,o),
(157,425,o),
(164,425,qs),
(183,424,o),
(214,423,o),
(232,425,qs),
(240,425,o),
(256,426,o),
(261,424,qs),
(270,419,o),
(289,416,o),
(298,416,qs),
(304,416,o),
(345,419,o),
(386,421,o),
(390,421,qs),
(409,421,o),
(422,383,o),
(422,370,qs),
(422,356,o),
(405,346,o),
(382,339,o),
(373,329,q),
(353,322,o),
(327,307,o),
(318,299,qs),
(300,283,o),
(265,253,o),
(247,238,qs),
(228,222,o),
(180,195,o),
(162,173,qs),
(153,161,o),
(120,142,o),
(85,120,o),
(72,104,q),
(60,94,o),
(40,75,o),
(29,67,qs),
(0,46,o),
(0,24,qs),
(0,14,o),
(21,-1,o),
(46,-1,qs),
(59,-1,ls),
(69,0,o),
(102,3,o),
(135,3,o),
(143,-2,q),
(162,7,o),
(224,5,o),
(286,-4,o),
(305,-4,qs),
(315,-4,o)
);
},
{
closed = 1;
nodes = (
(101,33,o),
(69,31,o),
(62,31,qs),
(53,31,o),
(56,45,o),
(70,64,o),
(85,81,o),
(88,83,qs),
(97,91,o),
(143,121,o),
(192,155,o),
(206,169,qs),
(213,176,o),
(229,191,o),
(236,194,qs),
(263,204,o),
(304,248,o),
(327,266,q),
(335,282,o),
(373,297,o),
(413,312,o),
(422,327,q),
(420,306,o),
(417,238,o),
(416,161,o),
(416,93,o),
(417,72,qs),
(418,52,o),
(398,36,o),
(373,33,o),
(365,33,qs),
(347,32,o),
(310,32,o),
(292,32,qs),
(283,32,o),
(242,34,o),
(193,35,o),
(151,31,o),
(142,26,q),
(134,31,o)
);
},
{
closed = 1;
nodes = (
(316,116,o),
(323,123,q),
(331,135,o),
(323,146,qs),
(317,154,o),
(304,162,o),
(294,160,q),
(275,160,o),
(254,143,o),
(254,131,qs),
(254,124,o),
(268,99,o),
(286,99,qs),
(297,99,o)
);
},
{
closed = 1;
nodes = (
(282,130,o),
(282,131,qs),
(282,138,o),
(292,138,q),
(295,139,o),
(299,135,q),
(301,131,o),
(299,129,q),
(296,122,o),
(289,122,qs),
(285,122,o)
);
},
{
closed = 1;
nodes = (
(360,488,q),
(362,488,o),
(368,494,o),
(370,495,qs),
(371,496,o),
(351,519,o),
(321,554,o),
(290,588,o),
(279,600,q),
(277,604,o),
(269,603,o),
(267,599,qs),
(263,588,o),
(247,574,o),
(239,567,qs),
(232,561,o),
(225,552,o),
(217,545,q),
(211,542,o),
(199,527,o),
(194,524,q),
(190,517,o),
(178,504,o),
(172,498,q),
(168,489,o),
(180,488,o),
(188,489,qs),
(193,489,o),
(216,505,o),
(243,528,o),
(265,549,o),
(269,553,q),
(274,555,o),
(278,555,o),
(284,552,qs),
(286,551,o),
(293,540,o),
(295,537,q),
(297,536,o),
(310,518,o),
(312,516,qs),
(315,512,o),
(334,496,o),
(348,488,q),
(355,486,o)
);
},
{
closed = 1;
nodes = (
(301,660,o),
(290,670,qs),
(269,688,o),
(257,704,q),
(249,711,o),
(235,724,o),
(228,732,qs),
(224,737,o),
(215,747,o),
(208,748,q),
(206,750,o),
(200,745,o),
(198,746,qs),
(195,748,o),
(184,737,o),
(185,734,qs),
(190,722,o),
(200,699,o),
(216,694,qs),
(222,692,o),
(233,684,o),
(237,679,qs),
(245,670,o),
(266,648,o),
(282,634,qs),
(300,621,o),
(328,626,o),
(332,630,q),
(322,640,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
116 1 15 8 155 1 16 15 82 1 14 16 88 1 12 14 99 1 1 12 4 1 0 1 6 76 221 1 9 74 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
116 1 15 4 155 1 16 15 82 1 14 16 88 1 12 14 99 1 1 12 4 1 0 1 6 76 221 1 9 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
116 1 15 8 155 1 16 15 82 1 14 16 88 1 12 14 99 1 1 12 4 1 0 1 6 76 221 1 9 74 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 6 9 4 4 6 114 0 8 4 15 4 8 114 0 15 16 16 15 112 19 1 16 18 1 14 12 16 14 106 7 5 2 4 4 9 98 0 9 9 40 77 13 1 12 12 1 97 10 2 2 1 1 38 77 11 3 17 3 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 15 4 16 16 15 114 19 1 16 18 1 14 12 16 14 106 8 7 6 5 4 4 4 9 97 0 9 9 40 77 13 1 12 12 1 97 10 2 2 1 1 38 77 11 3 17 3 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 15 4 16 4 15 16 128 19 1 16 18 1 14 12 16 14 106 8 7 6 5 4 4 4 9 97 0 9 9 40 77 13 1 12 12 1 97 10 2 2 1 1 38 77 11 3 17 3 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 6 9 4 4 6 114 0 8 4 15 4 8 114 0 15 16 4 15 16 126 19 1 16 18 1 14 12 16 14 106 7 5 2 4 4 9 98 0 9 9 40 77 13 1 12 12 1 97 10 2 2 1 1 38 77 11 3 17 3 0 0 44 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 49 values pushed */
154 153 140 139 1 0 153 163 154 163 145 144 139 152 140 152 138 134 107 101 97 95 92 90 69 63 56 54 52 48 46 44 42 40 39 36 10 8 6 5 3 2 0 98 1 98 20 8 22 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = uni1EA7;
unicode = 7847;
},
{
glyphname = uni1EA9;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (143,-134);
ref = uni0302;
},
{
pos = (178,26);
ref = hookabovecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-134 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
26 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = uni1EA9;
unicode = 7849;
},
{
glyphname = uni1EAB;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (138,-119);
ref = uni0302;
},
{
pos = (154,-22);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-119 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
-22 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = uni1EAB;
unicode = 7851;
},
{
glyphname = uni0201;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (124,-129);
ref = uni030F;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 2 
PUSHW[ ]	/* 1 value pushed */
-129 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = uni0201;
unicode = 513;
},
{
glyphname = adieresis;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (118,-120);
ref = uni0308;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 2 
PUSHW[ ]	/* 1 value pushed */
-120 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = adieresis;
unicode = 228;
},
{
glyphname = uni01DF;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (118,-120);
ref = uni0308;
},
{
pos = (103,421);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 2 
PUSHW[ ]	/* 1 value pushed */
-120 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHW[ ]	/* 1 value pushed */
421 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = uni01DF;
unicode = 479;
},
{
glyphname = uni0227;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (204,-134);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-134 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = uni0227;
unicode = 551;
},
{
glyphname = uni1EA1;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (173,-109);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-109 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = uni1EA1;
unicode = 7841;
},
{
glyphname = uni01E1;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (204,-134);
ref = uni0307;
},
{
pos = (105,391);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-134 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
391 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = uni01E1;
unicode = 481;
},
{
glyphname = agrave;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(335,-2,o),
(345,-2,qs),
(364,-2,o),
(379,0,o),
(388,3,o),
(404,5,o),
(423,4,qs),
(439,3,o),
(450,27,o),
(454,44,q),
(450,53,o),
(448,70,o),
(448,80,qs),
(448,87,o),
(448,101,o),
(449,108,qs),
(452,150,o),
(453,201,o),
(453,239,o),
(451,283,o),
(449,349,o),
(449,404,qs),
(449,416,o),
(445,440,o),
(440,444,q),
(436,452,o),
(398,457,o),
(370,452,qs),
(366,451,o),
(313,451,o),
(238,451,o),
(162,451,o),
(107,452,o),
(101,452,qs),
(91,452,o),
(82,442,o),
(73,440,qs),
(70,439,o),
(69,427,o),
(73,426,qs),
(82,424,o),
(100,415,o),
(110,415,qs),
(120,415,o),
(126,420,q),
(134,423,o),
(157,425,o),
(164,425,qs),
(183,424,o),
(214,423,o),
(232,425,qs),
(240,425,o),
(256,426,o),
(261,424,qs),
(270,419,o),
(289,416,o),
(298,416,qs),
(304,416,o),
(345,419,o),
(386,421,o),
(390,421,qs),
(409,421,o),
(422,383,o),
(422,370,qs),
(422,356,o),
(405,346,o),
(382,339,o),
(373,329,q),
(353,322,o),
(327,307,o),
(318,299,qs),
(300,283,o),
(265,253,o),
(247,238,qs),
(228,222,o),
(180,195,o),
(162,173,qs),
(153,161,o),
(120,142,o),
(85,120,o),
(72,104,q),
(60,94,o),
(40,75,o),
(29,67,qs),
(0,46,o),
(0,24,qs),
(0,14,o),
(21,-1,o),
(46,-1,qs),
(59,-1,ls),
(69,0,o),
(102,3,o),
(135,3,o),
(143,-2,q),
(162,7,o),
(224,5,o),
(286,-4,o),
(305,-4,qs),
(315,-4,o)
);
},
{
closed = 1;
nodes = (
(101,33,o),
(69,31,o),
(62,31,qs),
(53,31,o),
(56,45,o),
(70,64,o),
(85,81,o),
(88,83,qs),
(97,91,o),
(143,121,o),
(192,155,o),
(206,169,qs),
(213,176,o),
(229,191,o),
(236,194,qs),
(263,204,o),
(304,248,o),
(327,266,q),
(335,282,o),
(373,297,o),
(413,312,o),
(422,327,q),
(420,306,o),
(417,238,o),
(416,161,o),
(416,93,o),
(417,72,qs),
(418,52,o),
(398,36,o),
(373,33,o),
(365,33,qs),
(347,32,o),
(310,32,o),
(292,32,qs),
(283,32,o),
(242,34,o),
(193,35,o),
(151,31,o),
(142,26,q),
(134,31,o)
);
},
{
closed = 1;
nodes = (
(316,116,o),
(323,123,q),
(331,135,o),
(323,146,qs),
(317,154,o),
(304,162,o),
(294,160,q),
(275,160,o),
(254,143,o),
(254,131,qs),
(254,124,o),
(268,99,o),
(286,99,qs),
(297,99,o)
);
},
{
closed = 1;
nodes = (
(282,130,o),
(282,131,qs),
(282,138,o),
(292,138,q),
(295,139,o),
(299,135,q),
(301,131,o),
(299,129,q),
(296,122,o),
(289,122,qs),
(285,122,o)
);
},
{
closed = 1;
nodes = (
(300,542,o),
(289,552,qs),
(268,570,o),
(256,586,q),
(248,593,o),
(234,606,o),
(227,614,qs),
(223,619,o),
(214,629,o),
(207,630,q),
(205,632,o),
(199,627,o),
(197,628,qs),
(194,630,o),
(183,619,o),
(184,616,qs),
(189,604,o),
(199,581,o),
(215,576,qs),
(221,574,o),
(232,566,o),
(236,561,qs),
(244,552,o),
(265,530,o),
(281,516,qs),
(299,503,o),
(327,508,o),
(331,512,q),
(321,522,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
116 1 15 8 155 1 16 15 82 1 14 16 88 1 12 14 99 1 1 12 4 1 0 1 6 76 176 1 9 74 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
116 1 15 4 155 1 16 15 82 1 14 16 88 1 12 14 99 1 1 12 4 1 0 1 6 76 176 1 9 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
116 1 15 8 155 1 16 15 82 1 14 16 88 1 12 14 99 1 1 12 4 1 0 1 6 76 176 1 9 74 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 6 9 4 4 6 114 0 8 4 15 4 8 114 0 15 16 16 15 112 19 1 16 18 1 14 12 16 14 106 7 5 2 4 4 9 98 0 9 9 40 77 13 1 12 12 1 97 10 2 2 1 1 38 77 11 3 17 3 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 15 4 16 16 15 114 19 1 16 18 1 14 12 16 14 106 8 7 6 5 4 4 4 9 97 0 9 9 40 77 13 1 12 12 1 97 10 2 2 1 1 38 77 11 3 17 3 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 15 4 16 4 15 16 128 19 1 16 18 1 14 12 16 14 106 8 7 6 5 4 4 4 9 97 0 9 9 40 77 13 1 12 12 1 97 10 2 2 1 1 38 77 11 3 17 3 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 6 9 4 4 6 114 0 8 4 15 4 8 114 0 15 16 4 15 16 126 19 1 16 18 1 14 12 16 14 106 7 5 2 4 4 9 98 0 9 9 40 77 13 1 12 12 1 97 10 2 2 1 1 38 77 11 3 17 3 0 0 44 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 49 values pushed */
154 153 140 139 1 0 153 163 154 163 145 144 139 152 140 152 138 134 107 101 97 95 92 90 69 63 56 54 52 48 46 44 42 40 39 36 10 8 6 5 3 2 0 98 1 98 20 8 22 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = agrave;
unicode = 224;
},
{
glyphname = uni1EA3;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (169,-92);
ref = hookabovecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-92 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = uni1EA3;
unicode = 7843;
},
{
glyphname = uni0203;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (173,-132);
ref = uni0311;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-132 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = uni0203;
unicode = 515;
},
{
glyphname = uni0251;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(191,29,o),
(198,28,qs),
(204,28,o),
(233,27,o),
(268,28,o),
(295,29,o),
(298,30,qs),
(305,32,o),
(317,21,o),
(324,31,q),
(338,21,o),
(366,25,o),
(383,25,q),
(383,25,l),
(386,19,o),
(390,5,o),
(391,-6,q),
(396,-9,o),
(404,-13,o),
(408,-3,qs),
(410,3,o),
(412,21,o),
(412,39,q),
(413,42,o),
(413,48,o),
(413,51,qs),
(413,418,ls),
(413,421,o),
(413,450,o),
(411,476,o),
(408,476,q),
(400,482,o),
(385,474,o),
(377,459,o),
(379,455,qs),
(385,443,o),
(379,427,o),
(377,427,qs),
(330,428,o),
(207,429,o),
(86,429,o),
(40,427,q),
(40,49,l),
(42,28,o),
(61,28,qs),
(66,28,o),
(103,28,o),
(140,28,o),
(144,27,q),
(152,27,o),
(167,27,o),
(172,24,qs),
(180,19,o)
);
},
{
closed = 1;
nodes = (
(228,53,o),
(221,58,qs),
(219,60,o),
(208,53,o),
(204,54,qs),
(200,56,o),
(192,60,o),
(187,55,qs),
(183,51,o),
(179,54,qs),
(176,57,o),
(134,58,o),
(88,58,o),
(76,58,qs),
(72,58,o),
(67,66,o),
(69,70,q),
(74,75,o),
(76,86,o),
(76,93,qs),
(76,109,o),
(73,167,o),
(73,183,qs),
(73,198,o),
(67,206,qs),
(63,210,o),
(68,217,qs),
(75,227,o),
(75,238,qs),
(75,243,o),
(73,253,o),
(71,257,qs),
(63,272,o),
(73,282,q),
(75,285,o),
(72,290,q),
(72,352,l),
(74,353,o),
(72,361,o),
(70,362,q),
(64,369,o),
(66,383,o),
(70,393,q),
(81,395,o),
(121,397,o),
(132,397,qs),
(140,397,o),
(154,398,o),
(161,390,q),
(172,388,o),
(184,399,o),
(190,390,q),
(194,390,o),
(237,392,o),
(292,395,o),
(335,396,o),
(338,396,qs),
(349,395,o),
(378,392,o),
(381,392,q),
(381,355,o),
(383,318,o),
(384,293,o),
(382,254,o),
(379,214,q),
(379,137,ls),
(379,133,o),
(379,97,o),
(377,63,o),
(375,59,q),
(337,58,o),
(261,53,o),
(249,53,qs),
(242,53,o)
);
},
{
closed = 1;
nodes = (
(264,227,o),
(250,237,o),
(250,248,qs),
(250,263,o),
(219,266,o),
(208,264,qs),
(201,263,o),
(190,244,o),
(190,236,qs),
(190,228,o),
(196,220,qs),
(203,211,o),
(232,195,o),
(242,205,qs),
(256,219,ls)
);
},
{
closed = 1;
nodes = (
(219,227,o),
(217,229,q),
(215,230,o),
(215,233,qs),
(215,239,o),
(220,241,qs),
(223,242,o),
(231,241,o),
(231,237,qs),
(231,233,o),
(235,231,o),
(233,229,qs),
(229,225,ls),
(226,222,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
109 106 92 90 66 61 6 4 5 42 9 2 0 4 2 76 17 1 1 74 0 1 6 1 5 4 1 5 105 7 8 2 4 0 0 4 89 7 8 2 4 4 0 97 3 2 2 0 4 0 81 56 53 115 111 82 79 73 69 53 126 56 125 49 45 40 38 66 68 9 8 24 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni0251;
unicode = 593;
},
{
glyphname = amacron;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (105,300);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
300 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = amacron;
unicode = 257;
},
{
glyphname = aogonek;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (361,46);
ref = uni0328;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
46 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = aogonek;
unicode = 261;
},
{
glyphname = aring;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (151,-167);
ref = uni030A;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 2 
PUSHW[ ]	/* 1 value pushed */
-167 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = aring;
unicode = 229;
},
{
glyphname = uni1E01;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (128,-827);
ref = uni030A;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 2 
PUSHW[ ]	/* 1 value pushed */
-827 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = uni1E01;
unicode = 7681;
},
{
glyphname = uni2C65;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(170,-39,o),
(177,-28,o),
(179,-21,q),
(185,-9,o),
(193,5,q),
(223,5,o),
(286,-4,o),
(305,-4,qs),
(315,-4,o),
(335,-2,o),
(345,-2,qs),
(364,-2,o),
(379,0,o),
(388,3,o),
(404,5,o),
(423,4,qs),
(439,3,o),
(450,27,o),
(454,44,q),
(450,53,o),
(448,70,o),
(448,80,qs),
(448,87,o),
(448,101,o),
(449,108,qs),
(452,150,o),
(453,201,o),
(453,239,o),
(451,283,o),
(449,349,o),
(449,404,qs),
(449,414,o),
(447,434,o),
(443,440,q),
(456,464,o),
(457,465,q),
(461,474,o),
(459,483,q),
(460,494,o),
(454,503,o),
(438,504,q),
(423,478,o),
(415,459,o),
(413,454,q),
(394,456,o),
(370,452,qs),
(366,451,o),
(313,451,o),
(238,451,o),
(162,451,o),
(107,452,o),
(101,452,qs),
(91,452,o),
(82,442,o),
(73,440,qs),
(70,439,o),
(69,427,o),
(73,426,qs),
(82,424,o),
(100,415,o),
(110,415,qs),
(120,415,o),
(126,420,q),
(134,423,o),
(157,425,o),
(164,425,qs),
(183,424,o),
(214,423,o),
(232,425,qs),
(240,425,o),
(256,426,o),
(261,424,qs),
(270,419,o),
(289,416,o),
(298,416,qs),
(304,416,o),
(345,419,o),
(386,421,o),
(390,421,qs),
(395,420,l),
(381,393,ls),
(379,389,o),
(368,365,o),
(362,366,q),
(360,361,o),
(346,327,o),
(341,315,q),
(328,308,o),
(318,299,qs),
(300,283,o),
(265,253,o),
(247,238,qs),
(228,222,o),
(180,195,o),
(162,173,qs),
(153,161,o),
(120,142,o),
(85,120,o),
(72,104,q),
(60,94,o),
(40,75,o),
(29,67,qs),
(0,46,o),
(0,24,qs),
(0,14,o),
(21,-1,o),
(46,-1,qs),
(59,-1,ls),
(69,0,o),
(102,3,o),
(135,3,o),
(143,-2,q),
(146,0,o),
(150,1,q),
(143,-27,o),
(134,-46,qs),
(129,-60,o),
(141,-67,o),
(157,-63,o),
(157,-63,q),
(173,-46,l)
);
},
{
closed = 1;
nodes = (
(404,347,o),
(393,342,q),
(399,353,o),
(412,379,o),
(419,392,q),
(422,381,o),
(422,370,qs),
(422,356,o)
);
},
{
closed = 1;
nodes = (
(272,137,o),
(279,138,q),
(282,141,o),
(282,150,q),
(281,154,o),
(298,189,o),
(321,231,o),
(341,263,o),
(344,265,qs),
(351,271,o),
(360,282,o),
(359,292,q),
(377,299,o),
(414,313,o),
(422,327,q),
(420,306,o),
(417,238,o),
(416,161,o),
(416,93,o),
(417,72,qs),
(418,52,o),
(398,36,o),
(373,33,o),
(365,33,qs),
(347,32,o),
(310,32,o),
(292,32,qs),
(282,32,o),
(235,34,o),
(210,34,q),
(228,67,o),
(260,121,o),
(262,124,qs),
(265,129,o)
);
},
{
closed = 1;
nodes = (
(101,33,o),
(69,31,o),
(62,31,qs),
(53,31,o),
(56,45,o),
(70,64,o),
(85,81,o),
(88,83,qs),
(97,91,o),
(143,121,o),
(192,155,o),
(206,169,qs),
(213,176,o),
(229,191,o),
(236,194,qs),
(252,200,o),
(278,221,o),
(291,233,q),
(254,174,o),
(219,117,o),
(204,98,o),
(200,97,qs),
(197,96,o),
(189,83,o),
(190,79,q),
(190,73,o),
(180,45,o),
(173,33,q),
(151,31,o),
(142,26,q),
(134,31,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
82 1 7 8 86 1 4 7 175 147 126 123 101 95 6 13 6 163 1 0 13 6 1 10 0 5 76 120 8 2 10 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
82 1 7 8 86 1 2 7 175 147 126 123 101 95 6 13 2 163 1 0 13 8 6 2 11 0 5 76 120 1 11 73 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
82 1 7 8 86 1 4 7 175 147 126 123 101 95 6 13 6 163 1 0 13 6 1 10 0 5 76 120 8 2 10 73 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 8 7 8 133 0 4 7 2 2 4 114 0 6 2 13 2 6 114 5 3 2 2 2 7 98 0 7 7 40 77 14 1 13 13 0 97 12 9 1 3 0 0 38 77 14 1 13 13 10 97 11 1 10 10 38 10 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 8 7 8 133 6 5 4 3 4 2 2 7 97 0 7 7 40 77 14 1 13 13 0 97 12 10 9 1 4 0 0 38 77 0 11 11 44 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 8 7 8 133 0 4 7 2 2 4 114 0 6 2 13 2 6 114 5 3 2 2 2 7 98 0 7 7 40 77 14 1 13 13 0 97 12 9 1 3 0 0 38 77 14 1 13 13 10 97 11 1 10 10 47 10 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
193 189 138 132 115 114 113 111 110 108 105 103 80 79 73 67 60 58 56 52 50 48 46 44 43 42 34 25 15 8 24 
CALL[ ]	/* CallFunction */";
};
width = 524;
}
);
note = uni2C65;
unicode = 11365;
},
{
glyphname = atilde;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (150,-155);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-155 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = atilde;
unicode = 227;
},
{
glyphname = ae;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(53,-3,q),
(66,1,o),
(83,1,qs),
(87,1,o),
(109,1,o),
(132,-1,o),
(137,-3,q),
(159,6,o),
(205,1,o),
(229,1,qs),
(237,1,o),
(254,3,o),
(260,1,qs),
(273,-4,o),
(299,-8,o),
(312,-8,qs),
(323,-8,o),
(342,-7,o),
(352,-7,q),
(363,-2,o),
(386,1,o),
(398,1,qs),
(433,2,o),
(462,3,o),
(469,3,o),
(470,3,o),
(478,2,o),
(511,2,o),
(583,1,o),
(647,1,qs),
(651,1,o),
(673,0,o),
(694,-3,o),
(698,-7,q),
(703,-7,o),
(726,-7,o),
(732,-3,q),
(748,4,o),
(760,-7,q),
(762,-8,o),
(770,-6,o),
(772,-3,q),
(778,2,o),
(788,-1,o),
(792,-3,q),
(806,0,o),
(828,15,o),
(826,29,o),
(804,29,qs),
(575,29,ls),
(568,29,o),
(554,28,o),
(549,30,qs),
(532,38,o),
(515,39,o),
(496,33,q),
(486,40,o),
(477,36,o),
(470,28,o),
(462,28,qs),
(456,28,o),
(450,49,o),
(448,77,o),
(448,87,qs),
(448,113,o),
(454,185,o),
(454,206,qs),
(454,253,o),
(455,288,o),
(455,299,qs),
(455,308,o),
(448,327,o),
(448,336,qs),
(448,340,o),
(449,344,qs),
(453,355,o),
(448,374,o),
(448,387,qs),
(448,392,o),
(448,402,o),
(447,406,q),
(458,399,o),
(496,367,o),
(534,335,o),
(544,326,qs),
(568,307,o),
(623,272,o),
(639,249,q),
(662,244,o),
(683,215,o),
(697,204,qs),
(703,200,o),
(715,189,o),
(722,187,qs),
(740,183,o),
(782,147,o),
(798,137,qs),
(809,130,o),
(824,139,qs),
(834,146,o),
(831,166,o),
(841,173,q),
(835,178,o),
(833,210,o),
(833,214,qs),
(833,248,o),
(833,288,o),
(833,314,o),
(832,340,o),
(832,380,o),
(832,414,qs),
(832,422,o),
(824,451,o),
(806,451,qs),
(613,454,o),
(346,455,o),
(170,454,o),
(113,454,qs),
(102,454,o),
(87,446,o),
(77,443,qs),
(74,442,o),
(74,428,o),
(77,426,q),
(86,423,o),
(105,414,o),
(115,414,qs),
(124,414,o),
(131,419,q),
(142,424,o),
(177,424,o),
(213,423,o),
(226,424,qs),
(234,424,o),
(250,426,o),
(255,424,qs),
(266,419,o),
(300,415,o),
(333,415,o),
(342,414,q),
(351,420,o),
(368,423,o),
(376,423,qs),
(398,423,o),
(409,419,o),
(408,405,o),
(410,386,qs),
(411,380,o),
(409,373,o),
(410,369,q),
(400,365,o),
(382,350,o),
(371,348,q),
(364,334,o),
(344,318,o),
(334,310,qs),
(316,296,o),
(281,268,o),
(264,254,qs),
(245,240,o),
(206,215,o),
(189,195,qs),
(179,184,o),
(130,146,o),
(79,106,o),
(66,91,q),
(54,81,o),
(36,62,o),
(26,54,qs),
(2,33,o),
(-1,5,o),
(21,-8,o),
(36,-8,qs),
(46,-8,o)
);
},
{
closed = 1;
nodes = (
(769,196,o),
(753,200,q),
(743,205,o),
(741,219,o),
(730,219,q),
(699,247,o),
(666,273,o),
(652,282,o),
(648,285,q),
(638,288,o),
(629,305,o),
(617,307,q),
(602,328,o),
(559,359,o),
(533,370,q),
(518,379,o),
(510,392,qs),
(505,400,o),
(491,413,o),
(482,421,q),
(493,421,ls),
(501,421,o),
(517,420,o),
(524,420,qs),
(543,421,o),
(567,426,o),
(591,427,o),
(610,421,q),
(674,421,ls),
(687,421,o),
(699,428,o),
(714,432,o),
(728,426,q),
(732,425,o),
(741,421,o),
(745,421,qs),
(798,421,l),
(802,185,l),
(792,177,o)
);
},
{
closed = 1;
nodes = (
(96,30,o),
(79,32,qs),
(72,32,o),
(59,31,o),
(53,31,q),
(55,34,o),
(61,40,o),
(63,44,qs),
(65,47,o),
(95,74,o),
(137,110,o),
(183,148,o),
(220,180,o),
(228,187,qs),
(235,194,o),
(251,208,o),
(258,210,qs),
(285,219,o),
(327,258,o),
(349,274,q),
(358,290,o),
(381,307,o),
(405,323,o),
(414,337,q),
(414,328,o),
(415,309,o),
(417,301,qs),
(422,282,o),
(417,255,o),
(417,235,qs),
(417,35,l),
(411,35,o),
(399,38,q),
(394,34,o),
(364,32,o),
(359,32,qs),
(322,32,o),
(281,32,o),
(250,31,o),
(208,32,o),
(169,33,qs),
(151,33,o),
(136,26,q),
(121,34,o)
);
},
{
closed = 1;
nodes = (
(612,131,o),
(619,138,q),
(627,150,o),
(619,161,qs),
(613,169,o),
(600,177,o),
(590,175,q),
(571,175,o),
(550,158,o),
(550,146,qs),
(550,139,o),
(564,114,o),
(582,114,qs),
(593,114,o)
);
},
{
closed = 1;
nodes = (
(578,145,o),
(578,146,qs),
(578,153,o),
(588,153,q),
(591,154,o),
(595,150,q),
(597,146,o),
(595,144,q),
(592,137,o),
(585,137,qs),
(581,137,o)
);
}
);
userData = {
assembly = "NPUSHW[ ]	/* 30 values pushed */
232 100 2 19 2 174 1 22 19 273 71 2 23 22 117 1 6 7 166 128 2 0 10 5 76 223 1 7 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
4 1 2 1 19 1 2 114 0 19 22 1 19 22 126 0 22 23 23 22 112 0 7 21 6 6 7 114 26 1 23 25 1 21 7 23 21 106 18 17 16 15 3 5 1 1 5 95 0 5 5 40 77 20 8 2 6 6 10 98 14 13 11 3 10 10 38 77 12 9 24 3 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
18 4 2 2 1 19 1 2 114 0 19 22 1 19 22 126 0 22 23 23 22 112 0 7 21 6 6 7 114 26 1 23 25 1 21 7 23 21 106 17 16 15 3 4 1 1 5 95 0 5 5 40 77 20 8 2 6 6 10 98 14 13 11 3 10 10 38 77 12 9 24 3 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
18 4 2 2 1 19 1 2 114 0 19 22 1 19 22 126 0 22 23 1 22 23 126 0 7 21 6 6 7 114 26 1 23 25 1 21 7 23 21 106 17 16 15 3 4 1 1 5 95 0 5 5 40 77 20 8 2 6 6 10 98 14 13 11 3 10 10 38 77 12 9 24 3 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
4 1 2 1 19 1 2 114 0 19 22 1 19 22 126 0 22 23 1 22 23 126 0 7 21 6 6 7 114 26 1 23 25 1 21 7 23 21 106 18 17 16 15 3 5 1 1 5 95 0 5 5 40 77 20 8 2 6 6 10 98 14 13 11 3 10 10 38 77 12 9 24 3 0 0 44 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 63 values pushed */
272 271 258 257 1 0 271 281 272 281 263 262 257 270 258 270 222 214 208 207 192 187 186 185 184 182 176 175 171 168 164 160 158 154 152 147 146 141 138 137 125 120 119 118 114 112 60 54 47 45 43 37 35 34 30 29 0 173 1 173 27 8 22 
CALL[ ]	/* CallFunction */";
};
width = 851;
}
);
note = ae;
unicode = 230;
},
{
glyphname = uni01E3;
layers = (
{
layerId = m01;
shapes = (
{
ref = ae;
},
{
pos = (250,300);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
300 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 851;
}
);
note = uni01E3;
unicode = 483;
},
{
glyphname = b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,0,q),
(114,0,o),
(130,-3,o),
(138,3,qs),
(142,6,o),
(154,3,o),
(160,3,qs),
(409,-1,ls),
(415,-1,o),
(424,-2,o),
(430,-1,qs),
(436,-1,o),
(446,11,o),
(446,18,qs),
(446,53,o),
(447,112,o),
(447,146,qs),
(447,151,o),
(437,180,o),
(444,187,qs),
(449,192,o),
(441,221,o),
(441,225,qs),
(441,241,o),
(444,293,o),
(445,338,o),
(441,342,q),
(444,348,o),
(448,360,o),
(441,367,q),
(445,372,o),
(445,381,qs),
(445,392,o),
(438,419,o),
(438,431,q),
(440,438,o),
(428,449,o),
(422,450,q),
(94,451,l),
(85,452,o),
(75,483,o),
(71,569,o),
(71,654,qs),
(71,657,o),
(70,680,o),
(67,700,o),
(64,700,qs),
(46,700,o),
(40,685,o),
(40,665,qs),
(45,26,ls),
(45,22,o),
(44,13,o),
(45,9,qs),
(45,7,o),
(55,-4,o),
(74,-4,qs),
(87,-4,o)
);
},
{
closed = 1;
nodes = (
(122,36,o),
(90,40,o),
(83,35,qs),
(82,34,o),
(80,81,o),
(80,159,o),
(80,252,o),
(80,344,o),
(80,379,qs),
(80,397,o),
(95,417,o),
(129,417,qs),
(142,417,o),
(142,416,o),
(155,416,qs),
(377,416,ls),
(383,416,o),
(396,417,o),
(403,416,qs),
(409,414,o),
(409,407,qs),
(409,382,o),
(408,363,o),
(409,359,qs),
(411,351,o),
(422,327,o),
(417,320,qs),
(415,317,o),
(413,291,o),
(411,263,o),
(409,255,qs),
(408,248,o),
(417,141,o),
(417,43,qs),
(417,33,o),
(409,33,qs),
(402,33,o),
(386,32,o),
(378,32,qs),
(129,36,ls)
);
},
{
closed = 1;
nodes = (
(284,204,o),
(284,216,qs),
(284,223,o),
(270,248,o),
(252,248,qs),
(242,248,o),
(223,232,o),
(215,224,q),
(207,213,o),
(215,201,qs),
(221,194,o),
(234,186,o),
(244,187,qs),
(263,187,o)
);
},
{
closed = 1;
nodes = (
(239,212,q),
(238,217,o),
(239,218,q),
(243,225,o),
(249,225,qs),
(254,225,o),
(256,218,o),
(256,216,qs),
(256,209,o),
(246,209,q),
(243,208,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
22 1 5 2 76 73 30 27 4 7 5 119 1 8 9 43 1 3 4 4 76 34 1 9 1 75 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
22 1 5 2 76 73 30 27 4 7 5 119 1 8 9 43 1 0 4 4 76 34 1 9 1 75 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
22 1 5 2 76 73 30 27 4 7 5 119 1 8 9 43 1 3 4 4 76 34 1 9 1 75 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
12 1 8 9 4 9 8 114 0 7 0 9 8 7 9 105 0 1 1 37 77 6 1 5 5 2 95 0 2 2 40 77 11 1 4 4 3 95 0 3 3 38 77 10 1 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
12 1 8 9 4 9 8 114 0 7 0 9 8 7 9 105 0 1 1 37 77 6 1 5 5 2 95 0 2 2 40 77 11 1 4 4 0 97 3 10 2 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
12 1 8 9 4 9 8 4 128 0 7 0 9 8 7 9 105 0 1 1 37 77 6 1 5 5 2 95 0 2 2 40 77 11 1 4 4 0 97 3 10 2 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
12 1 8 9 4 9 8 4 128 0 7 0 9 8 7 9 105 0 1 1 37 77 6 1 5 5 2 95 0 2 2 40 77 11 1 4 4 3 95 0 3 3 38 77 10 1 0 0 44 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
98 98 62 58 1 0 118 116 98 111 98 111 107 105 86 85 83 78 58 97 62 96 50 48 19 18 10 9 0 57 1 57 13 8 22 
CALL[ ]	/* CallFunction */";
};
width = 487;
}
);
note = b;
unicode = 98;
},
{
glyphname = uni1E03;
layers = (
{
layerId = m01;
shapes = (
{
ref = b;
},
{
pos = (172,-134);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-134 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 487;
}
);
note = uni1E03;
unicode = 7683;
},
{
glyphname = uni1E05;
layers = (
{
layerId = m01;
shapes = (
{
ref = b;
},
{
pos = (171,-114);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 487;
}
);
note = uni1E05;
unicode = 7685;
},
{
glyphname = uniA7B5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(37,-152,o),
(44,-169,o),
(42,-179,q),
(47,-182,o),
(55,-184,o),
(59,-180,qs),
(63,-176,o),
(63,-163,o),
(68,-150,q),
(68,-142,o),
(68,-109,o),
(68,-76,o),
(66,-69,qs),
(65,-64,o),
(65,-52,o),
(67,-50,q),
(70,-42,o),
(73,-31,o),
(71,-25,q),
(77,-19,o),
(76,-4,o),
(76,4,q),
(80,5,o),
(84,5,qs),
(226,5,ls),
(236,5,o),
(241,1,qs),
(247,-3,o),
(254,5,o),
(259,5,qs),
(272,3,o),
(317,7,o),
(362,8,o),
(373,1,qs),
(374,0,o),
(398,3,o),
(406,1,qs),
(411,-1,o),
(432,7,o),
(438,12,qs),
(444,17,o),
(433,27,o),
(431,32,q),
(431,35,o),
(414,49,o),
(396,65,o),
(394,70,qs),
(391,78,o),
(377,83,o),
(373,90,qs),
(372,92,o),
(345,121,o),
(305,160,o),
(264,199,o),
(231,225,o),
(226,226,q),
(216,245,o),
(182,269,o),
(168,284,qs),
(164,289,o),
(154,298,o),
(149,303,q),
(151,312,o),
(132,313,o),
(132,320,qs),
(132,329,o),
(114,334,o),
(108,338,qs),
(102,342,o),
(99,352,o),
(100,353,qs),
(107,361,o),
(119,378,o),
(128,384,qs),
(141,391,o),
(194,444,o),
(260,518,o),
(325,593,o),
(375,652,o),
(386,662,qs),
(389,664,o),
(392,671,o),
(393,675,q),
(395,677,o),
(398,681,o),
(394,684,qs),
(392,686,o),
(387,690,o),
(385,690,q),
(346,698,l),
(279,698,o),
(269,690,qs),
(265,686,o),
(251,698,o),
(242,698,qs),
(98,698,ls),
(88,698,o),
(72,690,o),
(61,690,q),
(52,692,o),
(41,680,o),
(41,673,qs),
(41,478,ls),
(41,473,o),
(43,462,o),
(47,457,q),
(41,429,l),
(41,422,o),
(43,410,o),
(47,404,qs),
(49,400,o),
(49,389,o),
(47,384,qs),
(44,372,o),
(45,341,o),
(49,318,o),
(48,317,qs),
(43,312,o),
(40,300,o),
(40,294,qs),
(41,272,o),
(42,201,o),
(42,120,o),
(41,47,o),
(41,23,qs),
(41,19,o),
(39,12,o),
(40,8,q),
(40,8,l),
(41,-9,o),
(41,-28,o),
(41,-48,o),
(41,-67,q),
(30,-83,o),
(40,-97,q),
(36,-104,o),
(33,-118,o),
(40,-126,q),
(33,-135,o)
);
},
{
closed = 1;
nodes = (
(70,402,ls),
(70,403,o),
(71,421,o),
(73,433,qs),
(77,453,o),
(79,491,o),
(74,514,qs),
(71,527,o),
(69,568,o),
(70,613,qs),
(72,633,o),
(74,654,o),
(88,662,o),
(107,662,qs),
(311,662,ls),
(316,662,o),
(328,667,o),
(333,668,q),
(339,664,l),
(335,658,o),
(326,645,o),
(321,640,qs),
(317,636,o),
(297,607,o),
(272,573,o),
(249,546,o),
(242,544,q),
(238,538,o),
(231,521,o),
(221,519,qs),
(204,516,o),
(204,500,q),
(195,497,o),
(171,474,o),
(151,448,o),
(148,442,qs),
(147,439,o),
(120,415,o),
(89,390,o),
(81,383,q),
(74,386,l)
);
},
{
closed = 1;
nodes = (
(200,578,q),
(200,583,ls),
(200,587,o),
(199,587,q),
(194,593,o),
(183,602,o),
(178,608,q),
(172,612,o),
(153,611,o),
(148,606,qs),
(133,592,ls),
(127,586,o),
(128,577,o),
(136,569,qs),
(153,554,o),
(166,554,qs),
(187,554,o)
);
},
{
closed = 1;
nodes = (
(154,579,qs),
(150,583,o),
(153,586,qs),
(158,590,ls),
(164,594,o),
(168,591,q),
(170,587,o),
(174,585,q),
(174,581,l),
(171,574,o),
(164,574,qs),
(159,574,o)
);
},
{
closed = 1;
nodes = (
(74,40,o),
(74,47,qs),
(74,50,o),
(72,89,o),
(70,144,o),
(69,202,o),
(71,247,o),
(75,256,q),
(71,261,o),
(73,280,o),
(74,306,qs),
(74,309,o),
(75,314,o),
(76,317,q),
(76,319,o),
(85,319,o),
(87,318,qs),
(91,316,o),
(92,304,o),
(99,304,qs),
(107,304,o),
(108,288,o),
(118,289,q),
(123,286,o),
(132,278,o),
(137,275,qs),
(143,271,o),
(148,259,o),
(152,254,q),
(182,225,o),
(230,187,o),
(245,164,q),
(252,166,o),
(257,157,o),
(261,148,o),
(268,148,q),
(271,145,o),
(298,119,o),
(333,87,o),
(361,60,o),
(364,57,qs),
(369,53,o),
(373,45,q),
(373,41,o),
(367,38,o),
(354,38,qs),
(245,36,o),
(113,35,o),
(88,35,qs),
(79,35,o)
);
},
{
closed = 1;
nodes = (
(206,129,q),
(206,134,ls),
(206,138,o),
(205,138,q),
(198,145,o),
(188,154,o),
(183,160,q),
(176,163,o),
(156,163,o),
(151,158,qs),
(137,143,ls),
(130,136,o),
(130,128,o),
(139,119,qs),
(154,105,o),
(170,105,qs),
(190,105,o)
);
},
{
closed = 1;
nodes = (
(158,130,qs),
(154,134,o),
(157,137,qs),
(162,141,ls),
(168,145,o),
(172,142,q),
(174,138,o),
(178,136,q),
(178,132,l),
(175,125,o),
(168,125,qs),
(163,125,o)
);
}
);
userData = {
assembly = "NPUSHW[ ]	/* 52 values pushed */
161 36 2 5 0 169 1 7 5 205 199 195 3 8 7 147 73 67 32 4 11 6 21 1 10 11 250 18 2 13 10 284 278 274 3 14 13 9 1 3 9 8 76 119 116 108 5 3 0 6 3 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 7 5 8 8 7 114 0 11 6 10 6 11 10 128 0 10 13 6 10 13 126 0 13 14 14 13 112 16 1 8 15 1 6 11 8 6 106 19 1 14 18 1 12 9 14 12 106 0 0 0 39 77 0 5 5 1 97 2 1 1 1 39 77 17 1 9 9 3 97 4 1 3 3 38 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 7 5 8 8 7 114 0 11 6 10 6 11 10 128 0 10 13 6 10 13 126 0 13 14 6 13 14 126 16 1 8 15 1 6 11 8 6 106 19 1 14 18 1 12 9 14 12 106 0 0 0 39 77 0 5 5 1 97 2 1 1 1 39 77 17 1 9 9 3 97 4 1 3 3 38 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 7 5 8 8 7 114 0 11 6 10 6 11 10 128 0 10 13 6 10 13 126 0 13 14 14 13 112 16 1 8 15 1 6 11 8 6 106 19 1 14 18 1 12 9 14 12 106 0 0 0 39 77 0 5 5 1 97 2 1 1 1 39 77 17 1 9 9 3 97 4 1 3 3 38 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 79 values pushed */
0 7 5 8 5 7 8 128 0 11 6 10 6 11 10 128 0 10 13 6 10 13 126 0 13 14 6 13 14 126 16 1 8 15 1 6 11 8 6 106 19 1 14 18 1 12 9 14 12 106 0 0 0 39 77 0 5 5 1 97 2 1 1 1 39 77 17 1 9 9 3 97 4 1 3 3 38 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 53 values pushed */
277 276 260 259 213 209 198 197 181 180 276 287 277 287 267 266 259 275 260 275 243 242 239 237 209 258 213 258 197 208 198 208 188 187 180 196 181 196 166 163 114 112 106 105 48 47 44 41 40 39 20 8 22 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = uniA7B5;
unicode = 42933;
},
{
glyphname = uni0253;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,0,q),
(114,0,o),
(130,-3,o),
(138,3,qs),
(142,6,o),
(154,3,o),
(160,3,qs),
(409,-1,ls),
(415,-1,o),
(424,-2,o),
(430,-1,qs),
(436,-1,o),
(446,11,o),
(446,18,qs),
(446,53,o),
(447,112,o),
(447,146,qs),
(447,151,o),
(437,180,o),
(444,187,qs),
(449,192,o),
(441,221,o),
(441,225,qs),
(441,241,o),
(444,293,o),
(445,338,o),
(441,342,q),
(444,348,o),
(448,360,o),
(441,367,q),
(445,372,o),
(445,381,qs),
(445,392,o),
(438,419,o),
(438,431,q),
(440,438,o),
(428,449,o),
(422,450,q),
(94,451,l),
(86,452,o),
(76,475,o),
(71,537,o),
(71,597,q),
(75,602,o),
(74,632,o),
(73,668,o),
(84,693,o),
(101,692,qs),
(106,692,o),
(129,693,o),
(134,691,q),
(141,690,o),
(146,692,o),
(160,694,o),
(179,691,qs),
(184,690,o),
(194,696,o),
(200,693,q),
(213,701,o),
(211,712,o),
(200,717,q),
(188,725,o),
(169,728,o),
(155,723,qs),
(151,722,o),
(121,722,o),
(116,722,qs),
(93,723,o),
(88,723,o),
(84,723,qs),
(66,722,o),
(48,706,o),
(44,693,q),
(41,689,o),
(40,675,o),
(40,665,qs),
(40,664,l),
(40,663,l),
(40,663,l),
(40,626,l),
(40,625,l),
(38,621,o),
(41,602,o),
(40,599,q),
(41,597,l),
(45,26,ls),
(45,22,o),
(44,13,o),
(45,9,qs),
(45,7,o),
(55,-4,o),
(74,-4,qs),
(87,-4,o)
);
},
{
closed = 1;
nodes = (
(122,36,o),
(90,40,o),
(83,35,qs),
(82,34,o),
(80,81,o),
(80,159,o),
(80,252,o),
(80,344,o),
(80,379,qs),
(80,397,o),
(95,417,o),
(129,417,qs),
(142,417,o),
(142,416,o),
(155,416,qs),
(377,416,ls),
(383,416,o),
(396,417,o),
(403,416,qs),
(409,414,o),
(409,407,qs),
(409,382,o),
(408,363,o),
(409,359,qs),
(411,351,o),
(422,327,o),
(417,320,qs),
(415,317,o),
(413,291,o),
(411,263,o),
(409,255,qs),
(408,248,o),
(417,141,o),
(417,43,qs),
(417,33,o),
(409,33,qs),
(402,33,o),
(386,32,o),
(378,32,qs),
(129,36,ls)
);
},
{
closed = 1;
nodes = (
(284,204,o),
(284,216,qs),
(284,223,o),
(270,248,o),
(252,248,qs),
(242,248,o),
(223,232,o),
(215,224,q),
(207,213,o),
(215,201,qs),
(221,194,o),
(234,186,o),
(244,187,qs),
(263,187,o)
);
},
{
closed = 1;
nodes = (
(239,212,q),
(238,217,o),
(239,218,q),
(243,225,o),
(249,225,qs),
(254,225,o),
(256,218,o),
(256,216,qs),
(256,209,o),
(246,209,q),
(243,208,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
34 1 2 1 49 7 2 3 2 57 1 6 3 111 108 65 62 4 8 6 154 1 9 10 78 1 4 5 6 76 69 1 10 1 75 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
34 1 2 1 49 7 2 3 2 57 1 6 3 111 108 65 62 4 8 6 154 1 9 10 78 1 0 5 6 76 69 1 10 1 75 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
34 1 2 1 49 7 2 3 2 57 1 6 3 111 108 65 62 4 8 6 154 1 9 10 78 1 4 5 6 76 69 1 10 1 75 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
13 1 9 10 5 10 9 114 0 8 0 10 9 8 10 105 0 2 2 1 97 0 1 1 37 77 7 1 6 6 3 95 0 3 3 40 77 12 1 5 5 4 95 0 4 4 38 77 11 1 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
13 1 9 10 5 10 9 114 0 8 0 10 9 8 10 105 0 2 2 1 97 0 1 1 37 77 7 1 6 6 3 95 0 3 3 40 77 12 1 5 5 0 97 4 11 2 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
13 1 9 10 5 10 9 114 0 1 0 2 3 1 2 105 0 8 0 10 9 8 10 105 7 1 6 6 3 95 0 3 3 40 77 12 1 5 5 0 97 4 11 2 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
13 1 9 10 5 10 9 5 128 0 1 0 2 3 1 2 105 0 8 0 10 9 8 10 105 7 1 6 6 3 95 0 3 3 40 77 12 1 5 5 0 97 4 11 2 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
13 1 9 10 5 10 9 5 128 0 1 0 2 3 1 2 105 0 8 0 10 9 8 10 105 7 1 6 6 3 95 0 3 3 40 77 12 1 5 5 4 95 0 4 4 38 77 11 1 0 0 44 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
133 133 97 93 1 0 153 151 133 146 133 146 142 140 121 120 118 113 93 132 97 131 85 83 54 53 45 41 27 21 0 92 1 92 14 8 22 
CALL[ ]	/* CallFunction */";
};
width = 487;
}
);
note = uni0253;
unicode = 595;
},
{
glyphname = uni0298;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(420,-6,o),
(434,3,o),
(439,7,qs),
(441,9,o),
(442,18,o),
(442,22,qs),
(442,75,o),
(442,156,o),
(443,232,o),
(443,319,o),
(443,379,qs),
(443,387,o),
(446,402,o),
(450,409,q),
(452,411,o),
(444,421,o),
(445,423,qs),
(447,428,o),
(451,436,o),
(451,442,qs),
(451,581,ls),
(451,591,o),
(446,597,qs),
(442,602,o),
(451,607,o),
(451,611,qs),
(451,646,ls),
(451,655,o),
(450,673,o),
(450,682,qs),
(450,687,o),
(441,696,o),
(436,698,qs),
(433,700,o),
(424,698,o),
(420,698,qs),
(78,698,ls),
(74,698,o),
(65,699,o),
(61,698,qs),
(57,698,o),
(45,684,o),
(45,679,qs),
(45,629,ls),
(45,622,o),
(46,607,o),
(45,600,q),
(37,594,o),
(45,584,o),
(45,578,qs),
(45,477,ls),
(45,473,o),
(39,465,o),
(40,463,q),
(44,459,o),
(45,449,o),
(45,444,qs),
(45,25,ls),
(45,3,o),
(66,3,qs),
(113,3,o),
(158,3,o),
(175,2,o),
(179,0,qs),
(187,-5,o),
(198,3,o),
(205,3,qs),
(258,3,o),
(307,2,o),
(324,2,o),
(327,3,qs),
(335,5,o),
(346,-7,o),
(353,3,q),
(367,-6,o),
(382,-6,qs),
(414,-6,ls)
);
},
{
closed = 1;
nodes = (
(168,37,o),
(161,37,qs),
(78,37,ls),
(74,37,o),
(69,46,o),
(72,49,qs),
(77,55,o),
(79,66,o),
(79,73,qs),
(79,120,ls),
(79,126,o),
(77,138,o),
(72,143,q),
(70,148,o),
(74,154,qs),
(87,172,o),
(76,194,qs),
(73,202,o),
(73,214,o),
(78,220,q),
(80,221,o),
(79,227,o),
(78,228,qs),
(74,233,o),
(71,242,o),
(71,247,qs),
(71,264,o),
(72,281,o),
(78,287,q),
(81,293,o),
(76,298,qs),
(72,303,o),
(72,313,o),
(70,318,q),
(69,326,o),
(81,340,o),
(71,347,q),
(71,647,l),
(72,652,o),
(84,663,o),
(89,663,qs),
(401,663,ls),
(413,663,o),
(417,659,o),
(417,646,qs),
(417,490,ls),
(417,483,o),
(416,472,o),
(412,466,qs),
(403,454,o),
(412,438,qs),
(416,429,o),
(412,424,qs),
(411,423,o),
(408,415,o),
(409,413,q),
(414,407,o),
(417,397,o),
(412,390,qs),
(410,388,o),
(407,377,o),
(409,375,qs),
(412,371,o),
(415,352,o),
(417,298,o),
(417,241,qs),
(417,227,o),
(409,219,qs),
(408,218,o),
(410,213,o),
(409,211,qs),
(407,204,o),
(418,192,o),
(409,186,q),
(409,51,ls),
(409,39,o),
(404,30,q),
(393,30,o),
(370,29,o),
(358,29,qs),
(257,29,ls),
(250,29,o),
(236,29,o),
(229,34,qs),
(227,36,o),
(215,29,o),
(211,30,qs),
(207,32,o),
(199,36,o),
(194,30,q),
(188,27,o),
(186,29,qs),
(181,34,o)
);
},
{
closed = 1;
nodes = (
(284,337,o),
(284,345,qs),
(284,361,o),
(257,382,o),
(233,382,q),
(221,384,o),
(204,374,o),
(196,364,qs),
(186,350,o),
(196,335,q),
(206,325,o),
(230,305,o),
(244,305,qs),
(267,305,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 113 values pushed */
33 1 5 3 113 56 50 29 26 5 8 5 181 132 2 7 8 163 160 143 95 4 6 7 70 2 2 1 4 5 76 77 1 4 1 75 0 8 10 1 7 6 8 7 105 0 5 5 3 95 0 3 3 39 77 0 6 6 1 97 2 1 1 1 38 77 0 4 4 1 97 2 1 1 1 38 77 9 1 0 0 44 0 78 171 170 1 0 179 178 170 183 171 183 167 165 128 127 92 86 40 38 17 14 9 5 0 76 1 75 11 8 22 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uni0298;
unicode = 664;
},
{
glyphname = bmacronbelow;
layers = (
{
layerId = m01;
shapes = (
{
ref = b;
},
{
pos = (61,-329);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-329 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 487;
}
);
note = bmacronbelow;
unicode = 7687;
},
{
glyphname = uni0180;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,0,q),
(114,0,o),
(130,-3,o),
(138,3,qs),
(142,6,o),
(154,3,o),
(160,3,qs),
(409,-1,ls),
(415,-1,o),
(424,-2,o),
(430,-1,qs),
(436,-1,o),
(446,11,o),
(446,18,qs),
(446,53,o),
(447,112,o),
(447,146,qs),
(447,151,o),
(437,180,o),
(444,187,qs),
(449,192,o),
(441,221,o),
(441,225,qs),
(441,241,o),
(444,293,o),
(445,338,o),
(441,342,q),
(444,348,o),
(448,360,o),
(441,367,q),
(445,372,o),
(445,381,qs),
(445,392,o),
(438,419,o),
(438,431,q),
(440,438,o),
(428,449,o),
(422,450,q),
(94,451,l),
(86,452,o),
(76,474,o),
(71,534,o),
(71,591,q),
(79,591,o),
(94,591,o),
(98,590,qs),
(108,589,o),
(117,590,o),
(129,592,o),
(156,592,o),
(183,590,qs),
(193,589,o),
(212,595,o),
(222,592,q),
(247,600,o),
(242,611,o),
(222,616,q),
(200,624,o),
(164,627,o),
(138,622,qs),
(132,621,o),
(85,621,o),
(71,621,q),
(71,637,o),
(71,654,qs),
(71,657,o),
(70,680,o),
(67,700,o),
(64,700,qs),
(46,700,o),
(40,685,o),
(40,665,qs),
(40,621,l),
(16,622,o),
(11,622,o),
(5,622,qs),
(-47,621,o),
(-29,593,o),
(37,591,qs),
(41,591,l),
(45,26,ls),
(45,22,o),
(44,13,o),
(45,9,qs),
(45,7,o),
(55,-4,o),
(74,-4,qs),
(87,-4,o)
);
},
{
closed = 1;
nodes = (
(122,36,o),
(90,40,o),
(83,35,qs),
(82,34,o),
(80,81,o),
(80,159,o),
(80,252,o),
(80,344,o),
(80,379,qs),
(80,397,o),
(95,417,o),
(129,417,qs),
(142,417,o),
(142,416,o),
(155,416,qs),
(377,416,ls),
(383,416,o),
(396,417,o),
(403,416,qs),
(409,414,o),
(409,407,qs),
(409,382,o),
(408,363,o),
(409,359,qs),
(411,351,o),
(422,327,o),
(417,320,qs),
(415,317,o),
(413,291,o),
(411,263,o),
(409,255,qs),
(408,248,o),
(417,141,o),
(417,43,qs),
(417,33,o),
(409,33,qs),
(402,33,o),
(386,32,o),
(378,32,qs),
(129,36,ls)
);
},
{
closed = 1;
nodes = (
(284,204,o),
(284,216,qs),
(284,223,o),
(270,248,o),
(252,248,qs),
(242,248,o),
(223,232,o),
(215,224,q),
(207,213,o),
(215,201,qs),
(221,194,o),
(234,186,o),
(244,187,qs),
(263,187,o)
);
},
{
closed = 1;
nodes = (
(239,212,q),
(238,217,o),
(239,218,q),
(243,225,o),
(249,225,qs),
(254,225,o),
(256,218,o),
(256,216,qs),
(256,209,o),
(246,209,q),
(243,208,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
52 1 10 7 106 103 60 57 4 12 10 149 1 13 14 73 1 8 9 4 76 33 1 1 64 1 14 2 75 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
52 1 10 7 106 103 60 57 4 12 10 149 1 13 14 73 1 0 9 4 76 33 1 1 64 1 14 2 75 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
52 1 10 7 106 103 60 57 4 12 10 149 1 13 14 73 1 8 9 4 76 33 1 1 64 1 14 2 75 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
17 1 13 14 9 14 13 114 4 1 2 6 5 2 1 7 2 1 105 0 12 0 14 13 12 14 105 0 3 3 37 77 11 1 10 10 7 95 0 7 7 40 77 16 1 9 9 8 95 0 8 8 38 77 15 1 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
17 1 13 14 9 14 13 114 4 1 2 6 5 2 1 7 2 1 105 0 12 0 14 13 12 14 105 0 3 3 37 77 11 1 10 10 7 95 0 7 7 40 77 16 1 9 9 0 97 8 15 2 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
17 1 13 14 9 14 13 9 128 4 1 2 6 5 2 1 7 2 1 105 0 12 0 14 13 12 14 105 0 3 3 37 77 11 1 10 10 7 95 0 7 7 40 77 16 1 9 9 0 97 8 15 2 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
17 1 13 14 9 14 13 9 128 4 1 2 6 5 2 1 7 2 1 105 0 12 0 14 13 12 14 105 0 3 3 37 77 11 1 10 10 7 95 0 7 7 40 77 16 1 9 9 8 95 0 8 8 38 77 15 1 0 0 44 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 45 values pushed */
128 128 92 88 1 0 148 146 128 141 128 141 137 135 116 115 113 108 88 127 92 126 80 78 49 48 43 41 38 37 26 24 18 17 14 10 9 7 0 87 1 87 18 8 22 
CALL[ ]	/* CallFunction */";
};
width = 487;
}
);
note = uni0180;
unicode = 384;
},
{
glyphname = c;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(342,3,o),
(344,5,qs),
(353,14,o),
(378,9,o),
(398,6,o),
(398,17,qs),
(398,22,o),
(395,32,qs),
(394,38,o),
(380,36,o),
(375,36,qs),
(337,36,o),
(291,35,o),
(245,33,o),
(207,33,qs),
(200,33,o),
(186,31,o),
(180,33,q),
(167,40,o),
(142,44,o),
(131,34,q),
(121,42,o),
(105,42,o),
(95,34,qs),
(88,28,o),
(73,49,o),
(73,54,qs),
(73,83,o),
(80,92,qs),
(85,99,o),
(76,113,o),
(74,120,q),
(74,131,o),
(84,145,o),
(80,153,qs),
(77,159,o),
(71,179,o),
(77,186,qs),
(82,193,o),
(72,213,o),
(72,220,qs),
(72,246,o),
(73,287,o),
(73,313,qs),
(73,322,o),
(77,329,qs),
(80,333,o),
(77,337,o),
(76,340,qs),
(71,359,o),
(74,390,o),
(74,409,q),
(79,412,o),
(90,413,o),
(96,413,qs),
(160,413,ls),
(177,413,o),
(205,422,o),
(230,424,o),
(242,413,q),
(265,413,ls),
(283,413,o),
(295,424,o),
(305,428,o),
(319,418,qs),
(327,413,o),
(336,413,qs),
(378,413,ls),
(384,413,o),
(397,424,o),
(398,429,qs),
(400,435,o),
(386,449,o),
(378,449,qs),
(66,449,ls),
(56,449,o),
(49,442,o),
(42,436,q),
(41,436,o),
(39,423,o),
(40,422,qs),
(45,415,o),
(46,400,o),
(46,393,qs),
(46,273,o),
(46,129,o),
(46,56,o),
(46,29,o),
(46,26,o),
(46,23,qs),
(46,18,o),
(59,5,o),
(63,5,qs),
(69,4,o),
(80,5,o),
(86,5,qs),
(180,5,o),
(280,6,o),
(321,6,o),
(325,2,q),
(327,1,o)
);
},
{
closed = 1;
nodes = (
(268,222,o),
(268,229,qs),
(268,260,o),
(248,269,q),
(241,274,o),
(217,255,o),
(213,248,q),
(205,238,o),
(208,218,o),
(209,210,q),
(211,205,o),
(231,201,o),
(253,202,o),
(257,202,qs),
(263,202,o)
);
},
{
closed = 1;
nodes = (
(230,226,o),
(229,228,q),
(229,231,o),
(229,236,o),
(231,238,q),
(232,240,o),
(239,247,o),
(241,245,qs),
(245,242,o),
(245,234,qs),
(245,232,o),
(244,226,o),
(242,226,qs),
(241,226,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
19 1 2 1 121 119 113 59 4 7 2 73 68 2 5 7 79 1 6 5 4 76 8 1 7 2 5 2 7 5 128 0 5 6 6 5 112 4 3 2 2 2 1 95 0 1 1 40 77 0 6 6 0 98 0 0 0 38 0 78 103 101 101 115 103 115 89 82 78 77 47 43 40 38 34 31 26 24 81 9 8 23 
CALL[ ]	/* CallFunction */";
};
width = 408;
}
);
note = c;
unicode = 99;
},
{
glyphname = cacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = c;
},
{
pos = (146,-107);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-107 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 408;
}
);
note = cacute;
unicode = 263;
},
{
glyphname = ccaron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(342,3,o),
(344,5,qs),
(353,14,o),
(378,9,o),
(398,6,o),
(398,17,qs),
(398,22,o),
(395,32,qs),
(394,38,o),
(380,36,o),
(375,36,qs),
(337,36,o),
(291,35,o),
(245,33,o),
(207,33,qs),
(200,33,o),
(186,31,o),
(180,33,q),
(167,40,o),
(142,44,o),
(131,34,q),
(121,42,o),
(105,42,o),
(95,34,qs),
(88,28,o),
(73,49,o),
(73,54,qs),
(73,83,o),
(80,92,qs),
(85,99,o),
(76,113,o),
(74,120,q),
(74,131,o),
(84,145,o),
(80,153,qs),
(77,159,o),
(71,179,o),
(77,186,qs),
(82,193,o),
(72,213,o),
(72,220,qs),
(72,246,o),
(73,287,o),
(73,313,qs),
(73,322,o),
(77,329,qs),
(80,333,o),
(77,337,o),
(76,340,qs),
(71,359,o),
(74,390,o),
(74,409,q),
(79,412,o),
(90,413,o),
(96,413,qs),
(160,413,ls),
(177,413,o),
(205,422,o),
(230,424,o),
(242,413,q),
(265,413,ls),
(283,413,o),
(295,424,o),
(305,428,o),
(319,418,qs),
(327,413,o),
(336,413,qs),
(378,413,ls),
(384,413,o),
(397,424,o),
(398,429,qs),
(400,435,o),
(386,449,o),
(378,449,qs),
(66,449,ls),
(56,449,o),
(49,442,o),
(42,436,q),
(41,436,o),
(39,423,o),
(40,422,qs),
(45,415,o),
(46,400,o),
(46,393,qs),
(46,273,o),
(46,129,o),
(46,56,o),
(46,29,o),
(46,26,o),
(46,23,qs),
(46,18,o),
(59,5,o),
(63,5,qs),
(69,4,o),
(80,5,o),
(86,5,qs),
(180,5,o),
(280,6,o),
(321,6,o),
(325,2,q),
(327,1,o)
);
},
{
closed = 1;
nodes = (
(268,222,o),
(268,229,qs),
(268,260,o),
(248,269,q),
(241,274,o),
(217,255,o),
(213,248,q),
(205,238,o),
(208,218,o),
(209,210,q),
(211,205,o),
(231,201,o),
(253,202,o),
(257,202,qs),
(263,202,o)
);
},
{
closed = 1;
nodes = (
(230,226,o),
(229,228,q),
(229,231,o),
(229,236,o),
(231,238,q),
(232,240,o),
(239,247,o),
(241,245,qs),
(245,242,o),
(245,234,qs),
(245,232,o),
(244,226,o),
(242,226,qs),
(241,226,o)
);
},
{
closed = 1;
nodes = (
(267,586,o),
(264,582,qs),
(262,580,o),
(249,563,o),
(247,561,qs),
(245,558,o),
(238,547,o),
(236,546,qs),
(230,543,o),
(226,543,o),
(221,545,q),
(217,550,o),
(195,570,o),
(168,593,o),
(145,609,o),
(140,609,q),
(132,611,o),
(120,609,o),
(124,600,q),
(130,594,o),
(142,581,o),
(146,574,q),
(151,571,o),
(163,556,o),
(169,553,q),
(177,546,o),
(184,537,o),
(191,531,qs),
(199,524,o),
(215,510,o),
(219,499,qs),
(221,495,o),
(229,494,o),
(231,498,q),
(242,510,o),
(273,544,o),
(303,579,o),
(323,602,o),
(322,603,qs),
(320,605,o),
(314,610,o),
(312,610,q),
(307,612,o),
(300,610,q),
(286,603,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
19 1 2 1 121 119 113 59 4 7 2 73 68 2 5 7 79 1 6 5 4 76 8 1 7 2 5 2 7 5 128 0 5 6 6 5 112 4 3 2 2 2 1 95 0 1 1 40 77 0 6 6 0 98 0 0 0 38 0 78 103 101 101 115 103 115 89 82 78 77 47 43 40 38 34 31 26 24 81 9 8 23 
CALL[ ]	/* CallFunction */";
};
width = 408;
}
);
note = ccaron;
unicode = 269;
},
{
glyphname = ccedilla;
layers = (
{
layerId = m01;
shapes = (
{
ref = c;
},
{
pos = (173,1);
ref = uni0327;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
1 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 408;
}
);
note = ccedilla;
unicode = 231;
},
{
glyphname = uni1E09;
layers = (
{
layerId = m01;
shapes = (
{
ref = c;
},
{
pos = (173,1);
ref = uni0327;
},
{
pos = (146,-107);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
1 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-107 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 408;
}
);
note = uni1E09;
unicode = 7689;
},
{
glyphname = ccircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = c;
},
{
pos = (87,-119);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-119 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 408;
}
);
note = ccircumflex;
unicode = 265;
},
{
glyphname = cdotaccent;
layers = (
{
layerId = m01;
shapes = (
{
ref = c;
},
{
pos = (150,-134);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-134 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 408;
}
);
note = cdotaccent;
unicode = 267;
},
{
glyphname = uniAB53;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(450,-180,o),
(463,-175,q),
(471,-167,o),
(485,-152,o),
(495,-148,q),
(498,-146,o),
(504,-146,o),
(503,-141,qs),
(503,-138,o),
(508,-133,o),
(509,-132,qs),
(515,-126,o),
(528,-118,o),
(535,-114,qs),
(538,-112,o),
(552,-100,o),
(561,-85,o),
(553,-79,qs),
(549,-75,o),
(529,-75,o),
(527,-79,q),
(522,-82,o),
(498,-101,o),
(470,-124,o),
(447,-143,o),
(442,-146,qs),
(432,-152,l),
(425,-137,o),
(423,-118,qs),
(420,-102,o),
(398,-58,o),
(375,-13,o),
(369,2,qs),
(366,12,o),
(343,40,o),
(344,47,qs),
(345,62,o),
(332,78,o),
(325,90,q),
(329,100,o),
(316,127,o),
(297,158,o),
(291,172,q),
(293,176,o),
(299,183,o),
(301,187,q),
(309,196,o),
(330,211,o),
(332,221,qs),
(334,241,o),
(357,253,o),
(364,265,qs),
(388,301,o),
(416,343,o),
(438,375,o),
(466,416,o),
(490,452,q),
(497,460,o),
(503,478,o),
(503,485,qs),
(503,496,o),
(494,502,q),
(490,500,o),
(465,481,o),
(450,456,qs),
(446,449,o),
(424,414,o),
(420,409,qs),
(403,384,o),
(389,362,o),
(381,349,o),
(366,327,o),
(348,301,qs),
(338,285,o),
(314,255,o),
(306,241,qs),
(301,230,o),
(286,216,o),
(278,208,q),
(273,220,o),
(258,252,o),
(255,262,qs),
(249,292,o),
(234,325,o),
(219,345,o),
(205,364,o),
(200,380,qs),
(198,385,o),
(181,412,o),
(164,439,o),
(163,444,qs),
(160,464,o),
(140,493,o),
(139,494,q),
(131,496,o),
(124,490,qs),
(114,483,o),
(110,472,o),
(96,466,q),
(89,458,o),
(77,443,o),
(68,437,q),
(65,436,o),
(58,435,o),
(59,430,qs),
(59,428,o),
(56,422,o),
(54,420,qs),
(50,414,o),
(38,406,o),
(30,401,q),
(28,399,o),
(15,386,o),
(8,371,o),
(15,365,qs),
(21,361,o),
(40,363,o),
(43,367,q),
(47,370,o),
(71,393,o),
(99,420,o),
(122,443,o),
(126,447,q),
(137,413,o),
(165,367,o),
(194,325,o),
(220,271,o),
(229,229,q),
(233,217,o),
(257,190,o),
(258,175,q),
(251,168,o),
(231,147,o),
(224,136,qs),
(219,126,o),
(192,90,o),
(168,53,o),
(166,42,q),
(156,32,o),
(144,12,o),
(139,-1,qs),
(137,-7,o),
(123,-28,o),
(118,-36,q),
(106,-48,o),
(73,-85,o),
(43,-123,o),
(35,-137,qs),
(22,-164,o),
(13,-177,o),
(13,-184,qs),
(13,-196,o),
(26,-195,o),
(34,-193,q),
(43,-176,o),
(70,-150,o),
(96,-121,o),
(100,-102,q),
(116,-93,o),
(131,-64,o),
(135,-50,q),
(152,-39,o),
(167,-13,o),
(170,1,q),
(193,34,o),
(249,101,o),
(271,133,q),
(271,132,o),
(275,125,o),
(292,93,o),
(311,56,q),
(309,45,o),
(321,15,o),
(341,-13,o),
(348,-22,q),
(347,-38,o),
(366,-69,o),
(377,-82,q),
(374,-101,o),
(384,-133,o),
(401,-163,o),
(405,-181,q),
(411,-191,o),
(413,-195,o),
(434,-197,q),
(445,-190,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
149 146 125 106 62 54 10 7 0 74 158 34 7 3 0 73 0 0 0 118 166 165 1 8 22 
CALL[ ]	/* CallFunction */";
};
width = 567;
}
);
note = uniAB53;
unicode = 43859;
},
{
glyphname = uni0188;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(342,3,o),
(344,5,qs),
(353,14,o),
(378,9,o),
(398,6,o),
(398,17,qs),
(398,22,o),
(395,32,qs),
(394,38,o),
(380,36,o),
(375,36,qs),
(337,36,o),
(291,35,o),
(245,33,o),
(207,33,qs),
(200,33,o),
(186,31,o),
(180,33,q),
(167,40,o),
(142,44,o),
(131,34,q),
(121,42,o),
(105,42,o),
(95,34,qs),
(88,28,o),
(73,49,o),
(73,54,qs),
(73,83,o),
(80,92,qs),
(85,99,o),
(76,113,o),
(74,120,q),
(74,131,o),
(84,145,o),
(80,153,qs),
(77,159,o),
(71,179,o),
(77,186,qs),
(82,193,o),
(72,213,o),
(72,220,qs),
(72,246,o),
(73,287,o),
(73,313,qs),
(73,322,o),
(77,329,qs),
(80,333,o),
(77,337,o),
(76,340,qs),
(71,359,o),
(74,390,o),
(74,409,q),
(79,412,o),
(90,413,o),
(96,413,qs),
(160,413,ls),
(177,413,o),
(205,422,o),
(230,424,o),
(242,413,q),
(265,413,ls),
(283,413,o),
(295,424,o),
(305,428,o),
(319,418,qs),
(327,413,o),
(336,413,qs),
(378,413,ls),
(389,413,o),
(396,425,q),
(397,425,o),
(397,427,qs),
(397,428,l),
(401,432,o),
(401,476,o),
(400,537,o),
(402,596,o),
(414,635,o),
(428,634,qs),
(433,634,o),
(456,635,o),
(461,633,q),
(468,632,o),
(473,634,o),
(487,636,o),
(506,633,qs),
(511,632,o),
(521,638,o),
(527,635,q),
(540,643,o),
(538,654,o),
(527,659,q),
(515,667,o),
(496,670,o),
(482,665,qs),
(478,664,o),
(448,664,o),
(443,664,qs),
(420,665,o),
(415,665,o),
(411,665,qs),
(393,664,o),
(375,639,o),
(369,567,o),
(367,495,qs),
(367,485,o),
(372,464,o),
(367,457,qs),
(365,454,o),
(366,449,q),
(66,449,ls),
(56,449,o),
(49,442,o),
(42,436,q),
(41,436,o),
(39,423,o),
(40,422,qs),
(45,415,o),
(46,400,o),
(46,393,qs),
(46,273,o),
(46,129,o),
(46,56,o),
(46,29,o),
(46,26,o),
(46,23,qs),
(46,18,o),
(59,5,o),
(63,5,qs),
(69,4,o),
(80,5,o),
(86,5,qs),
(180,5,o),
(280,6,o),
(321,6,o),
(325,2,q),
(327,1,o)
);
},
{
closed = 1;
nodes = (
(268,222,o),
(268,229,qs),
(268,260,o),
(248,269,q),
(241,274,o),
(217,255,o),
(213,248,q),
(205,238,o),
(208,218,o),
(209,210,q),
(211,205,o),
(231,201,o),
(253,202,o),
(257,202,qs),
(263,202,o)
);
},
{
closed = 1;
nodes = (
(230,226,o),
(229,228,q),
(229,231,o),
(229,236,o),
(231,238,q),
(232,240,o),
(239,247,o),
(241,245,qs),
(245,242,o),
(245,234,qs),
(245,232,o),
(244,226,o),
(242,226,qs),
(241,226,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 98 values pushed */
47 1 3 2 19 1 4 1 157 155 149 95 4 9 4 109 104 2 7 9 115 1 8 7 5 76 10 1 9 4 7 4 9 7 128 0 7 8 8 7 112 0 2 0 3 1 2 3 105 6 5 2 4 4 1 95 0 1 1 40 77 0 8 8 0 98 0 0 0 38 0 78 139 137 137 151 139 151 125 118 114 113 83 79 76 74 70 67 58 54 40 34 26 24 81 11 8 23 
CALL[ ]	/* CallFunction */";
};
width = 459;
}
);
note = uni0188;
unicode = 392;
},
{
glyphname = uni023C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(159,-46,o),
(164,-34,o),
(165,-27,q),
(170,-13,o),
(176,5,q),
(232,6,o),
(294,6,o),
(321,5,o),
(325,2,qs),
(327,1,o),
(342,3,o),
(344,5,qs),
(353,14,o),
(378,9,o),
(398,6,o),
(398,17,qs),
(398,22,o),
(395,32,qs),
(394,38,o),
(380,36,o),
(375,36,qs),
(337,36,o),
(291,35,o),
(245,33,o),
(207,33,qs),
(202,33,o),
(190,31,o),
(185,32,q),
(198,68,o),
(220,127,o),
(221,130,qs),
(223,136,o),
(229,145,o),
(235,147,q),
(236,148,o),
(237,157,o),
(236,159,qs),
(235,162,o),
(241,186,o),
(245,201,q),
(253,201,o),
(257,202,q),
(263,202,o),
(268,222,o),
(268,229,qs),
(268,243,o),
(263,253,q),
(268,265,o),
(275,282,o),
(277,284,qs),
(283,291,o),
(290,303,o),
(287,313,q),
(293,317,o),
(299,326,o),
(301,333,qs),
(304,344,o),
(318,390,o),
(326,415,q),
(331,413,o),
(336,413,qs),
(378,413,ls),
(384,413,o),
(397,424,o),
(398,429,qs),
(400,435,o),
(386,449,o),
(378,449,qs),
(337,449,l),
(343,470,o),
(352,499,o),
(353,500,q),
(356,509,o),
(352,518,q),
(351,529,o),
(344,537,o),
(328,535,q),
(316,502,o),
(313,485,o),
(311,478,qs),
(302,449,l),
(66,449,ls),
(56,449,o),
(49,442,o),
(42,436,q),
(41,436,o),
(39,423,o),
(40,422,qs),
(45,415,o),
(46,400,o),
(46,393,qs),
(46,273,o),
(46,129,o),
(46,56,o),
(46,29,o),
(46,26,o),
(46,23,qs),
(46,18,o),
(59,5,o),
(63,5,qs),
(69,4,o),
(80,5,o),
(86,5,qs),
(113,5,o),
(139,5,q),
(136,2,o),
(133,3,q),
(133,-8,o),
(127,-49,o),
(125,-59,qs),
(122,-74,o),
(135,-79,o),
(150,-72,o),
(150,-72,q),
(163,-53,l)
);
},
{
closed = 1;
nodes = (
(80,92,qs),
(85,99,o),
(76,113,o),
(74,120,q),
(74,131,o),
(84,145,o),
(80,153,qs),
(77,159,o),
(71,179,o),
(77,186,qs),
(82,193,o),
(72,213,o),
(72,220,qs),
(72,246,o),
(73,287,o),
(73,313,qs),
(73,322,o),
(77,329,qs),
(80,333,o),
(77,337,o),
(76,340,qs),
(71,359,o),
(74,390,o),
(74,409,q),
(79,412,o),
(90,413,o),
(96,413,qs),
(160,413,ls),
(177,413,o),
(205,422,o),
(230,424,o),
(242,413,q),
(265,413,ls),
(277,413,o),
(289,419,o),
(293,422,q),
(291,416,ls),
(290,412,o),
(283,386,o),
(277,386,q),
(276,382,o),
(270,354,o),
(264,326,o),
(262,322,qs),
(256,308,o),
(246,282,o),
(241,270,q),
(233,269,o),
(216,253,o),
(213,248,qs),
(205,238,o),
(208,218,o),
(209,210,q),
(210,207,o),
(215,205,q),
(196,158,o),
(177,111,o),
(168,95,o),
(165,93,qs),
(162,91,o),
(157,77,o),
(158,73,qs),
(160,65,o),
(155,42,q),
(141,43,o),
(131,34,q),
(121,42,o),
(105,42,o),
(95,34,qs),
(88,28,o),
(73,49,o),
(73,54,qs),
(73,83,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
151 26 2 3 1 183 174 132 115 69 67 6 6 3 121 1 4 6 3 76 123 1 6 1 75 114 7 2 0 73 8 7 2 3 3 1 95 2 1 1 1 40 77 0 6 6 0 97 5 1 0 0 38 77 0 4 4 0 97 5 1 0 0 38 0 78 162 158 155 153 120 119 109 106 93 86 53 51 46 45 33 31 58 9 8 23 
CALL[ ]	/* CallFunction */";
};
width = 408;
}
);
note = uni023C;
unicode = 572;
},
{
glyphname = d;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(432,8,o),
(432,10,qs),
(433,14,o),
(432,23,o),
(432,27,qs),
(429,665,ls),
(429,685,o),
(423,700,o),
(405,700,qs),
(403,700,o),
(399,680,o),
(398,657,o),
(398,654,qs),
(399,496,ls),
(399,487,o),
(397,453,o),
(383,451,q),
(65,450,l),
(59,449,o),
(48,438,o),
(49,431,qs),
(49,419,o),
(42,392,o),
(42,381,qs),
(42,372,o),
(46,367,q),
(39,360,o),
(43,348,o),
(46,342,q),
(40,335,o),
(43,323,o),
(47,317,q),
(47,294,o),
(46,248,o),
(46,225,qs),
(46,221,o),
(39,212,o),
(43,207,qs),
(50,200,o),
(40,191,o),
(40,186,qs),
(40,163,o),
(41,102,o),
(41,42,o),
(41,19,qs),
(41,12,o),
(51,0,o),
(57,0,qs),
(63,-1,o),
(72,0,o),
(78,0,qs),
(317,1,ls),
(323,1,o),
(335,4,o),
(339,1,qs),
(345,-3,o),
(372,-4,o),
(399,-3,o),
(403,-3,qs),
(423,-3,o)
);
},
{
closed = 1;
nodes = (
(86,34,o),
(78,34,qs),
(70,34,o),
(70,44,qs),
(70,174,ls),
(70,181,o),
(72,196,o),
(70,203,qs),
(68,209,o),
(72,230,o),
(79,251,o),
(78,255,qs),
(76,267,o),
(79,291,o),
(70,299,q),
(76,310,o),
(70,320,qs),
(65,327,o),
(77,351,o),
(78,359,qs),
(79,363,o),
(78,382,o),
(78,407,qs),
(78,414,o),
(84,416,qs),
(91,417,o),
(104,416,o),
(110,416,qs),
(188,416,o),
(279,416,o),
(323,417,o),
(342,417,o),
(348,417,qs),
(383,417,o),
(397,397,o),
(397,379,qs),
(397,365,ls),
(397,334,o),
(397,248,o),
(397,158,o),
(397,82,o),
(395,35,o),
(394,36,qs),
(387,41,o),
(355,34,o),
(348,34,qs),
(109,33,ls),
(102,33,o)
);
},
{
closed = 1;
nodes = (
(262,211,o),
(262,218,qs),
(262,249,o),
(242,258,q),
(235,263,o),
(211,244,o),
(207,237,q),
(199,227,o),
(202,207,o),
(203,199,q),
(205,194,o),
(225,190,o),
(247,191,o),
(251,191,qs),
(257,191,o)
);
},
{
closed = 1;
nodes = (
(224,215,o),
(223,217,q),
(223,220,o),
(223,225,o),
(225,227,q),
(226,229,o),
(233,236,o),
(235,234,qs),
(239,231,o),
(239,223,qs),
(239,221,o),
(238,215,o),
(236,215,qs),
(235,215,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
38 1 5 2 128 126 120 95 92 33 30 27 8 6 5 64 18 2 4 6 54 1 1 4 4 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
38 1 5 2 128 126 120 95 92 33 30 27 8 6 5 64 18 2 4 6 54 1 0 4 4 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
38 1 5 2 128 126 120 95 92 33 30 27 8 6 5 64 18 2 4 6 54 1 1 4 4 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
9 1 6 5 4 5 6 4 128 0 3 3 37 77 0 5 5 2 95 0 2 2 40 77 8 1 4 4 1 95 0 1 1 38 77 7 1 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
9 1 6 5 4 5 6 4 128 0 3 3 37 77 0 5 5 2 95 0 2 2 40 77 8 1 4 4 0 97 1 7 2 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
9 1 6 5 4 5 6 4 128 0 3 3 37 77 0 5 5 2 95 0 2 2 40 77 8 1 4 4 1 95 0 1 1 38 77 7 1 0 0 44 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
110 108 61 60 3 0 108 122 110 122 81 73 60 107 61 104 51 49 42 40 10 4 0 59 3 59 10 8 22 
CALL[ ]	/* CallFunction */";
};
width = 472;
}
);
note = d;
unicode = 100;
},
{
glyphname = eth;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(451,0,o),
(463,8,q),
(465,10,o),
(466,19,o),
(466,23,qs),
(466,125,o),
(463,339,o),
(463,441,qs),
(463,488,ls),
(463,499,o),
(442,526,o),
(425,536,qs),
(391,559,o),
(332,592,o),
(268,633,o),
(226,667,qs),
(220,672,o),
(239,691,o),
(246,693,qs),
(260,698,o),
(270,723,o),
(274,735,qs),
(275,739,o),
(263,749,o),
(260,747,qs),
(259,746,o),
(252,749,o),
(249,749,q),
(243,746,o),
(223,722,o),
(204,697,o),
(200,691,q),
(183,706,o),
(171,715,o),
(166,720,qs),
(157,728,o),
(139,730,o),
(130,734,qs),
(127,736,o),
(116,725,o),
(117,721,q),
(122,714,o),
(141,697,o),
(152,688,qs),
(168,674,o),
(179,667,q),
(160,648,o),
(133,619,o),
(114,599,q),
(122,590,o),
(133,591,qs),
(148,593,o),
(164,607,qs),
(175,616,o),
(194,638,o),
(202,647,q),
(231,623,o),
(283,590,o),
(313,570,qs),
(425,497,l),
(389,497,o),
(289,500,o),
(188,502,o),
(148,502,qs),
(119,502,o),
(78,500,o),
(73,498,q),
(72,497,o),
(71,488,o),
(70,488,q),
(70,447,o),
(71,324,o),
(73,148,o),
(73,26,qs),
(73,17,o),
(85,4,o),
(94,4,qs),
(152,4,ls),
(161,4,o),
(198,5,o),
(205,0,qs),
(213,-5,o),
(224,4,o),
(231,4,qs),
(327,4,ls),
(333,4,o),
(346,2,o),
(352,4,qs),
(359,6,o),
(370,-6,o),
(377,4,q),
(391,-5,o),
(406,-5,qs),
(425,-5,o)
);
},
{
closed = 1;
nodes = (
(261,30,o),
(254,35,qs),
(252,37,o),
(241,30,o),
(237,31,qs),
(233,33,o),
(225,37,o),
(220,32,qs),
(216,28,o),
(212,31,qs),
(207,36,o),
(195,38,o),
(189,38,qs),
(108,38,l),
(104,39,o),
(99,47,o),
(102,50,q),
(106,56,o),
(106,67,o),
(106,74,qs),
(106,203,ls),
(106,210,o),
(105,221,o),
(100,226,qs),
(96,230,o),
(101,237,qs),
(108,247,o),
(108,258,qs),
(108,263,o),
(106,273,o),
(104,277,qs),
(96,292,o),
(106,302,q),
(108,305,o),
(105,310,qs),
(97,320,o),
(97,339,qs),
(97,345,o),
(99,385,o),
(103,423,o),
(105,425,q),
(108,431,o),
(103,436,qs),
(99,441,o),
(99,451,o),
(98,456,qs),
(97,460,o),
(102,468,o),
(103,472,q),
(114,474,o),
(126,472,q),
(223,464,l),
(253,464,ls),
(298,464,o),
(387,461,o),
(427,461,qs),
(429,461,o),
(432,425,o),
(435,372,o),
(437,321,o),
(437,306,qs),
(437,291,o),
(435,261,o),
(433,234,qs),
(433,209,o),
(435,157,o),
(435,131,qs),
(435,111,o),
(434,91,o),
(433,72,o),
(433,52,qs),
(433,40,o),
(428,31,q),
(417,31,o),
(394,30,o),
(382,30,qs),
(282,30,ls),
(275,30,o)
);
},
{
closed = 1;
nodes = (
(275,235,o),
(276,236,qs),
(280,239,o),
(289,245,o),
(291,249,qs),
(293,255,o),
(293,270,o),
(288,275,qs),
(285,279,o),
(276,284,o),
(271,285,qs),
(270,285,o),
(264,278,o),
(261,278,qs),
(251,278,o),
(248,260,o),
(243,255,qs),
(242,254,o),
(245,247,o),
(247,244,qs),
(250,239,o),
(262,236,o),
(269,236,qs),
(271,236,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 106 values pushed */
23 1 5 3 138 1 7 5 154 107 2 6 7 161 1 4 6 88 2 2 1 4 5 76 65 61 52 47 44 37 6 3 74 0 7 5 6 5 7 6 128 0 3 0 5 7 3 5 103 0 6 6 1 97 2 1 1 1 38 77 9 1 4 4 1 98 2 1 1 1 38 77 8 1 0 0 44 0 78 98 94 1 0 181 180 158 156 119 114 94 171 98 170 33 27 17 13 9 5 0 93 1 93 10 8 22 
CALL[ ]	/* CallFunction */";
};
width = 536;
}
);
note = eth;
unicode = 240;
},
{
glyphname = dcaron;
layers = (
{
layerId = m01;
shapes = (
{
ref = d;
},
{
pos = (447,0);
ref = uni030C.alt;
}
);
width = 472;
}
);
note = dcaron;
unicode = 271;
},
{
glyphname = uni1E11;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(432,8,o),
(432,10,qs),
(433,14,o),
(432,23,o),
(432,27,qs),
(429,665,ls),
(429,685,o),
(423,700,o),
(405,700,qs),
(403,700,o),
(399,680,o),
(398,657,o),
(398,654,qs),
(399,496,ls),
(399,487,o),
(397,453,o),
(383,451,q),
(65,450,l),
(59,449,o),
(48,438,o),
(49,431,qs),
(49,419,o),
(42,392,o),
(42,381,qs),
(42,372,o),
(46,367,q),
(39,360,o),
(43,348,o),
(46,342,q),
(40,335,o),
(43,323,o),
(47,317,q),
(47,294,o),
(46,248,o),
(46,225,qs),
(46,221,o),
(39,212,o),
(43,207,qs),
(50,200,o),
(40,191,o),
(40,186,qs),
(40,163,o),
(41,102,o),
(41,42,o),
(41,19,qs),
(41,12,o),
(51,0,o),
(57,0,qs),
(63,-1,o),
(72,0,o),
(78,0,qs),
(317,1,ls),
(323,1,o),
(335,4,o),
(339,1,qs),
(345,-3,o),
(372,-4,o),
(399,-3,o),
(403,-3,qs),
(423,-3,o)
);
},
{
closed = 1;
nodes = (
(86,34,o),
(78,34,qs),
(70,34,o),
(70,44,qs),
(70,174,ls),
(70,181,o),
(72,196,o),
(70,203,qs),
(68,209,o),
(72,230,o),
(79,251,o),
(78,255,qs),
(76,267,o),
(79,291,o),
(70,299,q),
(76,310,o),
(70,320,qs),
(65,327,o),
(77,351,o),
(78,359,qs),
(79,363,o),
(78,382,o),
(78,407,qs),
(78,414,o),
(84,416,qs),
(91,417,o),
(104,416,o),
(110,416,qs),
(188,416,o),
(279,416,o),
(323,417,o),
(342,417,o),
(348,417,qs),
(383,417,o),
(397,397,o),
(397,379,qs),
(397,365,ls),
(397,334,o),
(397,248,o),
(397,158,o),
(397,82,o),
(395,35,o),
(394,36,qs),
(387,41,o),
(355,34,o),
(348,34,qs),
(109,33,ls),
(102,33,o)
);
},
{
closed = 1;
nodes = (
(262,211,o),
(262,218,qs),
(262,249,o),
(242,258,q),
(235,263,o),
(211,244,o),
(207,237,q),
(199,227,o),
(202,207,o),
(203,199,q),
(205,194,o),
(225,190,o),
(247,191,o),
(251,191,qs),
(257,191,o)
);
},
{
closed = 1;
nodes = (
(224,215,o),
(223,217,q),
(223,220,o),
(223,225,o),
(225,227,q),
(226,229,o),
(233,236,o),
(235,234,qs),
(239,231,o),
(239,223,qs),
(239,221,o),
(238,215,o),
(236,215,qs),
(235,215,o)
);
},
{
closed = 1;
nodes = (
(180,-201,o),
(182,-198,q),
(186,-198,o),
(203,-174,o),
(205,-172,q),
(214,-158,o),
(217,-143,o),
(224,-129,qs),
(230,-113,o),
(243,-102,qs),
(256,-91,o),
(260,-65,o),
(261,-48,qs),
(262,-37,o),
(255,-27,o),
(249,-31,q),
(244,-36,o),
(224,-51,o),
(222,-58,qs),
(219,-69,o),
(208,-91,o),
(202,-103,qs),
(194,-124,o),
(174,-159,o),
(160,-194,q),
(163,-199,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
38 1 5 2 128 126 120 95 92 33 30 27 8 6 5 64 18 2 4 6 54 1 1 4 4 76 149 1 0 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
38 1 5 2 128 126 120 95 92 33 30 27 8 6 5 64 18 2 4 6 54 1 0 4 4 76 149 1 0 73 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
38 1 5 2 128 126 120 95 92 33 30 27 8 6 5 64 18 2 4 6 54 1 1 4 4 76 149 1 0 73 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
9 1 6 5 4 5 6 4 128 0 3 3 37 77 0 5 5 2 95 0 2 2 40 77 8 1 4 4 1 95 0 1 1 38 77 7 1 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
9 1 6 5 4 5 6 4 128 0 3 3 37 77 0 5 5 2 95 0 2 2 40 77 8 1 4 4 0 97 1 7 2 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
9 1 6 5 4 5 6 4 128 0 3 3 37 77 0 5 5 2 95 0 2 2 40 77 8 1 4 4 1 95 0 1 1 38 77 7 1 0 0 44 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
110 108 61 60 3 0 108 122 110 122 81 73 60 107 61 104 51 49 42 40 10 4 0 59 3 59 10 8 22 
CALL[ ]	/* CallFunction */";
};
width = 472;
}
);
note = uni1E11;
unicode = 7697;
},
{
glyphname = uni1E13;
layers = (
{
layerId = m01;
shapes = (
{
ref = d;
},
{
pos = (101,-782);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-782 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 472;
}
);
note = uni1E13;
unicode = 7699;
},
{
glyphname = dcroat;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(432,8,o),
(432,10,qs),
(433,14,o),
(432,23,o),
(432,27,qs),
(429,587,l),
(493,587,ls),
(505,587,o),
(511,596,q),
(513,598,o),
(516,606,o),
(515,607,qs),
(511,612,o),
(509,616,q),
(495,621,o),
(429,621,q),
(429,665,ls),
(429,685,o),
(423,700,o),
(405,700,qs),
(403,700,o),
(399,680,o),
(398,657,o),
(398,654,qs),
(398,621,l),
(390,620,o),
(385,615,qs),
(384,614,o),
(379,613,o),
(378,614,qs),
(372,619,o),
(351,624,o),
(338,624,qs),
(308,624,o),
(291,612,o),
(289,601,q),
(289,596,o),
(298,587,o),
(311,587,qs),
(398,587,l),
(399,496,ls),
(399,487,o),
(397,453,o),
(383,451,q),
(65,450,l),
(59,449,o),
(48,438,o),
(49,431,qs),
(49,419,o),
(42,392,o),
(42,381,qs),
(42,372,o),
(46,367,q),
(39,360,o),
(43,348,o),
(46,342,q),
(40,335,o),
(43,323,o),
(47,317,q),
(47,294,o),
(46,248,o),
(46,225,qs),
(46,221,o),
(39,212,o),
(43,207,qs),
(50,200,o),
(40,191,o),
(40,186,qs),
(40,163,o),
(41,102,o),
(41,42,o),
(41,19,qs),
(41,12,o),
(51,0,o),
(57,0,qs),
(63,-1,o),
(72,0,o),
(78,0,qs),
(317,1,ls),
(323,1,o),
(335,4,o),
(339,1,qs),
(345,-3,o),
(372,-4,o),
(399,-3,o),
(403,-3,qs),
(423,-3,o)
);
},
{
closed = 1;
nodes = (
(86,34,o),
(78,34,qs),
(70,34,o),
(70,44,qs),
(70,174,ls),
(70,181,o),
(72,196,o),
(70,203,qs),
(68,209,o),
(72,230,o),
(79,251,o),
(78,255,qs),
(76,267,o),
(79,291,o),
(70,299,q),
(76,310,o),
(70,320,qs),
(65,327,o),
(77,351,o),
(78,359,qs),
(79,363,o),
(78,382,o),
(78,407,qs),
(78,414,o),
(84,416,qs),
(91,417,o),
(104,416,o),
(110,416,qs),
(188,416,o),
(279,416,o),
(323,417,o),
(342,417,o),
(348,417,qs),
(383,417,o),
(397,397,o),
(397,379,qs),
(397,365,ls),
(397,334,o),
(397,248,o),
(397,158,o),
(397,82,o),
(395,35,o),
(394,36,qs),
(387,41,o),
(355,34,o),
(348,34,qs),
(109,33,ls),
(102,33,o)
);
},
{
closed = 1;
nodes = (
(262,211,o),
(262,218,qs),
(262,249,o),
(242,258,q),
(235,263,o),
(211,244,o),
(207,237,q),
(199,227,o),
(202,207,o),
(203,199,q),
(205,194,o),
(225,190,o),
(247,191,o),
(251,191,qs),
(257,191,o)
);
},
{
closed = 1;
nodes = (
(224,215,o),
(223,217,q),
(223,220,o),
(223,225,o),
(225,227,q),
(226,229,o),
(233,236,o),
(235,234,qs),
(239,231,o),
(239,223,qs),
(239,221,o),
(238,215,o),
(236,215,qs),
(235,215,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
74 61 56 3 3 4 38 1 9 2 155 153 147 122 119 33 30 27 8 10 9 91 18 2 8 10 81 1 1 8 5 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
74 61 56 3 3 4 38 1 9 2 155 153 147 122 119 33 30 27 8 10 9 91 18 2 8 10 81 1 0 8 5 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
74 61 56 3 3 4 38 1 9 2 155 153 147 122 119 33 30 27 8 10 9 91 18 2 8 10 81 1 1 8 5 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
13 1 10 9 8 9 10 8 128 6 1 4 7 1 3 2 4 3 105 0 5 5 37 77 0 9 9 2 95 0 2 2 40 77 12 1 8 8 1 95 0 1 1 38 77 11 1 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
13 1 10 9 8 9 10 8 128 6 1 4 7 1 3 2 4 3 105 0 5 5 37 77 0 9 9 2 95 0 2 2 40 77 12 1 8 8 0 97 1 11 2 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
13 1 10 9 8 9 10 8 128 6 1 4 7 1 3 2 4 3 105 0 5 5 37 77 0 9 9 2 95 0 2 2 40 77 12 1 8 8 1 95 0 1 1 38 77 11 1 0 0 44 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
137 135 88 87 3 0 135 149 137 149 108 100 87 134 88 131 80 78 71 70 67 65 54 52 48 46 42 40 10 4 0 86 3 86 14 8 22 
CALL[ ]	/* CallFunction */";
};
width = 512;
}
);
note = dcroat;
unicode = 273;
},
{
glyphname = uni1E0B;
layers = (
{
layerId = m01;
shapes = (
{
ref = d;
},
{
pos = (164,-134);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-134 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 472;
}
);
note = uni1E0B;
unicode = 7691;
},
{
glyphname = uni1E0D;
layers = (
{
layerId = m01;
shapes = (
{
ref = d;
},
{
pos = (163,-114);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 472;
}
);
note = uni1E0D;
unicode = 7693;
},
{
glyphname = uni0257;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(432,8,o),
(432,10,qs),
(433,14,o),
(432,23,o),
(432,27,qs),
(429,654,ls),
(430,672,o),
(441,700,o),
(459,699,qs),
(464,699,o),
(487,700,o),
(492,698,q),
(499,697,o),
(504,699,o),
(518,701,o),
(537,698,qs),
(542,697,o),
(552,703,o),
(558,700,q),
(571,708,o),
(569,719,o),
(558,724,q),
(546,732,o),
(527,735,o),
(513,730,qs),
(509,729,o),
(479,729,o),
(474,729,qs),
(451,730,o),
(446,730,o),
(442,730,qs),
(414,729,o),
(400,695,o),
(398,670,qs),
(398,666,o),
(398,662,qs),
(398,656,o),
(398,654,qs),
(398,632,l),
(398,632,l),
(396,628,o),
(399,609,o),
(398,606,qs),
(398,605,l),
(399,496,ls),
(399,487,o),
(397,453,o),
(383,451,q),
(65,450,l),
(59,449,o),
(48,438,o),
(49,431,qs),
(49,419,o),
(42,392,o),
(42,381,qs),
(42,372,o),
(46,367,q),
(39,360,o),
(43,348,o),
(46,342,q),
(40,335,o),
(43,323,o),
(47,317,q),
(47,294,o),
(46,248,o),
(46,225,qs),
(46,221,o),
(39,212,o),
(43,207,qs),
(50,200,o),
(40,191,o),
(40,186,qs),
(40,163,o),
(41,102,o),
(41,42,o),
(41,19,qs),
(41,12,o),
(51,0,o),
(57,0,qs),
(63,-1,o),
(72,0,o),
(78,0,qs),
(317,1,ls),
(323,1,o),
(335,4,o),
(339,1,qs),
(345,-3,o),
(372,-4,o),
(399,-3,o),
(403,-3,qs),
(423,-3,o)
);
},
{
closed = 1;
nodes = (
(86,34,o),
(78,34,qs),
(70,34,o),
(70,44,qs),
(70,174,ls),
(70,181,o),
(72,196,o),
(70,203,qs),
(68,209,o),
(72,230,o),
(79,251,o),
(78,255,qs),
(76,267,o),
(79,291,o),
(70,299,q),
(76,310,o),
(70,320,qs),
(65,327,o),
(77,351,o),
(78,359,qs),
(79,363,o),
(78,382,o),
(78,407,qs),
(78,414,o),
(84,416,qs),
(91,417,o),
(104,416,o),
(110,416,qs),
(188,416,o),
(279,416,o),
(323,417,o),
(342,417,o),
(348,417,qs),
(383,417,o),
(397,397,o),
(397,379,qs),
(397,365,ls),
(397,334,o),
(397,248,o),
(397,158,o),
(397,82,o),
(395,35,o),
(394,36,qs),
(387,41,o),
(355,34,o),
(348,34,qs),
(109,33,ls),
(102,33,o)
);
},
{
closed = 1;
nodes = (
(262,211,o),
(262,218,qs),
(262,249,o),
(242,258,q),
(235,263,o),
(211,244,o),
(207,237,q),
(199,227,o),
(202,207,o),
(203,199,q),
(205,194,o),
(225,190,o),
(247,191,o),
(251,191,qs),
(257,191,o)
);
},
{
closed = 1;
nodes = (
(224,215,o),
(223,217,q),
(223,220,o),
(223,225,o),
(225,227,q),
(226,229,o),
(233,236,o),
(235,234,qs),
(239,231,o),
(239,223,qs),
(239,221,o),
(238,215,o),
(236,215,qs),
(235,215,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
71 1 4 3 52 46 2 2 4 38 1 6 2 159 157 151 126 123 33 30 27 8 7 6 95 18 2 5 7 85 1 1 5 6 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
71 1 4 3 52 46 2 2 4 38 1 6 2 159 157 151 126 123 33 30 27 8 7 6 95 18 2 5 7 85 1 0 5 6 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
71 1 4 3 52 46 2 2 4 38 1 6 2 159 157 151 126 123 33 30 27 8 7 6 95 18 2 5 7 85 1 1 5 6 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
10 1 7 6 5 6 7 5 128 0 3 0 4 2 3 4 105 0 6 6 2 95 0 2 2 40 77 9 1 5 5 1 95 0 1 1 38 77 8 1 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
10 1 7 6 5 6 7 5 128 0 3 0 4 2 3 4 105 0 6 6 2 95 0 2 2 40 77 9 1 5 5 0 97 1 8 2 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
10 1 7 6 5 6 7 5 128 0 3 0 4 2 3 4 105 0 6 6 2 95 0 2 2 40 77 9 1 5 5 1 95 0 1 1 38 77 8 1 0 0 44 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
141 139 92 91 3 0 139 153 141 153 112 104 91 138 92 135 82 78 64 58 42 40 10 4 0 90 3 90 11 8 22 
CALL[ ]	/* CallFunction */";
};
width = 470;
}
);
note = uni0257;
unicode = 599;
},
{
glyphname = dmacronbelow;
layers = (
{
layerId = m01;
shapes = (
{
ref = d;
},
{
pos = (53,-329);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-329 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 472;
}
);
note = dmacronbelow;
unicode = 7695;
},
{
glyphname = uni0256;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(537,-141,o),
(531,-140,q),
(525,-135,o),
(493,-135,o),
(457,-134,o),
(431,-121,o),
(432,-104,qs),
(432,-100,o),
(432,-78,o),
(433,-55,o),
(434,-52,qs),
(436,-45,o),
(433,-40,o),
(432,-26,o),
(434,-7,qs),
(435,-2,o),
(433,8,o),
(432,13,q),
(433,16,o),
(432,24,o),
(432,27,qs),
(429,665,ls),
(429,685,o),
(423,700,o),
(405,700,qs),
(403,700,o),
(399,680,o),
(398,657,o),
(398,654,qs),
(399,496,ls),
(399,487,o),
(397,453,o),
(383,451,q),
(65,450,l),
(59,449,o),
(48,438,o),
(49,431,qs),
(49,419,o),
(42,392,o),
(42,381,qs),
(42,372,o),
(46,367,q),
(39,360,o),
(43,348,o),
(46,342,q),
(40,335,o),
(43,323,o),
(47,317,q),
(47,294,o),
(46,248,o),
(46,225,qs),
(46,221,o),
(39,212,o),
(43,207,qs),
(50,200,o),
(40,191,o),
(40,186,qs),
(40,163,o),
(41,102,o),
(41,42,o),
(41,19,qs),
(41,12,o),
(51,0,o),
(57,0,qs),
(63,-1,o),
(72,0,o),
(78,0,qs),
(317,1,ls),
(323,1,o),
(335,4,o),
(339,1,qs),
(346,-4,o),
(389,-4,o),
(399,-3,q),
(396,-15,o),
(402,-30,qs),
(404,-34,o),
(403,-64,o),
(403,-69,qs),
(402,-94,o),
(401,-114,o),
(401,-118,o),
(401,-121,qs),
(403,-149,o),
(436,-163,o),
(461,-166,qs),
(471,-167,o),
(492,-161,o),
(499,-166,qs),
(503,-168,o),
(522,-165,o),
(525,-166,q),
(537,-167,o)
);
},
{
closed = 1;
nodes = (
(86,34,o),
(78,34,qs),
(70,34,o),
(70,44,qs),
(70,174,ls),
(70,181,o),
(72,196,o),
(70,203,qs),
(68,209,o),
(72,230,o),
(79,251,o),
(78,255,qs),
(76,267,o),
(79,291,o),
(70,299,q),
(76,310,o),
(70,320,qs),
(65,327,o),
(77,351,o),
(78,359,qs),
(79,363,o),
(78,382,o),
(78,407,qs),
(78,414,o),
(84,416,qs),
(91,417,o),
(104,416,o),
(110,416,qs),
(188,416,o),
(279,416,o),
(323,417,o),
(342,417,o),
(348,417,qs),
(383,417,o),
(397,397,o),
(397,379,qs),
(397,365,ls),
(397,334,o),
(397,248,o),
(397,158,o),
(397,82,o),
(395,35,o),
(394,36,qs),
(387,41,o),
(355,34,o),
(348,34,qs),
(109,33,ls),
(102,33,o)
);
},
{
closed = 1;
nodes = (
(262,211,o),
(262,218,qs),
(262,249,o),
(242,258,q),
(235,263,o),
(211,244,o),
(207,237,q),
(199,227,o),
(202,207,o),
(203,199,q),
(205,194,o),
(225,190,o),
(247,191,o),
(251,191,qs),
(257,191,o)
);
},
{
closed = 1;
nodes = (
(224,215,o),
(223,217,q),
(223,220,o),
(223,225,o),
(225,227,q),
(226,229,o),
(233,236,o),
(235,234,qs),
(239,231,o),
(239,223,qs),
(239,221,o),
(238,215,o),
(236,215,qs),
(235,215,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
55 1 6 2 161 159 153 128 125 50 47 44 8 7 6 97 35 2 5 7 71 1 1 5 18 1 0 1 81 9 2 4 0 6 76 0 1 4 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
55 1 6 2 161 159 153 128 125 50 47 44 8 7 6 97 35 2 5 7 71 18 2 0 5 81 9 2 4 0 5 76 0 1 4 73 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
55 1 6 2 161 159 153 128 125 50 47 44 8 7 6 97 35 2 5 7 71 1 1 5 18 1 0 1 81 9 2 4 0 6 76 0 1 4 73 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
9 1 7 6 5 6 7 5 128 0 4 0 4 134 0 3 3 37 77 0 6 6 2 95 0 2 2 40 77 8 1 5 5 1 95 0 1 1 38 77 0 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
9 1 7 6 5 6 7 5 128 0 4 0 4 134 0 3 3 37 77 0 6 6 2 95 0 2 2 40 77 8 1 5 5 0 97 1 1 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
9 1 7 6 5 6 7 5 128 0 4 0 4 134 0 3 3 37 77 0 6 6 2 95 0 2 2 40 77 8 1 5 5 1 95 0 1 1 38 77 0 0 0 44 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
143 141 94 93 141 155 143 155 114 106 93 140 94 137 89 87 68 66 59 57 27 21 20 19 10 8 22 
CALL[ ]	/* CallFunction */";
};
width = 472;
}
);
note = uni0256;
unicode = 598;
},
{
glyphname = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(160,1,o),
(225,1,o),
(297,1,o),
(363,0,o),
(408,0,o),
(412,0,qs),
(418,0,o),
(428,14,o),
(430,27,o),
(424,27,qs),
(421,27,o),
(393,35,o),
(389,32,qs),
(385,30,o),
(347,28,o),
(309,27,o),
(304,27,qs),
(287,28,o),
(258,29,o),
(241,27,qs),
(234,27,o),
(220,26,o),
(215,28,q),
(207,33,o),
(182,32,o),
(174,32,qs),
(169,32,o),
(134,32,o),
(100,31,o),
(96,31,qs),
(79,31,o),
(67,69,o),
(67,82,qs),
(67,96,o),
(82,108,o),
(104,117,o),
(112,127,q),
(130,141,o),
(145,158,o),
(152,168,qs),
(169,188,o),
(205,203,o),
(219,221,qs),
(234,241,o),
(278,269,o),
(294,291,qs),
(307,309,o),
(334,325,o),
(352,349,q),
(363,360,o),
(391,378,o),
(401,385,qs),
(427,406,o),
(427,428,qs),
(427,439,o),
(408,453,o),
(385,453,qs),
(373,453,ls),
(366,452,o),
(314,453,o),
(247,455,o),
(188,456,o),
(174,456,qs),
(165,456,o),
(146,454,o),
(137,454,qs),
(120,454,o),
(106,452,o),
(98,449,o),
(84,447,o),
(66,448,qs),
(47,449,o),
(38,425,o),
(43,389,o),
(43,372,qs),
(43,365,o),
(42,352,o),
(42,344,qs),
(42,48,ls),
(42,36,o),
(46,12,o),
(50,8,q),
(54,1,o),
(89,-4,o),
(114,0,q),
(117,1,o)
);
},
{
closed = 1;
nodes = (
(76,225,o),
(74,295,o),
(72,359,o),
(71,380,qs),
(71,400,o),
(88,416,o),
(112,419,o),
(119,419,qs),
(136,420,o),
(170,420,o),
(186,420,qs),
(207,420,o),
(278,421,o),
(350,421,o),
(370,421,qs),
(378,421,o),
(373,407,o),
(356,388,o),
(340,372,o),
(337,370,q),
(325,358,o),
(273,316,o),
(254,295,qs),
(247,288,o),
(233,273,o),
(226,270,qs),
(201,260,o),
(166,221,o),
(145,203,q),
(138,187,o),
(110,171,o),
(82,155,o),
(74,140,q),
(76,161,o)
);
},
{
closed = 1;
nodes = (
(345,136,o),
(331,146,o),
(331,157,qs),
(331,172,o),
(300,175,o),
(289,173,qs),
(282,172,o),
(271,153,o),
(271,145,qs),
(271,137,o),
(277,129,qs),
(284,120,o),
(313,104,o),
(323,114,qs),
(337,128,ls)
);
},
{
closed = 1;
nodes = (
(300,136,o),
(298,138,q),
(296,139,o),
(296,142,qs),
(296,148,o),
(301,150,qs),
(304,151,o),
(312,150,o),
(312,146,qs),
(312,142,o),
(316,140,o),
(314,138,qs),
(310,134,ls),
(307,131,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 3 8 4 4 3 114 0 0 0 40 77 0 8 8 1 97 2 1 1 1 40 77 6 5 2 4 4 7 98 0 7 7 38 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 0 0 40 77 0 8 8 1 97 2 1 1 1 40 77 6 5 4 3 3 3 7 97 0 7 7 38 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 3 8 4 4 3 114 0 0 0 40 77 0 8 8 1 97 2 1 1 1 40 77 6 5 2 4 4 7 98 0 7 7 38 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
111 103 85 78 76 74 71 66 64 62 61 54 129 35 45 9 8 25 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = e;
unicode = 101;
},
{
glyphname = eacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (161,-107);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-107 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = eacute;
unicode = 233;
},
{
glyphname = ecaron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(160,1,o),
(225,1,o),
(297,1,o),
(363,0,o),
(408,0,o),
(412,0,qs),
(418,0,o),
(428,14,o),
(430,27,o),
(424,27,qs),
(421,27,o),
(393,35,o),
(389,32,qs),
(385,30,o),
(347,28,o),
(309,27,o),
(304,27,qs),
(287,28,o),
(258,29,o),
(241,27,qs),
(234,27,o),
(220,26,o),
(215,28,q),
(207,33,o),
(182,32,o),
(174,32,qs),
(169,32,o),
(134,32,o),
(100,31,o),
(96,31,qs),
(79,31,o),
(67,69,o),
(67,82,qs),
(67,96,o),
(82,108,o),
(104,117,o),
(112,127,q),
(130,141,o),
(145,158,o),
(152,168,qs),
(169,188,o),
(205,203,o),
(219,221,qs),
(234,241,o),
(278,269,o),
(294,291,qs),
(307,309,o),
(334,325,o),
(352,349,q),
(363,360,o),
(391,378,o),
(401,385,qs),
(427,406,o),
(427,428,qs),
(427,439,o),
(408,453,o),
(385,453,qs),
(373,453,ls),
(366,452,o),
(314,453,o),
(247,455,o),
(188,456,o),
(174,456,qs),
(165,456,o),
(146,454,o),
(137,454,qs),
(120,454,o),
(106,452,o),
(98,449,o),
(84,447,o),
(66,448,qs),
(47,449,o),
(38,425,o),
(43,389,o),
(43,372,qs),
(43,365,o),
(42,352,o),
(42,344,qs),
(42,48,ls),
(42,36,o),
(46,12,o),
(50,8,q),
(54,1,o),
(89,-4,o),
(114,0,q),
(117,1,o)
);
},
{
closed = 1;
nodes = (
(76,225,o),
(74,295,o),
(72,359,o),
(71,380,qs),
(71,400,o),
(88,416,o),
(112,419,o),
(119,419,qs),
(136,420,o),
(170,420,o),
(186,420,qs),
(207,420,o),
(278,421,o),
(350,421,o),
(370,421,qs),
(378,421,o),
(373,407,o),
(356,388,o),
(340,372,o),
(337,370,q),
(325,358,o),
(273,316,o),
(254,295,qs),
(247,288,o),
(233,273,o),
(226,270,qs),
(201,260,o),
(166,221,o),
(145,203,q),
(138,187,o),
(110,171,o),
(82,155,o),
(74,140,q),
(76,161,o)
);
},
{
closed = 1;
nodes = (
(345,136,o),
(331,146,o),
(331,157,qs),
(331,172,o),
(300,175,o),
(289,173,qs),
(282,172,o),
(271,153,o),
(271,145,qs),
(271,137,o),
(277,129,qs),
(284,120,o),
(313,104,o),
(323,114,qs),
(337,128,ls)
);
},
{
closed = 1;
nodes = (
(300,136,o),
(298,138,q),
(296,139,o),
(296,142,qs),
(296,148,o),
(301,150,qs),
(304,151,o),
(312,150,o),
(312,146,qs),
(312,142,o),
(316,140,o),
(314,138,qs),
(310,134,ls),
(307,131,o)
);
},
{
closed = 1;
nodes = (
(282,586,o),
(279,582,qs),
(277,580,o),
(264,563,o),
(262,561,qs),
(260,558,o),
(253,547,o),
(251,546,qs),
(245,543,o),
(241,543,o),
(236,545,q),
(232,550,o),
(210,570,o),
(183,593,o),
(160,609,o),
(155,609,q),
(147,611,o),
(135,609,o),
(139,600,q),
(145,594,o),
(157,581,o),
(161,574,q),
(166,571,o),
(178,556,o),
(184,553,q),
(192,546,o),
(199,537,o),
(206,531,qs),
(214,524,o),
(230,510,o),
(234,499,qs),
(236,495,o),
(244,494,o),
(246,498,q),
(257,510,o),
(288,544,o),
(318,579,o),
(338,602,o),
(337,603,qs),
(335,605,o),
(329,610,o),
(327,610,q),
(322,612,o),
(315,610,q),
(301,603,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 3 8 4 4 3 114 0 0 0 40 77 0 8 8 1 97 2 1 1 1 40 77 6 5 2 4 4 7 98 0 7 7 38 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 0 0 40 77 0 8 8 1 97 2 1 1 1 40 77 6 5 4 3 3 3 7 97 0 7 7 38 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 3 8 4 4 3 114 0 0 0 40 77 0 8 8 1 97 2 1 1 1 40 77 6 5 2 4 4 7 98 0 7 7 38 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
111 103 85 78 76 74 71 66 64 62 61 54 129 35 45 9 8 25 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = ecaron;
unicode = 283;
},
{
glyphname = uni0229;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (192,-6);
ref = uni0327;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-6 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = uni0229;
unicode = 553;
},
{
glyphname = uni1E1D;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (192,-6);
ref = uni0327;
},
{
pos = (99,-129);
ref = uni0306;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-6 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
-129 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = uni1E1D;
unicode = 7709;
},
{
glyphname = ecircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (102,-119);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-119 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = ecircumflex;
unicode = 234;
},
{
glyphname = uni1EBF;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (96,-137);
ref = uni0302;
},
{
pos = (142,8);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-137 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
8 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = uni1EBF;
unicode = 7871;
},
{
glyphname = uni1E19;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (109,-782);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-782 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = uni1E19;
unicode = 7705;
},
{
glyphname = uni1EC7;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (171,-114);
ref = period;
},
{
pos = (102,-119);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
-119 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = uni1EC7;
unicode = 7879;
},
{
glyphname = uni1EC1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(160,1,o),
(225,1,o),
(297,1,o),
(363,0,o),
(408,0,o),
(412,0,qs),
(418,0,o),
(428,14,o),
(430,27,o),
(424,27,qs),
(421,27,o),
(393,35,o),
(389,32,qs),
(385,30,o),
(347,28,o),
(309,27,o),
(304,27,qs),
(287,28,o),
(258,29,o),
(241,27,qs),
(234,27,o),
(220,26,o),
(215,28,q),
(207,33,o),
(182,32,o),
(174,32,qs),
(169,32,o),
(134,32,o),
(100,31,o),
(96,31,qs),
(79,31,o),
(67,69,o),
(67,82,qs),
(67,96,o),
(82,108,o),
(104,117,o),
(112,127,q),
(130,141,o),
(145,158,o),
(152,168,qs),
(169,188,o),
(205,203,o),
(219,221,qs),
(234,241,o),
(278,269,o),
(294,291,qs),
(307,309,o),
(334,325,o),
(352,349,q),
(363,360,o),
(391,378,o),
(401,385,qs),
(427,406,o),
(427,428,qs),
(427,439,o),
(408,453,o),
(385,453,qs),
(373,453,ls),
(366,452,o),
(314,453,o),
(247,455,o),
(188,456,o),
(174,456,qs),
(165,456,o),
(146,454,o),
(137,454,qs),
(120,454,o),
(106,452,o),
(98,449,o),
(84,447,o),
(66,448,qs),
(47,449,o),
(38,425,o),
(43,389,o),
(43,372,qs),
(43,365,o),
(42,352,o),
(42,344,qs),
(42,48,ls),
(42,36,o),
(46,12,o),
(50,8,q),
(54,1,o),
(89,-4,o),
(114,0,q),
(117,1,o)
);
},
{
closed = 1;
nodes = (
(76,225,o),
(74,295,o),
(72,359,o),
(71,380,qs),
(71,400,o),
(88,416,o),
(112,419,o),
(119,419,qs),
(136,420,o),
(170,420,o),
(186,420,qs),
(207,420,o),
(278,421,o),
(350,421,o),
(370,421,qs),
(378,421,o),
(373,407,o),
(356,388,o),
(340,372,o),
(337,370,q),
(325,358,o),
(273,316,o),
(254,295,qs),
(247,288,o),
(233,273,o),
(226,270,qs),
(201,260,o),
(166,221,o),
(145,203,q),
(138,187,o),
(110,171,o),
(82,155,o),
(74,140,q),
(76,161,o)
);
},
{
closed = 1;
nodes = (
(345,136,o),
(331,146,o),
(331,157,qs),
(331,172,o),
(300,175,o),
(289,173,qs),
(282,172,o),
(271,153,o),
(271,145,qs),
(271,137,o),
(277,129,qs),
(284,120,o),
(313,104,o),
(323,114,qs),
(337,128,ls)
);
},
{
closed = 1;
nodes = (
(300,136,o),
(298,138,q),
(296,139,o),
(296,142,qs),
(296,148,o),
(301,150,qs),
(304,151,o),
(312,150,o),
(312,146,qs),
(312,142,o),
(316,140,o),
(314,138,qs),
(310,134,ls),
(307,131,o)
);
},
{
closed = 1;
nodes = (
(321,488,q),
(323,488,o),
(329,494,o),
(331,495,qs),
(332,496,o),
(312,519,o),
(282,554,o),
(251,588,o),
(240,600,q),
(238,604,o),
(230,603,o),
(228,599,qs),
(224,588,o),
(208,574,o),
(200,567,qs),
(193,561,o),
(186,552,o),
(178,545,q),
(172,542,o),
(160,527,o),
(155,524,q),
(151,517,o),
(139,504,o),
(133,498,q),
(129,489,o),
(141,488,o),
(149,489,qs),
(154,489,o),
(177,505,o),
(204,528,o),
(226,549,o),
(230,553,q),
(235,555,o),
(239,555,o),
(245,552,qs),
(247,551,o),
(254,540,o),
(256,537,q),
(258,536,o),
(271,518,o),
(273,516,qs),
(276,512,o),
(295,496,o),
(309,488,q),
(316,486,o)
);
},
{
closed = 1;
nodes = (
(262,660,o),
(251,670,qs),
(230,688,o),
(218,704,q),
(210,711,o),
(196,724,o),
(189,732,qs),
(185,737,o),
(176,747,o),
(169,748,q),
(167,750,o),
(161,745,o),
(159,746,qs),
(156,748,o),
(145,737,o),
(146,734,qs),
(151,722,o),
(161,699,o),
(177,694,qs),
(183,692,o),
(194,684,o),
(198,679,qs),
(206,670,o),
(227,648,o),
(243,634,qs),
(261,621,o),
(289,626,o),
(293,630,q),
(283,640,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
206 1 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 3 8 4 4 3 114 0 0 0 40 77 0 8 8 1 97 2 1 1 1 40 77 6 5 2 4 4 7 98 0 7 7 38 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 0 0 40 77 0 8 8 1 97 2 1 1 1 40 77 6 5 4 3 3 3 7 97 0 7 7 38 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 3 8 4 4 3 114 0 0 0 40 77 0 8 8 1 97 2 1 1 1 40 77 6 5 2 4 4 7 98 0 7 7 38 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
111 103 85 78 76 74 71 66 64 62 61 54 129 35 45 9 8 25 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = uni1EC1;
unicode = 7873;
},
{
glyphname = uni1EC3;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (104,-134);
ref = uni0302;
},
{
pos = (139,26);
ref = hookabovecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-134 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
26 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = uni1EC3;
unicode = 7875;
},
{
glyphname = uni1EC5;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (99,-119);
ref = uni0302;
},
{
pos = (115,-22);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-119 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
-22 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = uni1EC5;
unicode = 7877;
},
{
glyphname = uni0205;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (85,-129);
ref = uni030F;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 2 
PUSHW[ ]	/* 1 value pushed */
-129 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = uni0205;
unicode = 517;
},
{
glyphname = edieresis;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (79,-120);
ref = uni0308;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 2 
PUSHW[ ]	/* 1 value pushed */
-120 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = edieresis;
unicode = 235;
},
{
glyphname = edotaccent;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (165,-134);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-134 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = edotaccent;
unicode = 279;
},
{
glyphname = uni1EB9;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (171,-114);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = uni1EB9;
unicode = 7865;
},
{
glyphname = egrave;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(160,1,o),
(225,1,o),
(297,1,o),
(363,0,o),
(408,0,o),
(412,0,qs),
(418,0,o),
(428,14,o),
(430,27,o),
(424,27,qs),
(421,27,o),
(393,35,o),
(389,32,qs),
(385,30,o),
(347,28,o),
(309,27,o),
(304,27,qs),
(287,28,o),
(258,29,o),
(241,27,qs),
(234,27,o),
(220,26,o),
(215,28,q),
(207,33,o),
(182,32,o),
(174,32,qs),
(169,32,o),
(134,32,o),
(100,31,o),
(96,31,qs),
(79,31,o),
(67,69,o),
(67,82,qs),
(67,96,o),
(82,108,o),
(104,117,o),
(112,127,q),
(130,141,o),
(145,158,o),
(152,168,qs),
(169,188,o),
(205,203,o),
(219,221,qs),
(234,241,o),
(278,269,o),
(294,291,qs),
(307,309,o),
(334,325,o),
(352,349,q),
(363,360,o),
(391,378,o),
(401,385,qs),
(427,406,o),
(427,428,qs),
(427,439,o),
(408,453,o),
(385,453,qs),
(373,453,ls),
(366,452,o),
(314,453,o),
(247,455,o),
(188,456,o),
(174,456,qs),
(165,456,o),
(146,454,o),
(137,454,qs),
(120,454,o),
(106,452,o),
(98,449,o),
(84,447,o),
(66,448,qs),
(47,449,o),
(38,425,o),
(43,389,o),
(43,372,qs),
(43,365,o),
(42,352,o),
(42,344,qs),
(42,48,ls),
(42,36,o),
(46,12,o),
(50,8,q),
(54,1,o),
(89,-4,o),
(114,0,q),
(117,1,o)
);
},
{
closed = 1;
nodes = (
(76,225,o),
(74,295,o),
(72,359,o),
(71,380,qs),
(71,400,o),
(88,416,o),
(112,419,o),
(119,419,qs),
(136,420,o),
(170,420,o),
(186,420,qs),
(207,420,o),
(278,421,o),
(350,421,o),
(370,421,qs),
(378,421,o),
(373,407,o),
(356,388,o),
(340,372,o),
(337,370,q),
(325,358,o),
(273,316,o),
(254,295,qs),
(247,288,o),
(233,273,o),
(226,270,qs),
(201,260,o),
(166,221,o),
(145,203,q),
(138,187,o),
(110,171,o),
(82,155,o),
(74,140,q),
(76,161,o)
);
},
{
closed = 1;
nodes = (
(345,136,o),
(331,146,o),
(331,157,qs),
(331,172,o),
(300,175,o),
(289,173,qs),
(282,172,o),
(271,153,o),
(271,145,qs),
(271,137,o),
(277,129,qs),
(284,120,o),
(313,104,o),
(323,114,qs),
(337,128,ls)
);
},
{
closed = 1;
nodes = (
(300,136,o),
(298,138,q),
(296,139,o),
(296,142,qs),
(296,148,o),
(301,150,qs),
(304,151,o),
(312,150,o),
(312,146,qs),
(312,142,o),
(316,140,o),
(314,138,qs),
(310,134,ls),
(307,131,o)
);
},
{
closed = 1;
nodes = (
(261,542,o),
(250,552,qs),
(229,570,o),
(217,586,q),
(209,593,o),
(195,606,o),
(188,614,qs),
(184,619,o),
(175,629,o),
(168,630,q),
(166,632,o),
(160,627,o),
(158,628,qs),
(155,630,o),
(144,619,o),
(145,616,qs),
(150,604,o),
(160,581,o),
(176,576,qs),
(182,574,o),
(193,566,o),
(197,561,qs),
(205,552,o),
(226,530,o),
(242,516,qs),
(260,503,o),
(288,508,o),
(292,512,q),
(282,522,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
161 1 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 3 8 4 4 3 114 0 0 0 40 77 0 8 8 1 97 2 1 1 1 40 77 6 5 2 4 4 7 98 0 7 7 38 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 0 0 40 77 0 8 8 1 97 2 1 1 1 40 77 6 5 4 3 3 3 7 97 0 7 7 38 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 3 8 4 4 3 114 0 0 0 40 77 0 8 8 1 97 2 1 1 1 40 77 6 5 2 4 4 7 98 0 7 7 38 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
111 103 85 78 76 74 71 66 64 62 61 54 129 35 45 9 8 25 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = egrave;
unicode = 232;
},
{
glyphname = uni1EBB;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (130,-92);
ref = hookabovecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-92 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = uni1EBB;
unicode = 7867;
},
{
glyphname = uni0207;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (134,-132);
ref = uni0311;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-132 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = uni0207;
unicode = 519;
},
{
glyphname = emacron;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (66,300);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
300 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = emacron;
unicode = 275;
},
{
glyphname = uni1E17;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (66,300);
ref = hyphen;
},
{
pos = (141,12);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
300 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
12 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = uni1E17;
unicode = 7703;
},
{
glyphname = uni1E15;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(160,1,o),
(225,1,o),
(297,1,o),
(363,0,o),
(408,0,o),
(412,0,qs),
(418,0,o),
(428,14,o),
(430,27,o),
(424,27,qs),
(421,27,o),
(393,35,o),
(389,32,qs),
(385,30,o),
(347,28,o),
(309,27,o),
(304,27,qs),
(287,28,o),
(258,29,o),
(241,27,qs),
(234,27,o),
(220,26,o),
(215,28,q),
(207,33,o),
(182,32,o),
(174,32,qs),
(169,32,o),
(134,32,o),
(100,31,o),
(96,31,qs),
(79,31,o),
(67,69,o),
(67,82,qs),
(67,96,o),
(82,108,o),
(104,117,o),
(112,127,q),
(130,141,o),
(145,158,o),
(152,168,qs),
(169,188,o),
(205,203,o),
(219,221,qs),
(234,241,o),
(278,269,o),
(294,291,qs),
(307,309,o),
(334,325,o),
(352,349,q),
(363,360,o),
(391,378,o),
(401,385,qs),
(427,406,o),
(427,428,qs),
(427,439,o),
(408,453,o),
(385,453,qs),
(373,453,ls),
(366,452,o),
(314,453,o),
(247,455,o),
(188,456,o),
(174,456,qs),
(165,456,o),
(146,454,o),
(137,454,qs),
(120,454,o),
(106,452,o),
(98,449,o),
(84,447,o),
(66,448,qs),
(47,449,o),
(38,425,o),
(43,389,o),
(43,372,qs),
(43,365,o),
(42,352,o),
(42,344,qs),
(42,48,ls),
(42,36,o),
(46,12,o),
(50,8,q),
(54,1,o),
(89,-4,o),
(114,0,q),
(117,1,o)
);
},
{
closed = 1;
nodes = (
(76,225,o),
(74,295,o),
(72,359,o),
(71,380,qs),
(71,400,o),
(88,416,o),
(112,419,o),
(119,419,qs),
(136,420,o),
(170,420,o),
(186,420,qs),
(207,420,o),
(278,421,o),
(350,421,o),
(370,421,qs),
(378,421,o),
(373,407,o),
(356,388,o),
(340,372,o),
(337,370,q),
(325,358,o),
(273,316,o),
(254,295,qs),
(247,288,o),
(233,273,o),
(226,270,qs),
(201,260,o),
(166,221,o),
(145,203,q),
(138,187,o),
(110,171,o),
(82,155,o),
(74,140,q),
(76,161,o)
);
},
{
closed = 1;
nodes = (
(345,136,o),
(331,146,o),
(331,157,qs),
(331,172,o),
(300,175,o),
(289,173,qs),
(282,172,o),
(271,153,o),
(271,145,qs),
(271,137,o),
(277,129,qs),
(284,120,o),
(313,104,o),
(323,114,qs),
(337,128,ls)
);
},
{
closed = 1;
nodes = (
(300,136,o),
(298,138,q),
(296,139,o),
(296,142,qs),
(296,148,o),
(301,150,qs),
(304,151,o),
(312,150,o),
(312,146,qs),
(312,142,o),
(316,140,o),
(314,138,qs),
(310,134,ls),
(307,131,o)
);
},
{
closed = 1;
nodes = (
(321,542,o),
(332,545,qs),
(335,546,o),
(335,559,o),
(332,559,qs),
(328,560,o),
(326,566,o),
(323,567,qs),
(320,568,o),
(314,569,o),
(309,569,qs),
(302,569,o),
(286,568,o),
(278,568,qs),
(248,568,ls),
(235,567,o),
(231,566,o),
(226,567,o),
(213,568,qs),
(146,568,l),
(146,561,o),
(154,549,o),
(171,544,q),
(172,543,o),
(187,542,o),
(190,542,qs),
(214,541,o),
(236,541,o),
(243,542,qs),
(251,544,o),
(266,541,o),
(273,538,qs),
(282,535,o),
(290,535,qs),
(301,535,o)
);
},
{
closed = 1;
nodes = (
(261,661,o),
(250,671,qs),
(229,689,o),
(217,705,q),
(209,712,o),
(195,725,o),
(188,733,qs),
(184,738,o),
(175,748,o),
(168,749,q),
(166,751,o),
(160,746,o),
(158,747,qs),
(155,749,o),
(144,738,o),
(145,735,qs),
(150,723,o),
(160,700,o),
(176,695,qs),
(182,693,o),
(193,685,o),
(197,680,qs),
(205,671,o),
(226,649,o),
(242,635,qs),
(260,622,o),
(288,627,o),
(292,631,q),
(282,641,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
196 1 10 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 3 8 4 4 3 114 0 9 12 10 9 89 11 1 10 13 1 12 1 10 12 105 0 0 0 40 77 0 8 8 1 97 2 1 1 1 40 77 6 5 2 4 4 7 98 0 7 7 38 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 9 12 10 9 89 11 1 10 13 1 12 1 10 12 105 0 0 0 40 77 0 8 8 1 97 2 1 1 1 40 77 6 5 4 3 3 3 7 97 0 7 7 38 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 3 8 4 4 3 114 0 9 12 10 9 89 11 1 10 13 1 12 1 10 12 105 0 0 0 40 77 0 8 8 1 97 2 1 1 1 40 77 6 5 2 4 4 7 98 0 7 7 38 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
149 149 149 183 149 183 173 168 167 165 159 154 111 103 85 78 76 74 71 66 64 62 61 54 129 35 45 14 8 25 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = uni1E15;
unicode = 7701;
},
{
glyphname = eogonek;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (357,32);
ref = uni0328;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
32 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = eogonek;
unicode = 281;
},
{
glyphname = uni025B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(195,193,o),
(133,138,o),
(75,85,o),
(36,49,o),
(31,46,qs),
(24,41,o),
(16,24,o),
(11,18,qs),
(8,15,o),
(16,3,o),
(21,1,q),
(24,1,o),
(38,0,o),
(75,0,o),
(112,0,qs),
(182,0,ls),
(191,0,o),
(216,5,o),
(220,0,qs),
(224,-5,o),
(236,1,o),
(242,0,qs),
(264,-4,o),
(311,0,o),
(337,0,qs),
(346,0,o),
(356,20,o),
(350,38,o),
(334,32,qs),
(324,28,o),
(239,31,o),
(183,30,qs),
(175,30,o),
(158,34,o),
(150,30,qs),
(139,25,o),
(122,30,qs),
(102,35,o),
(87,29,o),
(70,29,q),
(64,30,o),
(72,44,o),
(89,59,o),
(95,60,qs),
(103,62,o),
(111,73,o),
(113,79,q),
(118,87,o),
(151,117,o),
(197,155,o),
(244,193,o),
(280,222,o),
(286,228,qs),
(299,239,o),
(305,257,o),
(302,262,qs),
(300,267,o),
(286,277,qs),
(279,282,o),
(242,311,o),
(196,348,o),
(151,387,o),
(118,419,o),
(113,426,q),
(111,432,o),
(103,444,o),
(95,445,q),
(89,447,o),
(72,461,o),
(64,475,o),
(70,476,q),
(87,476,o),
(102,470,o),
(122,475,qs),
(139,480,o),
(150,475,qs),
(158,471,o),
(175,475,o),
(183,475,qs),
(239,474,o),
(324,477,o),
(334,473,qs),
(350,468,o),
(356,485,o),
(346,506,o),
(337,505,qs),
(311,505,o),
(264,509,o),
(242,505,qs),
(236,504,o),
(224,510,o),
(220,505,qs),
(216,500,o),
(191,505,o),
(182,505,qs),
(112,505,ls),
(75,505,o),
(38,505,o),
(24,505,o),
(21,504,qs),
(16,503,o),
(8,490,o),
(11,487,qs),
(16,481,o),
(24,464,o),
(31,459,qs),
(37,455,o),
(89,409,o),
(161,344,o),
(237,278,o),
(267,254,q),
(250,241,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
89 1 6 73 1 1 0 3 1 2 4 0 2 105 5 1 4 4 6 97 7 1 6 6 38 6 78 98 94 87 85 81 78 72 70 23 37 23 92 8 8 26 
CALL[ ]	/* CallFunction */";
};
width = 364;
}
);
note = uni025B;
unicode = 603;
},
{
glyphname = uni0283;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(174,-178,o),
(176,-159,o),
(174,-135,o),
(174,-127,qs),
(174,55,l),
(177,62,o),
(181,84,o),
(185,105,q),
(185,119,o),
(177,173,o),
(171,227,o),
(174,240,qs),
(176,249,ls),
(178,261,o),
(179,281,o),
(177,293,q),
(181,302,o),
(180,339,o),
(179,376,o),
(181,386,qs),
(184,397,o),
(177,414,o),
(175,424,q),
(176,627,ls),
(176,639,o),
(188,658,o),
(200,658,q),
(225,651,l),
(234,651,o),
(242,658,q),
(246,657,o),
(255,654,o),
(260,654,qs),
(277,654,o),
(299,666,o),
(299,673,qs),
(299,688,o),
(290,690,q),
(233,695,o),
(175,696,o),
(153,691,o),
(151,683,o),
(149,680,qs),
(146,675,o),
(145,640,o),
(145,632,qs),
(145,583,l),
(151,567,o),
(146,543,o),
(139,522,o),
(142,509,q),
(132,499,o),
(141,479,o),
(142,469,q),
(139,462,o),
(143,444,o),
(144,442,q),
(143,-61,ls),
(143,-68,o),
(138,-79,o),
(136,-86,qs),
(132,-99,o),
(131,-125,o),
(138,-136,qs),
(142,-141,o),
(137,-145,o),
(134,-145,qs),
(89,-146,o),
(54,-145,o),
(47,-147,qs),
(46,-147,o),
(38,-163,o),
(47,-178,o),
(70,-178,qs),
(168,-178,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
38 1 3 2 69 66 58 51 27 23 20 17 8 1 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
5 4 2 3 3 2 97 0 2 2 39 77 0 1 1 0 95 6 1 0 0 42 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 1 6 1 0 1 0 99 5 4 2 3 3 2 97 0 2 2 39 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
1 0 48 47 46 45 41 40 35 34 7 5 0 74 1 73 7 8 22 
CALL[ ]	/* CallFunction */";
};
width = 339;
}
);
note = uni0283;
unicode = 643;
},
{
glyphname = uni0247;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(133,1,q),
(133,-8,o),
(127,-49,o),
(125,-59,qs),
(122,-74,o),
(135,-79,o),
(150,-72,o),
(150,-72,q),
(163,-53,l),
(159,-46,o),
(164,-34,o),
(165,-27,q),
(169,-14,o),
(174,1,q),
(206,1,o),
(283,1,o),
(357,0,o),
(407,0,o),
(412,0,qs),
(418,0,o),
(428,14,o),
(430,27,o),
(424,27,qs),
(421,27,o),
(393,35,o),
(389,32,qs),
(385,30,o),
(347,28,o),
(309,27,o),
(304,27,qs),
(287,28,o),
(258,29,o),
(241,27,qs),
(234,27,o),
(220,26,o),
(215,28,q),
(209,32,o),
(193,33,o),
(185,32,q),
(198,68,o),
(220,127,o),
(221,130,qs),
(223,136,o),
(229,145,o),
(235,147,q),
(236,148,o),
(237,157,o),
(236,159,qs),
(234,163,o),
(245,202,o),
(261,248,o),
(268,265,q),
(275,271,o),
(288,283,o),
(294,291,qs),
(307,309,o),
(334,325,o),
(352,349,q),
(363,360,o),
(391,378,o),
(401,385,qs),
(427,406,o),
(427,428,qs),
(427,439,o),
(408,453,o),
(385,453,qs),
(373,453,l),
(367,452,o),
(338,453,q),
(344,472,o),
(352,499,o),
(353,500,q),
(356,509,o),
(352,518,q),
(351,529,o),
(344,537,o),
(328,535,q),
(316,502,o),
(313,485,o),
(311,478,qs),
(303,453,l),
(267,454,o),
(190,456,o),
(174,456,qs),
(165,456,o),
(146,454,o),
(137,454,qs),
(120,454,o),
(106,452,o),
(98,449,o),
(84,447,o),
(66,448,qs),
(47,449,o),
(38,425,o),
(43,389,o),
(43,372,qs),
(43,365,o),
(42,352,o),
(42,344,qs),
(42,48,ls),
(42,36,o),
(46,12,o),
(50,8,q),
(54,1,o),
(89,-4,o),
(114,0,q),
(116,1,o)
);
},
{
closed = 1;
nodes = (
(373,407,o),
(356,388,o),
(340,372,o),
(337,370,qs),
(332,365,o),
(314,350,o),
(303,341,q),
(308,354,o),
(321,398,o),
(328,421,q),
(341,421,o),
(362,421,o),
(370,421,qs),
(378,421,o)
);
},
{
closed = 1;
nodes = (
(76,225,o),
(74,295,o),
(72,359,o),
(71,380,qs),
(71,400,o),
(88,416,o),
(112,419,o),
(119,419,qs),
(136,420,o),
(170,420,o),
(186,420,qs),
(203,420,o),
(262,420,o),
(292,421,q),
(291,416,ls),
(290,412,o),
(283,386,o),
(277,386,q),
(276,382,o),
(270,354,o),
(264,326,o),
(262,322,qs),
(255,306,o),
(249,290,q),
(243,284,o),
(232,272,o),
(226,270,qs),
(201,260,o),
(166,221,o),
(145,203,q),
(138,187,o),
(110,171,o),
(82,155,o),
(74,140,q),
(76,161,o)
);
},
{
closed = 1;
nodes = (
(82,108,o),
(104,117,o),
(112,127,q),
(130,141,o),
(145,158,o),
(152,168,qs),
(169,188,o),
(205,203,o),
(219,221,qs),
(221,224,o),
(224,227,q),
(201,170,o),
(179,114,o),
(169,95,o),
(165,93,qs),
(162,91,o),
(157,77,o),
(158,73,qs),
(159,68,o),
(156,44,o),
(152,32,q),
(136,32,o),
(100,31,o),
(96,31,qs),
(79,31,o),
(67,69,o),
(67,82,qs),
(67,96,o)
);
},
{
closed = 1;
nodes = (
(345,136,o),
(331,146,o),
(331,157,qs),
(331,172,o),
(300,175,o),
(289,173,qs),
(282,172,o),
(271,153,o),
(271,145,qs),
(271,137,o),
(277,129,qs),
(284,120,o),
(313,104,o),
(323,114,qs),
(337,128,ls)
);
},
{
closed = 1;
nodes = (
(300,136,o),
(298,138,q),
(296,139,o),
(296,142,qs),
(296,148,o),
(301,150,qs),
(304,151,o),
(312,150,o),
(312,146,qs),
(312,142,o),
(316,140,o),
(314,138,qs),
(310,134,ls),
(307,131,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
172 113 2 4 10 1 76 67 1 4 1 75 97 1 8 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 4 10 5 5 4 114 11 13 2 10 10 1 97 2 1 1 1 40 77 11 13 2 10 10 0 97 3 1 0 0 40 77 12 7 6 3 5 5 8 98 9 1 8 8 38 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
11 13 2 10 10 1 97 2 1 1 1 40 77 11 13 2 10 10 0 97 3 1 0 0 40 77 12 7 6 5 4 4 4 8 97 9 1 8 8 38 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 4 10 5 5 4 114 11 13 2 10 10 1 97 2 1 1 1 40 77 11 13 2 10 10 0 97 3 1 0 0 40 77 12 7 6 3 5 5 8 98 9 1 8 8 38 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
110 107 162 158 147 141 107 120 110 120 106 105 92 86 84 82 79 74 72 70 69 68 76 65 35 45 14 8 26 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = uni0247;
unicode = 583;
},
{
glyphname = uni1EBD;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (111,-155);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-155 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = uni1EBD;
unicode = 7869;
},
{
glyphname = uni1E1B;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (109,-785);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-785 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = uni1E1B;
unicode = 7707;
},
{
glyphname = uni01DD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(289,449,o),
(224,449,o),
(152,449,o),
(86,450,o),
(41,450,o),
(37,450,qs),
(31,450,o),
(21,437,o),
(19,423,o),
(25,423,qs),
(28,423,o),
(56,415,o),
(60,418,q),
(65,420,o),
(103,422,o),
(141,423,o),
(145,423,qs),
(162,422,o),
(192,421,o),
(208,423,qs),
(215,423,o),
(230,424,o),
(234,422,qs),
(242,417,o),
(267,418,o),
(275,418,qs),
(280,418,o),
(315,419,o),
(350,419,o),
(353,419,qs),
(370,419,o),
(382,381,o),
(382,368,qs),
(382,354,o),
(367,342,o),
(346,333,o),
(337,323,q),
(319,309,o),
(305,292,o),
(297,282,qs),
(281,262,o),
(244,247,o),
(230,229,qs),
(215,209,o),
(172,181,o),
(155,159,qs),
(142,141,o),
(115,125,o),
(97,101,q),
(86,91,o),
(58,73,o),
(48,65,qs),
(22,44,o),
(22,22,qs),
(22,12,o),
(42,-3,o),
(64,-3,qs),
(76,-3,ls),
(83,-2,o),
(135,-3,o),
(202,-5,o),
(262,-6,o),
(275,-6,qs),
(284,-6,o),
(303,-4,o),
(312,-4,qs),
(329,-4,o),
(343,-2,o),
(351,1,o),
(365,3,o),
(383,2,qs),
(403,1,o),
(411,25,o),
(406,61,o),
(406,78,qs),
(406,85,o),
(407,99,o),
(407,106,qs),
(407,402,ls),
(407,414,o),
(404,438,o),
(399,442,q),
(395,450,o),
(361,455,o),
(335,450,qs),
(332,449,o)
);
},
{
closed = 1;
nodes = (
(373,225,o),
(375,155,o),
(377,91,o),
(378,70,qs),
(379,50,o),
(361,34,o),
(338,31,o),
(330,31,qs),
(314,30,o),
(280,30,o),
(263,30,qs),
(243,30,o),
(171,30,o),
(99,29,o),
(79,29,qs),
(71,29,o),
(76,43,o),
(93,62,o),
(109,78,o),
(112,80,q),
(124,92,o),
(176,134,o),
(195,155,qs),
(202,162,o),
(216,177,o),
(223,180,qs),
(248,190,o),
(283,229,o),
(304,247,q),
(311,263,o),
(339,279,o),
(367,295,o),
(375,310,q),
(374,289,o)
);
},
{
closed = 1;
nodes = (
(104,314,o),
(118,304,o),
(118,293,qs),
(118,278,o),
(150,276,o),
(160,277,q),
(167,279,o),
(178,297,o),
(178,305,qs),
(178,314,o),
(172,321,qs),
(165,330,o),
(137,347,o),
(126,336,qs),
(112,322,ls)
);
},
{
closed = 1;
nodes = (
(150,314,o),
(151,312,q),
(153,311,o),
(153,308,qs),
(153,302,o),
(148,300,qs),
(145,299,o),
(137,300,o),
(137,304,qs),
(137,308,o),
(133,310,o),
(135,312,qs),
(139,316,ls),
(142,319,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
125 86 2 9 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
6 1 4 7 3 3 4 114 0 9 3 8 3 9 114 5 1 3 3 7 98 0 7 7 40 77 0 0 0 38 77 0 8 8 1 97 2 1 1 1 44 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 9 3 8 3 9 8 128 6 5 4 3 3 3 7 97 0 7 7 40 77 0 0 0 38 77 0 8 8 1 97 2 1 1 1 44 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
6 1 4 7 3 3 4 114 0 9 3 8 3 9 8 128 5 1 3 3 7 98 0 7 7 40 77 0 0 0 38 77 0 8 8 1 97 2 1 1 1 44 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
130 129 111 103 85 78 76 74 71 66 64 62 61 54 129 35 45 10 8 25 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = uni01DD;
unicode = 477;
},
{
glyphname = uni0259;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(289,449,o),
(224,449,o),
(152,449,o),
(86,450,o),
(41,450,o),
(37,450,qs),
(31,450,o),
(21,437,o),
(19,423,o),
(25,423,qs),
(28,423,o),
(56,415,o),
(60,418,q),
(65,420,o),
(103,422,o),
(141,423,o),
(145,423,qs),
(162,422,o),
(192,421,o),
(208,423,qs),
(215,423,o),
(230,424,o),
(234,422,qs),
(242,417,o),
(267,418,o),
(275,418,qs),
(280,418,o),
(315,419,o),
(350,419,o),
(353,419,qs),
(370,419,o),
(382,381,o),
(382,368,qs),
(382,354,o),
(367,342,o),
(346,333,o),
(337,323,q),
(319,309,o),
(305,292,o),
(297,282,qs),
(281,262,o),
(244,247,o),
(230,229,qs),
(215,209,o),
(172,181,o),
(155,159,qs),
(142,141,o),
(115,125,o),
(97,101,q),
(86,91,o),
(58,73,o),
(48,65,qs),
(22,44,o),
(22,22,qs),
(22,12,o),
(42,-3,o),
(64,-3,qs),
(76,-3,ls),
(83,-2,o),
(135,-3,o),
(202,-5,o),
(262,-6,o),
(275,-6,qs),
(284,-6,o),
(303,-4,o),
(312,-4,qs),
(329,-4,o),
(343,-2,o),
(351,1,o),
(365,3,o),
(383,2,qs),
(403,1,o),
(411,25,o),
(406,61,o),
(406,78,qs),
(406,85,o),
(407,99,o),
(407,106,qs),
(407,402,ls),
(407,414,o),
(404,438,o),
(399,442,q),
(395,450,o),
(361,455,o),
(335,450,qs),
(332,449,o)
);
},
{
closed = 1;
nodes = (
(373,225,o),
(375,155,o),
(377,91,o),
(378,70,qs),
(379,50,o),
(361,34,o),
(338,31,o),
(330,31,qs),
(314,30,o),
(280,30,o),
(263,30,qs),
(243,30,o),
(171,30,o),
(99,29,o),
(79,29,qs),
(71,29,o),
(76,43,o),
(93,62,o),
(109,78,o),
(112,80,q),
(124,92,o),
(176,134,o),
(195,155,qs),
(202,162,o),
(216,177,o),
(223,180,qs),
(248,190,o),
(283,229,o),
(304,247,q),
(311,263,o),
(339,279,o),
(367,295,o),
(375,310,q),
(374,289,o)
);
},
{
closed = 1;
nodes = (
(104,314,o),
(118,304,o),
(118,293,qs),
(118,278,o),
(150,276,o),
(160,277,q),
(167,279,o),
(178,297,o),
(178,305,qs),
(178,314,o),
(172,321,qs),
(165,330,o),
(137,347,o),
(126,336,qs),
(112,322,ls)
);
},
{
closed = 1;
nodes = (
(150,314,o),
(151,312,q),
(153,311,o),
(153,308,qs),
(153,302,o),
(148,300,qs),
(145,299,o),
(137,300,o),
(137,304,qs),
(137,308,o),
(133,310,o),
(135,312,qs),
(139,316,ls),
(142,319,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
125 86 2 9 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
6 1 4 7 3 3 4 114 0 9 3 8 3 9 114 5 1 3 3 7 98 0 7 7 40 77 0 0 0 38 77 0 8 8 1 97 2 1 1 1 44 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 9 3 8 3 9 8 128 6 5 4 3 3 3 7 97 0 7 7 40 77 0 0 0 38 77 0 8 8 1 97 2 1 1 1 44 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
6 1 4 7 3 3 4 114 0 9 3 8 3 9 8 128 5 1 3 3 7 98 0 7 7 40 77 0 0 0 38 77 0 8 8 1 97 2 1 1 1 44 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
130 129 111 103 85 78 76 74 71 66 64 62 61 54 129 35 45 10 8 25 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = uni0259;
unicode = 601;
},
{
glyphname = uni0292;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(297,-166,o),
(372,-165,o),
(408,-165,o),
(419,-165,o),
(421,-165,qs),
(428,-165,o),
(441,-142,o),
(447,-110,o),
(440,-98,q),
(443,-93,o),
(447,-56,o),
(447,-10,o),
(445,27,o),
(443,30,qs),
(436,41,o),
(445,53,o),
(445,62,qs),
(443,159,ls),
(443,170,o),
(437,183,o),
(423,187,qs),
(418,188,o),
(414,187,o),
(390,186,o),
(354,187,qs),
(341,187,o),
(304,184,o),
(300,185,q),
(283,193,o),
(224,193,o),
(170,189,o),
(160,188,q),
(192,219,o),
(236,249,o),
(263,271,qs),
(271,278,o),
(293,296,o),
(297,301,qs),
(304,309,o),
(329,326,o),
(350,339,o),
(351,340,qs),
(356,346,o),
(381,372,o),
(408,398,o),
(415,403,qs),
(423,408,o),
(430,425,o),
(435,431,qs),
(438,434,o),
(430,447,o),
(425,448,q),
(423,449,o),
(397,445,o),
(333,444,o),
(274,449,qs),
(258,451,o),
(224,449,o),
(204,449,qs),
(195,449,o),
(170,444,o),
(166,449,qs),
(162,454,o),
(150,448,o),
(144,449,qs),
(122,453,o),
(75,449,o),
(49,449,qs),
(40,450,o),
(36,433,o),
(43,417,o),
(52,417,qs),
(63,417,o),
(148,418,o),
(203,419,qs),
(211,419,o),
(228,415,o),
(236,419,qs),
(243,422,o),
(257,421,o),
(264,419,qs),
(299,412,o),
(360,420,o),
(376,420,q),
(383,419,o),
(369,401,o),
(348,383,o),
(342,381,qs),
(335,380,o),
(326,368,o),
(324,362,q),
(320,355,o),
(282,321,o),
(230,280,o),
(177,238,o),
(137,207,o),
(131,201,qs),
(111,183,o),
(114,165,o),
(140,158,o),
(153,158,qs),
(216,159,l),
(230,154,l),
(261,161,l),
(401,155,ls),
(409,155,o),
(414,81,o),
(414,30,qs),
(414,24,o),
(411,7,o),
(415,-2,qs),
(419,-9,o),
(413,-23,o),
(414,-30,qs),
(417,-41,o),
(414,-89,o),
(409,-131,o),
(407,-135,q),
(388,-133,o),
(295,-133,o),
(217,-135,q),
(182,-133,o),
(146,-129,o),
(122,-129,qs),
(69,-129,o),
(28,-140,o),
(31,-155,o),
(58,-166,o),
(73,-166,qs),
(171,-166,o)
);
},
{
closed = 1;
nodes = (
(267,15,q),
(271,24,o),
(262,33,q),
(258,39,o),
(236,50,o),
(215,55,o),
(209,49,q),
(205,43,o),
(198,30,o),
(196,22,q),
(196,18,o),
(205,6,o),
(206,0,qs),
(209,-14,o),
(241,-15,o),
(259,-2,q),
(265,4,o)
);
},
{
closed = 1;
nodes = (
(227,11,o),
(226,15,qs),
(225,17,o),
(223,20,o),
(223,21,qs),
(223,23,o),
(225,27,o),
(226,28,qs),
(228,30,o),
(240,26,o),
(241,24,q),
(243,22,o),
(242,19,q),
(242,16,o),
(240,14,qs),
(236,11,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
97 1 11 10 26 1 12 3 15 1 1 12 11 1 0 2 4 76 64 1 7 74 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
97 1 11 10 26 1 12 3 15 1 1 12 11 1 0 1 4 76 64 1 7 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
97 1 11 10 26 1 12 3 15 1 1 12 11 1 0 2 4 76 64 1 7 74 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 10 5 11 11 10 114 0 1 12 2 2 1 114 0 11 4 1 3 12 11 3 106 0 2 13 1 0 2 0 100 6 1 5 5 7 97 8 1 7 7 40 77 6 1 5 5 9 97 0 9 9 40 77 0 12 12 44 12 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 10 5 11 11 10 114 0 11 4 1 3 12 11 3 106 2 1 1 13 1 0 1 0 99 6 1 5 5 7 97 9 8 2 7 7 40 77 0 12 12 44 12 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 10 5 11 11 10 114 0 1 12 2 2 1 114 0 11 4 1 3 12 11 3 106 0 2 13 1 0 2 0 100 6 1 5 5 7 97 8 1 7 7 40 77 6 1 5 5 9 97 0 9 9 40 77 0 12 12 44 12 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
1 0 132 131 108 101 100 99 75 74 72 69 62 61 58 53 46 44 29 27 25 23 10 7 6 4 0 129 1 123 14 8 22 
CALL[ ]	/* CallFunction */";
};
width = 487;
}
);
note = uni0292;
unicode = 658;
},
{
glyphname = uni01EF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(297,-166,o),
(372,-165,o),
(408,-165,o),
(419,-165,o),
(421,-165,qs),
(428,-165,o),
(441,-142,o),
(447,-110,o),
(440,-98,q),
(443,-93,o),
(447,-56,o),
(447,-10,o),
(445,27,o),
(443,30,qs),
(436,41,o),
(445,53,o),
(445,62,qs),
(443,159,ls),
(443,170,o),
(437,183,o),
(423,187,qs),
(418,188,o),
(414,187,o),
(390,186,o),
(354,187,qs),
(341,187,o),
(304,184,o),
(300,185,q),
(283,193,o),
(224,193,o),
(170,189,o),
(160,188,q),
(192,219,o),
(236,249,o),
(263,271,qs),
(271,278,o),
(293,296,o),
(297,301,qs),
(304,309,o),
(329,326,o),
(350,339,o),
(351,340,qs),
(356,346,o),
(381,372,o),
(408,398,o),
(415,403,qs),
(423,408,o),
(430,425,o),
(435,431,qs),
(438,434,o),
(430,447,o),
(425,448,q),
(423,449,o),
(397,445,o),
(333,444,o),
(274,449,qs),
(258,451,o),
(224,449,o),
(204,449,qs),
(195,449,o),
(170,444,o),
(166,449,qs),
(162,454,o),
(150,448,o),
(144,449,qs),
(122,453,o),
(75,449,o),
(49,449,qs),
(40,450,o),
(36,433,o),
(43,417,o),
(52,417,qs),
(63,417,o),
(148,418,o),
(203,419,qs),
(211,419,o),
(228,415,o),
(236,419,qs),
(243,422,o),
(257,421,o),
(264,419,qs),
(299,412,o),
(360,420,o),
(376,420,q),
(383,419,o),
(369,401,o),
(348,383,o),
(342,381,qs),
(335,380,o),
(326,368,o),
(324,362,q),
(320,355,o),
(282,321,o),
(230,280,o),
(177,238,o),
(137,207,o),
(131,201,qs),
(111,183,o),
(114,165,o),
(140,158,o),
(153,158,qs),
(216,159,l),
(230,154,l),
(261,161,l),
(401,155,ls),
(409,155,o),
(414,81,o),
(414,30,qs),
(414,24,o),
(411,7,o),
(415,-2,qs),
(419,-9,o),
(413,-23,o),
(414,-30,qs),
(417,-41,o),
(414,-89,o),
(409,-131,o),
(407,-135,q),
(388,-133,o),
(295,-133,o),
(217,-135,q),
(182,-133,o),
(146,-129,o),
(122,-129,qs),
(69,-129,o),
(28,-140,o),
(31,-155,o),
(58,-166,o),
(73,-166,qs),
(171,-166,o)
);
},
{
closed = 1;
nodes = (
(267,15,q),
(271,24,o),
(262,33,q),
(258,39,o),
(236,50,o),
(215,55,o),
(209,49,q),
(205,43,o),
(198,30,o),
(196,22,q),
(196,18,o),
(205,6,o),
(206,0,qs),
(209,-14,o),
(241,-15,o),
(259,-2,q),
(265,4,o)
);
},
{
closed = 1;
nodes = (
(227,11,o),
(226,15,qs),
(225,17,o),
(223,20,o),
(223,21,qs),
(223,23,o),
(225,27,o),
(226,28,qs),
(228,30,o),
(240,26,o),
(241,24,q),
(243,22,o),
(242,19,q),
(242,16,o),
(240,14,qs),
(236,11,o)
);
},
{
closed = 1;
nodes = (
(275,585,o),
(272,581,qs),
(270,579,o),
(257,562,o),
(255,560,qs),
(253,557,o),
(246,546,o),
(244,545,qs),
(238,542,o),
(234,542,o),
(229,544,q),
(225,549,o),
(203,569,o),
(176,592,o),
(153,608,o),
(148,608,q),
(140,610,o),
(128,608,o),
(132,599,q),
(138,593,o),
(150,580,o),
(154,573,q),
(159,570,o),
(171,555,o),
(177,552,q),
(185,545,o),
(192,536,o),
(199,530,qs),
(207,523,o),
(223,509,o),
(227,498,qs),
(229,494,o),
(237,493,o),
(239,497,q),
(250,509,o),
(281,543,o),
(311,578,o),
(331,601,o),
(330,602,qs),
(328,604,o),
(322,609,o),
(320,609,q),
(315,611,o),
(308,609,q),
(294,602,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
97 1 11 10 26 1 12 3 15 1 1 12 11 1 0 2 4 76 64 1 7 74 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
97 1 11 10 26 1 12 3 15 1 1 12 11 1 0 1 4 76 64 1 7 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
97 1 11 10 26 1 12 3 15 1 1 12 11 1 0 2 4 76 64 1 7 74 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 10 5 11 11 10 114 0 1 12 2 2 1 114 0 11 4 1 3 12 11 3 106 0 2 13 1 0 2 0 100 6 1 5 5 7 97 8 1 7 7 40 77 6 1 5 5 9 97 0 9 9 40 77 0 12 12 44 12 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 10 5 11 11 10 114 0 11 4 1 3 12 11 3 106 2 1 1 13 1 0 1 0 99 6 1 5 5 7 97 9 8 2 7 7 40 77 0 12 12 44 12 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 10 5 11 11 10 114 0 1 12 2 2 1 114 0 11 4 1 3 12 11 3 106 0 2 13 1 0 2 0 100 6 1 5 5 7 97 8 1 7 7 40 77 6 1 5 5 9 97 0 9 9 40 77 0 12 12 44 12 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
1 0 132 131 108 101 100 99 75 74 72 69 62 61 58 53 46 44 29 27 25 23 10 7 6 4 0 129 1 123 14 8 22 
CALL[ ]	/* CallFunction */";
};
width = 487;
}
);
note = uni01EF;
unicode = 495;
},
{
glyphname = uni01B9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(456,-155,o),
(459,-140,o),
(418,-129,o),
(365,-129,qs),
(341,-129,o),
(305,-133,o),
(270,-135,q),
(192,-133,o),
(100,-133,o),
(80,-135,q),
(79,-131,o),
(73,-89,o),
(71,-41,o),
(73,-30,qs),
(75,-23,o),
(68,-9,o),
(72,-2,qs),
(77,7,o),
(73,24,o),
(73,30,qs),
(73,81,o),
(78,155,o),
(86,155,qs),
(226,161,l),
(257,154,l),
(271,159,l),
(334,158,ls),
(347,158,o),
(373,165,o),
(377,183,o),
(356,201,qs),
(350,207,o),
(310,238,o),
(257,280,o),
(205,321,o),
(168,355,o),
(163,362,q),
(161,368,o),
(153,380,o),
(145,381,q),
(139,383,o),
(118,401,o),
(105,419,o),
(111,420,q),
(128,420,o),
(189,412,o),
(223,419,qs),
(231,421,o),
(244,422,o),
(251,419,qs),
(259,415,o),
(276,419,o),
(284,419,qs),
(340,418,o),
(425,417,o),
(435,417,qs),
(444,417,o),
(452,433,o),
(447,450,o),
(438,449,qs),
(412,449,o),
(365,453,o),
(343,449,qs),
(337,448,o),
(325,454,o),
(321,449,qs),
(317,444,o),
(292,449,o),
(283,449,qs),
(264,449,o),
(229,451,o),
(213,449,qs),
(154,444,o),
(90,445,o),
(65,449,o),
(62,448,qs),
(57,447,o),
(49,434,o),
(52,431,qs),
(57,425,o),
(65,408,o),
(72,403,qs),
(80,398,o),
(107,372,o),
(132,346,o),
(136,340,qs),
(137,339,o),
(158,326,o),
(184,309,o),
(190,301,qs),
(194,296,o),
(216,278,o),
(224,271,qs),
(251,249,o),
(295,219,o),
(327,188,q),
(318,189,o),
(263,193,o),
(204,193,o),
(187,185,q),
(183,184,o),
(146,187,o),
(133,187,qs),
(98,186,o),
(74,187,o),
(70,188,o),
(64,187,qs),
(51,183,o),
(44,170,o),
(44,159,qs),
(42,62,ls),
(42,53,o),
(52,41,o),
(44,30,qs),
(42,27,o),
(40,-10,o),
(40,-56,o),
(44,-93,o),
(47,-98,q),
(41,-110,o),
(46,-142,o),
(60,-165,o),
(66,-165,qs),
(68,-165,o),
(79,-165,o),
(115,-165,o),
(190,-166,o),
(317,-166,o),
(414,-166,qs),
(429,-166,o)
);
},
{
closed = 1;
nodes = (
(278,-14,o),
(281,0,qs),
(283,6,o),
(291,18,o),
(291,22,qs),
(290,30,o),
(282,43,o),
(278,49,qs),
(273,55,o),
(251,50,o),
(230,39,o),
(225,33,qs),
(216,24,o),
(220,15,q),
(222,4,o),
(228,-2,q),
(246,-15,o)
);
},
{
closed = 1;
nodes = (
(245,19,q),
(244,22,o),
(246,24,qs),
(248,26,o),
(259,30,o),
(261,28,qs),
(262,27,o),
(264,23,o),
(264,21,qs),
(264,20,o),
(262,17,o),
(261,15,qs),
(260,11,o),
(252,11,o),
(247,14,q),
(245,16,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
33 1 1 2 161 156 153 141 109 104 6 12 8 10 1 11 12 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
33 1 1 2 161 156 153 141 109 104 6 12 8 10 1 10 12 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
33 1 1 2 161 156 153 141 109 104 6 12 8 10 1 11 12 3 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 2 6 1 1 2 114 0 11 12 10 10 11 114 0 1 9 1 8 12 1 8 106 0 10 13 1 0 10 0 102 7 1 6 6 4 97 5 1 4 4 40 77 7 1 6 6 3 97 0 3 3 40 77 0 12 12 44 12 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 2 6 1 1 2 114 0 1 9 1 8 12 1 8 106 11 1 10 13 1 0 10 0 101 0 4 4 40 77 7 1 6 6 3 97 5 1 3 3 40 77 0 12 12 44 12 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 2 6 1 1 2 114 0 11 12 10 10 11 114 0 1 9 1 8 12 1 8 106 0 10 13 1 0 10 0 102 7 1 6 6 4 97 5 1 4 4 40 77 7 1 6 6 3 97 0 3 3 40 77 0 12 12 44 12 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
5 0 146 145 126 124 123 120 106 105 103 101 85 84 76 72 69 68 61 58 56 55 31 30 27 22 0 129 5 129 14 8 22 
CALL[ ]	/* CallFunction */";
};
width = 487;
}
);
note = uni01B9;
unicode = 441;
},
{
glyphname = f;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(173,2,o),
(212,2,o),
(238,2,o),
(270,3,o),
(301,3,q),
(313,18,l),
(315,23,o),
(284,36,o),
(276,36,qs),
(246,36,o),
(226,36,o),
(220,36,o),
(204,36,o),
(177,36,qs),
(175,36,o),
(170,42,o),
(169,44,q),
(169,415,l),
(177,415,o),
(193,415,o),
(201,414,qs),
(210,414,o),
(223,424,o),
(239,428,o),
(250,419,qs),
(257,414,o),
(282,414,o),
(291,415,qs),
(296,415,o),
(308,425,o),
(309,430,qs),
(311,436,o),
(298,450,o),
(291,450,qs),
(169,450,l),
(169,644,ls),
(169,648,o),
(166,662,o),
(178,662,qs),
(209,662,o),
(238,662,o),
(249,662,o),
(254,663,o),
(261,663,qs),
(277,662,o),
(303,674,o),
(299,681,qs),
(293,694,o),
(287,698,o),
(276,698,qs),
(233,698,o),
(188,698,o),
(172,697,o),
(171,696,qs),
(165,691,o),
(161,691,o),
(154,690,qs),
(147,689,o),
(136,678,o),
(136,671,qs),
(136,664,o),
(137,614,o),
(136,553,o),
(133,503,o),
(128,497,q),
(133,492,o),
(135,467,o),
(135,450,q),
(55,450,ls),
(45,450,o),
(30,428,o),
(34,420,q),
(67,412,l),
(75,415,o),
(83,415,qs),
(102,415,o),
(114,418,o),
(123,420,o),
(135,420,q),
(135,47,ls),
(135,40,o),
(130,36,o),
(122,35,q),
(39,35,ls),
(30,35,o),
(7,26,o),
(11,18,qs),
(17,8,o),
(23,2,o),
(35,2,qs),
(100,2,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
25 1 4 6 73 17 2 1 3 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
25 1 4 6 73 17 2 1 9 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
25 1 4 6 73 17 2 1 3 2 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 4 3 3 2 114 7 1 6 6 5 97 0 5 5 39 77 11 10 9 3 3 3 4 96 8 1 4 4 40 77 12 1 1 1 0 95 13 1 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
7 1 6 6 5 97 0 5 5 39 77 3 1 2 2 4 95 8 1 4 4 40 77 11 10 2 9 9 4 95 8 1 4 4 40 77 12 1 1 1 0 95 13 1 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 2 4 3 3 2 114 7 1 6 6 5 97 0 5 5 39 77 11 10 9 3 3 3 4 96 8 1 4 4 40 77 12 1 1 1 0 95 13 1 0 0 38 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
1 0 81 75 71 70 69 68 64 63 56 55 52 48 46 45 41 38 22 20 15 14 12 11 7 5 0 90 1 85 14 8 22 
CALL[ ]	/* CallFunction */";
};
width = 323;
}
);
note = f;
unicode = 102;
},
{
glyphname = uni1E1F;
layers = (
{
layerId = m01;
shapes = (
{
ref = f;
},
{
pos = (142,106);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
106 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 323;
}
);
note = uni1E1F;
unicode = 7711;
},
{
glyphname = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(410,-186,o),
(410,-181,qs),
(410,-166,o),
(410,-88,o),
(410,18,o),
(411,133,o),
(411,237,o),
(411,311,o),
(411,322,qs),
(411,441,ls),
(411,444,o),
(403,456,o),
(384,456,qs),
(378,456,o),
(360,454,o),
(345,452,qs),
(339,452,o),
(326,455,o),
(319,450,qs),
(315,447,o),
(303,449,o),
(297,449,qs),
(80,449,ls),
(74,449,o),
(63,449,o),
(57,448,qs),
(51,448,o),
(40,437,o),
(40,430,qs),
(40,407,o),
(41,376,o),
(42,344,o),
(42,318,qs),
(42,315,o),
(46,276,o),
(49,235,o),
(47,229,q),
(43,208,o),
(46,176,o),
(46,171,qs),
(46,156,o),
(48,143,o),
(49,130,o),
(49,114,q),
(45,108,o),
(40,96,o),
(46,89,q),
(38,61,o),
(49,31,o),
(49,23,qs),
(49,19,l),
(47,9,o),
(66,-2,o),
(72,3,qs),
(77,6,o),
(82,10,o),
(86,14,qs),
(121,53,o),
(201,143,o),
(277,230,o),
(340,301,o),
(377,344,o),
(378,344,q),
(378,86,ls),
(378,79,o),
(379,64,o),
(374,56,q),
(376,49,o),
(378,33,o),
(378,25,qs),
(378,22,o),
(378,-15,o),
(378,-67,o),
(378,-118,o),
(378,-153,o),
(378,-155,q),
(367,-153,o),
(360,-151,o),
(353,-152,o),
(342,-156,qs),
(338,-157,o),
(331,-158,o),
(327,-158,qs),
(321,-158,o),
(272,-157,o),
(207,-156,o),
(142,-156,o),
(93,-155,o),
(87,-155,qs),
(80,-155,o),
(65,-157,o),
(59,-160,q),
(46,-164,o),
(52,-187,o),
(68,-187,qs),
(299,-187,ls),
(310,-187,o),
(323,-182,qs),
(328,-180,o),
(337,-178,o),
(341,-178,qs),
(346,-178,o),
(354,-184,o),
(358,-187,qs),
(363,-191,o),
(380,-182,o),
(382,-187,q),
(396,-188,ls),
(397,-188,o)
);
},
{
closed = 1;
nodes = (
(66,54,o),
(66,83,o),
(69,108,o),
(71,111,q),
(78,128,o),
(72,147,q),
(77,155,o),
(74,187,o),
(73,197,qs),
(72,224,o),
(77,252,o),
(72,263,q),
(80,276,o),
(67,299,o),
(70,313,qs),
(72,324,o),
(70,367,o),
(70,404,qs),
(70,415,o),
(79,415,qs),
(328,415,ls),
(338,415,o),
(348,413,o),
(355,417,q),
(359,421,o),
(376,417,o),
(378,417,q),
(379,399,l),
(357,369,o),
(310,310,o),
(274,269,o),
(268,263,qs),
(254,248,o),
(191,178,o),
(113,88,o),
(76,44,qs),
(71,38,o)
);
},
{
closed = 1;
nodes = (
(237,320,o),
(223,330,o),
(223,341,qs),
(223,356,o),
(192,359,o),
(181,357,qs),
(174,356,o),
(163,337,o),
(163,329,qs),
(163,321,o),
(169,313,qs),
(176,304,o),
(205,288,o),
(215,298,qs),
(229,312,ls)
);
},
{
closed = 1;
nodes = (
(192,320,o),
(190,322,q),
(188,323,o),
(188,326,qs),
(188,332,o),
(193,334,qs),
(196,335,o),
(204,334,o),
(204,330,qs),
(204,326,o),
(208,324,o),
(206,322,qs),
(202,318,ls),
(199,315,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
118 79 2 6 4 139 136 133 117 71 68 64 61 57 45 41 32 12 3 6 106 1 0 1 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 5 5 40 77 0 6 6 4 95 0 4 4 40 77 0 1 1 42 77 0 3 3 0 97 2 7 2 0 0 42 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 1 3 0 3 1 0 128 0 5 5 40 77 0 6 6 4 95 0 4 4 40 77 0 3 3 0 97 2 7 2 0 0 42 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 126 123 96 94 86 83 26 18 14 11 8 6 0 108 1 108 8 8 22 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = g;
unicode = 103;
},
{
glyphname = uni01F5;
layers = (
{
layerId = m01;
shapes = (
{
ref = g;
},
{
pos = (124,-107);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-107 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = uni01F5;
unicode = 501;
},
{
glyphname = uni0263;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(337,-197,o),
(358,-186,o),
(358,-176,qs),
(358,-168,o),
(350,-144,o),
(345,-133,qs),
(341,-125,o),
(317,-81,o),
(288,-31,o),
(266,7,o),
(265,9,q),
(288,58,o),
(336,144,o),
(372,213,o),
(376,235,q),
(376,235,o),
(374,259,o),
(395,276,qs),
(403,283,o),
(399,303,o),
(410,310,qs),
(417,315,o),
(419,332,o),
(421,348,o),
(427,351,q),
(427,351,o),
(437,374,o),
(449,406,o),
(459,431,o),
(459,433,qs),
(459,437,l),
(461,447,o),
(439,457,o),
(433,452,qs),
(432,451,o),
(418,414,o),
(406,385,qs),
(403,378,o),
(385,352,o),
(386,341,qs),
(387,326,o),
(373,309,o),
(371,307,q),
(363,273,o),
(320,184,o),
(268,85,o),
(246,34,q),
(220,91,o),
(187,170,o),
(176,198,qs),
(174,204,o),
(173,217,o),
(168,219,q),
(158,225,o),
(162,236,o),
(160,241,qs),
(150,270,o),
(138,299,o),
(124,318,qs),
(121,323,o),
(120,329,o),
(118,331,q),
(117,335,o),
(116,343,o),
(114,347,qs),
(112,351,o),
(97,372,o),
(95,376,qs),
(76,414,o),
(67,451,o),
(59,451,qs),
(48,451,o),
(39,432,o),
(41,427,qs),
(224,12,l),
(218,6,o),
(194,-34,o),
(169,-83,o),
(148,-124,o),
(145,-132,qs),
(141,-142,o),
(129,-165,o),
(129,-174,qs),
(129,-184,o),
(149,-197,o),
(176,-197,qs),
(308,-197,ls)
);
},
{
closed = 1;
nodes = (
(186,-169,o),
(164,-168,q),
(167,-154,o),
(176,-133,o),
(191,-108,q),
(200,-100,o),
(199,-90,o),
(204,-76,qs),
(214,-51,o),
(241,-19,o),
(245,-15,q),
(248,-17,o),
(272,-62,o),
(307,-130,o),
(326,-169,q),
(325,-169,o),
(304,-170,o),
(302,-169,qs),
(289,-163,o),
(264,-173,o),
(262,-172,q),
(223,-176,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
75 46 39 11 4 2 1 1 76 0 1 1 40 77 3 1 2 2 0 95 4 1 0 0 42 0 78 1 0 107 106 92 90 15 14 0 86 1 85 5 8 22 
CALL[ ]	/* CallFunction */";
};
width = 499;
}
);
note = uni0263;
unicode = 611;
},
{
glyphname = gbreve;
layers = (
{
layerId = m01;
shapes = (
{
ref = g;
},
{
pos = (82,-129);
ref = uni0306;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-129 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = gbreve;
unicode = 287;
},
{
glyphname = gcaron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(410,-186,o),
(410,-181,qs),
(410,-166,o),
(410,-88,o),
(410,18,o),
(411,133,o),
(411,237,o),
(411,311,o),
(411,322,qs),
(411,441,ls),
(411,444,o),
(403,456,o),
(384,456,qs),
(378,456,o),
(360,454,o),
(345,452,qs),
(339,452,o),
(326,455,o),
(319,450,qs),
(315,447,o),
(303,449,o),
(297,449,qs),
(80,449,ls),
(74,449,o),
(63,449,o),
(57,448,qs),
(51,448,o),
(40,437,o),
(40,430,qs),
(40,407,o),
(41,376,o),
(42,344,o),
(42,318,qs),
(42,315,o),
(46,276,o),
(49,235,o),
(47,229,q),
(43,208,o),
(46,176,o),
(46,171,qs),
(46,156,o),
(48,143,o),
(49,130,o),
(49,114,q),
(45,108,o),
(40,96,o),
(46,89,q),
(38,61,o),
(49,31,o),
(49,23,qs),
(49,19,l),
(47,9,o),
(66,-2,o),
(72,3,qs),
(77,6,o),
(82,10,o),
(86,14,qs),
(121,53,o),
(201,143,o),
(277,230,o),
(340,301,o),
(377,344,o),
(378,344,q),
(378,86,ls),
(378,79,o),
(379,64,o),
(374,56,q),
(376,49,o),
(378,33,o),
(378,25,qs),
(378,22,o),
(378,-15,o),
(378,-67,o),
(378,-118,o),
(378,-153,o),
(378,-155,q),
(367,-153,o),
(360,-151,o),
(353,-152,o),
(342,-156,qs),
(338,-157,o),
(331,-158,o),
(327,-158,qs),
(321,-158,o),
(272,-157,o),
(207,-156,o),
(142,-156,o),
(93,-155,o),
(87,-155,qs),
(80,-155,o),
(65,-157,o),
(59,-160,q),
(46,-164,o),
(52,-187,o),
(68,-187,qs),
(299,-187,ls),
(310,-187,o),
(323,-182,qs),
(328,-180,o),
(337,-178,o),
(341,-178,qs),
(346,-178,o),
(354,-184,o),
(358,-187,qs),
(363,-191,o),
(380,-182,o),
(382,-187,q),
(396,-188,ls),
(397,-188,o)
);
},
{
closed = 1;
nodes = (
(66,54,o),
(66,83,o),
(69,108,o),
(71,111,q),
(78,128,o),
(72,147,q),
(77,155,o),
(74,187,o),
(73,197,qs),
(72,224,o),
(77,252,o),
(72,263,q),
(80,276,o),
(67,299,o),
(70,313,qs),
(72,324,o),
(70,367,o),
(70,404,qs),
(70,415,o),
(79,415,qs),
(328,415,ls),
(338,415,o),
(348,413,o),
(355,417,q),
(359,421,o),
(376,417,o),
(378,417,q),
(379,399,l),
(357,369,o),
(310,310,o),
(274,269,o),
(268,263,qs),
(254,248,o),
(191,178,o),
(113,88,o),
(76,44,qs),
(71,38,o)
);
},
{
closed = 1;
nodes = (
(237,320,o),
(223,330,o),
(223,341,qs),
(223,356,o),
(192,359,o),
(181,357,qs),
(174,356,o),
(163,337,o),
(163,329,qs),
(163,321,o),
(169,313,qs),
(176,304,o),
(205,288,o),
(215,298,qs),
(229,312,ls)
);
},
{
closed = 1;
nodes = (
(192,320,o),
(190,322,q),
(188,323,o),
(188,326,qs),
(188,332,o),
(193,334,qs),
(196,335,o),
(204,334,o),
(204,330,qs),
(204,326,o),
(208,324,o),
(206,322,qs),
(202,318,ls),
(199,315,o)
);
},
{
closed = 1;
nodes = (
(265,586,o),
(262,582,qs),
(260,580,o),
(247,563,o),
(245,561,qs),
(243,558,o),
(236,547,o),
(234,546,qs),
(228,543,o),
(224,543,o),
(219,545,q),
(215,550,o),
(193,570,o),
(166,593,o),
(143,609,o),
(138,609,q),
(130,611,o),
(118,609,o),
(122,600,q),
(128,594,o),
(140,581,o),
(144,574,q),
(149,571,o),
(161,556,o),
(167,553,q),
(175,546,o),
(182,537,o),
(189,531,qs),
(197,524,o),
(213,510,o),
(217,499,qs),
(219,495,o),
(227,494,o),
(229,498,q),
(240,510,o),
(271,544,o),
(301,579,o),
(321,602,o),
(320,603,qs),
(318,605,o),
(312,610,o),
(310,610,q),
(305,612,o),
(298,610,q),
(284,603,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
118 79 2 6 4 139 136 133 117 71 68 64 61 57 45 41 32 12 3 6 106 1 0 1 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 5 5 40 77 0 6 6 4 95 0 4 4 40 77 0 1 1 42 77 0 3 3 0 97 2 7 2 0 0 42 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 1 3 0 3 1 0 128 0 5 5 40 77 0 6 6 4 95 0 4 4 40 77 0 3 3 0 97 2 7 2 0 0 42 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 126 123 96 94 86 83 26 18 14 11 8 6 0 108 1 108 8 8 22 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = gcaron;
unicode = 487;
},
{
glyphname = gcircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = g;
},
{
pos = (85,-119);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-119 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = gcircumflex;
unicode = 285;
},
{
glyphname = uni0123;
layers = (
{
layerId = m01;
shapes = (
{
ref = g;
},
{
pos = (113,-50);
ref = uni0312;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 2 
PUSHW[ ]	/* 1 value pushed */
-50 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = uni0123;
unicode = 291;
},
{
glyphname = gdotaccent;
layers = (
{
layerId = m01;
shapes = (
{
ref = g;
},
{
pos = (148,-134);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-134 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = gdotaccent;
unicode = 289;
},
{
glyphname = uni0260;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(410,-186,o),
(410,-181,qs),
(410,-166,o),
(410,-88,o),
(410,18,o),
(411,133,o),
(411,237,o),
(411,311,o),
(411,322,qs),
(411,441,ls),
(411,442,o),
(411,444,qs),
(412,459,o),
(412,507,o),
(415,556,o),
(427,589,o),
(442,588,qs),
(447,588,o),
(470,589,o),
(475,587,q),
(482,586,o),
(487,588,o),
(501,590,o),
(520,587,qs),
(525,586,o),
(535,592,o),
(541,589,q),
(554,597,o),
(552,608,o),
(541,613,q),
(529,621,o),
(510,624,o),
(496,619,qs),
(492,618,o),
(462,618,o),
(457,618,qs),
(434,619,o),
(429,619,o),
(425,619,qs),
(407,618,o),
(389,597,o),
(383,546,o),
(381,499,qs),
(381,489,o),
(386,468,o),
(381,461,qs),
(380,460,o),
(380,456,q),
(368,455,o),
(345,452,q),
(339,452,o),
(326,455,o),
(319,450,qs),
(315,447,o),
(303,449,o),
(297,449,qs),
(80,449,ls),
(74,449,o),
(63,449,o),
(57,448,qs),
(51,448,o),
(40,437,o),
(40,430,qs),
(40,407,o),
(41,376,o),
(42,344,o),
(42,318,qs),
(42,315,o),
(46,276,o),
(49,235,o),
(47,229,q),
(43,208,o),
(46,176,o),
(46,171,qs),
(46,156,o),
(48,143,o),
(49,130,o),
(49,114,q),
(45,108,o),
(40,96,o),
(46,89,q),
(38,61,o),
(49,31,o),
(49,23,qs),
(49,19,l),
(47,9,o),
(66,-2,o),
(72,3,qs),
(77,6,o),
(82,10,o),
(86,14,qs),
(121,53,o),
(201,143,o),
(277,230,o),
(340,301,o),
(377,344,o),
(378,344,q),
(378,86,ls),
(378,79,o),
(379,64,o),
(374,56,q),
(376,49,o),
(378,33,o),
(378,25,qs),
(378,22,o),
(378,-15,o),
(378,-67,o),
(378,-118,o),
(378,-153,o),
(378,-155,q),
(367,-153,o),
(360,-151,o),
(353,-152,o),
(342,-156,qs),
(338,-157,o),
(331,-158,o),
(327,-158,qs),
(321,-158,o),
(272,-157,o),
(207,-156,o),
(142,-156,o),
(93,-155,o),
(87,-155,qs),
(80,-155,o),
(65,-157,o),
(59,-160,q),
(46,-164,o),
(52,-187,o),
(68,-187,qs),
(299,-187,ls),
(310,-187,o),
(323,-182,qs),
(328,-180,o),
(337,-178,o),
(341,-178,qs),
(346,-178,o),
(354,-184,o),
(358,-187,qs),
(363,-191,o),
(380,-182,o),
(382,-187,q),
(396,-188,ls),
(397,-188,o)
);
},
{
closed = 1;
nodes = (
(66,54,o),
(66,83,o),
(69,108,o),
(71,111,q),
(78,128,o),
(72,147,q),
(77,155,o),
(74,187,o),
(73,197,qs),
(72,224,o),
(77,252,o),
(72,263,q),
(80,276,o),
(67,299,o),
(70,313,qs),
(72,324,o),
(70,367,o),
(70,404,qs),
(70,415,o),
(79,415,qs),
(328,415,ls),
(338,415,o),
(348,413,o),
(355,417,q),
(359,421,o),
(376,417,o),
(378,417,q),
(379,399,l),
(357,369,o),
(310,310,o),
(274,269,o),
(268,263,qs),
(254,248,o),
(191,178,o),
(113,88,o),
(76,44,qs),
(71,38,o)
);
},
{
closed = 1;
nodes = (
(237,320,o),
(223,330,o),
(223,341,qs),
(223,356,o),
(192,359,o),
(181,357,qs),
(174,356,o),
(163,337,o),
(163,329,qs),
(163,321,o),
(169,313,qs),
(176,304,o),
(205,288,o),
(215,298,qs),
(229,312,ls)
);
},
{
closed = 1;
nodes = (
(192,320,o),
(190,322,q),
(188,323,o),
(188,326,qs),
(188,332,o),
(193,334,qs),
(196,335,o),
(204,334,o),
(204,330,qs),
(204,326,o),
(208,324,o),
(206,322,qs),
(202,318,ls),
(199,315,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
115 1 6 5 152 79 2 7 4 173 170 167 151 71 68 64 61 57 45 41 32 12 3 7 140 1 0 1 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 5 0 6 4 5 6 105 0 7 7 4 95 0 4 4 40 77 0 1 1 42 77 0 3 3 0 97 2 8 2 0 0 42 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 1 3 0 3 1 0 128 0 5 0 6 4 5 6 105 0 7 7 4 95 0 4 4 40 77 0 3 3 0 97 2 8 2 0 0 42 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
1 0 160 157 126 122 108 102 86 83 26 18 14 11 8 6 0 142 1 142 9 8 22 
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = uni0260;
unicode = 608;
},
{
glyphname = uni0294;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0241;
}
);
width = 418;
}
);
note = uni0294;
unicode = 660;
},
{
glyphname = uni0295;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(316,-2,o),
(317,6,q),
(317,90,ls),
(317,92,o),
(317,126,o),
(316,175,o),
(314,223,o),
(312,257,o),
(310,259,q),
(310,268,o),
(308,303,o),
(312,313,qs),
(315,321,o),
(304,338,o),
(297,338,qs),
(283,339,o),
(270,343,o),
(259,346,o),
(244,345,qs),
(237,345,o),
(224,344,o),
(218,356,qs),
(216,360,o),
(203,355,o),
(198,357,qs),
(158,374,o),
(115,391,o),
(95,398,o),
(90,398,qs),
(83,398,o),
(83,406,qs),
(83,427,o),
(78,470,o),
(77,476,q),
(83,482,o),
(78,506,o),
(72,531,o),
(74,536,qs),
(75,539,o),
(75,571,o),
(75,613,o),
(75,654,o),
(75,667,qs),
(75,678,o),
(84,678,qs),
(118,678,ls),
(121,678,o),
(140,678,o),
(157,679,o),
(157,678,q),
(159,674,o),
(169,665,o),
(174,660,q),
(191,647,o),
(225,620,o),
(235,601,qs),
(241,591,o),
(259,588,o),
(269,581,qs),
(273,579,o),
(275,569,o),
(282,567,qs),
(308,559,o),
(319,535,q),
(323,529,o),
(347,514,o),
(371,501,o),
(373,496,q),
(378,491,o),
(384,499,o),
(386,501,qs),
(399,511,o),
(399,525,qs),
(399,531,o),
(398,543,o),
(398,549,qs),
(398,559,o),
(402,578,o),
(407,587,q),
(411,591,o),
(402,609,o),
(401,614,qs),
(400,617,o),
(406,623,o),
(403,627,q),
(393,646,o),
(404,663,qs),
(409,671,o),
(407,687,o),
(403,694,q),
(398,707,o),
(392,712,o),
(380,712,qs),
(60,712,ls),
(53,712,o),
(41,700,o),
(41,693,qs),
(41,658,o),
(41,588,o),
(40,553,qs),
(40,548,o),
(51,539,o),
(43,532,qs),
(38,527,o),
(47,518,o),
(47,513,qs),
(48,453,l),
(44,447,o),
(40,434,o),
(47,428,q),
(43,423,o),
(43,411,qs),
(43,396,o),
(58,365,o),
(68,363,qs),
(96,360,o),
(144,341,o),
(178,324,o),
(182,324,qs),
(191,324,o),
(212,315,o),
(234,310,q),
(238,310,o),
(248,311,o),
(252,310,qs),
(258,309,o),
(273,303,o),
(275,298,qs),
(277,292,o),
(281,243,o),
(283,171,o),
(284,93,o),
(284,25,o),
(284,3,q),
(289,0,o)
);
},
{
closed = 1;
nodes = (
(314,590,o),
(298,602,qs),
(275,620,o),
(230,657,o),
(207,676,q),
(305,676,ls),
(319,676,o),
(347,675,o),
(360,675,q),
(365,666,o),
(368,628,o),
(366,587,o),
(363,556,o),
(362,555,q),
(343,561,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
37 1 2 1 103 100 49 28 27 24 6 3 2 2 76 132 125 2 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 3 2 0 2 3 0 128 0 0 0 132 4 1 2 2 1 95 0 1 1 37 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 3 2 0 2 3 0 128 0 0 0 132 0 1 2 2 1 87 0 1 1 2 97 4 1 2 1 2 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
144 140 116 114 90 86 42 39 30 5 8 23 
CALL[ ]	/* CallFunction */";
};
width = 418;
}
);
note = uni0295;
unicode = 661;
},
{
glyphname = uni0242;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(145,124,o),
(160,130,o),
(166,131,q),
(184,131,l),
(206,136,o),
(227,144,o),
(236,144,qs),
(241,144,o),
(274,160,o),
(323,178,o),
(350,181,qs),
(361,183,o),
(375,213,o),
(375,227,qs),
(375,238,o),
(371,243,q),
(379,249,o),
(375,261,o),
(370,267,q),
(371,324,ls),
(371,329,o),
(380,338,o),
(375,342,qs),
(367,349,o),
(378,358,o),
(378,362,qs),
(378,385,o),
(377,401,o),
(377,417,o),
(377,439,qs),
(377,445,o),
(365,457,o),
(358,457,qs),
(38,457,ls),
(26,457,o),
(20,452,o),
(15,440,qs),
(11,433,o),
(10,418,o),
(14,410,q),
(26,394,o),
(15,376,qs),
(12,372,o),
(18,366,o),
(17,363,qs),
(16,359,o),
(7,341,o),
(11,338,q),
(16,329,o),
(20,311,o),
(20,301,qs),
(20,296,o),
(19,284,o),
(19,278,qs),
(19,264,o),
(32,256,q),
(34,254,o),
(40,246,o),
(45,251,qs),
(48,255,o),
(71,268,o),
(96,282,o),
(99,288,qs),
(111,311,o),
(136,319,qs),
(144,321,o),
(145,330,o),
(149,332,qs),
(159,338,o),
(177,341,o),
(183,351,qs),
(193,369,o),
(227,395,o),
(244,407,q),
(249,412,o),
(259,420,o),
(261,424,q),
(261,425,o),
(278,424,o),
(298,424,o),
(300,424,qs),
(334,424,ls),
(343,424,o),
(343,414,qs),
(344,389,o),
(342,353,o),
(344,346,q),
(347,341,o),
(340,318,o),
(336,294,o),
(341,289,q),
(340,283,o),
(335,242,o),
(335,222,qs),
(335,215,o),
(328,215,qs),
(323,215,o),
(303,208,o),
(260,192,o),
(220,175,q),
(215,174,o),
(202,178,o),
(200,174,qs),
(194,163,o),
(181,164,o),
(174,164,qs),
(160,165,o),
(148,162,o),
(136,158,o),
(121,157,qs),
(114,157,o),
(103,141,o),
(106,133,qs),
(110,123,o),
(108,90,o),
(108,82,qs),
(109,6,l),
(110,-1,o),
(138,1,o),
(142,4,q),
(143,119,l)
);
},
{
closed = 1;
nodes = (
(47,329,o),
(47,375,o),
(51,415,o),
(56,424,q),
(71,424,o),
(100,425,o),
(116,425,qs),
(222,425,l),
(197,406,o),
(149,368,o),
(123,349,qs),
(107,337,o),
(71,301,o),
(50,295,q),
(49,296,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
104 101 94 72 4 3 4 1 76 0 1 7 73 0 3 4 2 4 3 2 128 0 2 1 4 2 1 126 0 0 1 6 1 0 6 128 0 6 7 1 6 7 126 0 1 0 7 1 7 99 8 1 4 4 5 95 0 5 5 40 4 78 131 127 117 116 114 112 87 85 92 36 33 35 41 9 8 27 
CALL[ ]	/* CallFunction */";
};
width = 418;
}
);
note = uni0242;
unicode = 578;
},
{
glyphname = uni1E21;
layers = (
{
layerId = m01;
shapes = (
{
ref = g;
},
{
pos = (49,300);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
300 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = uni1E21;
unicode = 7713;
},
{
glyphname = uni01E5;
layers = (
{
layerId = m01;
shapes = (
{
ref = g;
},
{
pos = (216,126);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
126 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = uni01E5;
unicode = 485;
},
{
glyphname = h;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(128,88,o),
(171,164,o),
(214,239,o),
(250,301,o),
(261,319,qs),
(272,336,o),
(296,392,o),
(306,414,q),
(316,414,o),
(355,420,o),
(369,420,qs),
(394,420,o),
(421,418,o),
(422,393,qs),
(422,381,o),
(423,317,o),
(423,233,o),
(425,144,o),
(425,67,o),
(426,19,o),
(426,18,qs),
(426,9,o),
(435,0,o),
(440,0,qs),
(445,0,o),
(455,9,o),
(455,18,qs),
(457,346,ls),
(457,353,o),
(456,367,o),
(462,374,q),
(458,388,o),
(457,403,o),
(457,410,qs),
(457,432,ls),
(457,449,o),
(445,445,o),
(440,449,qs),
(438,451,o),
(426,449,o),
(418,449,qs),
(92,449,ls),
(79,449,o),
(79,461,qs),
(79,651,ls),
(79,665,o),
(77,674,o),
(74,683,o),
(74,697,q),
(67,697,o),
(53,697,o),
(50,694,q),
(49,687,o),
(41,674,o),
(41,666,qs),
(41,659,o),
(49,652,o),
(49,647,qs),
(49,643,o),
(45,636,qs),
(39,628,o),
(50,616,o),
(50,605,qs),
(50,574,ls),
(50,516,o),
(41,460,o),
(41,439,qs),
(41,432,o),
(51,413,o),
(50,411,qs),
(43,402,o),
(41,384,o),
(41,374,qs),
(41,370,o),
(42,360,o),
(44,358,qs),
(49,352,o),
(53,285,o),
(53,246,qs),
(53,219,o),
(52,168,o),
(51,136,o),
(50,135,qs),
(41,125,o),
(41,111,qs),
(41,20,ls),
(41,5,o),
(59,-2,o),
(77,1,o),
(77,1,q),
(90,22,o)
);
},
{
closed = 1;
nodes = (
(80,77,o),
(80,86,qs),
(80,100,o),
(72,109,q),
(77,117,o),
(81,132,o),
(81,139,qs),
(81,147,o),
(79,164,o),
(79,171,qs),
(79,209,o),
(80,294,o),
(80,374,o),
(80,404,qs),
(80,414,o),
(90,415,qs),
(108,418,o),
(124,418,qs),
(134,418,o),
(153,417,o),
(163,417,qs),
(174,417,o),
(199,419,o),
(212,423,qs),
(219,425,o),
(227,415,o),
(233,415,qs),
(236,415,o),
(245,420,o),
(248,420,qs),
(252,420,o),
(256,415,q),
(268,415,o),
(276,414,q),
(266,395,o),
(237,338,o),
(207,284,o),
(195,269,qs),
(187,259,o),
(160,209,o),
(127,147,o),
(96,89,o),
(75,51,o),
(73,52,q),
(77,66,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
131 125 59 20 7 5 2 4 1 76 0 3 1 4 4 3 114 0 0 0 39 77 7 6 5 3 4 4 1 96 0 1 1 40 77 0 2 2 38 2 78 118 113 109 107 103 102 82 81 80 78 67 65 49 47 40 39 8 8 22 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = h;
unicode = 104;
},
{
glyphname = hbar;
layers = (
{
layerId = m01;
shapes = (
{
ref = h;
},
{
pos = (-102,258);
ref = uni0335;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHW[ ]	/* 1 value pushed */
258 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = hbar;
unicode = 295;
},
{
glyphname = uni1E2B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(128,88,o),
(171,164,o),
(214,239,o),
(250,301,o),
(261,319,qs),
(272,336,o),
(296,392,o),
(306,414,q),
(316,414,o),
(355,420,o),
(369,420,qs),
(394,420,o),
(421,418,o),
(422,393,qs),
(422,381,o),
(423,317,o),
(423,233,o),
(425,144,o),
(425,67,o),
(426,19,o),
(426,18,qs),
(426,9,o),
(435,0,o),
(440,0,qs),
(445,0,o),
(455,9,o),
(455,18,qs),
(457,346,ls),
(457,353,o),
(456,367,o),
(462,374,q),
(458,388,o),
(457,403,o),
(457,410,qs),
(457,432,ls),
(457,449,o),
(445,445,o),
(440,449,qs),
(438,451,o),
(426,449,o),
(418,449,qs),
(92,449,ls),
(79,449,o),
(79,461,qs),
(79,651,ls),
(79,665,o),
(77,674,o),
(74,683,o),
(74,697,q),
(67,697,o),
(53,697,o),
(50,694,q),
(49,687,o),
(41,674,o),
(41,666,qs),
(41,659,o),
(49,652,o),
(49,647,qs),
(49,643,o),
(45,636,qs),
(39,628,o),
(50,616,o),
(50,605,qs),
(50,574,ls),
(50,516,o),
(41,460,o),
(41,439,qs),
(41,432,o),
(51,413,o),
(50,411,qs),
(43,402,o),
(41,384,o),
(41,374,qs),
(41,370,o),
(42,360,o),
(44,358,qs),
(49,352,o),
(53,285,o),
(53,246,qs),
(53,219,o),
(52,168,o),
(51,136,o),
(50,135,qs),
(41,125,o),
(41,111,qs),
(41,20,ls),
(41,5,o),
(59,-2,o),
(77,1,o),
(77,1,q),
(90,22,o)
);
},
{
closed = 1;
nodes = (
(80,77,o),
(80,86,qs),
(80,100,o),
(72,109,q),
(77,117,o),
(81,132,o),
(81,139,qs),
(81,147,o),
(79,164,o),
(79,171,qs),
(79,209,o),
(80,294,o),
(80,374,o),
(80,404,qs),
(80,414,o),
(90,415,qs),
(108,418,o),
(124,418,qs),
(134,418,o),
(153,417,o),
(163,417,qs),
(174,417,o),
(199,419,o),
(212,423,qs),
(219,425,o),
(227,415,o),
(233,415,qs),
(236,415,o),
(245,420,o),
(248,420,qs),
(252,420,o),
(256,415,q),
(268,415,o),
(276,414,q),
(266,395,o),
(237,338,o),
(207,284,o),
(195,269,qs),
(187,259,o),
(160,209,o),
(127,147,o),
(96,89,o),
(75,51,o),
(73,52,q),
(77,66,o)
);
},
{
closed = 1;
nodes = (
(221,-143,o),
(229,-143,qs),
(235,-143,o),
(271,-144,o),
(316,-146,o),
(353,-147,o),
(359,-146,qs),
(364,-146,o),
(377,-134,o),
(377,-129,qs),
(378,-121,o),
(378,-85,o),
(374,-50,o),
(367,-46,qs),
(356,-39,o),
(346,-59,o),
(346,-66,q),
(350,-95,l),
(355,-103,o),
(342,-118,o),
(336,-118,q),
(328,-120,o),
(311,-117,o),
(303,-116,qs),
(295,-116,o),
(292,-113,qs),
(288,-110,o),
(284,-113,o),
(281,-114,qs),
(269,-117,o),
(223,-116,o),
(211,-115,q),
(208,-110,o),
(205,-97,o),
(206,-91,qs),
(207,-83,o),
(207,-60,o),
(207,-57,qs),
(207,-51,o),
(197,-37,o),
(177,-43,q),
(171,-122,ls),
(170,-133,o),
(195,-151,o),
(196,-150,qs),
(204,-145,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
131 125 59 20 7 5 2 4 164 1 8 2 2 76 136 1 10 73 0 3 1 4 4 3 114 9 1 8 0 10 8 10 101 0 0 0 39 77 7 6 5 3 4 4 1 96 0 1 1 40 77 0 2 2 38 2 78 180 175 158 156 151 150 118 113 109 107 103 102 82 81 80 78 67 65 49 47 40 39 11 8 22 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = uni1E2B;
unicode = 7723;
},
{
glyphname = uni021F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(128,88,o),
(171,164,o),
(214,239,o),
(250,301,o),
(261,319,qs),
(272,336,o),
(296,392,o),
(306,414,q),
(316,414,o),
(355,420,o),
(369,420,qs),
(394,420,o),
(421,418,o),
(422,393,qs),
(422,381,o),
(423,317,o),
(423,233,o),
(425,144,o),
(425,67,o),
(426,19,o),
(426,18,qs),
(426,9,o),
(435,0,o),
(440,0,qs),
(445,0,o),
(455,9,o),
(455,18,qs),
(457,346,ls),
(457,353,o),
(456,367,o),
(462,374,q),
(458,388,o),
(457,403,o),
(457,410,qs),
(457,432,ls),
(457,449,o),
(445,445,o),
(440,449,qs),
(438,451,o),
(426,449,o),
(418,449,qs),
(92,449,ls),
(79,449,o),
(79,461,qs),
(79,651,ls),
(79,665,o),
(77,674,o),
(74,683,o),
(74,697,q),
(67,697,o),
(53,697,o),
(50,694,q),
(49,687,o),
(41,674,o),
(41,666,qs),
(41,659,o),
(49,652,o),
(49,647,qs),
(49,643,o),
(45,636,qs),
(39,628,o),
(50,616,o),
(50,605,qs),
(50,574,ls),
(50,516,o),
(41,460,o),
(41,439,qs),
(41,432,o),
(51,413,o),
(50,411,qs),
(43,402,o),
(41,384,o),
(41,374,qs),
(41,370,o),
(42,360,o),
(44,358,qs),
(49,352,o),
(53,285,o),
(53,246,qs),
(53,219,o),
(52,168,o),
(51,136,o),
(50,135,qs),
(41,125,o),
(41,111,qs),
(41,20,ls),
(41,5,o),
(59,-2,o),
(77,1,o),
(77,1,q),
(90,22,o)
);
},
{
closed = 1;
nodes = (
(80,77,o),
(80,86,qs),
(80,100,o),
(72,109,q),
(77,117,o),
(81,132,o),
(81,139,qs),
(81,147,o),
(79,164,o),
(79,171,qs),
(79,209,o),
(80,294,o),
(80,374,o),
(80,404,qs),
(80,414,o),
(90,415,qs),
(108,418,o),
(124,418,qs),
(134,418,o),
(153,417,o),
(163,417,qs),
(174,417,o),
(199,419,o),
(212,423,qs),
(219,425,o),
(227,415,o),
(233,415,qs),
(236,415,o),
(245,420,o),
(248,420,qs),
(252,420,o),
(256,415,q),
(268,415,o),
(276,414,q),
(266,395,o),
(237,338,o),
(207,284,o),
(195,269,qs),
(187,259,o),
(160,209,o),
(127,147,o),
(96,89,o),
(75,51,o),
(73,52,q),
(77,66,o)
);
},
{
closed = 1;
nodes = (
(110,833,o),
(107,829,qs),
(105,827,o),
(92,810,o),
(90,808,qs),
(88,805,o),
(81,794,o),
(79,793,qs),
(73,790,o),
(69,790,o),
(64,792,q),
(60,797,o),
(38,817,o),
(11,840,o),
(-12,856,o),
(-17,856,q),
(-25,858,o),
(-37,856,o),
(-33,847,q),
(-27,841,o),
(-15,828,o),
(-11,821,q),
(-6,818,o),
(6,803,o),
(12,800,q),
(20,793,o),
(27,784,o),
(34,778,qs),
(42,771,o),
(58,757,o),
(62,746,qs),
(64,742,o),
(72,741,o),
(74,745,q),
(85,757,o),
(116,791,o),
(146,826,o),
(166,849,o),
(165,850,qs),
(163,852,o),
(157,857,o),
(155,857,q),
(150,859,o),
(143,857,q),
(129,850,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
131 125 59 20 7 5 2 4 1 76 0 3 1 4 4 3 114 0 0 0 39 77 7 6 5 3 4 4 1 96 0 1 1 40 77 0 2 2 38 2 78 118 113 109 107 103 102 82 81 80 78 67 65 49 47 40 39 8 8 22 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = uni021F;
unicode = 543;
},
{
glyphname = uni1E29;
layers = (
{
layerId = m01;
shapes = (
{
ref = h;
},
{
pos = (169,-6);
ref = uni0327.alt;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHW[ ]	/* 1 value pushed */
-6 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = uni1E29;
unicode = 7721;
},
{
glyphname = hcircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = h;
},
{
pos = (-70,128);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
128 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = hcircumflex;
unicode = 293;
},
{
glyphname = uni1E27;
layers = (
{
layerId = m01;
shapes = (
{
ref = h;
},
{
pos = (-93,127);
ref = uni0308;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 2 
PUSHB[ ]	/* 1 value pushed */
127 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = uni1E27;
unicode = 7719;
},
{
glyphname = uni1E23;
layers = (
{
layerId = m01;
shapes = (
{
ref = h;
},
{
pos = (-7,113);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
113 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = uni1E23;
unicode = 7715;
},
{
glyphname = uni1E25;
layers = (
{
layerId = m01;
shapes = (
{
ref = h;
},
{
pos = (176,-114);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = uni1E25;
unicode = 7717;
},
{
glyphname = uniA727;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(128,88,o),
(171,164,o),
(214,239,o),
(250,301,o),
(261,319,qs),
(272,336,o),
(296,392,o),
(306,414,q),
(316,414,o),
(355,420,o),
(369,420,qs),
(394,420,o),
(421,418,o),
(422,393,qs),
(422,380,o),
(423,313,o),
(424,225,o),
(425,133,o),
(426,57,o),
(426,36,q),
(421,16,o),
(427,-37,o),
(426,-47,qs),
(422,-83,o),
(431,-128,o),
(429,-133,qs),
(427,-139,o),
(394,-133,o),
(347,-117,o),
(298,-100,o),
(261,-90,o),
(255,-92,qs),
(249,-93,o),
(242,-116,o),
(252,-121,qs),
(255,-122,o),
(273,-130,o),
(277,-129,qs),
(285,-127,o),
(304,-136,o),
(313,-140,qs),
(324,-145,o),
(368,-160,o),
(416,-174,o),
(451,-181,o),
(454,-178,qs),
(459,-171,o),
(459,-150,o),
(457,-104,o),
(459,-63,qs),
(459,-58,o),
(455,-25,o),
(456,-21,qs),
(460,-6,o),
(457,10,o),
(456,26,qs),
(455,32,l),
(457,346,ls),
(457,353,o),
(456,367,o),
(462,374,q),
(458,388,o),
(457,403,o),
(457,410,qs),
(457,432,ls),
(457,449,o),
(445,445,o),
(440,449,qs),
(438,451,o),
(426,449,o),
(418,449,qs),
(92,449,ls),
(79,449,o),
(79,461,qs),
(79,651,ls),
(79,665,o),
(77,674,o),
(74,683,o),
(74,697,q),
(67,697,o),
(53,697,o),
(50,694,q),
(49,687,o),
(41,674,o),
(41,666,qs),
(41,659,o),
(49,652,o),
(49,647,qs),
(49,643,o),
(45,636,qs),
(39,628,o),
(50,616,o),
(50,605,qs),
(50,574,ls),
(50,516,o),
(41,460,o),
(41,439,qs),
(41,432,o),
(51,413,o),
(50,411,qs),
(43,402,o),
(41,384,o),
(41,374,qs),
(41,370,o),
(42,360,o),
(44,358,qs),
(49,352,o),
(53,285,o),
(53,246,qs),
(53,219,o),
(52,168,o),
(51,136,o),
(50,135,qs),
(41,125,o),
(41,111,qs),
(41,20,ls),
(41,5,o),
(59,-2,o),
(77,1,o),
(77,1,q),
(90,22,o)
);
},
{
closed = 1;
nodes = (
(80,77,o),
(80,86,qs),
(80,100,o),
(72,109,q),
(77,117,o),
(81,132,o),
(81,139,qs),
(81,147,o),
(79,164,o),
(79,171,qs),
(79,209,o),
(80,294,o),
(80,374,o),
(80,404,qs),
(80,414,o),
(90,415,qs),
(108,418,o),
(124,418,qs),
(134,418,o),
(153,417,o),
(163,417,qs),
(174,417,o),
(199,419,o),
(212,423,qs),
(219,425,o),
(227,415,o),
(233,415,qs),
(236,415,o),
(245,420,o),
(248,420,qs),
(252,420,o),
(256,415,q),
(268,415,o),
(276,414,q),
(266,395,o),
(237,338,o),
(207,284,o),
(195,269,qs),
(187,259,o),
(160,209,o),
(127,147,o),
(96,89,o),
(75,51,o),
(73,52,q),
(77,66,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
161 155 100 82 74 67 63 59 20 7 10 3 73 0 2 1 3 3 2 114 0 0 0 39 77 6 5 4 3 3 3 1 96 0 1 1 40 3 78 148 143 139 137 133 132 112 111 110 108 49 47 40 39 7 8 22 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = uniA727;
unicode = 42791;
},
{
glyphname = uni0266;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(128,88,o),
(171,164,o),
(214,239,o),
(250,301,o),
(261,319,qs),
(272,336,o),
(296,392,o),
(306,414,q),
(316,414,o),
(355,420,o),
(369,420,qs),
(394,420,o),
(421,418,o),
(422,393,qs),
(422,381,o),
(423,317,o),
(423,233,o),
(425,144,o),
(425,67,o),
(426,19,o),
(426,18,qs),
(426,9,o),
(435,0,o),
(440,0,qs),
(445,0,o),
(455,9,o),
(455,18,qs),
(457,346,ls),
(457,353,o),
(456,367,o),
(462,374,q),
(458,388,o),
(457,403,o),
(457,410,qs),
(457,432,ls),
(457,449,o),
(445,445,o),
(440,449,qs),
(438,451,o),
(426,449,o),
(418,449,qs),
(92,449,ls),
(79,449,o),
(79,461,qs),
(79,651,ls),
(79,658,o),
(79,661,qs),
(80,677,o),
(92,699,o),
(108,698,qs),
(113,698,o),
(136,699,o),
(141,697,q),
(148,696,o),
(153,698,o),
(167,700,o),
(186,697,qs),
(191,696,o),
(201,702,o),
(207,699,q),
(220,707,o),
(218,718,o),
(207,723,q),
(195,731,o),
(176,734,o),
(162,729,qs),
(158,728,o),
(128,728,o),
(123,728,qs),
(100,729,o),
(95,729,o),
(91,729,qs),
(71,728,o),
(54,709,o),
(50,694,q),
(50,694,l),
(49,687,o),
(41,674,o),
(41,666,qs),
(41,659,o),
(49,652,o),
(49,647,qs),
(49,643,o),
(45,636,qs),
(41,631,o),
(44,623,o),
(46,618,qs),
(47,614,o),
(47,607,o),
(47,605,qs),
(47,600,o),
(50,598,q),
(50,574,ls),
(50,516,o),
(41,460,o),
(41,439,qs),
(41,432,o),
(51,413,o),
(50,411,qs),
(43,402,o),
(41,384,o),
(41,374,qs),
(41,370,o),
(42,360,o),
(44,358,qs),
(49,352,o),
(53,285,o),
(53,246,qs),
(53,219,o),
(52,168,o),
(51,136,o),
(50,135,qs),
(41,125,o),
(41,111,qs),
(41,20,ls),
(41,5,o),
(59,-2,o),
(77,1,o),
(77,1,q),
(90,22,o)
);
},
{
closed = 1;
nodes = (
(80,77,o),
(80,86,qs),
(80,100,o),
(72,109,q),
(77,117,o),
(81,132,o),
(81,139,qs),
(81,147,o),
(79,164,o),
(79,171,qs),
(79,209,o),
(80,294,o),
(80,374,o),
(80,404,qs),
(80,414,o),
(90,415,qs),
(108,418,o),
(124,418,qs),
(134,418,o),
(153,417,o),
(163,417,qs),
(174,417,o),
(199,419,o),
(212,423,qs),
(219,425,o),
(227,415,o),
(233,415,qs),
(236,415,o),
(245,420,o),
(248,420,qs),
(252,420,o),
(256,415,q),
(268,415,o),
(276,414,q),
(266,395,o),
(237,338,o),
(207,284,o),
(195,269,qs),
(187,259,o),
(160,209,o),
(127,147,o),
(96,89,o),
(75,51,o),
(73,52,q),
(77,66,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
59 1 1 0 29 27 2 2 1 160 154 88 20 7 5 3 5 3 76 0 4 2 5 5 4 114 0 0 0 1 2 0 1 105 8 7 6 3 5 5 2 96 0 2 2 40 77 0 3 3 38 3 78 147 142 138 136 132 131 111 110 109 107 96 94 78 76 70 66 52 46 9 8 22 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = uni0266;
unicode = 614;
},
{
glyphname = uni0265;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(409,426,o),
(345,353,o),
(274,271,o),
(211,200,o),
(192,182,qs),
(182,173,o),
(149,136,o),
(114,94,o),
(85,61,o),
(80,56,q),
(77,429,l),
(75,437,o),
(73,440,qs),
(63,453,o),
(45,446,o),
(45,437,qs),
(45,103,ls),
(45,96,o),
(46,82,o),
(40,75,q),
(44,61,o),
(45,46,o),
(45,39,qs),
(45,17,ls),
(45,1,o),
(58,5,o),
(62,0,qs),
(64,-2,o),
(77,0,o),
(84,0,qs),
(410,0,ls),
(423,0,o),
(423,-12,qs),
(423,-151,ls),
(423,-165,o),
(426,-174,o),
(428,-182,o),
(428,-197,q),
(435,-197,o),
(449,-197,o),
(452,-194,q),
(453,-187,o),
(461,-173,o),
(461,-166,qs),
(461,-157,o),
(448,-149,o),
(457,-136,qs),
(463,-128,o),
(452,-115,o),
(452,-105,qs),
(452,-74,ls),
(452,-45,o),
(455,-18,o),
(458,-8,o),
(461,0,o),
(461,10,qs),
(461,17,o),
(451,37,o),
(452,38,qs),
(459,47,o),
(461,65,o),
(461,75,qs),
(461,79,o),
(460,89,o),
(458,91,qs),
(455,94,o),
(453,108,o),
(452,147,o),
(452,227,o),
(452,297,qs),
(452,302,o),
(450,311,o),
(452,314,qs),
(461,325,o),
(461,338,qs),
(462,376,o),
(462,409,o),
(462,419,o),
(461,420,q),
(460,429,o),
(448,438,o),
(433,450,q),
(430,447,ls)
);
},
{
closed = 1;
nodes = (
(422,372,o),
(422,363,qs),
(422,349,o),
(430,340,q),
(425,333,o),
(421,318,o),
(421,310,qs),
(421,302,o),
(423,286,o),
(423,278,qs),
(423,241,o),
(423,155,o),
(422,75,o),
(422,45,qs),
(422,35,o),
(412,34,qs),
(390,30,o),
(353,32,o),
(314,33,o),
(290,26,qs),
(283,24,o),
(274,36,o),
(267,34,qs),
(262,33,o),
(251,27,o),
(246,34,q),
(212,33,l),
(207,37,o),
(171,33,o),
(132,28,o),
(122,30,q),
(115,34,o),
(110,24,o),
(96,26,q),
(102,31,o),
(133,67,o),
(175,117,o),
(218,168,o),
(256,208,o),
(268,215,qs),
(279,222,o),
(320,268,o),
(367,327,o),
(411,381,o),
(424,397,q),
(424,384,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
38 1 0 1 1 76 124 118 83 82 72 71 62 23 9 9 2 74 3 1 2 2 1 95 0 1 1 38 77 0 0 0 42 0 78 111 109 102 101 52 50 43 42 4 8 22 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = uni0265;
unicode = 613;
},
{
glyphname = i;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (115,-123);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-123 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 374;
}
);
note = i;
unicode = 105;
},
{
glyphname = dotlessi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(170,2,o),
(213,4,o),
(229,4,qs),
(235,4,o),
(248,4,o),
(264,2,qs),
(267,2,o),
(292,3,o),
(322,7,o),
(344,13,o),
(344,17,qs),
(345,23,o),
(339,34,o),
(335,34,qs),
(219,34,ls),
(208,34,o),
(201,41,o),
(201,53,qs),
(201,387,ls),
(201,399,o),
(213,418,o),
(225,418,q),
(260,411,l),
(269,411,o),
(277,418,q),
(281,417,o),
(290,414,o),
(295,414,qs),
(312,414,o),
(344,426,o),
(344,433,qs),
(344,448,o),
(335,450,q),
(50,450,ls),
(35,450,o),
(30,435,qs),
(29,433,o),
(38,423,o),
(42,421,qs),
(47,419,o),
(63,419,o),
(67,419,qs),
(80,419,o),
(114,422,o),
(130,422,qs),
(150,422,o),
(161,418,qs),
(166,417,o),
(170,400,o),
(170,392,qs),
(170,119,ls),
(170,112,o),
(165,101,o),
(163,94,qs),
(159,81,o),
(158,55,o),
(165,44,qs),
(169,39,o),
(164,35,o),
(161,35,qs),
(116,34,o),
(51,35,o),
(44,33,qs),
(43,33,o),
(35,17,o),
(44,2,o),
(67,2,qs),
(162,2,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
36 1 2 4 17 1 1 5 2 76 7 6 2 5 2 1 2 5 114 3 1 2 2 4 95 0 4 4 40 77 8 1 1 1 0 97 9 10 2 0 0 38 0 78 1 0 60 59 53 51 46 45 44 43 39 38 34 32 27 24 23 21 7 5 0 67 1 62 11 8 22 
CALL[ ]	/* CallFunction */";
};
width = 374;
}
);
note = dotlessi;
unicode = 305;
},
{
glyphname = dotlessi_ogonek;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (122,33);
ref = uni0328;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
33 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 374;
}
);
note = dotlessi_ogonek;
},
{
glyphname = iacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (111,-107);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-107 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 374;
}
);
note = iacute;
unicode = 237;
},
{
glyphname = uni01D0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(170,2,o),
(213,4,o),
(229,4,qs),
(235,4,o),
(248,4,o),
(264,2,qs),
(267,2,o),
(292,3,o),
(322,7,o),
(344,13,o),
(344,17,qs),
(345,23,o),
(339,34,o),
(335,34,qs),
(219,34,ls),
(208,34,o),
(201,41,o),
(201,53,qs),
(201,387,ls),
(201,399,o),
(213,418,o),
(225,418,q),
(260,411,l),
(269,411,o),
(277,418,q),
(281,417,o),
(290,414,o),
(295,414,qs),
(312,414,o),
(344,426,o),
(344,433,qs),
(344,448,o),
(335,450,q),
(50,450,ls),
(35,450,o),
(30,435,qs),
(29,433,o),
(38,423,o),
(42,421,qs),
(47,419,o),
(63,419,o),
(67,419,qs),
(80,419,o),
(114,422,o),
(130,422,qs),
(150,422,o),
(161,418,qs),
(166,417,o),
(170,400,o),
(170,392,qs),
(170,119,ls),
(170,112,o),
(165,101,o),
(163,94,qs),
(159,81,o),
(158,55,o),
(165,44,qs),
(169,39,o),
(164,35,o),
(161,35,qs),
(116,34,o),
(51,35,o),
(44,33,qs),
(43,33,o),
(35,17,o),
(44,2,o),
(67,2,qs),
(162,2,ls)
);
},
{
closed = 1;
nodes = (
(232,586,o),
(229,582,qs),
(227,580,o),
(214,563,o),
(212,561,qs),
(210,558,o),
(203,547,o),
(201,546,qs),
(195,543,o),
(191,543,o),
(186,545,q),
(182,550,o),
(160,570,o),
(133,593,o),
(110,609,o),
(105,609,q),
(97,611,o),
(85,609,o),
(89,600,q),
(95,594,o),
(107,581,o),
(111,574,q),
(116,571,o),
(128,556,o),
(134,553,q),
(142,546,o),
(149,537,o),
(156,531,qs),
(164,524,o),
(180,510,o),
(184,499,qs),
(186,495,o),
(194,494,o),
(196,498,q),
(207,510,o),
(238,544,o),
(268,579,o),
(288,602,o),
(287,603,qs),
(285,605,o),
(279,610,o),
(277,610,q),
(272,612,o),
(265,610,q),
(251,603,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
36 1 2 4 17 1 1 5 2 76 7 6 2 5 2 1 2 5 114 3 1 2 2 4 95 0 4 4 40 77 8 1 1 1 0 97 9 10 2 0 0 38 0 78 1 0 60 59 53 51 46 45 44 43 39 38 34 32 27 24 23 21 7 5 0 67 1 62 11 8 22 
CALL[ ]	/* CallFunction */";
};
width = 374;
}
);
note = uni01D0;
unicode = 464;
},
{
glyphname = icircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (52,-119);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-119 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 374;
}
);
note = icircumflex;
unicode = 238;
},
{
glyphname = uni0209;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (35,-129);
ref = uni030F;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 2 
PUSHW[ ]	/* 1 value pushed */
-129 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 374;
}
);
note = uni0209;
unicode = 521;
},
{
glyphname = idieresis;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (29,-120);
ref = uni0308;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 2 
PUSHW[ ]	/* 1 value pushed */
-120 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 374;
}
);
note = idieresis;
unicode = 239;
},
{
glyphname = uni1E2F;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (29,-120);
ref = uni0308;
},
{
pos = (109,14);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 2 
PUSHW[ ]	/* 1 value pushed */
-120 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
14 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 374;
}
);
note = uni1E2F;
unicode = 7727;
},
{
glyphname = i.loclTRK;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (115,-134);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-134 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 374;
}
);
note = i.loclTRK;
},
{
glyphname = uni1ECB;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (115,-123);
ref = uni0307;
},
{
pos = (114,-114);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-123 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 374;
}
);
note = uni1ECB;
unicode = 7883;
},
{
glyphname = igrave;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(170,2,o),
(213,4,o),
(229,4,qs),
(235,4,o),
(248,4,o),
(264,2,qs),
(267,2,o),
(292,3,o),
(322,7,o),
(344,13,o),
(344,17,qs),
(345,23,o),
(339,34,o),
(335,34,qs),
(219,34,ls),
(208,34,o),
(201,41,o),
(201,53,qs),
(201,387,ls),
(201,399,o),
(213,418,o),
(225,418,q),
(260,411,l),
(269,411,o),
(277,418,q),
(281,417,o),
(290,414,o),
(295,414,qs),
(312,414,o),
(344,426,o),
(344,433,qs),
(344,448,o),
(335,450,q),
(50,450,ls),
(35,450,o),
(30,435,qs),
(29,433,o),
(38,423,o),
(42,421,qs),
(47,419,o),
(63,419,o),
(67,419,qs),
(80,419,o),
(114,422,o),
(130,422,qs),
(150,422,o),
(161,418,qs),
(166,417,o),
(170,400,o),
(170,392,qs),
(170,119,ls),
(170,112,o),
(165,101,o),
(163,94,qs),
(159,81,o),
(158,55,o),
(165,44,qs),
(169,39,o),
(164,35,o),
(161,35,qs),
(116,34,o),
(51,35,o),
(44,33,qs),
(43,33,o),
(35,17,o),
(44,2,o),
(67,2,qs),
(162,2,ls)
);
},
{
closed = 1;
nodes = (
(211,542,o),
(200,552,qs),
(179,570,o),
(167,586,q),
(159,593,o),
(145,606,o),
(138,614,qs),
(134,619,o),
(125,629,o),
(118,630,q),
(116,632,o),
(110,627,o),
(108,628,qs),
(105,630,o),
(94,619,o),
(95,616,qs),
(100,604,o),
(110,581,o),
(126,576,qs),
(132,574,o),
(143,566,o),
(147,561,qs),
(155,552,o),
(176,530,o),
(192,516,qs),
(210,503,o),
(238,508,o),
(242,512,q),
(232,522,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
36 1 2 4 17 1 1 5 2 76 80 1 4 74 7 6 2 5 2 1 2 5 114 3 1 2 2 4 95 0 4 4 40 77 8 1 1 1 0 97 9 10 2 0 0 38 0 78 1 0 60 59 53 51 46 45 44 43 39 38 34 32 27 24 23 21 7 5 0 67 1 62 11 8 22 
CALL[ ]	/* CallFunction */";
};
width = 374;
}
);
note = igrave;
unicode = 236;
},
{
glyphname = uni1EC9;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (80,-92);
ref = hookabovecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-92 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 374;
}
);
note = uni1EC9;
unicode = 7881;
},
{
glyphname = uni020B;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (84,-132);
ref = uni0311;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-132 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 374;
}
);
note = uni020B;
unicode = 523;
},
{
glyphname = ij;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (115,-123);
ref = uni0307;
},
{
pos = (374,0);
ref = uni0237;
},
{
pos = (465,-120);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-123 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-120 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 673;
}
);
note = ij;
unicode = 307;
},
{
glyphname = imacron;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (16,300);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
300 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 374;
}
);
note = imacron;
unicode = 299;
},
{
glyphname = iogonek;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (115,-123);
ref = uni0307;
},
{
pos = (262,33);
ref = uni0328;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-123 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
33 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 374;
}
);
note = iogonek;
unicode = 303;
},
{
glyphname = uni0269;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(167,68,qs),
(177,76,o),
(200,81,o),
(200,98,qs),
(200,107,o),
(210,111,o),
(205,118,qs),
(200,127,o),
(169,114,o),
(140,91,qs),
(88,52,l),
(81,54,o),
(81,61,qs),
(81,443,ls),
(81,449,o),
(87,468,o),
(87,491,o),
(77,501,q),
(59,504,o),
(47,483,o),
(47,465,qs),
(47,338,o),
(47,204,o),
(47,176,q),
(46,168,o),
(40,162,q),
(45,155,o),
(48,139,o),
(48,131,qs),
(48,125,o),
(48,94,o),
(47,57,o),
(47,25,o),
(47,19,qs),
(48,12,o),
(59,1,o),
(66,0,qs),
(82,-2,o)
);
},
{
closed = 1;
nodes = (
(48,183,o),
(48,183,q),
(48,183,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
38 38 37 18 2 50 
CALL[ ]	/* CallFunction */";
};
width = 207;
}
);
note = uni0269;
unicode = 617;
},
{
glyphname = uni0268;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (115,-123);
ref = uni0307;
},
{
pos = (20,-20);
ref = uni0335;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-123 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHW[ ]	/* 1 value pushed */
-20 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 374;
}
);
note = uni0268;
unicode = 616;
},
{
glyphname = itilde;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (61,-155);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-155 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 374;
}
);
note = itilde;
unicode = 297;
},
{
glyphname = uni1E2D;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (115,-123);
ref = uni0307;
},
{
pos = (52,-785);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-123 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHW[ ]	/* 1 value pushed */
-785 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 374;
}
);
note = uni1E2D;
unicode = 7725;
},
{
glyphname = j;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0237;
},
{
pos = (91,-120);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHW[ ]	/* 1 value pushed */
-120 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 299;
}
);
note = j;
unicode = 106;
},
{
glyphname = uni0237;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(163,-195,o),
(229,-196,o),
(233,-196,qs),
(241,-196,o),
(252,-184,o),
(252,-177,qs),
(252,-166,o),
(252,-118,o),
(251,-62,qs),
(251,-43,o),
(259,-30,q),
(257,-28,o),
(254,-12,o),
(253,35,o),
(252,128,o),
(252,284,o),
(252,403,qs),
(252,429,o),
(239,449,o),
(214,449,qs),
(201,449,o),
(187,447,o),
(173,443,qs),
(169,442,o),
(149,447,o),
(144,448,q),
(89,446,o),
(41,437,o),
(41,432,qs),
(41,427,o),
(48,424,o),
(51,422,qs),
(63,414,o),
(79,414,qs),
(111,414,o),
(177,414,o),
(210,413,qs),
(212,413,o),
(217,408,o),
(217,406,qs),
(217,404,o),
(218,386,o),
(218,330,o),
(218,211,o),
(218,5,o),
(218,-155,qs),
(218,-159,o),
(209,-151,o),
(204,-147,qs),
(187,-133,o),
(167,-124,o),
(156,-105,qs),
(152,-97,o),
(130,-90,o),
(123,-86,qs),
(120,-84,o),
(120,-82,o),
(111,-76,o),
(95,-70,qs),
(76,-62,o),
(52,-42,o),
(34,-26,qs),
(29,-21,o),
(9,-29,o),
(9,-37,qs),
(9,-45,o),
(6,-82,o),
(1,-90,qs),
(0,-92,o),
(1,-117,o),
(5,-127,q),
(8,-131,o),
(8,-143,qs),
(8,-154,o),
(5,-178,q),
(11,-191,o),
(17,-195,o),
(28,-195,qs),
(72,-195,o)
);
},
{
closed = 1;
nodes = (
(135,-161,o),
(89,-161,o),
(51,-161,o),
(44,-161,q),
(40,-154,o),
(38,-140,o),
(38,-133,qs),
(39,-76,l),
(40,-74,o),
(64,-88,o),
(80,-102,qs),
(100,-120,o),
(157,-146,o),
(178,-162,q),
(172,-162,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
86 1 4 1 72 3 2 0 4 2 76 0 1 1 2 97 3 1 2 2 40 77 0 4 4 0 95 5 1 0 0 42 0 78 1 0 93 89 59 57 52 51 45 40 0 78 1 74 6 8 22 
CALL[ ]	/* CallFunction */";
};
width = 299;
}
);
note = uni0237;
unicode = 567;
},
{
glyphname = uni006A0301;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,508,o),
(215,521,qs),
(232,535,o),
(253,557,o),
(260,566,qs),
(265,571,o),
(275,579,o),
(281,581,qs),
(297,586,o),
(308,609,o),
(312,621,q),
(314,624,o),
(302,635,o),
(299,633,qs),
(297,632,o),
(291,637,o),
(289,635,q),
(282,634,o),
(273,624,o),
(269,619,qs),
(262,611,o),
(248,598,o),
(240,591,q),
(228,575,o),
(207,557,qs),
(196,547,o),
(176,527,o),
(165,517,q),
(170,513,o)
);
},
{
closed = 1;
nodes = (
(295,-184,o),
(295,-177,qs),
(295,-166,o),
(295,-118,o),
(294,-62,qs),
(294,-43,o),
(302,-30,q),
(300,-28,o),
(297,-21,o),
(296,14,o),
(295,103,o),
(295,268,o),
(295,403,qs),
(295,435,o),
(275,451,o),
(236,448,qs),
(231,447,o),
(221,445,o),
(216,443,qs),
(212,442,o),
(199,447,o),
(194,448,q),
(143,445,o),
(97,440,o),
(85,435,o),
(84,432,qs),
(83,427,o),
(91,424,o),
(94,422,qs),
(106,414,o),
(122,414,qs),
(154,414,o),
(220,414,o),
(253,413,qs),
(255,413,o),
(260,408,o),
(260,406,qs),
(260,404,o),
(261,386,o),
(261,330,o),
(261,211,o),
(261,5,o),
(261,-155,qs),
(261,-159,o),
(230,-165,o),
(217,-161,q),
(213,-152,o),
(203,-143,qs),
(186,-129,o),
(153,-102,o),
(142,-83,qs),
(138,-75,o),
(116,-68,o),
(109,-64,qs),
(105,-62,o),
(103,-52,o),
(95,-50,qs),
(83,-47,o),
(77,-35,o),
(71,-22,qs),
(65,-9,o),
(52,-3,o),
(38,3,o),
(28,13,qs),
(23,18,o),
(8,0,o),
(9,-8,qs),
(9,-11,o),
(8,-36,o),
(5,-64,o),
(1,-70,qs),
(0,-72,o),
(1,-86,o),
(5,-111,q),
(7,-115,o),
(9,-135,o),
(5,-178,q),
(11,-191,o),
(17,-195,o),
(28,-195,qs),
(61,-195,o),
(143,-196,o),
(220,-196,o),
(273,-196,o),
(276,-196,qs),
(284,-195,o)
);
},
{
closed = 1;
nodes = (
(82,-161,o),
(63,-160,o),
(55,-160,o),
(48,-160,q),
(44,-153,o),
(42,-140,o),
(42,-133,qs),
(41,-46,l),
(42,-47,o),
(64,-75,o),
(80,-87,qs),
(103,-105,o),
(149,-142,o),
(171,-161,q),
(127,-161,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
122 1 3 1 112 37 2 0 3 2 76 0 1 1 2 97 0 2 2 40 77 4 1 3 3 0 95 0 0 0 42 0 78 115 115 115 129 115 125 92 91 84 79 35 29 5 8 22 
CALL[ ]	/* CallFunction */";
};
width = 382;
}
);
note = uni006A0301;
},
{
glyphname = uni01F0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(163,-195,o),
(229,-196,o),
(233,-196,qs),
(241,-196,o),
(252,-184,o),
(252,-177,qs),
(252,-166,o),
(252,-118,o),
(251,-62,qs),
(251,-43,o),
(259,-30,q),
(257,-28,o),
(254,-12,o),
(253,35,o),
(252,128,o),
(252,284,o),
(252,403,qs),
(252,429,o),
(239,449,o),
(214,449,qs),
(201,449,o),
(187,447,o),
(173,443,qs),
(169,442,o),
(149,447,o),
(144,448,q),
(89,446,o),
(41,437,o),
(41,432,qs),
(41,427,o),
(48,424,o),
(51,422,qs),
(63,414,o),
(79,414,qs),
(111,414,o),
(177,414,o),
(210,413,qs),
(212,413,o),
(217,408,o),
(217,406,qs),
(217,404,o),
(218,386,o),
(218,330,o),
(218,211,o),
(218,5,o),
(218,-155,qs),
(218,-159,o),
(209,-151,o),
(204,-147,qs),
(187,-133,o),
(167,-124,o),
(156,-105,qs),
(152,-97,o),
(130,-90,o),
(123,-86,qs),
(120,-84,o),
(120,-82,o),
(111,-76,o),
(95,-70,qs),
(76,-62,o),
(52,-42,o),
(34,-26,qs),
(29,-21,o),
(9,-29,o),
(9,-37,qs),
(9,-45,o),
(6,-82,o),
(1,-90,qs),
(0,-92,o),
(1,-117,o),
(5,-127,q),
(8,-131,o),
(8,-143,qs),
(8,-154,o),
(5,-178,q),
(11,-191,o),
(17,-195,o),
(28,-195,qs),
(72,-195,o)
);
},
{
closed = 1;
nodes = (
(135,-161,o),
(89,-161,o),
(51,-161,o),
(44,-161,q),
(40,-154,o),
(38,-140,o),
(38,-133,qs),
(39,-76,l),
(40,-74,o),
(64,-88,o),
(80,-102,qs),
(100,-120,o),
(157,-146,o),
(178,-162,q),
(172,-162,o)
);
},
{
closed = 1;
nodes = (
(188,586,o),
(185,582,qs),
(183,580,o),
(170,563,o),
(168,561,qs),
(166,558,o),
(159,547,o),
(157,546,qs),
(151,543,o),
(147,543,o),
(142,545,q),
(138,550,o),
(116,570,o),
(89,593,o),
(66,609,o),
(61,609,q),
(53,611,o),
(41,609,o),
(45,600,q),
(51,594,o),
(63,581,o),
(67,574,q),
(72,571,o),
(84,556,o),
(90,553,q),
(98,546,o),
(105,537,o),
(112,531,qs),
(120,524,o),
(136,510,o),
(140,499,qs),
(142,495,o),
(150,494,o),
(152,498,q),
(163,510,o),
(194,544,o),
(224,579,o),
(244,602,o),
(243,603,qs),
(241,605,o),
(235,610,o),
(233,610,q),
(228,612,o),
(221,610,q),
(207,603,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
86 1 4 1 72 3 2 0 4 2 76 0 1 1 2 97 3 1 2 2 40 77 0 4 4 0 95 5 1 0 0 42 0 78 1 0 93 89 59 57 52 51 45 40 0 78 1 74 6 8 22 
CALL[ ]	/* CallFunction */";
};
width = 299;
}
);
note = uni01F0;
unicode = 496;
},
{
glyphname = jcircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0237;
},
{
pos = (8,-119);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHW[ ]	/* 1 value pushed */
-119 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 299;
}
);
note = jcircumflex;
unicode = 309;
},
{
glyphname = uni029D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(277,549,o),
(284,562,qs),
(290,573,o),
(278,582,q),
(272,585,o),
(258,592,o),
(253,596,qs),
(246,601,o),
(226,594,o),
(217,587,q),
(203,580,o),
(199,551,o),
(201,545,qs),
(204,537,o),
(227,525,o),
(241,525,qs),
(260,525,o)
);
},
{
closed = 1;
nodes = (
(335,-104,o),
(335,-97,qs),
(335,-86,o),
(335,-38,o),
(334,18,qs),
(334,37,o),
(342,50,q),
(340,52,o),
(337,57,o),
(336,85,o),
(335,157,o),
(335,292,o),
(335,403,qs),
(335,435,o),
(315,451,o),
(276,448,qs),
(271,447,o),
(261,445,o),
(256,443,qs),
(252,442,o),
(239,447,o),
(234,448,q),
(183,445,o),
(137,440,o),
(125,435,o),
(124,432,qs),
(123,427,o),
(131,424,o),
(134,422,qs),
(146,414,o),
(162,414,qs),
(194,414,o),
(260,414,o),
(293,413,qs),
(295,413,o),
(300,408,o),
(300,406,qs),
(300,404,o),
(301,404,o),
(301,387,o),
(301,337,o),
(301,233,o),
(301,58,o),
(301,-75,qs),
(301,-79,o),
(274,-85,o),
(261,-81,q),
(257,-72,o),
(247,-63,qs),
(236,-54,o),
(218,-47,o),
(203,-38,o),
(196,-25,qs),
(192,-17,o),
(170,-10,o),
(163,-6,qs),
(160,-4,o),
(160,-2,o),
(151,4,o),
(135,10,qs),
(116,18,o),
(92,38,o),
(74,54,qs),
(69,59,o),
(48,50,o),
(49,42,qs),
(49,37,o),
(46,0,o),
(41,-10,qs),
(40,-12,o),
(42,-41,o),
(46,-51,q),
(48,-53,o),
(49,-53,o),
(48,-69,o),
(45,-98,q),
(51,-111,o),
(57,-115,o),
(68,-115,qs),
(106,-115,o),
(204,-116,o),
(244,-116,q),
(248,-123,o),
(259,-133,o),
(269,-135,qs),
(276,-136,o),
(287,-144,o),
(292,-148,qs),
(300,-156,o),
(323,-177,o),
(340,-189,qs),
(360,-201,o),
(386,-193,o),
(390,-189,q),
(379,-180,o),
(357,-161,o),
(345,-153,qs),
(332,-143,o),
(317,-131,o),
(309,-122,q),
(305,-119,o),
(301,-116,q),
(314,-116,o),
(316,-116,qs),
(324,-115,o)
);
},
{
closed = 1;
nodes = (
(124,-82,o),
(102,-81,o),
(91,-81,o),
(84,-81,q),
(80,-74,o),
(78,-60,o),
(78,-53,qs),
(79,4,l),
(80,6,o),
(104,-10,o),
(120,-22,qs),
(144,-41,o),
(195,-62,o),
(218,-82,q),
(173,-82,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
129 114 2 5 3 119 45 2 1 5 2 76 3 1 0 74 27 1 1 73 6 1 0 4 0 133 7 1 5 2 1 1 5 1 99 0 3 3 4 97 0 4 4 40 3 78 122 122 1 0 122 136 122 132 99 98 91 86 43 39 19 17 0 16 1 16 8 8 22 
CALL[ ]	/* CallFunction */";
};
width = 383;
}
);
note = uni029D;
unicode = 669;
},
{
glyphname = uni0249;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,541,o),
(204,554,qs),
(210,565,o),
(198,574,q),
(192,577,o),
(178,584,o),
(173,588,qs),
(166,593,o),
(146,586,o),
(137,579,q),
(123,572,o),
(119,543,o),
(121,537,qs),
(124,529,o),
(147,517,o),
(161,517,qs),
(180,517,o)
);
},
{
closed = 1;
nodes = (
(163,-195,o),
(229,-196,o),
(233,-196,qs),
(241,-196,o),
(252,-184,o),
(252,-177,qs),
(252,-166,o),
(252,-118,o),
(251,-62,qs),
(251,-43,o),
(259,-30,q),
(257,-28,o),
(254,-11,o),
(253,37,o),
(252,134,o),
(252,217,q),
(259,214,o),
(272,213,o),
(279,218,q),
(289,211,o),
(302,212,q),
(316,215,o),
(346,226,o),
(365,238,o),
(360,249,o),
(339,252,qs),
(335,252,o),
(308,248,o),
(281,245,o),
(277,245,qs),
(271,245,o),
(258,245,o),
(252,245,q),
(252,278,o),
(252,357,o),
(252,403,qs),
(252,429,o),
(239,449,o),
(214,449,qs),
(201,449,o),
(187,447,o),
(173,443,qs),
(169,442,o),
(149,447,o),
(144,448,q),
(89,446,o),
(41,437,o),
(41,432,qs),
(41,427,o),
(48,424,o),
(51,422,qs),
(63,414,o),
(79,414,qs),
(111,414,o),
(177,414,o),
(210,413,qs),
(212,413,o),
(217,408,o),
(217,406,qs),
(217,404,o),
(218,393,o),
(218,363,o),
(218,299,o),
(218,244,q),
(202,245,o),
(198,248,qs),
(194,250,o),
(181,250,o),
(179,247,q),
(173,244,o),
(146,242,o),
(119,243,o),
(112,242,qs),
(97,240,o),
(97,226,o),
(108,214,o),
(108,214,q),
(131,208,l),
(136,215,o),
(147,214,o),
(154,215,qs),
(170,216,o),
(177,216,qs),
(182,216,o),
(191,214,o),
(195,209,qs),
(196,208,o),
(205,211,o),
(206,212,qs),
(209,216,o),
(218,218,q),
(218,156,o),
(218,-26,o),
(218,-155,qs),
(218,-159,o),
(209,-151,o),
(204,-147,qs),
(187,-133,o),
(167,-124,o),
(156,-105,qs),
(152,-97,o),
(130,-90,o),
(123,-86,qs),
(120,-84,o),
(120,-82,o),
(111,-76,o),
(95,-70,qs),
(76,-62,o),
(52,-42,o),
(34,-26,qs),
(29,-21,o),
(9,-29,o),
(9,-37,qs),
(9,-45,o),
(6,-82,o),
(1,-90,qs),
(0,-92,o),
(1,-117,o),
(5,-127,q),
(8,-131,o),
(8,-143,qs),
(8,-154,o),
(5,-178,q),
(11,-191,o),
(17,-195,o),
(28,-195,qs),
(72,-195,o)
);
},
{
closed = 1;
nodes = (
(135,-161,o),
(89,-161,o),
(51,-161,o),
(44,-161,q),
(40,-154,o),
(38,-140,o),
(38,-133,qs),
(39,-76,l),
(40,-74,o),
(64,-88,o),
(80,-102,qs),
(100,-120,o),
(157,-146,o),
(178,-162,q),
(172,-162,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 92 values pushed */
127 124 52 3 2 3 151 65 2 9 2 137 20 2 1 9 3 76 3 1 0 74 10 1 0 6 0 133 8 4 2 3 0 2 9 3 2 105 0 5 5 6 97 7 1 6 6 40 77 0 9 9 1 95 11 1 1 1 42 1 78 18 17 1 0 158 154 114 110 105 103 98 97 91 86 79 78 72 70 64 59 17 143 18 139 0 16 1 16 12 8 22 
CALL[ ]	/* CallFunction */";
};
width = 373;
}
);
note = uni0249;
unicode = 585;
},
{
glyphname = k;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(160,261,o),
(199,293,q),
(219,265,o),
(267,198,o),
(312,139,o),
(326,123,qs),
(339,110,o),
(363,61,o),
(393,35,q),
(410,11,o),
(424,1,o),
(428,0,q),
(435,0,o),
(445,3,o),
(446,7,qs),
(447,16,o),
(433,28,o),
(427,35,q),
(418,39,o),
(420,48,q),
(419,56,o),
(413,64,o),
(407,68,qs),
(404,70,o),
(387,92,o),
(365,121,o),
(349,144,o),
(348,146,qs),
(344,157,o),
(321,175,o),
(319,183,q),
(226,308,l),
(226,312,o),
(226,315,q),
(257,340,o),
(306,380,o),
(314,387,qs),
(321,392,o),
(333,407,o),
(341,412,qs),
(349,417,o),
(361,433,o),
(370,437,q),
(372,439,o),
(371,440,o),
(371,450,q),
(358,463,o),
(343,460,o),
(328,443,o),
(315,433,qs),
(267,390,o),
(214,347,o),
(191,331,o),
(185,329,o),
(183,327,q),
(178,318,o),
(160,309,o),
(154,302,qs),
(142,285,o),
(126,274,qs),
(121,270,o),
(109,264,o),
(107,257,q),
(76,243,l),
(77,310,ls),
(79,361,o),
(78,499,o),
(76,566,q),
(79,609,ls),
(79,614,o),
(77,626,o),
(78,628,q),
(83,634,o),
(80,652,o),
(80,658,q),
(72,696,l),
(66,703,o),
(58,698,o),
(51,698,qs),
(46,698,o),
(45,678,o),
(45,674,qs),
(44,533,o),
(43,338,o),
(42,212,o),
(42,139,o),
(43,105,o),
(46,95,o),
(48,93,qs),
(53,89,o),
(49,85,qs),
(44,80,o),
(41,68,o),
(41,62,qs),
(40,47,o),
(40,17,o),
(40,16,qs),
(40,-2,o),
(60,2,qs),
(61,2,o),
(66,4,o),
(67,5,q),
(71,16,o),
(74,67,o),
(74,129,o),
(75,179,o),
(76,188,q),
(88,201,o)
);
},
{
closed = 1;
nodes = (
(228,122,o),
(214,132,o),
(214,143,qs),
(214,158,o),
(183,161,o),
(172,159,qs),
(165,158,o),
(154,139,o),
(154,131,qs),
(154,123,o),
(160,115,qs),
(167,106,o),
(196,90,o),
(206,100,qs),
(220,114,ls)
);
},
{
closed = 1;
nodes = (
(183,122,o),
(181,124,q),
(179,125,o),
(179,128,qs),
(179,134,o),
(184,136,qs),
(187,137,o),
(195,136,o),
(195,132,qs),
(195,128,o),
(199,126,o),
(197,124,qs),
(193,120,ls),
(190,117,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
105 73 61 43 35 16 13 7 0 73 0 0 0 39 0 78 29 27 1 8 22 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = k;
unicode = 107;
},
{
glyphname = uni1E31;
layers = (
{
layerId = m01;
shapes = (
{
ref = k;
},
{
pos = (-19,140);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
140 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = uni1E31;
unicode = 7729;
},
{
glyphname = uni01E9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(160,261,o),
(199,293,q),
(219,265,o),
(267,198,o),
(312,139,o),
(326,123,qs),
(339,110,o),
(363,61,o),
(393,35,q),
(410,11,o),
(424,1,o),
(428,0,q),
(435,0,o),
(445,3,o),
(446,7,qs),
(447,16,o),
(433,28,o),
(427,35,q),
(418,39,o),
(420,48,q),
(419,56,o),
(413,64,o),
(407,68,qs),
(404,70,o),
(387,92,o),
(365,121,o),
(349,144,o),
(348,146,qs),
(344,157,o),
(321,175,o),
(319,183,q),
(226,308,l),
(226,312,o),
(226,315,q),
(257,340,o),
(306,380,o),
(314,387,qs),
(321,392,o),
(333,407,o),
(341,412,qs),
(349,417,o),
(361,433,o),
(370,437,q),
(372,439,o),
(371,440,o),
(371,450,q),
(358,463,o),
(343,460,o),
(328,443,o),
(315,433,qs),
(267,390,o),
(214,347,o),
(191,331,o),
(185,329,o),
(183,327,q),
(178,318,o),
(160,309,o),
(154,302,qs),
(142,285,o),
(126,274,qs),
(121,270,o),
(109,264,o),
(107,257,q),
(76,243,l),
(77,310,ls),
(79,361,o),
(78,499,o),
(76,566,q),
(79,609,ls),
(79,614,o),
(77,626,o),
(78,628,q),
(83,634,o),
(80,652,o),
(80,658,q),
(72,696,l),
(66,703,o),
(58,698,o),
(51,698,qs),
(46,698,o),
(45,678,o),
(45,674,qs),
(44,533,o),
(43,338,o),
(42,212,o),
(42,139,o),
(43,105,o),
(46,95,o),
(48,93,qs),
(53,89,o),
(49,85,qs),
(44,80,o),
(41,68,o),
(41,62,qs),
(40,47,o),
(40,17,o),
(40,16,qs),
(40,-2,o),
(60,2,qs),
(61,2,o),
(66,4,o),
(67,5,q),
(71,16,o),
(74,67,o),
(74,129,o),
(75,179,o),
(76,188,q),
(88,201,o)
);
},
{
closed = 1;
nodes = (
(228,122,o),
(214,132,o),
(214,143,qs),
(214,158,o),
(183,161,o),
(172,159,qs),
(165,158,o),
(154,139,o),
(154,131,qs),
(154,123,o),
(160,115,qs),
(167,106,o),
(196,90,o),
(206,100,qs),
(220,114,ls)
);
},
{
closed = 1;
nodes = (
(183,122,o),
(181,124,q),
(179,125,o),
(179,128,qs),
(179,134,o),
(184,136,qs),
(187,137,o),
(195,136,o),
(195,132,qs),
(195,128,o),
(199,126,o),
(197,124,qs),
(193,120,ls),
(190,117,o)
);
},
{
closed = 1;
nodes = (
(102,833,o),
(99,829,qs),
(97,827,o),
(84,810,o),
(82,808,qs),
(80,805,o),
(73,794,o),
(71,793,qs),
(65,790,o),
(61,790,o),
(56,792,q),
(52,797,o),
(30,817,o),
(3,840,o),
(-20,856,o),
(-25,856,q),
(-33,858,o),
(-45,856,o),
(-41,847,q),
(-35,841,o),
(-23,828,o),
(-19,821,q),
(-14,818,o),
(-2,803,o),
(4,800,q),
(12,793,o),
(19,784,o),
(26,778,qs),
(34,771,o),
(50,757,o),
(54,746,qs),
(56,742,o),
(64,741,o),
(66,745,q),
(77,757,o),
(108,791,o),
(138,826,o),
(158,849,o),
(157,850,qs),
(155,852,o),
(149,857,o),
(147,857,q),
(142,859,o),
(135,857,q),
(121,850,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
105 73 61 43 35 16 13 7 0 73 0 0 0 39 0 78 29 27 1 8 22 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = uni01E9;
unicode = 489;
},
{
glyphname = uni0137;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(160,261,o),
(199,293,q),
(219,265,o),
(267,198,o),
(312,139,o),
(326,123,qs),
(339,110,o),
(363,61,o),
(393,35,q),
(410,11,o),
(424,1,o),
(428,0,q),
(435,0,o),
(445,3,o),
(446,7,qs),
(447,16,o),
(433,28,o),
(427,35,q),
(418,39,o),
(420,48,q),
(419,56,o),
(413,64,o),
(407,68,qs),
(404,70,o),
(387,92,o),
(365,121,o),
(349,144,o),
(348,146,qs),
(344,157,o),
(321,175,o),
(319,183,q),
(226,308,l),
(226,312,o),
(226,315,q),
(257,340,o),
(306,380,o),
(314,387,qs),
(321,392,o),
(333,407,o),
(341,412,qs),
(349,417,o),
(361,433,o),
(370,437,q),
(372,439,o),
(371,440,o),
(371,450,q),
(358,463,o),
(343,460,o),
(328,443,o),
(315,433,qs),
(267,390,o),
(214,347,o),
(191,331,o),
(185,329,o),
(183,327,q),
(178,318,o),
(160,309,o),
(154,302,qs),
(142,285,o),
(126,274,qs),
(121,270,o),
(109,264,o),
(107,257,q),
(76,243,l),
(77,310,ls),
(79,361,o),
(78,499,o),
(76,566,q),
(79,609,ls),
(79,614,o),
(77,626,o),
(78,628,q),
(83,634,o),
(80,652,o),
(80,658,q),
(72,696,l),
(66,703,o),
(58,698,o),
(51,698,qs),
(46,698,o),
(45,678,o),
(45,674,qs),
(44,533,o),
(43,338,o),
(42,212,o),
(42,139,o),
(43,105,o),
(46,95,o),
(48,93,qs),
(53,89,o),
(49,85,qs),
(44,80,o),
(41,68,o),
(41,62,qs),
(40,47,o),
(40,17,o),
(40,16,qs),
(40,-2,o),
(60,2,qs),
(61,2,o),
(66,4,o),
(67,5,q),
(71,16,o),
(74,67,o),
(74,129,o),
(75,179,o),
(76,188,q),
(88,201,o)
);
},
{
closed = 1;
nodes = (
(228,122,o),
(214,132,o),
(214,143,qs),
(214,158,o),
(183,161,o),
(172,159,qs),
(165,158,o),
(154,139,o),
(154,131,qs),
(154,123,o),
(160,115,qs),
(167,106,o),
(196,90,o),
(206,100,qs),
(220,114,ls)
);
},
{
closed = 1;
nodes = (
(183,122,o),
(181,124,q),
(179,125,o),
(179,128,qs),
(179,134,o),
(184,136,qs),
(187,137,o),
(195,136,o),
(195,132,qs),
(195,128,o),
(199,126,o),
(197,124,qs),
(193,120,ls),
(190,117,o)
);
},
{
closed = 1;
nodes = (
(153,-201,o),
(155,-198,q),
(159,-198,o),
(176,-174,o),
(178,-172,q),
(187,-158,o),
(190,-143,o),
(197,-129,qs),
(203,-113,o),
(216,-102,qs),
(229,-91,o),
(233,-65,o),
(234,-48,qs),
(235,-37,o),
(228,-27,o),
(222,-31,q),
(217,-36,o),
(197,-51,o),
(195,-58,qs),
(192,-69,o),
(181,-91,o),
(175,-103,qs),
(167,-124,o),
(147,-159,o),
(133,-194,q),
(136,-199,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
149 105 73 61 43 35 16 13 8 0 73 0 0 0 39 0 78 29 27 1 8 22 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = uni0137;
unicode = 311;
},
{
glyphname = uni1E33;
layers = (
{
layerId = m01;
shapes = (
{
ref = k;
},
{
pos = (136,-114);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = uni1E33;
unicode = 7731;
},
{
glyphname = kgreenlandic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(348,430,o),
(340,438,qs),
(337,441,o),
(331,446,o),
(329,448,qs),
(326,451,o),
(299,439,o),
(294,434,qs),
(278,418,o),
(255,389,o),
(224,361,o),
(197,346,q),
(193,343,o),
(165,320,o),
(160,317,qs),
(90,275,l),
(85,273,o),
(82,279,q),
(78,294,o),
(80,327,o),
(82,356,o),
(75,363,q),
(74,371,o),
(73,384,o),
(80,391,qs),
(85,396,o),
(80,401,qs),
(76,406,o),
(83,421,o),
(83,425,qs),
(83,433,o),
(75,447,o),
(70,454,qs),
(67,459,o),
(51,447,o),
(49,442,qs),
(48,439,o),
(48,427,o),
(48,394,o),
(48,324,o),
(48,264,qs),
(48,260,o),
(46,236,o),
(41,231,q),
(40,231,o),
(43,224,o),
(44,223,qs),
(51,213,o),
(44,206,qs),
(37,198,o),
(43,192,qs),
(48,188,o),
(48,179,qs),
(45,133,o),
(41,89,o),
(40,74,o),
(40,69,qs),
(40,59,o),
(50,17,o),
(52,6,q),
(54,1,o),
(65,-1,o),
(68,4,qs),
(72,11,o),
(83,24,o),
(83,31,qs),
(83,38,o),
(75,46,q),
(70,66,o),
(76,86,o),
(82,99,o),
(76,109,qs),
(69,120,o),
(79,130,qs),
(86,137,o),
(79,143,qs),
(72,150,o),
(76,156,q),
(83,163,o),
(77,168,q),
(75,172,o),
(83,180,o),
(77,184,qs),
(75,186,o),
(74,192,o),
(74,194,qs),
(74,206,o),
(83,199,qs),
(112,174,o),
(137,156,o),
(148,150,o),
(153,142,qs),
(161,131,o),
(192,119,o),
(199,111,q),
(212,103,o),
(275,43,o),
(314,8,qs),
(323,1,o),
(345,-2,o),
(345,9,qs),
(345,22,o),
(328,45,o),
(309,61,o),
(306,61,qs),
(302,61,o),
(278,79,o),
(249,104,o),
(225,128,o),
(221,133,q),
(219,137,o),
(185,154,o),
(136,187,o),
(110,213,qs),
(106,218,o),
(97,225,o),
(93,229,q),
(92,231,o),
(85,236,o),
(86,238,qs),
(92,246,o),
(116,255,o),
(128,259,qs),
(135,261,o),
(153,277,o),
(160,281,qs),
(176,291,o),
(199,306,o),
(226,327,o),
(265,361,o),
(297,389,q),
(328,412,o)
);
},
{
closed = 1;
nodes = (
(261,215,o),
(261,222,qs),
(261,234,o),
(240,251,o),
(221,251,q),
(211,253,o),
(198,245,o),
(192,237,qs),
(184,226,o),
(192,214,q),
(200,207,o),
(219,190,o),
(229,190,qs),
(247,190,o)
);
},
{
closed = 1;
nodes = (
(216,219,qs),
(215,221,o),
(216,225,q),
(220,229,o),
(223,228,q),
(233,228,o),
(233,221,qs),
(233,220,o),
(231,212,o),
(226,212,qs),
(220,212,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
153 151 143 11 4 2 1 45 1 0 2 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 1 2 2 1 112 4 1 2 0 0 2 89 4 1 2 2 0 98 3 1 0 2 0 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 1 2 1 133 4 1 2 0 0 2 89 4 1 2 2 0 98 3 1 0 2 0 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
147 146 133 132 146 156 147 156 141 140 132 145 133 145 5 8 22 
CALL[ ]	/* CallFunction */";
};
width = 345;
}
);
note = kgreenlandic;
unicode = 312;
},
{
glyphname = uni0199;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(160,261,o),
(199,293,q),
(219,265,o),
(267,198,o),
(312,139,o),
(326,123,qs),
(339,110,o),
(363,61,o),
(393,35,q),
(410,11,o),
(424,1,o),
(428,0,q),
(435,0,o),
(445,3,o),
(446,7,qs),
(447,16,o),
(433,28,o),
(427,35,q),
(418,39,o),
(420,48,q),
(419,56,o),
(413,64,o),
(407,68,qs),
(404,70,o),
(387,92,o),
(365,121,o),
(349,144,o),
(348,146,qs),
(344,157,o),
(321,175,o),
(319,183,q),
(226,308,l),
(226,312,o),
(226,315,q),
(257,340,o),
(306,380,o),
(314,387,qs),
(321,392,o),
(333,407,o),
(341,412,qs),
(349,417,o),
(361,433,o),
(370,437,q),
(372,439,o),
(371,440,o),
(371,450,q),
(358,463,o),
(343,460,o),
(328,443,o),
(315,433,qs),
(267,390,o),
(214,347,o),
(191,331,o),
(185,329,o),
(183,327,q),
(178,318,o),
(160,309,o),
(154,302,qs),
(142,285,o),
(126,274,qs),
(121,270,o),
(109,264,o),
(107,257,q),
(76,243,l),
(77,310,ls),
(79,361,o),
(78,499,o),
(76,566,q),
(79,609,ls),
(79,614,o),
(77,626,o),
(78,628,q),
(83,634,o),
(80,652,o),
(80,658,q),
(77,673,l),
(81,672,o),
(86,672,qs),
(91,672,o),
(114,673,o),
(119,671,q),
(126,670,o),
(131,672,o),
(145,674,o),
(164,671,qs),
(169,670,o),
(179,676,o),
(185,673,q),
(198,681,o),
(196,692,o),
(185,697,q),
(173,705,o),
(154,708,o),
(140,703,qs),
(136,702,o),
(106,702,o),
(101,702,qs),
(78,703,o),
(73,703,o),
(69,703,qs),
(54,702,o),
(48,696,q),
(49,698,o),
(48,697,o),
(47,695,q),
(45,693,o),
(46,690,q),
(45,686,o),
(45,676,o),
(45,674,qs),
(44,533,o),
(43,338,o),
(42,212,o),
(42,139,o),
(43,105,o),
(46,95,o),
(48,93,qs),
(53,89,o),
(49,85,qs),
(44,80,o),
(41,68,o),
(41,62,qs),
(40,47,o),
(40,17,o),
(40,16,qs),
(40,-2,o),
(60,2,qs),
(61,2,o),
(66,4,o),
(67,5,q),
(71,16,o),
(74,67,o),
(74,129,o),
(75,179,o),
(76,188,q),
(88,201,o)
);
},
{
closed = 1;
nodes = (
(228,122,o),
(214,132,o),
(214,143,qs),
(214,158,o),
(183,161,o),
(172,159,qs),
(165,158,o),
(154,139,o),
(154,131,qs),
(154,123,o),
(160,115,qs),
(167,106,o),
(196,90,o),
(206,100,qs),
(220,114,ls)
);
},
{
closed = 1;
nodes = (
(183,122,o),
(181,124,q),
(179,125,o),
(179,128,qs),
(179,134,o),
(184,136,qs),
(187,137,o),
(195,136,o),
(195,132,qs),
(195,128,o),
(199,126,o),
(197,124,qs),
(193,120,ls),
(190,117,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
47 1 1 0 1 76 133 101 89 71 63 60 16 13 8 1 73 0 1 1 0 97 0 0 0 37 1 78 58 54 40 34 2 8 22 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = uni0199;
unicode = 409;
},
{
glyphname = kmacronbelow;
layers = (
{
layerId = m01;
shapes = (
{
ref = k;
},
{
pos = (26,-329);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-329 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = kmacronbelow;
unicode = 7733;
},
{
glyphname = uniA741;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(199,261,o),
(238,293,q),
(258,265,o),
(306,198,o),
(351,139,o),
(365,123,qs),
(378,110,o),
(402,61,o),
(432,35,q),
(449,11,o),
(463,1,o),
(467,0,q),
(474,0,o),
(484,3,o),
(485,7,qs),
(486,16,o),
(472,28,o),
(466,35,q),
(457,39,o),
(459,48,q),
(458,56,o),
(452,64,o),
(446,68,qs),
(443,70,o),
(426,92,o),
(404,121,o),
(388,144,o),
(387,146,qs),
(383,157,o),
(360,175,o),
(358,183,q),
(265,308,l),
(265,312,o),
(265,315,q),
(296,340,o),
(345,380,o),
(353,387,qs),
(360,392,o),
(372,407,o),
(380,412,qs),
(388,417,o),
(400,433,o),
(409,437,q),
(411,439,o),
(410,440,o),
(410,450,q),
(397,463,o),
(382,460,o),
(367,443,o),
(354,433,qs),
(306,390,o),
(253,347,o),
(230,331,o),
(224,329,o),
(222,327,q),
(217,318,o),
(199,309,o),
(193,302,qs),
(181,285,o),
(165,274,qs),
(160,270,o),
(148,264,o),
(146,257,q),
(115,243,l),
(116,310,ls),
(118,358,o),
(117,488,o),
(115,553,q),
(121,553,o),
(140,556,o),
(172,553,qs),
(180,552,o),
(195,558,o),
(205,555,q),
(225,563,o),
(220,570,o),
(204,575,qs),
(185,583,o),
(155,586,o),
(134,581,qs),
(131,580,o),
(116,580,q),
(118,609,ls),
(118,614,o),
(116,626,o),
(117,628,q),
(122,634,o),
(119,652,o),
(119,658,q),
(111,696,l),
(105,703,o),
(97,698,o),
(90,698,qs),
(85,698,o),
(84,678,o),
(84,674,qs),
(84,649,o),
(83,603,o),
(83,581,q),
(78,581,o),
(75,581,qs),
(52,582,o),
(34,582,o),
(30,582,o),
(26,582,qs),
(-17,581,o),
(-1,556,o),
(52,554,qs),
(57,554,o),
(74,554,o),
(83,554,q),
(82,421,o),
(81,250,o),
(81,153,o),
(82,108,o),
(85,95,o),
(87,93,qs),
(91,88,o),
(88,85,qs),
(83,80,o),
(80,68,o),
(80,62,qs),
(79,47,o),
(79,17,o),
(79,16,qs),
(79,-2,o),
(99,2,qs),
(100,2,o),
(105,4,o),
(106,5,q),
(110,16,o),
(113,67,o),
(113,129,o),
(114,179,o),
(115,188,q),
(127,201,o)
);
},
{
closed = 1;
nodes = (
(267,122,o),
(253,132,o),
(253,143,qs),
(253,158,o),
(222,161,o),
(211,159,qs),
(204,158,o),
(193,139,o),
(193,131,qs),
(193,123,o),
(199,115,qs),
(206,106,o),
(235,90,o),
(245,100,qs),
(259,114,ls)
);
},
{
closed = 1;
nodes = (
(222,122,o),
(220,124,q),
(218,125,o),
(218,128,qs),
(218,134,o),
(223,136,qs),
(226,137,o),
(234,136,o),
(234,132,qs),
(234,128,o),
(238,126,o),
(236,124,qs),
(232,120,ls),
(229,117,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
49 1 1 2 1 76 133 101 89 71 61 16 13 7 0 73 3 1 1 0 0 1 0 101 0 2 2 39 2 78 54 53 43 41 34 29 28 24 4 8 22 
CALL[ ]	/* CallFunction */";
};
width = 485;
}
);
note = uniA741;
unicode = 42817;
},
{
glyphname = l;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(105,19,o),
(155,51,o),
(207,89,o),
(228,106,qs),
(238,114,o),
(261,119,o),
(261,136,qs),
(261,145,o),
(271,149,o),
(266,156,qs),
(261,165,o),
(230,152,o),
(201,129,q),
(88,52,l),
(81,54,o),
(81,61,qs),
(81,643,ls),
(81,649,o),
(87,668,o),
(87,691,o),
(77,701,q),
(59,704,o),
(47,683,o),
(47,665,qs),
(47,524,o),
(47,345,o),
(47,243,o),
(48,197,o),
(48,185,o),
(48,183,qs),
(48,178,o),
(45,167,o),
(40,162,q),
(45,155,o),
(48,139,o),
(48,131,qs),
(48,125,o),
(48,94,o),
(47,57,o),
(47,25,o),
(47,19,qs),
(48,12,o),
(59,1,o),
(66,0,qs),
(70,0,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
22 0 1 50 
CALL[ ]	/* CallFunction */";
};
width = 268;
}
);
note = l;
unicode = 108;
},
{
glyphname = lacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = l;
},
{
pos = (51,143);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
143 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 268;
}
);
note = lacute;
unicode = 314;
},
{
glyphname = uni019B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(63,53,o),
(68,80,q),
(80,89,o),
(91,116,o),
(95,129,q),
(108,139,o),
(120,164,o),
(122,177,q),
(148,221,o),
(198,309,o),
(224,352,qs),
(229,361,o),
(246,374,o),
(247,384,qs),
(249,397,o),
(253,412,q),
(258,402,o),
(275,385,o),
(272,367,qs),
(269,356,o),
(281,337,o),
(282,326,q),
(312,255,l),
(309,239,o),
(332,192,o),
(341,178,q),
(340,162,o),
(354,131,o),
(363,118,q),
(359,90,o),
(380,46,o),
(384,20,q),
(381,16,o),
(381,8,q),
(392,7,l),
(393,6,o),
(395,6,qs),
(413,4,l),
(422,6,o),
(439,7,o),
(448,5,q),
(450,4,o),
(454,1,o),
(457,5,qs),
(459,8,o),
(466,8,q),
(473,10,o),
(485,8,o),
(492,6,q),
(495,6,o),
(511,7,o),
(526,13,o),
(525,21,qs),
(525,26,o),
(515,38,o),
(510,37,q),
(504,38,o),
(465,38,o),
(425,38,o),
(419,37,qs),
(417,37,o),
(406,66,o),
(405,82,qs),
(403,98,o),
(386,142,o),
(368,186,o),
(363,201,qs),
(361,211,o),
(343,239,o),
(344,246,qs),
(345,260,o),
(334,277,o),
(329,289,q),
(332,301,o),
(316,338,o),
(299,376,o),
(298,390,qs),
(297,406,o),
(279,443,o),
(275,459,qs),
(272,477,o),
(265,502,o),
(261,512,q),
(263,513,o),
(264,513,q),
(269,515,o),
(279,518,o),
(284,516,qs),
(286,515,o),
(291,522,o),
(292,524,q),
(294,532,o),
(321,550,o),
(328,550,qs),
(337,551,o),
(349,556,o),
(353,564,q),
(366,563,o),
(376,570,qs),
(387,580,o),
(408,604,o),
(419,624,o),
(410,631,o),
(390,623,q),
(387,621,o),
(365,605,o),
(343,589,o),
(339,587,qs),
(307,571,o),
(262,549,o),
(247,541,q),
(243,548,o),
(235,564,o),
(232,576,qs),
(231,581,o),
(217,607,o),
(204,635,o),
(203,639,qs),
(201,659,o),
(186,688,o),
(185,689,q),
(173,693,o),
(158,684,o),
(145,689,qs),
(138,691,o),
(117,693,o),
(110,693,qs),
(98,692,o),
(88,695,o),
(75,691,qs),
(72,690,o),
(50,683,o),
(48,680,q),
(46,679,o),
(40,659,o),
(41,654,q),
(71,655,o),
(103,661,o),
(119,659,q),
(148,662,o),
(161,654,o),
(168,653,q),
(168,644,o),
(171,635,qs),
(181,598,o),
(205,551,o),
(216,526,q),
(203,521,o),
(198,522,qs),
(194,522,o),
(182,516,o),
(181,512,q),
(178,508,o),
(149,486,o),
(111,461,o),
(80,442,o),
(76,439,qs),
(64,430,o),
(71,419,o),
(86,413,o),
(86,413,q),
(109,419,l),
(110,427,o),
(121,432,o),
(126,436,q),
(149,450,o),
(208,482,o),
(231,495,q),
(237,479,o),
(242,461,q),
(235,454,o),
(228,431,o),
(224,422,qs),
(217,403,o),
(196,374,o),
(193,355,q),
(186,343,o),
(170,329,o),
(164,315,qs),
(160,306,o),
(139,272,o),
(120,237,o),
(119,226,q),
(111,217,o),
(102,198,o),
(98,186,q),
(97,180,o),
(86,161,o),
(81,153,qs),
(72,142,o),
(47,106,o),
(24,71,o),
(17,58,q),
(7,33,o),
(0,10,o),
(0,3,qs),
(0,-8,o),
(9,-7,o),
(16,-5,q),
(27,19,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
183 173 170 136 126 122 116 88 57 52 38 31 12 1 0 167 165 2 2 1 2 76 60 1 0 74 161 3 2 2 73 0 0 1 0 133 0 1 1 2 97 4 3 2 2 2 38 2 78 160 159 158 155 149 148 144 140 63 62 5 8 22 
CALL[ ]	/* CallFunction */";
};
width = 525;
}
);
note = uni019B;
unicode = 411;
},
{
glyphname = uni019A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(131,413,o),
(139,416,qs),
(141,417,o),
(141,430,o),
(139,430,q),
(136,431,o),
(134,437,o),
(132,438,qs),
(130,439,o),
(126,440,o),
(123,440,qs),
(118,440,o),
(107,439,o),
(102,439,qs),
(82,439,ls),
(73,438,o),
(70,437,o),
(67,438,o),
(58,439,q),
(12,439,l),
(12,432,o),
(18,420,o),
(29,415,q),
(30,414,o),
(40,413,o),
(42,413,qs),
(58,412,o),
(73,412,o),
(78,413,qs),
(84,415,o),
(93,412,o),
(98,409,qs),
(105,406,o),
(110,406,qs),
(118,406,o)
);
},
{
closed = 1;
nodes = (
(106,19,o),
(156,51,o),
(208,89,o),
(229,106,qs),
(239,114,o),
(262,119,o),
(262,136,qs),
(262,145,o),
(272,149,o),
(267,156,qs),
(262,165,o),
(231,152,o),
(202,129,q),
(89,52,l),
(82,54,o),
(82,61,qs),
(82,643,ls),
(82,649,o),
(88,668,o),
(88,691,o),
(78,701,q),
(60,704,o),
(48,683,o),
(48,665,qs),
(48,524,o),
(48,345,o),
(48,243,o),
(49,197,o),
(49,185,o),
(49,183,qs),
(49,178,o),
(46,167,o),
(41,162,q),
(46,155,o),
(49,139,o),
(49,131,qs),
(49,125,o),
(49,94,o),
(48,57,o),
(48,25,o),
(48,19,qs),
(49,12,o),
(60,1,o),
(67,0,qs),
(71,0,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
65 63 46 3 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 1 2 0 0 1 114 3 1 0 0 2 98 0 2 2 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 1 2 0 0 1 114 0 2 1 0 2 90 0 2 2 0 97 3 1 0 2 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
1 0 22 16 8 6 0 34 1 34 4 8 22 
CALL[ ]	/* CallFunction */";
};
width = 269;
}
);
note = uni019A;
unicode = 410;
},
{
glyphname = uni026C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(170,19,o),
(220,51,o),
(272,89,o),
(293,106,qs),
(303,114,o),
(326,119,o),
(326,136,qs),
(326,145,o),
(336,149,o),
(331,156,qs),
(326,165,o),
(295,152,o),
(266,129,q),
(153,52,l),
(146,54,o),
(146,61,qs),
(146,330,l),
(159,329,o),
(178,325,o),
(187,326,q),
(193,328,o),
(206,331,o),
(213,333,qs),
(217,334,o),
(235,335,o),
(239,335,qs),
(245,335,o),
(257,334,o),
(263,334,qs),
(284,336,o),
(292,349,o),
(274,360,o),
(255,358,qs),
(248,358,o),
(229,361,o),
(214,364,q),
(210,364,o),
(200,362,o),
(195,358,qs),
(194,357,o),
(190,358,o),
(188,358,q),
(180,361,o),
(164,358,o),
(157,356,q),
(155,358,ls),
(153,360,o),
(146,364,q),
(146,643,ls),
(146,649,o),
(152,668,o),
(152,691,o),
(142,701,q),
(124,704,o),
(112,683,o),
(112,665,qs),
(112,581,o),
(112,450,o),
(112,401,q),
(96,418,o),
(66,457,o),
(49,474,qs),
(42,481,ls),
(39,484,o),
(34,490,o),
(33,494,q),
(30,497,o),
(24,508,o),
(16,508,q),
(12,501,o),
(9,470,o),
(7,462,q),
(8,455,o),
(8,422,o),
(8,418,qs),
(8,411,o),
(7,398,o),
(7,391,qs),
(7,375,ls),
(7,367,o),
(6,351,o),
(1,343,qs),
(-1,339,o),
(4,331,o),
(8,331,qs),
(28,330,o),
(87,330,o),
(112,330,q),
(112,278,o),
(113,219,o),
(113,192,o),
(113,184,o),
(113,183,qs),
(113,178,o),
(110,167,o),
(105,162,q),
(110,155,o),
(113,139,o),
(113,131,qs),
(113,125,o),
(113,94,o),
(112,57,o),
(112,25,o),
(112,19,qs),
(113,12,o),
(124,1,o),
(131,0,qs),
(135,0,o)
);
},
{
closed = 1;
nodes = (
(47,356,o),
(45,357,qs),
(38,359,o),
(36,362,o),
(36,369,qs),
(36,436,ls),
(36,445,o),
(52,432,o),
(77,403,o),
(103,371,o),
(112,362,q),
(112,358,l),
(111,357,o),
(109,357,qs),
(93,356,o),
(82,356,o),
(80,354,q),
(65,347,o),
(53,354,q),
(52,356,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
122 65 59 48 38 5 2 74 93 91 90 11 4 0 73 0 2 0 0 2 89 0 2 2 0 97 1 1 0 2 0 81 113 112 83 78 22 19 3 8 22 
CALL[ ]	/* CallFunction */";
};
width = 333;
}
);
note = uni026C;
unicode = 620;
},
{
glyphname = lcaron;
layers = (
{
layerId = m01;
shapes = (
{
ref = l;
},
{
pos = (115,0);
ref = uni030C.alt;
}
);
width = 268;
}
);
note = lcaron;
unicode = 318;
},
{
glyphname = uni1E3D;
layers = (
{
layerId = m01;
shapes = (
{
ref = l;
},
{
pos = (12,-782);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-782 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 268;
}
);
note = uni1E3D;
unicode = 7741;
},
{
glyphname = uni013C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(105,19,o),
(155,51,o),
(207,89,o),
(228,106,qs),
(238,114,o),
(261,119,o),
(261,136,qs),
(261,145,o),
(271,149,o),
(266,156,qs),
(261,165,o),
(230,152,o),
(201,129,q),
(88,52,l),
(81,54,o),
(81,61,qs),
(81,643,ls),
(81,649,o),
(87,668,o),
(87,691,o),
(77,701,q),
(59,704,o),
(47,683,o),
(47,665,qs),
(47,524,o),
(47,345,o),
(47,243,o),
(48,197,o),
(48,185,o),
(48,183,qs),
(48,178,o),
(45,167,o),
(40,162,q),
(45,155,o),
(48,139,o),
(48,131,qs),
(48,125,o),
(48,94,o),
(47,57,o),
(47,25,o),
(47,19,qs),
(48,12,o),
(59,1,o),
(66,0,qs),
(70,0,o)
);
},
{
closed = 1;
nodes = (
(91,-201,o),
(93,-198,q),
(97,-198,o),
(114,-174,o),
(116,-172,q),
(125,-158,o),
(128,-143,o),
(135,-129,qs),
(141,-113,o),
(154,-102,qs),
(167,-91,o),
(171,-65,o),
(172,-48,qs),
(173,-37,o),
(166,-27,o),
(160,-31,q),
(155,-36,o),
(135,-51,o),
(133,-58,qs),
(130,-69,o),
(119,-91,o),
(113,-103,qs),
(105,-124,o),
(85,-159,o),
(71,-194,q),
(74,-199,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
69 55 22 0 2 50 
CALL[ ]	/* CallFunction */";
};
width = 268;
}
);
note = uni013C;
unicode = 316;
},
{
glyphname = uni1E37;
layers = (
{
layerId = m01;
shapes = (
{
ref = l;
},
{
pos = (74,-114);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 268;
}
);
note = uni1E37;
unicode = 7735;
},
{
glyphname = uni1E39;
layers = (
{
layerId = m01;
shapes = (
{
ref = l;
},
{
pos = (74,-114);
ref = period;
},
{
pos = (-44,550);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHW[ ]	/* 1 value pushed */
550 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 268;
}
);
note = uni1E39;
unicode = 7737;
},
{
glyphname = uni2C61;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(167,19,o),
(217,51,o),
(269,89,o),
(290,106,qs),
(300,114,o),
(323,119,o),
(323,136,qs),
(323,145,o),
(333,149,o),
(328,156,qs),
(323,165,o),
(292,152,o),
(263,129,q),
(150,52,l),
(143,54,o),
(143,61,qs),
(143,319,l),
(145,319,ls),
(152,320,o),
(179,319,o),
(205,318,o),
(208,318,qs),
(222,318,o),
(250,325,o),
(264,328,qs),
(269,329,o),
(269,341,o),
(264,342,qs),
(260,342,o),
(257,348,o),
(253,349,qs),
(249,350,o),
(239,351,o),
(234,351,qs),
(224,351,o),
(202,350,o),
(192,350,qs),
(182,350,o),
(162,349,o),
(151,349,qs),
(147,349,o),
(143,349,q),
(143,424,l),
(150,424,o),
(153,422,qs),
(161,418,o),
(175,417,o),
(182,422,q),
(192,415,o),
(205,416,q),
(219,419,o),
(249,430,o),
(268,442,o),
(263,453,o),
(242,456,qs),
(238,456,o),
(211,452,o),
(184,449,o),
(180,449,qs),
(171,449,o),
(152,449,o),
(143,449,q),
(143,643,ls),
(143,649,o),
(149,668,o),
(149,691,o),
(139,701,q),
(121,704,o),
(109,683,o),
(109,665,qs),
(109,600,o),
(109,493,o),
(109,449,q),
(103,450,o),
(101,452,q),
(97,454,o),
(84,454,o),
(82,451,q),
(76,448,o),
(49,446,o),
(22,447,o),
(15,446,qs),
(0,444,o),
(0,430,o),
(11,418,o),
(11,418,q),
(34,412,l),
(39,419,o),
(50,418,o),
(57,419,qs),
(73,420,o),
(80,420,qs),
(85,420,o),
(94,418,o),
(98,413,qs),
(99,412,o),
(108,415,o),
(109,416,q),
(109,416,l),
(109,378,o),
(109,346,q),
(99,345,o),
(79,345,o),
(65,346,qs),
(57,347,o),
(21,346,o),
(6,346,q),
(6,339,o),
(17,321,o),
(28,316,qs),
(30,315,o),
(60,314,o),
(64,314,qs),
(82,313,o),
(101,313,o),
(109,314,q),
(109,253,o),
(110,199,o),
(110,185,o),
(110,183,qs),
(110,178,o),
(107,167,o),
(102,162,q),
(107,155,o),
(110,139,o),
(110,131,qs),
(110,125,o),
(110,94,o),
(109,57,o),
(109,25,o),
(109,19,qs),
(110,12,o),
(121,1,o),
(128,0,qs),
(132,0,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
91 86 2 3 4 47 35 2 1 3 2 76 33 1 1 117 1 7 2 75 120 118 18 11 4 0 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
91 86 2 3 4 47 35 2 1 3 117 1 0 1 3 76 33 1 1 1 75 120 118 18 11 4 0 73 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
91 86 2 3 4 47 35 2 1 3 2 76 33 1 1 117 1 7 2 75 120 118 18 11 4 0 73 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 7 0 1 7 90 6 2 2 1 0 0 1 0 102 0 3 3 4 97 5 1 4 4 40 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
6 2 2 1 7 1 0 1 0 102 0 3 3 4 97 5 1 4 4 40 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 7 0 1 7 90 6 2 2 1 0 0 1 0 102 0 3 3 4 97 5 1 4 4 40 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
115 111 102 92 75 72 54 52 46 41 32 31 29 28 23 19 8 8 22 
CALL[ ]	/* CallFunction */";
};
width = 330;
}
);
note = uni2C61;
unicode = 11361;
},
{
glyphname = lmacronbelow;
layers = (
{
layerId = m01;
shapes = (
{
ref = l;
},
{
pos = (-36,-329);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-329 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 268;
}
);
note = lmacronbelow;
unicode = 7739;
},
{
glyphname = uni026B;
layers = (
{
layerId = m01;
shapes = (
{
pos = (87,0);
ref = l;
},
{
pos = (24,-327);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-327 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 355;
}
);
note = uni026B;
unicode = 619;
},
{
glyphname = lslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(108,19,o),
(158,51,o),
(210,89,o),
(231,106,qs),
(241,114,o),
(264,119,o),
(264,136,qs),
(264,145,o),
(274,149,o),
(269,156,qs),
(264,165,o),
(233,152,o),
(204,129,q),
(91,52,l),
(84,54,o),
(84,61,qs),
(84,371,l),
(112,383,o),
(136,393,o),
(145,394,qs),
(151,395,o),
(164,399,o),
(169,401,qs),
(183,408,o),
(208,427,o),
(220,437,qs),
(224,441,o),
(217,456,o),
(212,454,qs),
(208,453,o),
(202,459,o),
(198,458,qs),
(188,455,o),
(177,451,qs),
(167,447,o),
(146,436,o),
(136,431,qs),
(125,425,o),
(100,411,o),
(84,403,q),
(84,643,ls),
(84,649,o),
(90,668,o),
(90,691,o),
(80,701,q),
(62,704,o),
(50,683,o),
(50,665,qs),
(50,574,o),
(50,437,o),
(50,387,q),
(28,377,o),
(0,366,q),
(4,358,o),
(21,349,o),
(46,354,q),
(50,356,l),
(50,294,o),
(51,225,o),
(51,194,o),
(51,185,o),
(51,183,qs),
(51,178,o),
(48,167,o),
(43,162,q),
(48,155,o),
(51,139,o),
(51,131,qs),
(51,125,o),
(51,94,o),
(50,57,o),
(50,25,o),
(50,19,qs),
(51,12,o),
(62,1,o),
(69,0,qs),
(73,0,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
30 0 1 50 
CALL[ ]	/* CallFunction */";
};
width = 271;
}
);
note = lslash;
unicode = 322;
},
{
glyphname = m;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(408,226,o),
(408,285,qs),
(408,292,o),
(406,307,o),
(408,312,qs),
(418,330,o),
(420,349,o),
(412,367,q),
(426,382,o),
(410,400,qs),
(403,409,o),
(415,416,qs),
(428,425,o),
(436,421,o),
(447,416,qs),
(455,413,o),
(479,422,o),
(513,422,qs),
(525,422,o),
(533,414,o),
(541,410,o),
(550,416,q),
(565,423,o),
(594,418,o),
(610,422,qs),
(619,424,o),
(636,422,o),
(644,422,qs),
(691,422,l),
(703,403,o),
(698,357,o),
(695,311,o),
(707,292,q),
(707,261,o),
(695,249,q),
(695,169,ls),
(695,158,o),
(703,141,o),
(708,124,o),
(702,112,qs),
(701,110,o),
(698,98,o),
(695,61,o),
(695,20,qs),
(695,8,o),
(714,0,o),
(733,9,o),
(733,21,qs),
(733,430,ls),
(733,445,o),
(689,453,o),
(666,453,qs),
(663,453,o),
(595,452,o),
(487,452,o),
(357,450,o),
(226,450,o),
(111,449,o),
(72,449,qs),
(66,449,o),
(51,436,o),
(51,431,qs),
(50,425,o),
(51,414,o),
(51,408,qs),
(51,388,o),
(50,314,o),
(49,226,o),
(47,142,o),
(44,81,o),
(42,72,qs),
(38,54,o),
(43,40,o),
(43,32,qs),
(43,15,o),
(56,0,o),
(64,0,qs),
(71,0,o),
(102,36,o),
(121,59,qs),
(139,80,o),
(173,121,o),
(174,129,qs),
(175,138,o),
(199,169,o),
(231,204,o),
(258,235,o),
(262,244,qs),
(272,266,o),
(314,326,o),
(360,383,o),
(376,403,q),
(376,396,o),
(376,393,qs),
(376,314,o),
(377,216,o),
(377,163,o),
(374,135,o),
(371,124,q),
(371,111,o),
(382,92,o),
(371,78,qs),
(370,77,o),
(374,68,o),
(376,66,qs),
(383,60,o),
(378,44,o),
(368,31,o),
(366,30,q),
(372,0,o),
(381,0,qs),
(392,0,o),
(407,14,o),
(407,33,qs),
(407,92,o)
);
},
{
closed = 1;
nodes = (
(81,305,o),
(83,310,qs),
(93,328,o),
(95,347,o),
(87,365,q),
(101,380,o),
(84,398,q),
(80,405,o),
(100,422,o),
(107,422,qs),
(121,422,ls),
(134,422,o),
(151,412,qs),
(159,407,o),
(175,422,o),
(183,422,qs),
(193,422,o),
(206,412,o),
(213,412,qs),
(224,412,o),
(233,419,o),
(241,423,o),
(248,417,qs),
(256,412,o),
(268,422,o),
(275,422,qs),
(328,422,ls),
(334,422,o),
(345,422,o),
(349,422,q),
(333,399,o),
(278,320,o),
(212,228,o),
(147,139,o),
(94,69,o),
(79,54,q),
(79,106,o),
(83,231,o),
(83,283,qs),
(83,290,o)
);
},
{
closed = 1;
nodes = (
(579,192,o),
(586,199,q),
(594,211,o),
(586,222,qs),
(580,230,o),
(567,238,o),
(557,236,q),
(538,236,o),
(517,219,o),
(517,207,qs),
(517,200,o),
(531,175,o),
(549,175,qs),
(560,175,o)
);
},
{
closed = 1;
nodes = (
(545,206,o),
(545,207,qs),
(545,214,o),
(555,214,q),
(558,215,o),
(562,211,q),
(564,207,o),
(562,205,q),
(559,198,o),
(552,198,qs),
(548,198,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
152 149 109 106 81 79 22 7 10 6 171 1 11 10 118 40 15 5 4 0 9 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 6 3 10 3 6 114 0 10 11 11 10 112 13 1 11 12 1 9 0 11 9 106 8 7 5 4 4 3 3 2 95 0 2 2 40 77 1 1 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 6 3 10 3 6 114 0 10 11 3 10 11 126 13 1 11 12 1 9 0 11 9 106 8 7 5 4 4 3 3 2 95 0 2 2 40 77 1 1 0 0 38 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
170 169 156 155 169 179 170 179 161 160 155 168 156 168 144 142 138 137 135 134 128 124 97 95 86 85 63 54 38 36 34 14 8 23 
CALL[ ]	/* CallFunction */";
};
width = 773;
}
);
note = m;
unicode = 109;
},
{
glyphname = uni1E3F;
layers = (
{
layerId = m01;
shapes = (
{
ref = m;
},
{
pos = (303,-107);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-107 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 773;
}
);
note = uni1E3F;
unicode = 7743;
},
{
glyphname = uni1E41;
layers = (
{
layerId = m01;
shapes = (
{
ref = m;
},
{
pos = (307,-134);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-134 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 773;
}
);
note = uni1E41;
unicode = 7745;
},
{
glyphname = uni1E43;
layers = (
{
layerId = m01;
shapes = (
{
ref = m;
},
{
pos = (303,-96);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-96 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 773;
}
);
note = uni1E43;
unicode = 7747;
},
{
glyphname = uni026F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(392,450,o),
(381,450,qs),
(372,450,o),
(366,420,q),
(368,419,o),
(378,406,o),
(383,390,o),
(376,384,qs),
(374,382,o),
(370,373,o),
(371,372,qs),
(382,359,o),
(371,340,o),
(371,326,q),
(374,316,o),
(377,287,o),
(377,234,o),
(376,137,o),
(376,57,qs),
(376,54,o),
(376,47,q),
(360,67,o),
(314,124,o),
(272,184,o),
(262,206,qs),
(258,215,o),
(231,246,o),
(199,281,o),
(175,312,o),
(174,321,qs),
(173,329,o),
(139,370,o),
(121,391,qs),
(102,414,o),
(71,450,o),
(64,450,qs),
(56,450,o),
(43,435,o),
(43,418,qs),
(43,411,o),
(38,396,o),
(42,378,qs),
(44,369,o),
(47,308,o),
(49,224,o),
(50,136,o),
(51,62,o),
(51,42,qs),
(51,36,o),
(50,25,o),
(51,19,qs),
(51,14,o),
(66,1,o),
(72,1,qs),
(111,1,o),
(226,0,o),
(357,0,o),
(487,-2,o),
(595,-2,o),
(663,-3,o),
(666,-3,qs),
(689,-3,o),
(733,5,o),
(733,20,qs),
(733,429,ls),
(733,442,o),
(714,450,o),
(695,443,o),
(695,430,qs),
(695,390,o),
(698,352,o),
(701,340,o),
(702,338,qs),
(708,326,o),
(703,309,o),
(695,293,o),
(695,281,qs),
(695,201,l),
(707,189,o),
(707,158,q),
(695,140,o),
(698,93,o),
(703,47,o),
(691,28,q),
(644,28,ls),
(636,28,o),
(619,26,o),
(610,28,qs),
(594,32,o),
(565,27,o),
(550,34,q),
(541,40,o),
(533,36,o),
(525,28,o),
(513,28,qs),
(479,28,o),
(455,37,o),
(447,34,qs),
(436,30,o),
(428,25,o),
(415,34,qs),
(403,41,o),
(410,50,qs),
(426,68,o),
(412,83,q),
(420,101,o),
(418,120,o),
(408,138,qs),
(406,143,o),
(408,158,o),
(408,165,qs),
(408,224,o),
(407,358,o),
(407,417,qs),
(407,436,o)
);
},
{
closed = 1;
nodes = (
(79,344,o),
(79,396,q),
(94,381,o),
(147,311,o),
(212,222,o),
(278,130,o),
(333,51,o),
(349,28,q),
(345,28,o),
(334,28,o),
(328,28,qs),
(275,28,ls),
(268,28,o),
(256,38,o),
(248,33,qs),
(241,28,o),
(233,31,o),
(224,38,o),
(213,38,qs),
(206,38,o),
(193,28,o),
(183,28,qs),
(175,28,o),
(159,43,o),
(151,38,qs),
(134,28,o),
(121,28,qs),
(107,28,ls),
(100,28,o),
(80,45,o),
(84,52,q),
(101,70,o),
(87,85,q),
(95,103,o),
(93,122,o),
(83,140,qs),
(81,145,o),
(83,160,o),
(83,167,qs),
(83,220,o)
);
},
{
closed = 1;
nodes = (
(517,250,o),
(517,243,qs),
(517,231,o),
(538,214,o),
(557,214,qs),
(567,213,o),
(580,221,o),
(586,228,qs),
(594,240,o),
(586,251,qs),
(579,259,o),
(560,275,o),
(549,275,qs),
(531,275,o)
);
},
{
closed = 1;
nodes = (
(562,245,q),
(564,244,o),
(562,239,q),
(558,235,o),
(555,236,q),
(545,236,o),
(545,243,qs),
(545,245,o),
(548,252,o),
(552,252,qs),
(559,252,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 106 values pushed */
152 103 100 3 9 3 176 166 2 12 11 121 115 93 36 34 9 3 7 7 10 3 76 0 7 10 0 0 7 114 13 1 9 14 1 11 12 9 11 105 0 12 0 10 7 12 10 105 4 1 3 3 40 77 8 6 5 1 4 0 0 2 96 0 2 2 38 2 78 170 169 156 155 174 173 169 179 170 179 164 163 155 168 156 168 145 141 136 134 133 131 128 125 113 111 79 77 60 52 30 28 20 18 15 8 22 
CALL[ ]	/* CallFunction */";
};
width = 773;
}
);
note = uni026F;
unicode = 623;
},
{
glyphname = n;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(101,58,o),
(165,158,o),
(208,221,qs),
(238,265,o),
(280,330,o),
(312,386,o),
(327,415,q),
(328,415,o),
(329,415,qs),
(331,415,o),
(349,414,o),
(368,414,o),
(369,413,q),
(382,409,o),
(414,412,o),
(414,410,qs),
(413,368,o),
(413,326,o),
(413,319,qs),
(413,309,o),
(412,285,o),
(418,274,q),
(418,270,o),
(416,239,o),
(414,200,o),
(412,165,o),
(412,157,qs),
(412,144,o),
(420,127,o),
(420,116,qs),
(420,113,o),
(419,107,o),
(418,103,qs),
(417,99,o),
(413,90,o),
(413,85,qs),
(413,21,ls),
(413,11,o),
(424,0,o),
(431,0,qs),
(438,0,o),
(450,11,o),
(450,22,qs),
(450,426,ls),
(450,450,o),
(425,450,qs),
(421,450,o),
(368,450,o),
(289,450,o),
(201,449,o),
(123,449,o),
(72,448,o),
(70,448,qs),
(65,448,o),
(52,435,o),
(52,429,qs),
(52,158,ls),
(52,140,o),
(49,106,o),
(43,86,q),
(40,81,o),
(47,74,q),
(52,67,o),
(52,64,qs),
(52,60,o),
(45,55,o),
(43,50,qs),
(42,47,o),
(40,31,o),
(40,26,qs),
(40,17,o),
(47,0,o),
(52,1,q),
(60,1,o)
);
},
{
closed = 1;
nodes = (
(86,251,o),
(87,286,o),
(88,297,qs),
(89,307,o),
(93,324,o),
(93,333,qs),
(93,344,o),
(87,357,q),
(93,365,o),
(93,373,qs),
(93,383,o),
(86,393,qs),
(82,398,o),
(86,408,o),
(90,411,qs),
(98,416,o),
(111,420,o),
(116,420,qs),
(125,420,o),
(137,413,o),
(141,411,q),
(144,408,o),
(157,408,qs),
(169,408,o),
(202,412,o),
(229,417,o),
(232,417,q),
(240,419,o),
(253,409,o),
(260,409,qs),
(262,409,o),
(266,411,qs),
(270,413,o),
(277,417,o),
(281,417,qs),
(286,417,o),
(291,413,q),
(285,403,o),
(274,382,o),
(273,381,q),
(265,360,o),
(250,344,o),
(235,327,o),
(227,304,qs),
(225,298,o),
(206,273,o),
(187,249,o),
(183,242,qs),
(174,225,o),
(134,170,o),
(94,115,o),
(85,97,q),
(83,113,o),
(86,148,o),
(86,164,qs),
(86,230,ls)
);
},
{
closed = 1;
nodes = (
(325,171,o),
(325,178,qs),
(325,209,o),
(305,218,q),
(298,223,o),
(274,204,o),
(270,197,q),
(262,187,o),
(265,167,o),
(266,159,q),
(268,154,o),
(288,150,o),
(310,151,o),
(314,151,qs),
(320,151,o)
);
},
{
closed = 1;
nodes = (
(287,175,o),
(286,177,q),
(286,180,o),
(286,185,o),
(288,187,q),
(289,189,o),
(296,196,o),
(298,194,qs),
(302,191,o),
(302,183,qs),
(302,181,o),
(301,175,o),
(299,175,qs),
(298,175,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
17 1 4 0 150 148 142 121 119 5 8 2 77 43 37 3 4 1 8 3 76 7 1 4 0 2 2 4 114 9 1 8 2 1 2 8 1 128 6 5 3 3 2 2 0 96 0 0 0 40 77 0 1 1 38 1 78 132 130 130 144 132 144 111 110 107 105 100 98 95 93 63 60 59 57 34 32 28 19 10 8 22 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = n;
unicode = 110;
},
{
glyphname = nacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = n;
},
{
pos = (176,-107);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-107 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = nacute;
unicode = 324;
},
{
glyphname = ncaron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(101,58,o),
(165,158,o),
(208,221,qs),
(238,265,o),
(280,330,o),
(312,386,o),
(327,415,q),
(328,415,o),
(329,415,qs),
(331,415,o),
(349,414,o),
(368,414,o),
(369,413,q),
(382,409,o),
(414,412,o),
(414,410,qs),
(413,368,o),
(413,326,o),
(413,319,qs),
(413,309,o),
(412,285,o),
(418,274,q),
(418,270,o),
(416,239,o),
(414,200,o),
(412,165,o),
(412,157,qs),
(412,144,o),
(420,127,o),
(420,116,qs),
(420,113,o),
(419,107,o),
(418,103,qs),
(417,99,o),
(413,90,o),
(413,85,qs),
(413,21,ls),
(413,11,o),
(424,0,o),
(431,0,qs),
(438,0,o),
(450,11,o),
(450,22,qs),
(450,426,ls),
(450,450,o),
(425,450,qs),
(421,450,o),
(368,450,o),
(289,450,o),
(201,449,o),
(123,449,o),
(72,448,o),
(70,448,qs),
(65,448,o),
(52,435,o),
(52,429,qs),
(52,158,ls),
(52,140,o),
(49,106,o),
(43,86,q),
(40,81,o),
(47,74,q),
(52,67,o),
(52,64,qs),
(52,60,o),
(45,55,o),
(43,50,qs),
(42,47,o),
(40,31,o),
(40,26,qs),
(40,17,o),
(47,0,o),
(52,1,q),
(60,1,o)
);
},
{
closed = 1;
nodes = (
(86,251,o),
(87,286,o),
(88,297,qs),
(89,307,o),
(93,324,o),
(93,333,qs),
(93,344,o),
(87,357,q),
(93,365,o),
(93,373,qs),
(93,383,o),
(86,393,qs),
(82,398,o),
(86,408,o),
(90,411,qs),
(98,416,o),
(111,420,o),
(116,420,qs),
(125,420,o),
(137,413,o),
(141,411,q),
(144,408,o),
(157,408,qs),
(169,408,o),
(202,412,o),
(229,417,o),
(232,417,q),
(240,419,o),
(253,409,o),
(260,409,qs),
(262,409,o),
(266,411,qs),
(270,413,o),
(277,417,o),
(281,417,qs),
(286,417,o),
(291,413,q),
(285,403,o),
(274,382,o),
(273,381,q),
(265,360,o),
(250,344,o),
(235,327,o),
(227,304,qs),
(225,298,o),
(206,273,o),
(187,249,o),
(183,242,qs),
(174,225,o),
(134,170,o),
(94,115,o),
(85,97,q),
(83,113,o),
(86,148,o),
(86,164,qs),
(86,230,ls)
);
},
{
closed = 1;
nodes = (
(325,171,o),
(325,178,qs),
(325,209,o),
(305,218,q),
(298,223,o),
(274,204,o),
(270,197,q),
(262,187,o),
(265,167,o),
(266,159,q),
(268,154,o),
(288,150,o),
(310,151,o),
(314,151,qs),
(320,151,o)
);
},
{
closed = 1;
nodes = (
(287,175,o),
(286,177,q),
(286,180,o),
(286,185,o),
(288,187,q),
(289,189,o),
(296,196,o),
(298,194,qs),
(302,191,o),
(302,183,qs),
(302,181,o),
(301,175,o),
(299,175,qs),
(298,175,o)
);
},
{
closed = 1;
nodes = (
(297,586,o),
(294,582,qs),
(292,580,o),
(279,563,o),
(277,561,qs),
(275,558,o),
(268,547,o),
(266,546,qs),
(260,543,o),
(256,543,o),
(251,545,q),
(247,550,o),
(225,570,o),
(198,593,o),
(175,609,o),
(170,609,q),
(162,611,o),
(150,609,o),
(154,600,q),
(160,594,o),
(172,581,o),
(176,574,q),
(181,571,o),
(193,556,o),
(199,553,q),
(207,546,o),
(214,537,o),
(221,531,qs),
(229,524,o),
(245,510,o),
(249,499,qs),
(251,495,o),
(259,494,o),
(261,498,q),
(272,510,o),
(303,544,o),
(333,579,o),
(353,602,o),
(352,603,qs),
(350,605,o),
(344,610,o),
(342,610,q),
(337,612,o),
(330,610,q),
(316,603,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
17 1 4 0 150 148 142 121 119 5 8 2 77 43 37 3 4 1 8 3 76 7 1 4 0 2 2 4 114 9 1 8 2 1 2 8 1 128 6 5 3 3 2 2 0 96 0 0 0 40 77 0 1 1 38 1 78 132 130 130 144 132 144 111 110 107 105 100 98 95 93 63 60 59 57 34 32 28 19 10 8 22 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = ncaron;
unicode = 328;
},
{
glyphname = uni1E4B;
layers = (
{
layerId = m01;
shapes = (
{
ref = n;
},
{
pos = (117,-782);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-782 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = uni1E4B;
unicode = 7755;
},
{
glyphname = uni0146;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(101,58,o),
(165,158,o),
(208,221,qs),
(238,265,o),
(280,330,o),
(312,386,o),
(327,415,q),
(328,415,o),
(329,415,qs),
(331,415,o),
(349,414,o),
(368,414,o),
(369,413,q),
(382,409,o),
(414,412,o),
(414,410,qs),
(413,368,o),
(413,326,o),
(413,319,qs),
(413,309,o),
(412,285,o),
(418,274,q),
(418,270,o),
(416,239,o),
(414,200,o),
(412,165,o),
(412,157,qs),
(412,144,o),
(420,127,o),
(420,116,qs),
(420,113,o),
(419,107,o),
(418,103,qs),
(417,99,o),
(413,90,o),
(413,85,qs),
(413,21,ls),
(413,11,o),
(424,0,o),
(431,0,qs),
(438,0,o),
(450,11,o),
(450,22,qs),
(450,426,ls),
(450,450,o),
(425,450,qs),
(421,450,o),
(368,450,o),
(289,450,o),
(201,449,o),
(123,449,o),
(72,448,o),
(70,448,qs),
(65,448,o),
(52,435,o),
(52,429,qs),
(52,158,ls),
(52,140,o),
(49,106,o),
(43,86,q),
(40,81,o),
(47,74,q),
(52,67,o),
(52,64,qs),
(52,60,o),
(45,55,o),
(43,50,qs),
(42,47,o),
(40,31,o),
(40,26,qs),
(40,17,o),
(47,0,o),
(52,1,q),
(60,1,o)
);
},
{
closed = 1;
nodes = (
(86,251,o),
(87,286,o),
(88,297,qs),
(89,307,o),
(93,324,o),
(93,333,qs),
(93,344,o),
(87,357,q),
(93,365,o),
(93,373,qs),
(93,383,o),
(86,393,qs),
(82,398,o),
(86,408,o),
(90,411,qs),
(98,416,o),
(111,420,o),
(116,420,qs),
(125,420,o),
(137,413,o),
(141,411,q),
(144,408,o),
(157,408,qs),
(169,408,o),
(202,412,o),
(229,417,o),
(232,417,q),
(240,419,o),
(253,409,o),
(260,409,qs),
(262,409,o),
(266,411,qs),
(270,413,o),
(277,417,o),
(281,417,qs),
(286,417,o),
(291,413,q),
(285,403,o),
(274,382,o),
(273,381,q),
(265,360,o),
(250,344,o),
(235,327,o),
(227,304,qs),
(225,298,o),
(206,273,o),
(187,249,o),
(183,242,qs),
(174,225,o),
(134,170,o),
(94,115,o),
(85,97,q),
(83,113,o),
(86,148,o),
(86,164,qs),
(86,230,ls)
);
},
{
closed = 1;
nodes = (
(325,171,o),
(325,178,qs),
(325,209,o),
(305,218,q),
(298,223,o),
(274,204,o),
(270,197,q),
(262,187,o),
(265,167,o),
(266,159,q),
(268,154,o),
(288,150,o),
(310,151,o),
(314,151,qs),
(320,151,o)
);
},
{
closed = 1;
nodes = (
(287,175,o),
(286,177,q),
(286,180,o),
(286,185,o),
(288,187,q),
(289,189,o),
(296,196,o),
(298,194,qs),
(302,191,o),
(302,183,qs),
(302,181,o),
(301,175,o),
(299,175,qs),
(298,175,o)
);
},
{
closed = 1;
nodes = (
(196,-201,o),
(198,-198,q),
(202,-198,o),
(219,-174,o),
(221,-172,q),
(230,-158,o),
(233,-143,o),
(240,-129,qs),
(246,-113,o),
(259,-102,qs),
(272,-91,o),
(276,-65,o),
(277,-48,qs),
(278,-37,o),
(271,-27,o),
(265,-31,q),
(260,-36,o),
(240,-51,o),
(238,-58,qs),
(235,-69,o),
(224,-91,o),
(218,-103,qs),
(210,-124,o),
(190,-159,o),
(176,-194,q),
(179,-199,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
17 1 4 0 150 148 142 121 119 5 8 2 77 43 37 3 4 1 8 3 76 171 1 1 73 7 1 4 0 2 2 4 114 9 1 8 2 1 2 8 1 128 6 5 3 3 2 2 0 96 0 0 0 40 77 0 1 1 38 1 78 132 130 130 144 132 144 111 110 107 105 100 98 95 93 63 60 59 57 34 32 28 19 10 8 22 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = uni0146;
unicode = 326;
},
{
glyphname = uni1E45;
layers = (
{
layerId = m01;
shapes = (
{
ref = n;
},
{
pos = (180,-134);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-134 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = uni1E45;
unicode = 7749;
},
{
glyphname = uni1E47;
layers = (
{
layerId = m01;
shapes = (
{
ref = n;
},
{
pos = (179,-114);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = uni1E47;
unicode = 7751;
},
{
glyphname = uni01F9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(101,58,o),
(165,158,o),
(208,221,qs),
(238,265,o),
(280,330,o),
(312,386,o),
(327,415,q),
(328,415,o),
(329,415,qs),
(331,415,o),
(349,414,o),
(368,414,o),
(369,413,q),
(382,409,o),
(414,412,o),
(414,410,qs),
(413,368,o),
(413,326,o),
(413,319,qs),
(413,309,o),
(412,285,o),
(418,274,q),
(418,270,o),
(416,239,o),
(414,200,o),
(412,165,o),
(412,157,qs),
(412,144,o),
(420,127,o),
(420,116,qs),
(420,113,o),
(419,107,o),
(418,103,qs),
(417,99,o),
(413,90,o),
(413,85,qs),
(413,21,ls),
(413,11,o),
(424,0,o),
(431,0,qs),
(438,0,o),
(450,11,o),
(450,22,qs),
(450,426,ls),
(450,450,o),
(425,450,qs),
(421,450,o),
(368,450,o),
(289,450,o),
(201,449,o),
(123,449,o),
(72,448,o),
(70,448,qs),
(65,448,o),
(52,435,o),
(52,429,qs),
(52,158,ls),
(52,140,o),
(49,106,o),
(43,86,q),
(40,81,o),
(47,74,q),
(52,67,o),
(52,64,qs),
(52,60,o),
(45,55,o),
(43,50,qs),
(42,47,o),
(40,31,o),
(40,26,qs),
(40,17,o),
(47,0,o),
(52,1,q),
(60,1,o)
);
},
{
closed = 1;
nodes = (
(86,251,o),
(87,286,o),
(88,297,qs),
(89,307,o),
(93,324,o),
(93,333,qs),
(93,344,o),
(87,357,q),
(93,365,o),
(93,373,qs),
(93,383,o),
(86,393,qs),
(82,398,o),
(86,408,o),
(90,411,qs),
(98,416,o),
(111,420,o),
(116,420,qs),
(125,420,o),
(137,413,o),
(141,411,q),
(144,408,o),
(157,408,qs),
(169,408,o),
(202,412,o),
(229,417,o),
(232,417,q),
(240,419,o),
(253,409,o),
(260,409,qs),
(262,409,o),
(266,411,qs),
(270,413,o),
(277,417,o),
(281,417,qs),
(286,417,o),
(291,413,q),
(285,403,o),
(274,382,o),
(273,381,q),
(265,360,o),
(250,344,o),
(235,327,o),
(227,304,qs),
(225,298,o),
(206,273,o),
(187,249,o),
(183,242,qs),
(174,225,o),
(134,170,o),
(94,115,o),
(85,97,q),
(83,113,o),
(86,148,o),
(86,164,qs),
(86,230,ls)
);
},
{
closed = 1;
nodes = (
(325,171,o),
(325,178,qs),
(325,209,o),
(305,218,q),
(298,223,o),
(274,204,o),
(270,197,q),
(262,187,o),
(265,167,o),
(266,159,q),
(268,154,o),
(288,150,o),
(310,151,o),
(314,151,qs),
(320,151,o)
);
},
{
closed = 1;
nodes = (
(287,175,o),
(286,177,q),
(286,180,o),
(286,185,o),
(288,187,q),
(289,189,o),
(296,196,o),
(298,194,qs),
(302,191,o),
(302,183,qs),
(302,181,o),
(301,175,o),
(299,175,qs),
(298,175,o)
);
},
{
closed = 1;
nodes = (
(276,542,o),
(265,552,qs),
(244,570,o),
(232,586,q),
(224,593,o),
(210,606,o),
(203,614,qs),
(199,619,o),
(190,629,o),
(183,630,q),
(181,632,o),
(175,627,o),
(173,628,qs),
(170,630,o),
(159,619,o),
(160,616,qs),
(165,604,o),
(175,581,o),
(191,576,qs),
(197,574,o),
(208,566,o),
(212,561,qs),
(220,552,o),
(241,530,o),
(257,516,qs),
(275,503,o),
(303,508,o),
(307,512,q),
(297,522,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
17 1 4 0 150 148 142 121 119 5 8 2 77 43 37 3 4 1 8 3 76 171 1 0 74 7 1 4 0 2 2 4 114 9 1 8 2 1 2 8 1 128 6 5 3 3 2 2 0 96 0 0 0 40 77 0 1 1 38 1 78 132 130 130 144 132 144 111 110 107 105 100 98 95 93 63 60 59 57 34 32 28 19 10 8 22 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = uni01F9;
unicode = 505;
},
{
glyphname = uni0272;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(5,-119,o),
(9,-117,qs),
(16,-112,o),
(37,-117,o),
(47,-116,qs),
(72,-113,o),
(95,-103,o),
(96,-75,qs),
(96,-71,o),
(96,-66,o),
(94,-43,qs),
(94,-38,o),
(93,-8,o),
(94,-4,qs),
(100,12,o),
(96,24,q),
(116,51,o),
(182,155,o),
(227,221,qs),
(257,265,o),
(299,330,o),
(331,386,o),
(346,415,q),
(347,415,o),
(348,415,qs),
(350,415,o),
(368,414,o),
(387,414,o),
(388,413,q),
(401,409,o),
(433,412,o),
(433,410,qs),
(432,368,o),
(432,326,o),
(432,319,qs),
(432,309,o),
(431,285,o),
(437,274,q),
(437,270,o),
(435,239,o),
(433,200,o),
(431,165,o),
(431,157,qs),
(431,144,o),
(439,127,o),
(439,116,qs),
(439,113,o),
(438,107,o),
(437,103,qs),
(436,99,o),
(432,90,o),
(432,85,qs),
(432,21,ls),
(432,11,o),
(443,0,o),
(450,0,qs),
(457,0,o),
(469,11,o),
(469,22,qs),
(469,426,ls),
(469,450,o),
(444,450,qs),
(440,450,o),
(387,450,o),
(308,450,o),
(220,449,o),
(142,449,o),
(91,448,o),
(89,448,qs),
(84,448,o),
(71,435,o),
(71,429,qs),
(71,158,ls),
(71,140,o),
(68,106,o),
(62,86,q),
(59,81,o),
(66,74,q),
(71,67,o),
(71,64,qs),
(71,60,o),
(64,55,o),
(62,50,qs),
(61,47,o),
(59,31,o),
(59,26,qs),
(59,14,o),
(64,6,q),
(66,-12,o),
(61,-17,o),
(63,-26,qs),
(65,-31,o),
(64,-54,o),
(65,-59,qs),
(66,-76,o),
(44,-87,o),
(11,-87,o),
(-18,-86,o),
(-24,-91,q),
(-30,-91,o),
(-29,-117,o),
(-17,-117,q),
(-14,-116,o)
);
},
{
closed = 1;
nodes = (
(105,251,o),
(106,286,o),
(107,297,qs),
(108,307,o),
(112,324,o),
(112,333,qs),
(112,344,o),
(106,357,q),
(112,365,o),
(112,373,qs),
(112,383,o),
(105,393,qs),
(101,398,o),
(105,408,o),
(109,411,qs),
(117,416,o),
(130,420,o),
(135,420,qs),
(144,420,o),
(156,413,o),
(160,411,q),
(163,408,o),
(176,408,qs),
(188,408,o),
(221,412,o),
(248,417,o),
(251,417,q),
(259,419,o),
(272,409,o),
(279,409,qs),
(281,409,o),
(285,411,qs),
(289,413,o),
(296,417,o),
(300,417,qs),
(305,417,o),
(310,413,q),
(304,403,o),
(293,382,o),
(292,381,q),
(284,360,o),
(269,344,o),
(254,327,o),
(246,304,qs),
(244,298,o),
(225,273,o),
(206,249,o),
(202,242,qs),
(193,225,o),
(153,170,o),
(113,115,o),
(104,97,q),
(102,113,o),
(105,148,o),
(105,164,qs),
(105,230,ls)
);
},
{
closed = 1;
nodes = (
(344,171,o),
(344,178,qs),
(344,209,o),
(324,218,q),
(317,223,o),
(293,204,o),
(289,197,q),
(281,187,o),
(284,167,o),
(285,159,q),
(287,154,o),
(307,150,o),
(329,151,o),
(333,151,qs),
(339,151,o)
);
},
{
closed = 1;
nodes = (
(306,175,o),
(305,177,q),
(305,180,o),
(305,185,o),
(307,187,q),
(308,189,o),
(315,196,o),
(317,194,qs),
(321,191,o),
(321,183,qs),
(321,181,o),
(320,175,o),
(318,175,qs),
(317,175,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 102 values pushed */
30 1 6 2 179 177 171 150 148 5 10 4 106 56 50 16 4 3 10 88 1 1 3 4 76 9 1 6 2 4 4 6 114 12 1 10 4 3 4 10 3 128 0 1 11 1 0 1 0 101 8 7 5 3 4 4 2 96 0 2 2 40 77 0 3 3 38 3 78 161 159 1 0 159 173 161 173 140 139 136 134 129 127 124 122 76 73 72 70 47 45 41 32 6 4 0 102 1 100 13 8 22 
CALL[ ]	/* CallFunction */";
};
width = 519;
}
);
note = uni0272;
unicode = 626;
},
{
glyphname = uni019E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(162,105,o),
(239,189,qs),
(294,249,o),
(385,355,o),
(422,403,q),
(424,402,o),
(424,400,qs),
(423,358,o),
(423,326,o),
(423,319,qs),
(423,309,o),
(422,285,o),
(428,274,q),
(428,266,o),
(429,235,o),
(423,228,q),
(423,211,o),
(423,174,o),
(422,157,qs),
(422,145,o),
(427,102,o),
(432,54,o),
(433,12,o),
(428,0,qs),
(427,-2,o),
(426,-25,o),
(424,-55,o),
(423,-79,o),
(423,-81,qs),
(423,-177,ls),
(423,-191,o),
(442,-201,o),
(460,-190,o),
(460,-176,qs),
(460,426,ls),
(460,442,o),
(423,450,o),
(403,450,qs),
(399,450,o),
(349,450,o),
(275,450,o),
(193,449,o),
(120,449,o),
(72,448,o),
(70,448,qs),
(65,448,o),
(52,435,o),
(52,429,qs),
(52,426,o),
(52,378,o),
(52,308,o),
(52,233,o),
(52,171,o),
(52,158,qs),
(52,140,o),
(49,106,o),
(43,86,q),
(40,81,o),
(47,74,qs),
(55,64,o),
(45,57,o),
(43,50,qs),
(40,44,o),
(40,33,qs),
(40,22,o),
(51,2,o),
(61,2,qs),
(65,2,o)
);
},
{
closed = 1;
nodes = (
(91,341,o),
(83,357,q),
(90,365,o),
(88,385,o),
(82,393,qs),
(78,398,o),
(82,408,o),
(86,411,qs),
(106,424,o),
(135,415,o),
(141,411,qs),
(145,408,o),
(171,409,o),
(203,413,o),
(229,417,o),
(232,417,q),
(241,419,o),
(258,406,o),
(266,411,qs),
(272,414,o),
(283,420,o),
(291,413,qs),
(297,409,o),
(308,420,o),
(315,419,qs),
(326,419,o),
(329,418,o),
(339,413,qs),
(345,411,o),
(373,409,o),
(388,408,q),
(375,393,o),
(347,359,o),
(343,356,q),
(333,336,o),
(307,313,o),
(281,290,o),
(270,268,qs),
(268,263,o),
(246,242,o),
(223,221,o),
(218,214,qs),
(209,202,o),
(171,162,o),
(126,118,o),
(88,79,o),
(80,66,q),
(80,143,o),
(79,233,o),
(79,278,o),
(80,294,o),
(81,297,qs),
(87,312,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
95 1 2 1 118 73 60 51 4 0 2 2 76 3 1 2 2 1 95 0 1 1 40 77 4 1 0 0 38 0 78 1 0 108 107 90 89 30 21 0 67 1 67 5 8 22 
CALL[ ]	/* CallFunction */";
};
width = 500;
}
);
note = uni019E;
unicode = 414;
},
{
glyphname = nmacronbelow;
layers = (
{
layerId = m01;
shapes = (
{
ref = n;
},
{
pos = (69,-329);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-329 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = nmacronbelow;
unicode = 7753;
},
{
glyphname = ntilde;
layers = (
{
layerId = m01;
shapes = (
{
ref = n;
},
{
pos = (126,-155);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-155 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = ntilde;
unicode = 241;
},
{
glyphname = eng;
layers = (
{
layerId = m01;
shapes = (
{
ref = n;
},
{
pos = (280,-599);
ref = uni031B;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-599 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = eng;
unicode = 331;
},
{
glyphname = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(191,1,o),
(198,0,qs),
(204,0,o),
(233,-1,o),
(268,0,o),
(295,1,o),
(298,2,qs),
(305,4,o),
(317,-7,o),
(324,3,q),
(338,-7,o),
(366,-3,o),
(383,-3,qs),
(390,-3,o),
(403,4,o),
(410,8,q),
(412,10,o),
(413,19,o),
(413,23,qs),
(413,440,ls),
(413,445,o),
(404,449,o),
(399,449,qs),
(365,449,o),
(274,451,o),
(174,451,o),
(79,451,o),
(40,449,q),
(40,21,l),
(42,0,o),
(61,0,qs),
(66,0,o),
(103,0,o),
(140,0,o),
(144,-1,q),
(152,-1,o),
(167,-1,o),
(172,-4,qs),
(180,-9,o)
);
},
{
closed = 1;
nodes = (
(228,25,o),
(221,30,qs),
(219,32,o),
(208,25,o),
(204,26,qs),
(200,28,o),
(192,32,o),
(187,27,qs),
(183,23,o),
(179,26,qs),
(176,29,o),
(134,30,o),
(88,30,o),
(76,30,qs),
(72,30,o),
(67,38,o),
(69,42,q),
(74,47,o),
(76,58,o),
(76,65,qs),
(76,73,o),
(75,112,o),
(74,158,o),
(73,197,o),
(73,205,qs),
(73,220,o),
(67,228,qs),
(63,232,o),
(68,239,qs),
(75,249,o),
(75,260,qs),
(75,265,o),
(73,275,o),
(71,279,qs),
(63,294,o),
(73,304,q),
(75,307,o),
(72,312,q),
(72,374,l),
(74,375,o),
(72,383,o),
(70,384,q),
(64,391,o),
(66,408,o),
(70,418,q),
(81,420,o),
(121,422,o),
(132,422,qs),
(140,422,o),
(154,423,o),
(161,415,q),
(172,413,o),
(184,424,o),
(190,415,q),
(194,415,o),
(237,416,o),
(292,418,o),
(335,418,o),
(338,418,qs),
(349,417,o),
(378,414,o),
(381,414,q),
(381,377,o),
(383,340,o),
(384,315,o),
(382,276,o),
(379,236,q),
(379,109,ls),
(379,105,o),
(381,69,o),
(381,35,o),
(379,31,q),
(354,31,o),
(299,28,o),
(257,25,o),
(249,25,qs),
(242,25,o)
);
},
{
closed = 1;
nodes = (
(263,215,o),
(249,225,o),
(249,236,qs),
(249,251,o),
(218,254,o),
(207,252,qs),
(200,251,o),
(189,232,o),
(189,224,qs),
(189,216,o),
(195,208,qs),
(202,199,o),
(231,183,o),
(241,193,qs),
(255,207,ls)
);
},
{
closed = 1;
nodes = (
(218,215,o),
(216,217,q),
(214,218,o),
(214,221,qs),
(214,227,o),
(219,229,qs),
(222,230,o),
(230,229,o),
(230,225,qs),
(230,221,o),
(234,219,o),
(232,217,qs),
(228,213,ls),
(225,210,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
98 79 77 53 48 5 4 6 28 19 9 3 0 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 7 1 6 6 7 114 0 6 6 1 96 0 1 1 40 77 8 5 9 3 4 4 0 97 3 2 2 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
7 1 6 6 1 95 0 1 1 40 77 8 5 9 3 4 4 0 97 3 2 2 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 7 1 6 6 7 114 0 6 6 1 96 0 1 1 40 77 8 5 9 3 4 4 0 97 3 2 2 0 0 38 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
40 39 104 100 69 66 60 56 43 41 39 115 40 114 69 41 82 68 10 8 26 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = o;
unicode = 111;
},
{
glyphname = oacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (148,-107);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-107 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = oacute;
unicode = 243;
},
{
glyphname = uni0275;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(191,1,o),
(198,0,qs),
(204,0,o),
(233,-1,o),
(268,0,o),
(295,1,o),
(298,2,qs),
(305,4,o),
(317,-7,o),
(324,3,q),
(338,-7,o),
(366,-3,o),
(383,-3,qs),
(390,-3,o),
(403,4,o),
(410,8,q),
(412,10,o),
(413,19,o),
(413,23,qs),
(413,440,ls),
(413,445,o),
(404,449,o),
(399,449,qs),
(365,449,o),
(274,451,o),
(174,451,o),
(79,451,o),
(40,449,q),
(40,21,l),
(42,0,o),
(61,0,qs),
(66,0,o),
(103,0,o),
(140,0,o),
(144,-1,q),
(152,-1,o),
(167,-1,o),
(172,-4,qs),
(180,-9,o)
);
},
{
closed = 1;
nodes = (
(103,211,o),
(127,212,qs),
(131,212,o),
(148,213,o),
(149,213,qs),
(170,213,o),
(175,238,o),
(165,239,q),
(104,239,ls),
(83,238,o),
(79,242,o),
(71,242,qs),
(70,242,l),
(75,249,o),
(75,260,qs),
(75,265,o),
(73,275,o),
(71,279,qs),
(63,294,o),
(73,304,q),
(75,307,o),
(72,312,q),
(72,374,l),
(74,375,o),
(72,383,o),
(70,384,q),
(64,391,o),
(66,408,o),
(70,418,q),
(81,420,o),
(121,422,o),
(132,422,qs),
(140,422,o),
(154,423,o),
(161,415,q),
(172,413,o),
(184,424,o),
(190,415,q),
(194,415,o),
(237,416,o),
(292,418,o),
(335,418,o),
(338,418,qs),
(349,417,o),
(378,414,o),
(381,414,q),
(381,377,o),
(383,341,o),
(384,316,o),
(383,279,o),
(379,241,q),
(334,241,ls),
(313,240,o),
(309,244,o),
(301,244,qs),
(297,244,o),
(289,243,o),
(285,242,qs),
(282,241,o),
(280,235,o),
(277,234,qs),
(273,233,o),
(273,211,o),
(277,210,qs),
(288,207,o),
(310,209,o),
(320,208,qs),
(325,208,o),
(333,213,o),
(357,215,q),
(361,214,o),
(378,215,o),
(379,215,q),
(379,109,ls),
(379,105,o),
(381,69,o),
(381,35,o),
(379,31,q),
(354,31,o),
(299,28,o),
(257,25,o),
(249,25,qs),
(242,25,o),
(228,25,o),
(221,30,qs),
(219,32,o),
(208,25,o),
(204,26,qs),
(200,28,o),
(192,32,o),
(187,27,qs),
(183,23,o),
(179,26,qs),
(176,29,o),
(134,30,o),
(88,30,o),
(76,30,qs),
(72,30,o),
(67,38,o),
(69,42,q),
(74,47,o),
(76,58,o),
(76,65,qs),
(76,73,o),
(75,112,o),
(74,158,o),
(73,197,o),
(73,205,qs),
(73,206,l),
(77,206,o),
(86,206,o),
(90,206,qs),
(95,206,o)
);
},
{
closed = 1;
nodes = (
(263,215,o),
(249,225,o),
(249,236,qs),
(249,251,o),
(218,254,o),
(207,252,qs),
(200,251,o),
(189,232,o),
(189,224,qs),
(189,216,o),
(195,208,qs),
(202,199,o),
(231,183,o),
(241,193,qs),
(255,207,ls)
);
},
{
closed = 1;
nodes = (
(218,215,o),
(216,217,q),
(214,218,o),
(214,221,qs),
(214,227,o),
(219,229,qs),
(222,230,o),
(230,229,o),
(230,225,qs),
(230,221,o),
(234,219,o),
(232,217,qs),
(228,213,ls),
(225,210,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
131 129 105 3 10 12 51 1 5 4 28 19 9 3 0 5 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 13 1 12 12 13 114 9 17 2 4 8 5 8 4 5 128 14 11 2 10 15 8 10 89 0 15 16 1 8 4 15 8 105 0 12 12 1 96 0 1 1 40 77 7 6 2 5 5 0 98 3 2 2 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
9 17 2 4 8 5 8 4 5 128 15 14 11 3 10 16 1 8 4 10 8 105 13 1 12 12 1 95 0 1 1 40 77 7 6 2 5 5 0 98 3 2 2 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
0 13 1 12 12 13 114 9 17 2 4 8 5 8 4 5 128 14 11 2 10 15 8 10 89 0 15 16 1 8 4 15 8 105 0 12 12 1 96 0 1 1 40 77 7 6 2 5 5 0 98 3 2 2 0 0 38 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
41 39 150 145 143 142 140 138 121 118 112 108 100 99 97 95 85 83 82 78 73 71 70 67 57 53 39 151 41 151 69 41 82 68 18 8 26 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni0275;
unicode = 629;
},
{
glyphname = uni01D2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(191,1,o),
(198,0,qs),
(204,0,o),
(233,-1,o),
(268,0,o),
(295,1,o),
(298,2,qs),
(305,4,o),
(317,-7,o),
(324,3,q),
(338,-7,o),
(366,-3,o),
(383,-3,qs),
(390,-3,o),
(403,4,o),
(410,8,q),
(412,10,o),
(413,19,o),
(413,23,qs),
(413,440,ls),
(413,445,o),
(404,449,o),
(399,449,qs),
(365,449,o),
(274,451,o),
(174,451,o),
(79,451,o),
(40,449,q),
(40,21,l),
(42,0,o),
(61,0,qs),
(66,0,o),
(103,0,o),
(140,0,o),
(144,-1,q),
(152,-1,o),
(167,-1,o),
(172,-4,qs),
(180,-9,o)
);
},
{
closed = 1;
nodes = (
(228,25,o),
(221,30,qs),
(219,32,o),
(208,25,o),
(204,26,qs),
(200,28,o),
(192,32,o),
(187,27,qs),
(183,23,o),
(179,26,qs),
(176,29,o),
(134,30,o),
(88,30,o),
(76,30,qs),
(72,30,o),
(67,38,o),
(69,42,q),
(74,47,o),
(76,58,o),
(76,65,qs),
(76,73,o),
(75,112,o),
(74,158,o),
(73,197,o),
(73,205,qs),
(73,220,o),
(67,228,qs),
(63,232,o),
(68,239,qs),
(75,249,o),
(75,260,qs),
(75,265,o),
(73,275,o),
(71,279,qs),
(63,294,o),
(73,304,q),
(75,307,o),
(72,312,q),
(72,374,l),
(74,375,o),
(72,383,o),
(70,384,q),
(64,391,o),
(66,408,o),
(70,418,q),
(81,420,o),
(121,422,o),
(132,422,qs),
(140,422,o),
(154,423,o),
(161,415,q),
(172,413,o),
(184,424,o),
(190,415,q),
(194,415,o),
(237,416,o),
(292,418,o),
(335,418,o),
(338,418,qs),
(349,417,o),
(378,414,o),
(381,414,q),
(381,377,o),
(383,340,o),
(384,315,o),
(382,276,o),
(379,236,q),
(379,109,ls),
(379,105,o),
(381,69,o),
(381,35,o),
(379,31,q),
(354,31,o),
(299,28,o),
(257,25,o),
(249,25,qs),
(242,25,o)
);
},
{
closed = 1;
nodes = (
(263,215,o),
(249,225,o),
(249,236,qs),
(249,251,o),
(218,254,o),
(207,252,qs),
(200,251,o),
(189,232,o),
(189,224,qs),
(189,216,o),
(195,208,qs),
(202,199,o),
(231,183,o),
(241,193,qs),
(255,207,ls)
);
},
{
closed = 1;
nodes = (
(218,215,o),
(216,217,q),
(214,218,o),
(214,221,qs),
(214,227,o),
(219,229,qs),
(222,230,o),
(230,229,o),
(230,225,qs),
(230,221,o),
(234,219,o),
(232,217,qs),
(228,213,ls),
(225,210,o)
);
},
{
closed = 1;
nodes = (
(269,586,o),
(266,582,qs),
(264,580,o),
(251,563,o),
(249,561,qs),
(247,558,o),
(240,547,o),
(238,546,qs),
(232,543,o),
(228,543,o),
(223,545,q),
(219,550,o),
(197,570,o),
(170,593,o),
(147,609,o),
(142,609,q),
(134,611,o),
(122,609,o),
(126,600,q),
(132,594,o),
(144,581,o),
(148,574,q),
(153,571,o),
(165,556,o),
(171,553,q),
(179,546,o),
(186,537,o),
(193,531,qs),
(201,524,o),
(217,510,o),
(221,499,qs),
(223,495,o),
(231,494,o),
(233,498,q),
(244,510,o),
(275,544,o),
(305,579,o),
(325,602,o),
(324,603,qs),
(322,605,o),
(316,610,o),
(314,610,q),
(309,612,o),
(302,610,q),
(288,603,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
98 79 77 53 48 5 4 6 28 19 9 3 0 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 7 1 6 6 7 114 0 6 6 1 96 0 1 1 40 77 8 5 9 3 4 4 0 97 3 2 2 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
7 1 6 6 1 95 0 1 1 40 77 8 5 9 3 4 4 0 97 3 2 2 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 7 1 6 6 7 114 0 6 6 1 96 0 1 1 40 77 8 5 9 3 4 4 0 97 3 2 2 0 0 38 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
40 39 104 100 69 66 60 56 43 41 39 115 40 114 69 41 82 68 10 8 26 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni01D2;
unicode = 466;
},
{
glyphname = ocircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (89,-119);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-119 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = ocircumflex;
unicode = 244;
},
{
glyphname = uni1ED1;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (83,-137);
ref = uni0302;
},
{
pos = (129,8);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-137 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
8 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni1ED1;
unicode = 7889;
},
{
glyphname = uni1ED9;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (157,-114);
ref = period;
},
{
pos = (89,-119);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
-119 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni1ED9;
unicode = 7897;
},
{
glyphname = uni1ED3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(191,1,o),
(198,0,qs),
(204,0,o),
(233,-1,o),
(268,0,o),
(295,1,o),
(298,2,qs),
(305,4,o),
(317,-7,o),
(324,3,q),
(338,-7,o),
(366,-3,o),
(383,-3,qs),
(390,-3,o),
(403,4,o),
(410,8,q),
(412,10,o),
(413,19,o),
(413,23,qs),
(413,440,ls),
(413,445,o),
(404,449,o),
(399,449,qs),
(365,449,o),
(274,451,o),
(174,451,o),
(79,451,o),
(40,449,q),
(40,21,l),
(42,0,o),
(61,0,qs),
(66,0,o),
(103,0,o),
(140,0,o),
(144,-1,q),
(152,-1,o),
(167,-1,o),
(172,-4,qs),
(180,-9,o)
);
},
{
closed = 1;
nodes = (
(228,25,o),
(221,30,qs),
(219,32,o),
(208,25,o),
(204,26,qs),
(200,28,o),
(192,32,o),
(187,27,qs),
(183,23,o),
(179,26,qs),
(176,29,o),
(134,30,o),
(88,30,o),
(76,30,qs),
(72,30,o),
(67,38,o),
(69,42,q),
(74,47,o),
(76,58,o),
(76,65,qs),
(76,73,o),
(75,112,o),
(74,158,o),
(73,197,o),
(73,205,qs),
(73,220,o),
(67,228,qs),
(63,232,o),
(68,239,qs),
(75,249,o),
(75,260,qs),
(75,265,o),
(73,275,o),
(71,279,qs),
(63,294,o),
(73,304,q),
(75,307,o),
(72,312,q),
(72,374,l),
(74,375,o),
(72,383,o),
(70,384,q),
(64,391,o),
(66,408,o),
(70,418,q),
(81,420,o),
(121,422,o),
(132,422,qs),
(140,422,o),
(154,423,o),
(161,415,q),
(172,413,o),
(184,424,o),
(190,415,q),
(194,415,o),
(237,416,o),
(292,418,o),
(335,418,o),
(338,418,qs),
(349,417,o),
(378,414,o),
(381,414,q),
(381,377,o),
(383,340,o),
(384,315,o),
(382,276,o),
(379,236,q),
(379,109,ls),
(379,105,o),
(381,69,o),
(381,35,o),
(379,31,q),
(354,31,o),
(299,28,o),
(257,25,o),
(249,25,qs),
(242,25,o)
);
},
{
closed = 1;
nodes = (
(263,215,o),
(249,225,o),
(249,236,qs),
(249,251,o),
(218,254,o),
(207,252,qs),
(200,251,o),
(189,232,o),
(189,224,qs),
(189,216,o),
(195,208,qs),
(202,199,o),
(231,183,o),
(241,193,qs),
(255,207,ls)
);
},
{
closed = 1;
nodes = (
(218,215,o),
(216,217,q),
(214,218,o),
(214,221,qs),
(214,227,o),
(219,229,qs),
(222,230,o),
(230,229,o),
(230,225,qs),
(230,221,o),
(234,219,o),
(232,217,qs),
(228,213,ls),
(225,210,o)
);
},
{
closed = 1;
nodes = (
(308,488,q),
(310,488,o),
(316,494,o),
(318,495,qs),
(319,496,o),
(299,519,o),
(269,554,o),
(238,588,o),
(227,600,q),
(225,604,o),
(217,603,o),
(215,599,qs),
(211,588,o),
(195,574,o),
(187,567,qs),
(180,561,o),
(173,552,o),
(165,545,q),
(159,542,o),
(147,527,o),
(142,524,q),
(138,517,o),
(126,504,o),
(120,498,q),
(116,489,o),
(128,488,o),
(136,489,qs),
(141,489,o),
(164,505,o),
(191,528,o),
(213,549,o),
(217,553,q),
(222,555,o),
(226,555,o),
(232,552,qs),
(234,551,o),
(241,540,o),
(243,537,q),
(245,536,o),
(258,518,o),
(260,516,qs),
(263,512,o),
(282,496,o),
(296,488,q),
(303,486,o)
);
},
{
closed = 1;
nodes = (
(249,660,o),
(238,670,qs),
(217,688,o),
(205,704,q),
(197,711,o),
(183,724,o),
(176,732,qs),
(172,737,o),
(163,747,o),
(156,748,q),
(154,750,o),
(148,745,o),
(146,746,qs),
(143,748,o),
(132,737,o),
(133,734,qs),
(138,722,o),
(148,699,o),
(164,694,qs),
(170,692,o),
(181,684,o),
(185,679,qs),
(193,670,o),
(214,648,o),
(230,634,qs),
(248,621,o),
(276,626,o),
(280,630,q),
(270,640,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
98 79 77 53 48 5 4 6 28 19 9 3 0 4 2 76 202 1 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 7 1 6 6 7 114 0 6 6 1 96 0 1 1 40 77 8 5 9 3 4 4 0 97 3 2 2 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
7 1 6 6 1 95 0 1 1 40 77 8 5 9 3 4 4 0 97 3 2 2 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 7 1 6 6 7 114 0 6 6 1 96 0 1 1 40 77 8 5 9 3 4 4 0 97 3 2 2 0 0 38 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
40 39 104 100 69 66 60 56 43 41 39 115 40 114 69 41 82 68 10 8 26 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni1ED3;
unicode = 7891;
},
{
glyphname = uni1ED5;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (91,-134);
ref = uni0302;
},
{
pos = (126,26);
ref = hookabovecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-134 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
26 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni1ED5;
unicode = 7893;
},
{
glyphname = uni1ED7;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (86,-119);
ref = uni0302;
},
{
pos = (102,-22);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-119 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
-22 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni1ED7;
unicode = 7895;
},
{
glyphname = uni020D;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (72,-129);
ref = uni030F;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 2 
PUSHW[ ]	/* 1 value pushed */
-129 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni020D;
unicode = 525;
},
{
glyphname = odieresis;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (66,-120);
ref = uni0308;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 2 
PUSHW[ ]	/* 1 value pushed */
-120 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = odieresis;
unicode = 246;
},
{
glyphname = uni022B;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (66,-120);
ref = uni0308;
},
{
pos = (51,421);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 2 
PUSHW[ ]	/* 1 value pushed */
-120 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 1 
PUSHW[ ]	/* 1 value pushed */
421 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni022B;
unicode = 555;
},
{
glyphname = uni022F;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (152,-134);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-134 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni022F;
unicode = 559;
},
{
glyphname = uni0231;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (152,-134);
ref = uni0307;
},
{
pos = (53,391);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-134 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
391 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni0231;
unicode = 561;
},
{
glyphname = uni1ECD;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (157,-114);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni1ECD;
unicode = 7885;
},
{
glyphname = ograve;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(191,1,o),
(198,0,qs),
(204,0,o),
(233,-1,o),
(268,0,o),
(295,1,o),
(298,2,qs),
(305,4,o),
(317,-7,o),
(324,3,q),
(338,-7,o),
(366,-3,o),
(383,-3,qs),
(390,-3,o),
(403,4,o),
(410,8,q),
(412,10,o),
(413,19,o),
(413,23,qs),
(413,440,ls),
(413,445,o),
(404,449,o),
(399,449,qs),
(365,449,o),
(274,451,o),
(174,451,o),
(79,451,o),
(40,449,q),
(40,21,l),
(42,0,o),
(61,0,qs),
(66,0,o),
(103,0,o),
(140,0,o),
(144,-1,q),
(152,-1,o),
(167,-1,o),
(172,-4,qs),
(180,-9,o)
);
},
{
closed = 1;
nodes = (
(228,25,o),
(221,30,qs),
(219,32,o),
(208,25,o),
(204,26,qs),
(200,28,o),
(192,32,o),
(187,27,qs),
(183,23,o),
(179,26,qs),
(176,29,o),
(134,30,o),
(88,30,o),
(76,30,qs),
(72,30,o),
(67,38,o),
(69,42,q),
(74,47,o),
(76,58,o),
(76,65,qs),
(76,73,o),
(75,112,o),
(74,158,o),
(73,197,o),
(73,205,qs),
(73,220,o),
(67,228,qs),
(63,232,o),
(68,239,qs),
(75,249,o),
(75,260,qs),
(75,265,o),
(73,275,o),
(71,279,qs),
(63,294,o),
(73,304,q),
(75,307,o),
(72,312,q),
(72,374,l),
(74,375,o),
(72,383,o),
(70,384,q),
(64,391,o),
(66,408,o),
(70,418,q),
(81,420,o),
(121,422,o),
(132,422,qs),
(140,422,o),
(154,423,o),
(161,415,q),
(172,413,o),
(184,424,o),
(190,415,q),
(194,415,o),
(237,416,o),
(292,418,o),
(335,418,o),
(338,418,qs),
(349,417,o),
(378,414,o),
(381,414,q),
(381,377,o),
(383,340,o),
(384,315,o),
(382,276,o),
(379,236,q),
(379,109,ls),
(379,105,o),
(381,69,o),
(381,35,o),
(379,31,q),
(354,31,o),
(299,28,o),
(257,25,o),
(249,25,qs),
(242,25,o)
);
},
{
closed = 1;
nodes = (
(263,215,o),
(249,225,o),
(249,236,qs),
(249,251,o),
(218,254,o),
(207,252,qs),
(200,251,o),
(189,232,o),
(189,224,qs),
(189,216,o),
(195,208,qs),
(202,199,o),
(231,183,o),
(241,193,qs),
(255,207,ls)
);
},
{
closed = 1;
nodes = (
(218,215,o),
(216,217,q),
(214,218,o),
(214,221,qs),
(214,227,o),
(219,229,qs),
(222,230,o),
(230,229,o),
(230,225,qs),
(230,221,o),
(234,219,o),
(232,217,qs),
(228,213,ls),
(225,210,o)
);
},
{
closed = 1;
nodes = (
(248,542,o),
(237,552,qs),
(216,570,o),
(204,586,q),
(196,593,o),
(182,606,o),
(175,614,qs),
(171,619,o),
(162,629,o),
(155,630,q),
(153,632,o),
(147,627,o),
(145,628,qs),
(142,630,o),
(131,619,o),
(132,616,qs),
(137,604,o),
(147,581,o),
(163,576,qs),
(169,574,o),
(180,566,o),
(184,561,qs),
(192,552,o),
(213,530,o),
(229,516,qs),
(247,503,o),
(275,508,o),
(279,512,q),
(269,522,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
98 79 77 53 48 5 4 6 28 19 9 3 0 4 2 76 157 1 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 7 1 6 6 7 114 0 6 6 1 96 0 1 1 40 77 8 5 9 3 4 4 0 97 3 2 2 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
7 1 6 6 1 95 0 1 1 40 77 8 5 9 3 4 4 0 97 3 2 2 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 7 1 6 6 7 114 0 6 6 1 96 0 1 1 40 77 8 5 9 3 4 4 0 97 3 2 2 0 0 38 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
40 39 104 100 69 66 60 56 43 41 39 115 40 114 69 41 82 68 10 8 26 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = ograve;
unicode = 242;
},
{
glyphname = uni1ECF;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (117,-92);
ref = hookabovecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-92 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni1ECF;
unicode = 7887;
},
{
glyphname = ohorn;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (347,-42);
ref = uni031B;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-42 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = ohorn;
unicode = 417;
},
{
glyphname = uni1EDB;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (347,-42);
ref = uni031B;
},
{
pos = (128,-107);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-42 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
-107 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni1EDB;
unicode = 7899;
},
{
glyphname = uni1EE3;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (347,-42);
ref = uni031B;
},
{
pos = (157,-114);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-42 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni1EE3;
unicode = 7907;
},
{
glyphname = uni1EDD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(191,1,o),
(198,0,qs),
(204,0,o),
(233,-1,o),
(268,0,o),
(295,1,o),
(298,2,qs),
(305,4,o),
(317,-7,o),
(324,3,q),
(338,-7,o),
(366,-3,o),
(383,-3,qs),
(390,-3,o),
(403,4,o),
(410,8,q),
(412,10,o),
(413,19,o),
(413,23,qs),
(413,440,ls),
(413,445,o),
(404,449,o),
(399,449,qs),
(365,449,o),
(274,451,o),
(174,451,o),
(79,451,o),
(40,449,q),
(40,21,l),
(42,0,o),
(61,0,qs),
(66,0,o),
(103,0,o),
(140,0,o),
(144,-1,q),
(152,-1,o),
(167,-1,o),
(172,-4,qs),
(180,-9,o)
);
},
{
closed = 1;
nodes = (
(228,25,o),
(221,30,qs),
(219,32,o),
(208,25,o),
(204,26,qs),
(200,28,o),
(192,32,o),
(187,27,qs),
(183,23,o),
(179,26,qs),
(176,29,o),
(134,30,o),
(88,30,o),
(76,30,qs),
(72,30,o),
(67,38,o),
(69,42,q),
(74,47,o),
(76,58,o),
(76,65,qs),
(76,73,o),
(75,112,o),
(74,158,o),
(73,197,o),
(73,205,qs),
(73,220,o),
(67,228,qs),
(63,232,o),
(68,239,qs),
(75,249,o),
(75,260,qs),
(75,265,o),
(73,275,o),
(71,279,qs),
(63,294,o),
(73,304,q),
(75,307,o),
(72,312,q),
(72,374,l),
(74,375,o),
(72,383,o),
(70,384,q),
(64,391,o),
(66,408,o),
(70,418,q),
(81,420,o),
(121,422,o),
(132,422,qs),
(140,422,o),
(154,423,o),
(161,415,q),
(172,413,o),
(184,424,o),
(190,415,q),
(194,415,o),
(237,416,o),
(292,418,o),
(335,418,o),
(338,418,qs),
(349,417,o),
(378,414,o),
(381,414,q),
(381,377,o),
(383,340,o),
(384,315,o),
(382,276,o),
(379,236,q),
(379,109,ls),
(379,105,o),
(381,69,o),
(381,35,o),
(379,31,q),
(354,31,o),
(299,28,o),
(257,25,o),
(249,25,qs),
(242,25,o)
);
},
{
closed = 1;
nodes = (
(263,215,o),
(249,225,o),
(249,236,qs),
(249,251,o),
(218,254,o),
(207,252,qs),
(200,251,o),
(189,232,o),
(189,224,qs),
(189,216,o),
(195,208,qs),
(202,199,o),
(231,183,o),
(241,193,qs),
(255,207,ls)
);
},
{
closed = 1;
nodes = (
(218,215,o),
(216,217,q),
(214,218,o),
(214,221,qs),
(214,227,o),
(219,229,qs),
(222,230,o),
(230,229,o),
(230,225,qs),
(230,221,o),
(234,219,o),
(232,217,qs),
(228,213,ls),
(225,210,o)
);
},
{
closed = 1;
nodes = (
(422,417,o),
(426,419,qs),
(433,424,o),
(454,418,o),
(464,419,qs),
(489,421,o),
(523,434,o),
(524,462,qs),
(524,494,ls),
(524,499,o),
(524,529,o),
(525,533,qs),
(530,547,o),
(527,566,o),
(519,578,q),
(514,589,o),
(503,591,o),
(495,578,q),
(498,572,o),
(492,562,o),
(493,557,qs),
(496,538,o),
(494,524,o),
(492,519,o),
(493,512,q),
(495,507,o),
(493,484,o),
(493,479,qs),
(494,462,o),
(468,450,o),
(432,449,o),
(400,450,o),
(394,445,q),
(388,445,o),
(388,419,o),
(400,419,q),
(403,420,o)
);
},
{
closed = 1;
nodes = (
(248,542,o),
(237,552,qs),
(216,570,o),
(204,586,q),
(196,593,o),
(182,606,o),
(175,614,qs),
(171,619,o),
(162,629,o),
(155,630,q),
(153,632,o),
(147,627,o),
(145,628,qs),
(142,630,o),
(131,619,o),
(132,616,qs),
(137,604,o),
(147,581,o),
(163,576,qs),
(169,574,o),
(180,566,o),
(184,561,qs),
(192,552,o),
(213,530,o),
(229,516,qs),
(247,503,o),
(275,508,o),
(279,512,q),
(269,522,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
98 79 77 53 48 5 4 6 28 19 9 3 0 4 2 76 194 169 163 160 153 5 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 7 1 6 6 7 114 12 9 2 6 6 1 98 10 1 1 1 40 77 8 5 11 3 4 4 0 97 3 2 2 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
12 9 7 3 6 6 1 97 10 1 1 1 40 77 8 5 11 3 4 4 0 97 3 2 2 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 7 1 6 6 7 114 12 9 2 6 6 1 98 10 1 1 1 40 77 8 5 11 3 4 4 0 97 3 2 2 0 0 38 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
146 145 40 39 151 149 145 181 146 179 104 100 69 66 60 56 43 41 39 115 40 114 69 41 82 68 13 8 26 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni1EDD;
unicode = 7901;
},
{
glyphname = uni1EDF;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (347,-42);
ref = uni031B;
},
{
pos = (117,-92);
ref = hookabovecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-42 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
-92 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni1EDF;
unicode = 7903;
},
{
glyphname = uni1EE1;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (347,-42);
ref = uni031B;
},
{
pos = (98,-155);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-42 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
-155 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni1EE1;
unicode = 7905;
},
{
glyphname = ohungarumlaut;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (98,-130);
ref = uni030B;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 2 
PUSHW[ ]	/* 1 value pushed */
-130 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = ohungarumlaut;
unicode = 337;
},
{
glyphname = uni020F;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (121,-132);
ref = uni0311;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-132 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni020F;
unicode = 527;
},
{
glyphname = omacron;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (53,300);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
300 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = omacron;
unicode = 333;
},
{
glyphname = uni1E53;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (53,300);
ref = hyphen;
},
{
pos = (128,12);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
300 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
12 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni1E53;
unicode = 7763;
},
{
glyphname = uni1E51;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(191,1,o),
(198,0,qs),
(204,0,o),
(233,-1,o),
(268,0,o),
(295,1,o),
(298,2,qs),
(305,4,o),
(317,-7,o),
(324,3,q),
(338,-7,o),
(366,-3,o),
(383,-3,qs),
(390,-3,o),
(403,4,o),
(410,8,q),
(412,10,o),
(413,19,o),
(413,23,qs),
(413,440,ls),
(413,445,o),
(404,449,o),
(399,449,qs),
(365,449,o),
(274,451,o),
(174,451,o),
(79,451,o),
(40,449,q),
(40,21,l),
(42,0,o),
(61,0,qs),
(66,0,o),
(103,0,o),
(140,0,o),
(144,-1,q),
(152,-1,o),
(167,-1,o),
(172,-4,qs),
(180,-9,o)
);
},
{
closed = 1;
nodes = (
(228,25,o),
(221,30,qs),
(219,32,o),
(208,25,o),
(204,26,qs),
(200,28,o),
(192,32,o),
(187,27,qs),
(183,23,o),
(179,26,qs),
(176,29,o),
(134,30,o),
(88,30,o),
(76,30,qs),
(72,30,o),
(67,38,o),
(69,42,q),
(74,47,o),
(76,58,o),
(76,65,qs),
(76,73,o),
(75,112,o),
(74,158,o),
(73,197,o),
(73,205,qs),
(73,220,o),
(67,228,qs),
(63,232,o),
(68,239,qs),
(75,249,o),
(75,260,qs),
(75,265,o),
(73,275,o),
(71,279,qs),
(63,294,o),
(73,304,q),
(75,307,o),
(72,312,q),
(72,374,l),
(74,375,o),
(72,383,o),
(70,384,q),
(64,391,o),
(66,408,o),
(70,418,q),
(81,420,o),
(121,422,o),
(132,422,qs),
(140,422,o),
(154,423,o),
(161,415,q),
(172,413,o),
(184,424,o),
(190,415,q),
(194,415,o),
(237,416,o),
(292,418,o),
(335,418,o),
(338,418,qs),
(349,417,o),
(378,414,o),
(381,414,q),
(381,377,o),
(383,340,o),
(384,315,o),
(382,276,o),
(379,236,q),
(379,109,ls),
(379,105,o),
(381,69,o),
(381,35,o),
(379,31,q),
(354,31,o),
(299,28,o),
(257,25,o),
(249,25,qs),
(242,25,o)
);
},
{
closed = 1;
nodes = (
(263,215,o),
(249,225,o),
(249,236,qs),
(249,251,o),
(218,254,o),
(207,252,qs),
(200,251,o),
(189,232,o),
(189,224,qs),
(189,216,o),
(195,208,qs),
(202,199,o),
(231,183,o),
(241,193,qs),
(255,207,ls)
);
},
{
closed = 1;
nodes = (
(218,215,o),
(216,217,q),
(214,218,o),
(214,221,qs),
(214,227,o),
(219,229,qs),
(222,230,o),
(230,229,o),
(230,225,qs),
(230,221,o),
(234,219,o),
(232,217,qs),
(228,213,ls),
(225,210,o)
);
},
{
closed = 1;
nodes = (
(308,542,o),
(319,545,qs),
(322,546,o),
(322,559,o),
(319,559,qs),
(315,560,o),
(313,566,o),
(310,567,qs),
(307,568,o),
(301,569,o),
(296,569,qs),
(289,569,o),
(273,568,o),
(265,568,qs),
(235,568,ls),
(222,567,o),
(218,566,o),
(213,567,o),
(200,568,qs),
(133,568,l),
(133,561,o),
(141,549,o),
(158,544,q),
(159,543,o),
(174,542,o),
(177,542,qs),
(201,541,o),
(223,541,o),
(230,542,qs),
(238,544,o),
(253,541,o),
(260,538,qs),
(269,535,o),
(277,535,qs),
(288,535,o)
);
},
{
closed = 1;
nodes = (
(248,661,o),
(237,671,qs),
(216,689,o),
(204,705,q),
(196,712,o),
(182,725,o),
(175,733,qs),
(171,738,o),
(162,748,o),
(155,749,q),
(153,751,o),
(147,746,o),
(145,747,qs),
(142,749,o),
(131,738,o),
(132,735,qs),
(137,723,o),
(147,700,o),
(163,695,qs),
(169,693,o),
(180,685,o),
(184,680,qs),
(192,671,o),
(213,649,o),
(229,635,qs),
(247,622,o),
(275,627,o),
(279,631,q),
(269,641,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
98 79 77 53 48 5 4 6 28 19 9 3 0 4 2 76 192 1 10 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 7 1 6 6 7 114 0 9 12 10 9 89 11 1 10 14 1 12 1 10 12 105 0 6 6 1 96 0 1 1 40 77 8 5 13 3 4 4 0 97 3 2 2 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 9 12 10 9 89 11 1 10 14 1 12 1 10 12 105 7 1 6 6 1 95 0 1 1 40 77 8 5 13 3 4 4 0 97 3 2 2 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 7 1 6 6 7 114 0 9 12 10 9 89 11 1 10 14 1 12 1 10 12 105 0 6 6 1 96 0 1 1 40 77 8 5 13 3 4 4 0 97 3 2 2 0 0 38 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
145 145 40 39 145 179 145 179 169 164 163 161 155 150 104 100 69 66 60 56 43 41 39 115 40 114 69 41 82 68 15 8 26 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni1E51;
unicode = 7761;
},
{
glyphname = uniA7B7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(528,32,o),
(529,45,o),
(528,61,q),
(529,65,o),
(529,82,o),
(529,83,qs),
(531,104,o),
(506,110,o),
(504,100,qs),
(503,89,o),
(501,64,o),
(501,58,qs),
(501,34,o),
(500,28,q),
(490,28,o),
(441,27,o),
(379,27,q),
(392,65,o),
(425,147,o),
(457,223,o),
(466,253,qs),
(469,262,o),
(464,267,qs),
(461,271,o),
(454,281,o),
(450,285,qs),
(440,297,o),
(431,321,o),
(420,329,qs),
(416,332,o),
(391,362,o),
(357,402,o),
(324,442,o),
(301,468,o),
(300,469,qs),
(290,477,o),
(277,464,q),
(274,462,o),
(243,428,o),
(200,381,o),
(156,332,o),
(122,295,o),
(118,291,qs),
(108,281,o),
(106,258,o),
(109,250,qs),
(115,234,o),
(137,177,o),
(161,114,o),
(179,63,o),
(182,52,qs),
(188,29,o),
(175,29,qs),
(172,29,o),
(143,29,o),
(106,29,o),
(74,29,o),
(68,29,qs),
(64,29,l),
(66,34,o),
(65,54,o),
(61,60,q),
(69,69,o),
(64,88,o),
(57,109,o),
(60,119,q),
(56,122,o),
(49,126,o),
(43,121,qs),
(39,117,o),
(33,103,o),
(32,86,q),
(29,75,o),
(32,38,o),
(33,24,q),
(31,17,o),
(35,13,qs),
(38,9,o),
(45,2,o),
(50,2,qs),
(62,3,o),
(81,3,o),
(89,4,qs),
(98,6,o),
(112,-5,o),
(122,2,q),
(126,-1,o),
(136,-2,o),
(141,-2,qs),
(152,-2,o),
(172,5,o),
(181,4,qs),
(187,4,o),
(199,2,o),
(205,2,qs),
(219,4,o),
(223,28,o),
(218,40,qs),
(206,69,o),
(178,143,o),
(153,212,o),
(138,259,o),
(138,262,qs),
(139,268,o),
(158,286,o),
(159,290,q),
(164,299,o),
(176,308,qs),
(185,314,o),
(202,339,o),
(220,365,o),
(229,369,q),
(231,371,o),
(253,391,o),
(279,417,o),
(286,424,qs),
(290,428,o),
(293,424,qs),
(346,368,ls),
(366,348,o),
(410,285,o),
(429,259,qs),
(433,253,o),
(431,248,qs),
(425,234,o),
(416,194,o),
(409,182,qs),
(400,165,o),
(380,115,o),
(364,70,o),
(358,60,qs),
(354,53,o),
(349,29,o),
(342,22,q),
(340,19,o),
(341,13,o),
(342,8,q),
(342,1,o),
(349,1,qs),
(384,0,o),
(457,3,o),
(476,0,qs),
(487,-1,o),
(520,2,o),
(524,3,q),
(526,19,o)
);
},
{
closed = 1;
nodes = (
(316,197,o),
(320,208,qs),
(322,215,o),
(316,243,o),
(299,248,qs),
(289,251,o),
(266,241,o),
(256,236,q),
(245,228,o),
(250,214,qs),
(253,205,o),
(263,194,o),
(273,192,qs),
(291,187,o)
);
},
{
closed = 1;
nodes = (
(276,218,q),
(276,223,o),
(277,223,q),
(283,229,o),
(289,227,qs),
(294,226,o),
(294,218,o),
(293,217,q),
(291,210,o),
(282,213,q),
(278,213,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
70 65 50 3 0 4 1 76 167 139 83 73 27 21 6 4 74 5 1 4 4 0 97 3 2 1 3 0 0 38 0 78 131 128 93 88 64 63 58 55 54 52 36 6 8 23 
CALL[ ]	/* CallFunction */";
};
width = 559;
}
);
note = uniA7B7;
unicode = 42935;
},
{
glyphname = uni01EB;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (324,40);
ref = uni0328;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
40 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni01EB;
unicode = 491;
},
{
glyphname = uni01ED;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (324,40);
ref = uni0328;
},
{
pos = (53,300);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
40 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
300 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni01ED;
unicode = 493;
},
{
glyphname = uni0254;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(128,6,o),
(229,5,o),
(322,5,qs),
(328,5,o),
(339,4,o),
(345,5,qs),
(350,5,o),
(362,18,o),
(362,23,qs),
(362,26,o),
(362,29,o),
(362,56,o),
(362,129,o),
(362,273,o),
(362,393,qs),
(362,400,o),
(364,415,o),
(368,422,q),
(369,423,o),
(367,436,o),
(366,436,q),
(359,442,o),
(353,449,o),
(342,449,qs),
(30,449,ls),
(23,449,o),
(9,435,o),
(10,429,q),
(12,424,o),
(24,413,o),
(30,413,qs),
(72,413,ls),
(81,413,o),
(89,418,qs),
(104,428,o),
(114,424,o),
(126,413,o),
(143,413,qs),
(166,413,l),
(179,424,o),
(203,422,o),
(231,413,o),
(248,413,qs),
(312,413,ls),
(318,413,o),
(329,412,o),
(334,409,q),
(334,390,o),
(337,359,o),
(332,340,qs),
(331,337,o),
(328,333,o),
(331,329,qs),
(335,322,o),
(335,313,qs),
(335,287,o),
(336,246,o),
(336,220,qs),
(336,213,o),
(326,193,o),
(331,186,qs),
(337,179,o),
(331,159,o),
(328,153,qs),
(324,145,o),
(334,131,o),
(334,120,qs),
(333,113,o),
(323,99,o),
(328,92,qs),
(335,83,o),
(335,54,qs),
(335,49,o),
(321,28,o),
(313,34,qs),
(303,42,o),
(288,42,o),
(277,34,q),
(266,44,o),
(242,40,o),
(228,33,q),
(222,31,o),
(208,33,o),
(201,33,qs),
(163,33,o),
(117,35,o),
(71,36,o),
(33,36,qs),
(28,36,o),
(15,38,o),
(13,32,qs),
(10,22,o),
(10,17,qs),
(10,6,o),
(30,9,o),
(56,14,o),
(64,5,qs),
(66,3,o),
(82,1,o),
(83,2,qs),
(88,6,o)
);
},
{
closed = 1;
nodes = (
(177,201,o),
(198,205,o),
(199,210,qs),
(201,218,o),
(203,238,o),
(195,248,q),
(191,255,o),
(168,274,o),
(160,269,q),
(140,260,o),
(140,229,qs),
(140,222,o),
(145,202,o),
(151,202,qs),
(155,202,o)
);
},
{
closed = 1;
nodes = (
(163,232,o),
(163,234,qs),
(163,242,o),
(167,245,qs),
(169,247,o),
(176,240,o),
(177,238,q),
(179,236,o),
(179,231,o),
(179,228,q),
(178,226,o),
(167,226,o),
(166,226,qs),
(164,226,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
53 47 2 9 3 7 1 0 1 2 76 116 1 9 22 1 1 2 75 0 2 8 1 1 2 114 0 9 10 1 8 2 9 8 105 5 4 2 3 3 6 95 0 6 6 40 77 0 1 1 0 98 7 1 0 0 38 0 78 102 101 118 117 101 115 102 114 100 96 77 74 69 67 63 61 58 55 23 89 32 11 8 25 
CALL[ ]	/* CallFunction */";
};
width = 408;
}
);
note = uni0254;
unicode = 596;
},
{
glyphname = oslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(72,-17,o),
(83,-1,q),
(100,-2,o),
(138,-1,o),
(142,-2,q),
(150,-2,o),
(165,-2,o),
(170,-4,q),
(178,-9,o),
(189,0,o),
(196,-1,qs),
(202,-1,o),
(238,-2,o),
(281,-2,o),
(314,-2,o),
(317,-1,qs),
(324,1,o),
(335,-11,o),
(342,-2,q),
(356,-11,o),
(384,-8,o),
(401,-8,qs),
(408,-8,o),
(421,-2,o),
(428,2,q),
(430,4,o),
(431,12,o),
(431,16,qs),
(431,441,l),
(431,441,o),
(425,448,q),
(424,448,o),
(419,449,o),
(417,449,qs),
(408,449,l),
(411,454,o),
(417,463,o),
(421,468,qs),
(427,474,o),
(433,490,o),
(434,497,qs),
(434,503,o),
(433,514,o),
(428,514,qs),
(424,514,o),
(405,502,o),
(391,480,qs),
(371,450,l),
(333,451,o),
(240,454,o),
(146,454,o),
(65,452,o),
(38,449,q),
(38,19,l),
(40,9,o),
(45,4,q),
(44,3,o),
(42,-1,qs),
(29,-24,o),
(22,-46,o),
(20,-54,qs),
(19,-64,o),
(31,-67,o),
(35,-63,qs),
(49,-46,o)
);
},
{
closed = 1;
nodes = (
(64,42,qs),
(69,47,o),
(71,57,o),
(71,63,qs),
(71,230,ls),
(71,244,o),
(65,252,qs),
(64,253,o),
(65,260,o),
(66,262,q),
(73,270,o),
(73,281,qs),
(73,286,o),
(71,295,o),
(69,299,qs),
(65,306,o),
(65,316,o),
(71,322,q),
(72,324,o),
(71,341,o),
(70,384,q),
(72,385,o),
(70,392,o),
(68,393,q),
(62,399,o),
(64,416,o),
(68,425,q),
(79,427,o),
(119,425,o),
(130,425,qs),
(138,425,o),
(152,426,o),
(159,419,q),
(170,417,o),
(182,427,o),
(188,419,q),
(191,419,o),
(232,419,o),
(287,419,o),
(336,418,o),
(348,418,q),
(325,384,o),
(290,334,o),
(285,325,qs),
(276,308,o),
(253,292,o),
(245,275,qs),
(240,263,o),
(220,250,o),
(212,238,qs),
(207,230,o),
(189,195,o),
(168,162,o),
(160,155,qs),
(143,138,o),
(135,118,q),
(134,111,o),
(120,95,o),
(115,87,q),
(106,77,o),
(79,48,o),
(66,33,q),
(59,35,o)
);
},
{
closed = 1;
nodes = (
(226,23,o),
(219,27,q),
(217,29,o),
(206,22,o),
(202,23,qs),
(198,25,o),
(190,29,o),
(185,24,qs),
(181,20,o),
(177,23,qs),
(173,26,o),
(125,29,o),
(102,30,q),
(108,38,o),
(119,55,o),
(126,62,qs),
(137,74,o),
(151,95,o),
(158,107,qs),
(184,151,o),
(246,230,o),
(276,270,qs),
(282,278,o),
(299,290,o),
(302,300,qs),
(305,317,o),
(324,327,o),
(331,337,qs),
(342,353,o),
(362,384,o),
(384,415,q),
(392,415,o),
(404,414,o),
(405,414,q),
(405,380,o),
(405,349,o),
(404,329,o),
(400,296,o),
(397,259,q),
(397,95,ls),
(397,91,o),
(397,59,o),
(395,27,o),
(393,23,q),
(355,22,o),
(274,22,o),
(247,22,qs),
(240,22,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
11 1 7 1 141 136 123 3 9 6 36 10 6 3 4 8 3 76 45 1 4 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 2 1 2 133 0 7 1 6 6 7 114 0 0 3 0 134 0 6 6 1 98 0 1 1 40 77 0 9 9 4 97 5 1 4 4 38 77 10 1 8 8 4 97 5 1 4 4 38 77 0 3 3 44 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 2 1 2 133 0 7 1 6 6 7 114 0 0 3 0 134 0 6 6 1 98 0 1 1 40 77 0 9 9 4 97 5 1 4 4 47 77 10 1 8 8 4 97 5 1 4 4 47 77 0 3 3 44 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
131 128 164 162 128 175 131 175 99 96 90 86 62 60 52 48 43 41 35 74 32 11 8 25 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = oslash;
unicode = 248;
},
{
glyphname = oslashacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = oslash;
},
{
pos = (159,-107);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-107 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = oslashacute;
unicode = 511;
},
{
glyphname = otilde;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (98,-155);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-155 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = otilde;
unicode = 245;
},
{
glyphname = uni1E4D;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (98,-155);
ref = tildecomb;
},
{
pos = (158,23);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-155 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
23 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni1E4D;
unicode = 7757;
},
{
glyphname = uni1E4F;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (98,-155);
ref = tildecomb;
},
{
pos = (76,10);
ref = uni0308;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-155 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 2 
PUSHB[ ]	/* 1 value pushed */
10 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni1E4F;
unicode = 7759;
},
{
glyphname = uni022D;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (98,-155);
ref = tildecomb;
},
{
pos = (63,430);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-155 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
430 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni022D;
unicode = 557;
},
{
glyphname = uni0223;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(227,-6,o),
(236,4,qs),
(243,12,o),
(268,37,o),
(275,44,q),
(278,46,o),
(278,52,o),
(281,54,q),
(284,58,o),
(296,63,o),
(295,68,q),
(312,85,o),
(330,100,o),
(330,107,q),
(343,115,o),
(357,134,o),
(368,142,qs),
(385,154,o),
(407,185,o),
(422,198,qs),
(427,203,o),
(421,208,qs),
(408,219,o),
(388,243,o),
(371,253,qs),
(361,259,o),
(361,265,qs),
(360,271,o),
(351,279,o),
(347,283,q),
(344,288,o),
(324,307,o),
(305,327,o),
(302,331,qs),
(298,337,o),
(285,349,o),
(282,356,qs),
(278,364,o),
(264,376,o),
(257,383,q),
(247,396,o),
(233,409,o),
(221,415,q),
(251,414,o),
(310,414,o),
(353,414,o),
(360,415,qs),
(365,415,o),
(378,428,o),
(378,433,q),
(379,437,o),
(378,481,o),
(378,531,o),
(378,542,qs),
(378,566,o),
(383,580,o),
(388,590,o),
(388,604,qs),
(388,614,o),
(377,636,o),
(387,649,q),
(380,667,o),
(384,680,o),
(392,695,o),
(392,714,qs),
(392,726,o),
(377,729,o),
(360,721,o),
(355,715,qs),
(351,709,o),
(351,699,o),
(351,694,qs),
(351,655,o),
(344,572,o),
(342,511,o),
(349,503,q),
(340,492,o),
(341,477,o),
(349,466,qs),
(352,462,o),
(348,453,o),
(344,450,qs),
(337,446,o),
(284,442,o),
(215,441,o),
(146,442,o),
(98,444,o),
(94,444,q),
(88,456,o),
(88,468,qs),
(88,498,o),
(89,530,o),
(89,536,qs),
(89,558,l),
(90,566,o),
(83,577,o),
(81,584,qs),
(79,591,o),
(79,608,o),
(84,615,qs),
(86,618,o),
(89,637,o),
(89,641,qs),
(89,706,ls),
(89,720,o),
(71,728,o),
(52,719,o),
(52,705,qs),
(52,436,ls),
(52,425,o),
(68,414,o),
(74,407,q),
(85,412,o),
(102,416,o),
(110,416,qs),
(117,416,o),
(172,415,o),
(206,415,q),
(206,414,o),
(205,414,q),
(198,411,o),
(191,402,o),
(188,397,qs),
(187,395,o),
(186,391,o),
(182,389,qs),
(173,385,o),
(165,373,o),
(160,368,qs),
(153,362,o),
(142,350,o),
(134,345,qs),
(127,341,o),
(128,330,o),
(119,327,q),
(118,324,o),
(94,300,o),
(61,268,o),
(29,237,o),
(21,227,qs),
(13,217,o),
(10,208,q),
(10,205,o),
(28,180,o),
(51,153,o),
(57,146,qs),
(64,139,o),
(79,127,o),
(79,119,q),
(111,86,l),
(128,76,o),
(154,53,o),
(165,41,qs),
(170,36,o),
(180,26,o),
(181,21,q),
(187,12,ls),
(195,1,o)
);
},
{
closed = 1;
nodes = (
(165,80,o),
(149,96,qs),
(145,101,o),
(138,109,o),
(130,112,qs),
(123,115,o),
(125,123,o),
(121,127,qs),
(101,145,o),
(82,172,qs),
(78,177,o),
(66,187,o),
(66,191,qs),
(66,194,o),
(51,203,o),
(50,206,qs),
(49,211,o),
(58,217,o),
(59,220,q),
(72,238,o),
(109,269,o),
(122,287,q),
(133,291,o),
(140,302,o),
(144,307,qs),
(147,312,o),
(169,336,o),
(194,358,o),
(201,361,q),
(207,367,o),
(213,375,o),
(219,377,q),
(227,369,o),
(256,335,o),
(266,328,qs),
(274,322,o),
(305,289,o),
(332,258,o),
(334,254,qs),
(336,250,o),
(346,242,o),
(347,237,qs),
(347,235,o),
(353,232,o),
(355,230,qs),
(383,204,l),
(379,199,o),
(367,188,o),
(359,176,qs),
(348,156,o),
(329,144,qs),
(323,140,o),
(319,129,o),
(311,125,q),
(310,119,o),
(292,111,o),
(290,106,qs),
(288,102,o),
(261,75,o),
(256,70,q),
(250,66,o),
(249,55,o),
(238,50,qs),
(231,47,o),
(232,37,o),
(225,33,qs),
(218,29,o),
(213,28,o),
(208,32,q),
(194,48,o)
);
},
{
closed = 1;
nodes = (
(250,201,o),
(248,205,qs),
(244,214,o),
(233,230,o),
(222,235,qs),
(213,238,o),
(205,231,o),
(199,230,qs),
(192,229,o),
(174,211,o),
(176,206,qs),
(179,199,o),
(185,184,o),
(190,178,qs),
(193,175,o),
(226,175,qs),
(231,175,o)
);
},
{
closed = 1;
nodes = (
(206,199,qs),
(203,203,o),
(201,207,qs),
(200,209,o),
(206,213,o),
(208,214,q),
(210,214,o),
(212,217,o),
(215,215,q),
(218,214,o),
(221,209,o),
(223,206,qs),
(224,205,o),
(218,197,o),
(216,197,qs),
(207,197,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
242 233 195 181 45 5 4 0 1 76 96 81 63 54 4 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
6 1 4 5 1 3 4 3 101 2 1 0 0 1 97 0 1 1 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 1 0 4 1 0 105 6 1 4 3 3 4 89 6 1 4 4 3 97 5 1 3 4 3 81 
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 21 values pushed */
245 245 229 228 245 260 245 260 228 244 229 244 114 111 73 69 43 37 7 8 22 
CALL[ ]	/* CallFunction */";
};
width = 434;
}
);
note = uni0223;
unicode = 547;
},
{
glyphname = oe;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (335,-2);
ref = e;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 4 
PUSHW[ ]	/* 1 value pushed */
-2 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 784;
}
);
note = oe;
unicode = 339;
},
{
glyphname = p;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(407,36,o),
(405,43,q),
(405,57,o),
(415,80,o),
(407,88,q),
(414,95,o),
(411,107,o),
(407,113,q),
(418,125,o),
(406,138,q),
(406,161,o),
(406,208,o),
(407,230,qs),
(407,235,o),
(416,244,o),
(411,248,qs),
(404,255,o),
(413,264,o),
(413,269,qs),
(413,430,ls),
(413,437,o),
(402,448,o),
(396,448,qs),
(391,449,o),
(379,449,o),
(374,449,qs),
(156,449,ls),
(151,449,o),
(138,447,o),
(134,450,qs),
(128,455,o),
(115,456,o),
(109,457,qs),
(69,461,l),
(50,461,o),
(42,449,o),
(42,446,qs),
(42,419,l),
(40,122,ls),
(40,115,o),
(43,102,o),
(48,96,q),
(41,85,o),
(41,69,qs),
(41,-181,ls),
(41,-195,o),
(57,-201,o),
(74,-194,o),
(75,-190,qs),
(76,-186,o),
(76,-163,o),
(76,-139,o),
(75,-135,q),
(75,-130,o),
(66,-115,o),
(69,-112,qs),
(74,-107,o),
(69,-99,o),
(69,-94,q),
(70,-90,o),
(76,-80,o),
(76,-74,qs),
(75,-69,o),
(75,-59,o),
(75,-54,qs),
(76,213,ls),
(76,225,o),
(68,233,q),
(68,244,o),
(66,265,o),
(73,274,qs),
(80,286,o),
(71,298,q),
(66,303,o),
(73,322,o),
(75,329,qs),
(77,335,o),
(65,348,o),
(75,356,q),
(87,337,o),
(111,306,o),
(117,300,qs),
(137,279,o),
(198,214,o),
(266,142,o),
(329,76,o),
(374,31,o),
(381,27,qs),
(387,22,o),
(390,25,q),
(396,26,o)
);
},
{
closed = 1;
nodes = (
(81,423,o),
(96,425,o),
(99,422,q),
(105,418,o),
(118,415,o),
(125,415,qs),
(375,415,ls),
(383,415,o),
(383,404,qs),
(383,338,o),
(382,277,o),
(383,257,o),
(384,253,qs),
(387,244,o),
(374,231,o),
(381,223,q),
(380,217,o),
(375,207,o),
(376,200,qs),
(377,193,o),
(374,163,o),
(381,156,q),
(376,147,o),
(383,135,q),
(385,133,o),
(384,123,o),
(383,119,qs),
(382,113,o),
(375,83,o),
(375,78,q),
(318,138,o),
(209,253,o),
(155,309,qs),
(150,314,o),
(136,326,o),
(134,332,qs),
(132,340,o),
(108,372,o),
(85,401,o),
(81,405,qs),
(73,414,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
53 1 3 1 1 76 109 101 88 85 82 80 71 48 34 22 10 2 73 0 3 1 2 1 3 2 128 0 0 0 46 77 0 2 2 1 95 0 1 1 40 2 78 130 128 125 123 66 60 56 55 4 8 22 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = p;
unicode = 112;
},
{
glyphname = uni1E55;
layers = (
{
layerId = m01;
shapes = (
{
ref = p;
},
{
pos = (162,-107);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHW[ ]	/* 1 value pushed */
-107 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni1E55;
unicode = 7765;
},
{
glyphname = uni1E57;
layers = (
{
layerId = m01;
shapes = (
{
ref = p;
},
{
pos = (166,-134);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHW[ ]	/* 1 value pushed */
-134 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni1E57;
unicode = 7767;
},
{
glyphname = uni01A5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(407,36,o),
(405,43,q),
(405,57,o),
(415,80,o),
(407,88,q),
(414,95,o),
(411,107,o),
(407,113,q),
(418,125,o),
(406,138,q),
(406,161,o),
(406,208,o),
(407,230,qs),
(407,235,o),
(416,244,o),
(411,248,qs),
(404,255,o),
(413,264,o),
(413,269,qs),
(413,430,ls),
(413,437,o),
(402,448,o),
(396,448,qs),
(391,449,o),
(379,449,o),
(374,449,qs),
(156,449,ls),
(151,449,o),
(138,447,o),
(134,450,qs),
(128,455,o),
(115,456,o),
(109,457,qs),
(77,460,l),
(77,470,o),
(76,489,o),
(74,491,q),
(74,502,o),
(72,523,o),
(79,532,qs),
(86,544,o),
(77,556,q),
(72,561,o),
(79,580,o),
(81,587,qs),
(82,590,o),
(79,610,o),
(79,629,o),
(90,634,o),
(105,621,qs),
(111,617,o),
(124,614,o),
(131,614,qs),
(231,614,ls),
(255,614,o),
(271,624,o),
(267,637,o),
(255,647,o),
(252,647,qs),
(247,648,o),
(235,648,o),
(230,648,qs),
(162,648,ls),
(157,648,o),
(144,646,o),
(140,649,qs),
(134,654,o),
(121,655,o),
(115,656,qs),
(75,660,l),
(56,660,o),
(48,648,o),
(48,645,qs),
(48,618,l),
(42,484,l),
(42,419,l),
(40,122,ls),
(40,115,o),
(43,102,o),
(48,96,q),
(41,85,o),
(41,69,qs),
(41,-181,ls),
(41,-195,o),
(57,-201,o),
(74,-194,o),
(75,-190,qs),
(76,-186,o),
(76,-163,o),
(76,-139,o),
(75,-135,q),
(75,-130,o),
(66,-115,o),
(69,-112,qs),
(74,-107,o),
(69,-99,o),
(69,-94,q),
(70,-90,o),
(76,-80,o),
(76,-74,qs),
(75,-69,o),
(75,-59,o),
(75,-54,qs),
(76,213,ls),
(76,225,o),
(68,233,q),
(68,244,o),
(66,265,o),
(73,274,qs),
(80,286,o),
(71,298,q),
(66,303,o),
(73,322,o),
(75,329,qs),
(77,335,o),
(65,348,o),
(75,356,q),
(87,337,o),
(111,306,o),
(117,300,qs),
(137,279,o),
(198,214,o),
(266,142,o),
(329,76,o),
(374,31,o),
(381,27,qs),
(387,22,o),
(390,25,q),
(396,26,o)
);
},
{
closed = 1;
nodes = (
(81,423,o),
(96,425,o),
(99,422,q),
(105,418,o),
(118,415,o),
(125,415,qs),
(375,415,ls),
(383,415,o),
(383,404,qs),
(383,338,o),
(382,277,o),
(383,257,o),
(384,253,qs),
(387,244,o),
(374,231,o),
(381,223,q),
(380,217,o),
(375,207,o),
(376,200,qs),
(377,193,o),
(374,163,o),
(381,156,q),
(376,147,o),
(383,135,q),
(385,133,o),
(384,123,o),
(383,119,qs),
(382,113,o),
(375,83,o),
(375,78,q),
(318,138,o),
(209,253,o),
(155,309,qs),
(150,314,o),
(136,326,o),
(134,332,qs),
(132,340,o),
(108,372,o),
(85,401,o),
(81,405,qs),
(73,414,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
55 1 2 1 94 91 2 3 2 2 76 147 139 126 123 120 118 109 48 34 22 10 4 73 0 0 1 0 133 0 5 3 4 3 5 4 128 0 1 0 2 3 1 2 103 0 4 4 3 95 0 3 3 40 4 78 168 166 163 161 104 98 75 73 68 62 58 57 6 8 22 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = uni01A5;
unicode = 421;
},
{
glyphname = thorn;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(80,-161,o),
(84,-133,q),
(84,-98,o),
(76,-31,o),
(74,0,q),
(84,0,o),
(118,0,o),
(148,0,o),
(151,-1,q),
(159,-1,o),
(174,-1,o),
(179,-4,qs),
(187,-9,o),
(198,1,o),
(205,0,qs),
(211,0,o),
(240,-1,o),
(275,0,o),
(302,1,o),
(305,2,qs),
(312,4,o),
(324,-7,o),
(331,3,q),
(345,-7,o),
(373,-3,o),
(390,-3,qs),
(397,-3,o),
(410,4,o),
(417,8,q),
(419,10,o),
(420,19,o),
(420,23,qs),
(420,440,ls),
(420,445,o),
(411,449,o),
(406,449,qs),
(365,450,o),
(248,451,o),
(124,452,o),
(72,450,q),
(72,596,l),
(71,602,o),
(73,641,o),
(73,648,qs),
(75,676,o),
(64,695,o),
(62,699,q),
(52,696,o),
(47,687,qs),
(44,680,o),
(39,662,o),
(40,653,q),
(41,573,o),
(42,414,o),
(42,334,qs),
(42,306,o),
(47,253,o),
(47,243,qs),
(47,20,ls),
(47,8,o),
(45,-16,o),
(50,-28,q),
(47,-41,o),
(43,-71,o),
(50,-85,q),
(44,-105,o),
(47,-140,o),
(55,-174,o),
(53,-193,q),
(58,-198,o),
(66,-204,o),
(71,-194,qs),
(75,-186,o)
);
},
{
closed = 1;
nodes = (
(235,25,o),
(228,30,qs),
(226,32,o),
(215,25,o),
(211,26,qs),
(207,28,o),
(199,32,o),
(194,27,qs),
(190,23,o),
(186,26,qs),
(183,29,o),
(141,30,o),
(95,30,o),
(83,30,qs),
(80,30,o),
(77,33,q),
(78,36,o),
(83,60,o),
(83,65,qs),
(83,70,o),
(83,94,o),
(82,108,q),
(83,128,o),
(81,169,o),
(82,179,q),
(83,182,o),
(82,210,o),
(82,247,o),
(82,260,qs),
(82,265,o),
(80,275,o),
(78,279,qs),
(70,294,o),
(80,304,q),
(83,311,o),
(82,348,o),
(77,386,o),
(73,392,q),
(73,401,ls),
(73,405,o),
(76,411,o),
(77,415,q),
(88,417,o),
(128,419,o),
(139,419,qs),
(147,419,o),
(161,420,o),
(168,412,q),
(179,410,o),
(191,421,o),
(197,412,q),
(201,412,o),
(244,414,o),
(299,417,o),
(342,418,o),
(345,418,qs),
(356,417,o),
(385,414,o),
(388,414,q),
(388,377,o),
(390,340,o),
(391,315,o),
(389,276,o),
(386,236,q),
(386,109,ls),
(386,105,o),
(386,69,o),
(384,35,o),
(382,31,q),
(344,30,o),
(268,25,o),
(256,25,qs),
(249,25,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
123 107 86 81 4 4 5 49 40 2 1 4 2 76 28 25 20 3 0 74 70 10 7 3 4 1 73 6 1 5 5 0 95 0 0 0 40 77 7 8 2 4 4 1 97 3 2 2 1 1 47 1 78 76 73 134 131 102 99 93 89 73 145 76 144 67 64 56 52 47 45 36 32 9 8 22 
CALL[ ]	/* CallFunction */";
};
width = 460;
}
);
note = thorn;
unicode = 254;
},
{
glyphname = uni1D7D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(48,259,o),
(60,260,q),
(59,122,ls),
(59,115,o),
(62,102,o),
(67,96,q),
(60,85,o),
(60,69,qs),
(60,-181,ls),
(60,-195,o),
(76,-201,o),
(93,-194,o),
(94,-190,qs),
(95,-186,o),
(95,-163,o),
(95,-139,o),
(94,-135,q),
(94,-130,o),
(85,-115,o),
(88,-112,qs),
(93,-107,o),
(88,-99,o),
(88,-94,q),
(89,-90,o),
(95,-80,o),
(95,-74,qs),
(94,-69,o),
(94,-59,o),
(94,-54,qs),
(95,213,ls),
(95,225,o),
(87,233,q),
(87,240,o),
(86,254,o),
(87,261,q),
(88,261,o),
(89,261,qs),
(106,261,o),
(130,262,o),
(137,262,qs),
(145,262,o),
(165,260,o),
(173,255,qs),
(174,254,o),
(179,255,q),
(209,223,o),
(279,148,o),
(345,79,o),
(393,31,o),
(400,27,qs),
(406,22,o),
(409,25,q),
(415,26,o),
(426,36,o),
(424,43,q),
(424,57,o),
(434,80,o),
(426,88,q),
(433,95,o),
(430,107,o),
(426,113,q),
(437,125,o),
(425,138,q),
(425,161,o),
(425,208,o),
(426,230,qs),
(426,235,o),
(435,244,o),
(430,248,qs),
(425,253,o),
(427,259,o),
(429,263,q),
(456,267,o),
(503,277,o),
(526,287,o),
(509,295,o),
(471,298,qs),
(467,298,o),
(446,296,o),
(432,296,q),
(432,430,ls),
(432,437,o),
(421,448,o),
(415,448,qs),
(410,449,o),
(398,449,o),
(393,449,qs),
(175,449,ls),
(170,449,o),
(157,447,o),
(153,450,qs),
(147,455,o),
(134,456,o),
(128,457,qs),
(88,461,l),
(69,461,o),
(61,449,o),
(61,446,qs),
(61,419,l),
(60,288,l),
(42,288,o),
(10,288,o),
(1,288,qs),
(-22,287,o),
(-32,278,o),
(-23,267,o),
(-9,260,o),
(-8,260,qs),
(41,254,l)
);
},
{
closed = 1;
nodes = (
(100,423,o),
(115,425,o),
(118,422,q),
(124,418,o),
(137,415,o),
(144,415,qs),
(394,415,ls),
(402,415,o),
(402,404,qs),
(402,363,o),
(402,310,o),
(401,294,q),
(382,293,o),
(349,291,o),
(343,291,qs),
(317,291,o),
(257,290,o),
(206,290,o),
(191,292,q),
(182,300,o),
(174,309,qs),
(169,314,o),
(155,326,o),
(153,332,qs),
(151,340,o),
(127,372,o),
(104,401,o),
(100,405,qs),
(92,414,o)
);
},
{
closed = 1;
nodes = (
(92,322,o),
(94,329,qs),
(96,335,o),
(84,348,o),
(94,356,q),
(106,337,o),
(130,306,o),
(136,300,qs),
(139,297,o),
(142,294,q),
(141,294,o),
(140,293,q),
(133,291,o),
(109,289,o),
(95,289,q),
(94,293,o),
(90,298,qs),
(85,303,o)
);
},
{
closed = 1;
nodes = (
(332,259,o),
(347,264,q),
(369,257,o),
(395,258,qs),
(402,259,l),
(402,255,o),
(403,253,qs),
(406,244,o),
(393,231,o),
(400,223,q),
(399,217,o),
(394,207,o),
(395,200,qs),
(396,193,o),
(393,163,o),
(400,156,q),
(395,147,o),
(402,135,q),
(404,133,o),
(403,123,o),
(402,119,qs),
(401,113,o),
(394,83,o),
(394,78,q),
(348,126,o),
(261,218,o),
(218,263,q),
(236,266,o),
(278,266,o),
(287,264,qs),
(304,260,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
10 1 7 2 150 1 3 6 143 1 0 3 184 159 2 4 8 4 76 170 162 108 106 102 88 53 50 47 45 10 4 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
10 1 7 2 150 1 3 6 143 1 0 3 184 159 2 4 0 4 76 170 162 108 106 102 88 53 50 47 45 10 4 73 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
10 1 7 2 150 1 3 6 143 1 0 3 184 159 2 4 8 4 76 170 162 108 106 102 88 53 50 47 45 10 4 73 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 7 2 6 2 7 6 128 0 0 3 8 3 0 8 128 10 9 2 4 8 8 4 113 5 1 3 0 8 4 3 8 105 0 1 1 46 77 0 6 6 2 95 0 2 2 40 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 7 2 6 2 7 6 128 0 3 6 0 6 3 0 128 5 1 0 10 9 8 3 4 0 4 101 0 1 1 46 77 0 6 6 2 95 0 2 2 40 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 7 2 6 2 7 6 128 0 0 3 8 3 0 8 128 10 9 2 4 8 8 4 113 5 1 3 0 8 4 3 8 105 0 1 1 46 77 0 6 6 2 95 0 2 2 40 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
186 185 183 182 158 157 136 134 131 129 125 119 71 67 21 100 20 68 11 8 26 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uni1D7D;
unicode = 7549;
},
{
glyphname = q;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(427,-177,o),
(446,-162,qs),
(448,-160,o),
(451,-155,o),
(452,-154,qs),
(454,-152,o),
(458,-152,o),
(459,-151,qs),
(460,-149,o),
(463,-147,o),
(464,-146,q),
(467,-146,o),
(469,-144,qs),
(471,-142,o),
(475,-136,o),
(477,-135,q),
(487,-127,o),
(518,-96,o),
(543,-67,o),
(543,-65,qs),
(543,-64,o),
(548,-52,o),
(545,-41,o),
(533,-44,q),
(531,-45,o),
(526,-49,o),
(524,-49,qs),
(522,-49,o),
(504,-65,qs),
(503,-66,o),
(481,-85,o),
(461,-105,o),
(459,-106,qs),
(458,-107,o),
(458,-112,o),
(455,-113,q),
(455,-113,o),
(451,-115,o),
(449,-116,q),
(436,-126,o),
(416,-146,o),
(414,-145,qs),
(410,-143,o),
(411,-129,o),
(411,-127,qs),
(414,116,o),
(413,415,o),
(411,446,qs),
(411,449,o),
(403,461,o),
(384,461,q),
(344,457,ls),
(338,457,o),
(325,455,o),
(319,450,qs),
(315,447,o),
(302,449,o),
(297,449,qs),
(79,449,ls),
(74,449,o),
(62,449,o),
(57,448,qs),
(51,448,o),
(40,437,o),
(40,430,qs),
(40,269,ls),
(40,264,o),
(50,255,o),
(42,248,qs),
(38,244,o),
(46,235,o),
(46,230,qs),
(47,208,o),
(47,161,o),
(47,138,q),
(35,125,o),
(46,113,q),
(42,107,o),
(39,95,o),
(46,88,q),
(38,80,o),
(48,57,o),
(48,43,q),
(47,36,o),
(57,26,o),
(63,25,q),
(66,22,o),
(72,27,qs),
(79,31,o),
(124,76,o),
(187,142,o),
(255,214,o),
(316,279,o),
(336,300,qs),
(347,311,o),
(370,335,o),
(377,354,q),
(377,91,ls),
(377,84,o),
(379,68,o),
(374,60,q),
(375,51,o),
(376,0,o),
(377,-63,o),
(378,-122,o),
(378,-138,qs),
(378,-139,o),
(380,-161,o),
(381,-166,qs),
(383,-178,o),
(383,-199,o),
(394,-199,qs),
(397,-199,o)
);
},
{
closed = 1;
nodes = (
(72,113,o),
(70,119,qs),
(69,123,o),
(69,133,o),
(70,135,qs),
(77,147,o),
(72,156,q),
(79,163,o),
(76,193,o),
(77,200,qs),
(79,207,o),
(73,217,o),
(72,223,q),
(80,231,o),
(66,244,o),
(69,253,qs),
(71,257,o),
(71,277,o),
(70,338,o),
(70,404,qs),
(70,415,o),
(78,415,qs),
(328,415,ls),
(335,415,o),
(348,418,o),
(354,422,q),
(357,425,o),
(372,423,o),
(380,414,o),
(372,405,qs),
(369,401,o),
(345,372,o),
(322,340,o),
(319,332,q),
(318,326,o),
(303,314,o),
(298,309,qs),
(244,253,o),
(135,138,o),
(78,78,q),
(78,83,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
47 1 3 1 146 143 140 133 40 37 35 32 15 11 10 0 3 2 76 0 2 2 46 77 0 3 3 1 95 0 1 1 40 77 4 1 0 0 48 0 78 1 0 131 129 62 61 54 51 0 112 1 112 5 8 22 
CALL[ ]	/* CallFunction */";
};
width = 467;
}
);
note = q;
unicode = 113;
},
{
glyphname = uni024B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(72,27,qs),
(79,31,o),
(124,76,o),
(187,142,o),
(255,214,o),
(316,279,o),
(336,300,qs),
(342,306,o),
(366,337,o),
(378,356,q),
(388,348,o),
(377,335,o),
(378,329,qs),
(380,322,o),
(387,303,o),
(382,298,q),
(373,286,o),
(380,274,qs),
(387,265,o),
(385,244,o),
(385,233,q),
(377,225,o),
(377,213,qs),
(378,-46,ls),
(378,-51,o),
(378,-61,o),
(377,-66,qs),
(377,-72,o),
(383,-82,o),
(384,-86,q),
(384,-91,o),
(380,-99,o),
(384,-104,qs),
(387,-107,o),
(378,-122,o),
(378,-127,qs),
(378,-131,o),
(377,-155,o),
(378,-178,o),
(378,-182,q),
(379,-184,o),
(381,-186,q),
(389,-198,o),
(419,-199,qs),
(424,-199,o),
(447,-198,o),
(452,-200,q),
(459,-201,o),
(464,-199,o),
(478,-197,o),
(497,-200,qs),
(502,-201,o),
(512,-195,o),
(518,-198,q),
(531,-190,o),
(529,-179,o),
(518,-174,q),
(506,-166,o),
(487,-163,o),
(473,-168,qs),
(469,-169,o),
(439,-169,o),
(434,-169,qs),
(426,-169,o),
(415,-168,o),
(412,-168,q),
(412,69,ls),
(412,85,o),
(405,96,q),
(410,102,o),
(413,115,o),
(413,122,qs),
(411,419,l),
(411,446,ls),
(411,449,o),
(403,461,o),
(384,461,q),
(344,457,ls),
(338,456,o),
(325,455,o),
(319,450,qs),
(315,447,o),
(302,449,o),
(297,449,qs),
(79,449,ls),
(74,449,o),
(62,449,o),
(57,448,qs),
(51,448,o),
(40,437,o),
(40,430,qs),
(40,269,ls),
(40,264,o),
(50,255,o),
(42,248,qs),
(38,244,o),
(46,235,o),
(46,230,qs),
(47,208,o),
(47,161,o),
(47,138,q),
(35,125,o),
(46,113,q),
(42,107,o),
(39,95,o),
(46,88,q),
(38,80,o),
(48,57,o),
(48,43,q),
(47,36,o),
(57,26,o),
(63,25,q),
(66,22,o)
);
},
{
closed = 1;
nodes = (
(345,372,o),
(322,340,o),
(319,332,q),
(318,326,o),
(303,314,o),
(298,309,qs),
(244,253,o),
(135,138,o),
(78,78,q),
(78,83,o),
(72,113,o),
(70,119,qs),
(69,123,o),
(69,133,o),
(70,135,qs),
(77,147,o),
(72,156,q),
(79,163,o),
(76,193,o),
(77,200,qs),
(79,207,o),
(73,217,o),
(72,223,q),
(80,231,o),
(66,244,o),
(69,253,qs),
(71,257,o),
(71,277,o),
(70,338,o),
(70,404,qs),
(70,415,o),
(78,415,qs),
(328,415,ls),
(335,415,o),
(348,418,o),
(354,422,q),
(357,425,o),
(372,423,o),
(380,414,o),
(372,405,qs),
(369,401,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
21 1 4 0 136 133 130 123 99 91 46 43 40 14 11 9 6 13 2 4 58 1 3 2 3 76 0 1 1 46 77 0 4 4 0 95 0 0 0 40 77 0 2 2 3 97 0 3 3 48 3 78 121 119 69 65 51 48 36 35 28 25 5 8 22 
CALL[ ]	/* CallFunction */";
};
width = 450;
}
);
note = uni024B;
unicode = 587;
},
{
glyphname = r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(76,6,q),
(76,415,ls),
(76,423,o),
(92,412,o),
(99,399,qs),
(101,396,o),
(106,392,o),
(108,390,qs),
(133,362,o),
(195,319,o),
(220,290,qs),
(225,285,o),
(239,279,o),
(244,274,qs),
(249,270,o),
(254,258,o),
(258,253,qs),
(269,240,o),
(282,240,qs),
(289,240,o),
(292,247,q),
(293,279,o),
(293,324,o),
(293,345,qs),
(293,366,o),
(293,412,o),
(292,443,qs),
(292,454,o),
(282,454,qs),
(279,454,o),
(277,453,qs),
(267,448,o),
(212,445,o),
(189,445,qs),
(157,445,ls),
(136,446,o),
(102,453,o),
(64,451,qs),
(45,449,o),
(45,437,qs),
(45,434,o),
(46,432,qs),
(48,425,o),
(45,409,o),
(49,391,q),
(50,390,o),
(50,363,o),
(50,343,qs),
(50,313,o),
(49,236,o),
(47,161,o),
(43,111,o),
(41,108,qs),
(39,105,o),
(41,96,o),
(41,91,qs),
(42,56,o),
(44,21,o),
(48,9,o),
(49,6,q),
(56,-1,o),
(65,-1,qs),
(73,-1,o)
);
},
{
closed = 1;
nodes = (
(228,318,o),
(186,356,o),
(143,397,o),
(127,413,q),
(129,414,o),
(149,412,o),
(162,412,qs),
(182,412,o),
(221,413,o),
(242,413,qs),
(259,413,o),
(259,399,o),
(262,386,q),
(264,381,o),
(266,369,o),
(266,364,qs),
(266,355,o),
(262,350,q),
(261,347,o),
(259,339,o),
(258,335,q),
(258,325,o),
(265,298,o),
(260,296,qs),
(258,295,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
20 1 5 2 71 66 41 3 4 5 61 6 2 0 4 3 76 0 5 5 2 97 0 2 2 40 77 0 4 4 1 97 3 1 1 1 40 77 6 1 0 0 47 0 78 1 0 81 76 44 42 34 31 30 26 25 24 0 62 1 62 7 8 22 
CALL[ ]	/* CallFunction */";
};
width = 313;
}
);
note = r;
unicode = 114;
},
{
glyphname = racute;
layers = (
{
layerId = m01;
shapes = (
{
ref = r;
},
{
pos = (104,-107);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHW[ ]	/* 1 value pushed */
-107 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 313;
}
);
note = racute;
unicode = 341;
},
{
glyphname = rcaron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(76,6,q),
(76,415,ls),
(76,423,o),
(92,412,o),
(99,399,qs),
(101,396,o),
(106,392,o),
(108,390,qs),
(133,362,o),
(195,319,o),
(220,290,qs),
(225,285,o),
(239,279,o),
(244,274,qs),
(249,270,o),
(254,258,o),
(258,253,qs),
(269,240,o),
(282,240,qs),
(289,240,o),
(292,247,q),
(293,279,o),
(293,324,o),
(293,345,qs),
(293,366,o),
(293,412,o),
(292,443,qs),
(292,454,o),
(282,454,qs),
(279,454,o),
(277,453,qs),
(267,448,o),
(212,445,o),
(189,445,qs),
(157,445,ls),
(136,446,o),
(102,453,o),
(64,451,qs),
(45,449,o),
(45,437,qs),
(45,434,o),
(46,432,qs),
(48,425,o),
(45,409,o),
(49,391,q),
(50,390,o),
(50,363,o),
(50,343,qs),
(50,313,o),
(49,236,o),
(47,161,o),
(43,111,o),
(41,108,qs),
(39,105,o),
(41,96,o),
(41,91,qs),
(42,56,o),
(44,21,o),
(48,9,o),
(49,6,q),
(56,-1,o),
(65,-1,qs),
(73,-1,o)
);
},
{
closed = 1;
nodes = (
(228,318,o),
(186,356,o),
(143,397,o),
(127,413,q),
(129,414,o),
(149,412,o),
(162,412,qs),
(182,412,o),
(221,413,o),
(242,413,qs),
(259,413,o),
(259,399,o),
(262,386,q),
(264,381,o),
(266,369,o),
(266,364,qs),
(266,355,o),
(262,350,q),
(261,347,o),
(259,339,o),
(258,335,q),
(258,325,o),
(265,298,o),
(260,296,qs),
(258,295,o)
);
},
{
closed = 1;
nodes = (
(225,586,o),
(222,582,qs),
(220,580,o),
(207,563,o),
(205,561,qs),
(203,558,o),
(196,547,o),
(194,546,qs),
(188,543,o),
(184,543,o),
(179,545,q),
(175,550,o),
(153,570,o),
(126,593,o),
(103,609,o),
(98,609,q),
(90,611,o),
(78,609,o),
(82,600,q),
(88,594,o),
(100,581,o),
(104,574,q),
(109,571,o),
(121,556,o),
(127,553,q),
(135,546,o),
(142,537,o),
(149,531,qs),
(157,524,o),
(173,510,o),
(177,499,qs),
(179,495,o),
(187,494,o),
(189,498,q),
(200,510,o),
(231,544,o),
(261,579,o),
(281,602,o),
(280,603,qs),
(278,605,o),
(272,610,o),
(270,610,q),
(265,612,o),
(258,610,q),
(244,603,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
20 1 5 2 71 66 41 3 4 5 61 6 2 0 4 3 76 0 5 5 2 97 0 2 2 40 77 0 4 4 1 97 3 1 1 1 40 77 6 1 0 0 47 0 78 1 0 81 76 44 42 34 31 30 26 25 24 0 62 1 62 7 8 22 
CALL[ ]	/* CallFunction */";
};
width = 313;
}
);
note = rcaron;
unicode = 345;
},
{
glyphname = uni0157;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(76,6,q),
(76,415,ls),
(76,423,o),
(92,412,o),
(99,399,qs),
(101,396,o),
(106,392,o),
(108,390,qs),
(133,362,o),
(195,319,o),
(220,290,qs),
(225,285,o),
(239,279,o),
(244,274,qs),
(249,270,o),
(254,258,o),
(258,253,qs),
(269,240,o),
(282,240,qs),
(289,240,o),
(292,247,q),
(293,279,o),
(293,324,o),
(293,345,qs),
(293,366,o),
(293,412,o),
(292,443,qs),
(292,454,o),
(282,454,qs),
(279,454,o),
(277,453,qs),
(267,448,o),
(212,445,o),
(189,445,qs),
(157,445,ls),
(136,446,o),
(102,453,o),
(64,451,qs),
(45,449,o),
(45,437,qs),
(45,434,o),
(46,432,qs),
(48,425,o),
(45,409,o),
(49,391,q),
(50,390,o),
(50,363,o),
(50,343,qs),
(50,313,o),
(49,236,o),
(47,161,o),
(43,111,o),
(41,108,qs),
(39,105,o),
(41,96,o),
(41,91,qs),
(42,56,o),
(44,21,o),
(48,9,o),
(49,6,q),
(56,-1,o),
(65,-1,qs),
(73,-1,o)
);
},
{
closed = 1;
nodes = (
(228,318,o),
(186,356,o),
(143,397,o),
(127,413,q),
(129,414,o),
(149,412,o),
(162,412,qs),
(182,412,o),
(221,413,o),
(242,413,qs),
(259,413,o),
(259,399,o),
(262,386,q),
(264,381,o),
(266,369,o),
(266,364,qs),
(266,355,o),
(262,350,q),
(261,347,o),
(259,339,o),
(258,335,q),
(258,325,o),
(265,298,o),
(260,296,qs),
(258,295,o)
);
},
{
closed = 1;
nodes = (
(7,-203,o),
(9,-200,q),
(13,-200,o),
(30,-176,o),
(32,-174,q),
(41,-160,o),
(44,-145,o),
(51,-131,qs),
(57,-115,o),
(70,-104,qs),
(83,-93,o),
(87,-67,o),
(88,-50,qs),
(89,-39,o),
(82,-29,o),
(76,-33,q),
(71,-38,o),
(51,-53,o),
(49,-60,qs),
(46,-71,o),
(35,-93,o),
(29,-105,qs),
(21,-126,o),
(1,-161,o),
(-13,-196,q),
(-10,-201,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
20 1 5 2 71 66 41 3 4 5 61 6 2 0 4 3 76 100 1 0 73 0 5 5 2 97 0 2 2 40 77 0 4 4 1 97 3 1 1 1 40 77 6 1 0 0 47 0 78 1 0 81 76 44 42 34 31 30 26 25 24 0 62 1 62 7 8 22 
CALL[ ]	/* CallFunction */";
};
width = 313;
}
);
note = uni0157;
unicode = 343;
},
{
glyphname = uni0211;
layers = (
{
layerId = m01;
shapes = (
{
ref = r;
},
{
pos = (28,-129);
ref = uni030F;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 2 
PUSHW[ ]	/* 1 value pushed */
-129 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 313;
}
);
note = uni0211;
unicode = 529;
},
{
glyphname = uni1E59;
layers = (
{
layerId = m01;
shapes = (
{
ref = r;
},
{
pos = (108,-134);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHW[ ]	/* 1 value pushed */
-134 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 313;
}
);
note = uni1E59;
unicode = 7769;
},
{
glyphname = uni1E5B;
layers = (
{
layerId = m01;
shapes = (
{
ref = r;
},
{
pos = (-10,-116);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHW[ ]	/* 1 value pushed */
-116 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 313;
}
);
note = uni1E5B;
unicode = 7771;
},
{
glyphname = uni1E5D;
layers = (
{
layerId = m01;
shapes = (
{
ref = r;
},
{
pos = (-10,-116);
ref = period;
},
{
pos = (9,300);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHW[ ]	/* 1 value pushed */
-116 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
300 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 313;
}
);
note = uni1E5D;
unicode = 7773;
},
{
glyphname = uni027E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(107,420,o),
(114,421,qs),
(138,424,o),
(155,419,o),
(159,420,qs),
(168,421,o),
(173,426,qs),
(180,432,o),
(172,450,o),
(160,450,qs),
(150,450,o),
(113,451,o),
(76,451,o),
(64,451,qs),
(54,451,o),
(43,442,o),
(46,432,qs),
(47,430,o),
(45,409,o),
(49,391,q),
(50,389,o),
(50,348,o),
(50,285,o),
(48,215,o),
(46,152,o),
(43,110,o),
(41,108,qs),
(39,105,o),
(41,96,o),
(41,91,qs),
(42,56,o),
(44,21,o),
(48,9,o),
(49,6,q),
(54,1,o),
(73,-2,o),
(76,6,q),
(76,420,ls),
(76,429,o),
(88,420,o),
(95,419,qs),
(103,418,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
36 11 4 3 0 73 0 0 0 40 0 78 32 26 1 8 22 
CALL[ ]	/* CallFunction */";
};
width = 197;
}
);
note = uni027E;
unicode = 638;
},
{
glyphname = uni0213;
layers = (
{
layerId = m01;
shapes = (
{
ref = r;
},
{
pos = (77,-132);
ref = uni0311;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHW[ ]	/* 1 value pushed */
-132 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 313;
}
);
note = uni0213;
unicode = 531;
},
{
glyphname = rmacronbelow;
layers = (
{
layerId = m01;
shapes = (
{
ref = r;
},
{
pos = (-120,-331);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHW[ ]	/* 1 value pushed */
-331 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 313;
}
);
note = rmacronbelow;
unicode = 7775;
},
{
glyphname = uni024D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(91,6,q),
(91,224,l),
(100,224,o),
(104,222,qs),
(111,218,o),
(122,217,o),
(129,222,q),
(138,215,o),
(149,216,q),
(166,221,o),
(199,236,o),
(206,252,o),
(181,256,qs),
(178,256,o),
(154,252,o),
(131,249,o),
(127,249,qs),
(119,249,o),
(100,249,o),
(91,248,q),
(91,415,ls),
(91,423,o),
(107,412,o),
(114,399,qs),
(116,396,o),
(121,392,o),
(123,390,qs),
(148,362,o),
(210,319,o),
(235,290,qs),
(240,285,o),
(254,279,o),
(259,274,qs),
(264,270,o),
(269,258,o),
(273,253,qs),
(284,240,o),
(297,240,qs),
(304,240,o),
(307,247,q),
(308,279,o),
(308,324,o),
(308,345,qs),
(308,366,o),
(308,412,o),
(307,443,qs),
(307,454,o),
(297,454,qs),
(294,454,o),
(292,453,qs),
(282,448,o),
(227,445,o),
(204,445,qs),
(172,445,ls),
(151,446,o),
(117,453,o),
(79,451,qs),
(60,449,o),
(60,437,qs),
(60,434,o),
(61,432,qs),
(63,425,o),
(60,409,o),
(64,391,q),
(65,390,o),
(65,363,o),
(65,343,qs),
(65,323,o),
(65,275,o),
(64,249,q),
(60,250,o),
(58,252,qs),
(55,254,o),
(44,254,o),
(42,251,q),
(34,246,o),
(-8,247,o),
(-17,246,qs),
(-30,244,o),
(-30,230,o),
(-20,218,o),
(-20,218,q),
(0,212,l),
(4,219,o),
(14,218,o),
(20,219,qs),
(34,220,o),
(40,220,qs),
(44,220,o),
(52,218,o),
(56,213,qs),
(57,211,o),
(63,215,q),
(62,173,o),
(58,111,o),
(56,108,qs),
(54,105,o),
(56,96,o),
(56,91,qs),
(57,56,o),
(59,21,o),
(63,9,o),
(64,6,q),
(71,-1,o),
(80,-1,qs),
(88,-1,o)
);
},
{
closed = 1;
nodes = (
(243,318,o),
(201,356,o),
(158,397,o),
(142,413,q),
(144,414,o),
(164,412,o),
(177,412,qs),
(197,412,o),
(236,413,o),
(257,413,qs),
(274,413,o),
(274,399,o),
(277,386,q),
(279,381,o),
(281,369,o),
(281,364,qs),
(281,355,o),
(277,350,q),
(276,347,o),
(274,339,o),
(273,335,q),
(273,325,o),
(280,298,o),
(275,296,qs),
(273,295,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
44 1 9 5 114 109 85 65 4 3 9 103 98 2 1 7 104 22 12 6 4 0 1 4 76 8 1 3 2 1 1 0 3 1 105 0 9 9 5 97 0 5 5 40 77 0 7 7 4 97 6 1 4 4 40 77 10 1 0 0 47 0 78 1 0 124 119 89 86 68 66 58 55 54 50 49 48 29 28 21 19 18 16 0 105 1 105 11 8 22 
CALL[ ]	/* CallFunction */";
};
width = 328;
}
);
note = uni024D;
unicode = 589;
},
{
glyphname = rtail;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(199,-82,o),
(186,-75,q),
(180,-78,o),
(170,-72,o),
(165,-73,q),
(107,-74,ls),
(88,-75,o),
(77,-44,o),
(77,-3,o),
(76,11,q),
(76,415,ls),
(76,423,o),
(92,412,o),
(99,399,qs),
(101,396,o),
(106,392,o),
(108,390,qs),
(133,362,o),
(195,319,o),
(220,290,qs),
(225,285,o),
(239,279,o),
(244,274,qs),
(249,270,o),
(254,258,o),
(258,253,qs),
(269,240,o),
(282,240,qs),
(289,240,o),
(292,247,q),
(293,279,o),
(293,324,o),
(293,345,qs),
(293,366,o),
(293,412,o),
(292,443,qs),
(292,454,o),
(282,454,qs),
(279,454,o),
(277,453,qs),
(267,448,o),
(212,445,o),
(189,445,qs),
(157,445,ls),
(136,446,o),
(102,453,o),
(64,451,qs),
(45,449,o),
(45,437,qs),
(45,434,o),
(46,432,qs),
(48,425,o),
(45,409,o),
(49,391,q),
(50,390,o),
(50,363,o),
(50,343,qs),
(50,313,o),
(49,236,o),
(47,161,o),
(43,111,o),
(41,108,qs),
(39,105,o),
(41,96,o),
(41,91,qs),
(42,55,o),
(44,21,o),
(46,14,q),
(46,9,o),
(44,-4,o),
(46,-7,qs),
(51,-14,o),
(45,-35,o),
(46,-45,qs),
(48,-70,o),
(62,-103,o),
(90,-105,qs),
(94,-105,o),
(99,-105,o),
(122,-104,qs),
(127,-104,o),
(137,-103,o),
(141,-105,qs),
(155,-110,o),
(174,-106,o),
(186,-99,qs),
(197,-94,o)
);
},
{
closed = 1;
nodes = (
(228,318,o),
(186,356,o),
(143,397,o),
(127,413,q),
(129,414,o),
(149,412,o),
(162,412,qs),
(182,412,o),
(221,413,o),
(242,413,qs),
(259,413,o),
(259,399,o),
(262,386,q),
(264,381,o),
(266,369,o),
(266,364,qs),
(266,355,o),
(262,350,q),
(261,347,o),
(259,339,o),
(258,335,q),
(258,325,o),
(265,298,o),
(260,296,qs),
(258,295,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
35 1 6 2 95 90 56 3 4 6 76 21 15 3 5 4 84 1 0 5 4 76 0 5 0 0 5 0 101 0 6 6 2 97 0 2 2 40 77 0 4 4 1 97 3 1 1 1 40 4 78 105 100 81 79 59 57 49 46 45 41 40 39 69 7 8 23 
CALL[ ]	/* CallFunction */";
};
width = 313;
}
);
note = rtail;
unicode = 637;
},
{
glyphname = s;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(133,10,o),
(139,2,q),
(301,2,ls),
(312,2,o),
(318,1,o),
(328,1,qs),
(338,1,o),
(356,8,o),
(366,9,qs),
(380,11,o),
(388,63,o),
(388,95,qs),
(388,124,o),
(385,187,o),
(385,201,qs),
(383,217,l),
(381,228,l),
(379,231,o),
(370,236,o),
(365,238,qs),
(347,245,o),
(314,243,o),
(297,235,q),
(293,235,o),
(193,238,o),
(122,238,q),
(144,255,o),
(206,298,o),
(275,344,o),
(337,387,o),
(359,403,q),
(365,411,o),
(377,426,o),
(384,433,qs),
(392,442,o),
(377,451,o),
(369,453,qs),
(359,454,o),
(350,459,q),
(338,458,ls),
(331,458,o),
(317,456,o),
(311,451,q),
(295,451,o),
(256,451,o),
(219,452,qs),
(201,453,o),
(195,452,o),
(189,452,o),
(171,452,q),
(156,459,o),
(143,459,qs),
(131,459,o),
(113,452,q),
(112,452,o),
(88,458,o),
(75,458,qs),
(68,458,o),
(57,456,o),
(53,452,q),
(48,449,o),
(47,427,o),
(52,404,o),
(55,398,q),
(58,396,o),
(55,393,q),
(50,383,o),
(46,363,o),
(46,352,qs),
(46,340,o),
(48,293,o),
(48,243,q),
(52,215,o),
(70,204,o),
(93,204,qs),
(104,204,o),
(154,203,o),
(220,203,o),
(286,203,o),
(338,205,o),
(350,206,q),
(350,39,l),
(346,39,ls),
(339,39,o),
(320,38,o),
(312,32,q),
(279,32,o),
(242,34,o),
(213,36,o),
(176,39,o),
(143,40,qs),
(131,40,o),
(113,33,q),
(112,33,o),
(108,32,o),
(107,33,qs),
(101,39,o),
(92,39,q),
(80,33,o),
(67,33,q),
(45,36,o),
(36,12,o),
(61,9,qs),
(66,9,o),
(76,10,o),
(80,10,qs),
(85,10,o),
(93,8,qs),
(98,6,o),
(109,3,o),
(114,1,q),
(121,0,o)
);
},
{
closed = 1;
nodes = (
(82,280,o),
(82,330,o),
(82,383,o),
(82,423,o),
(82,429,q),
(87,428,o),
(109,422,o),
(113,420,qs),
(120,418,o),
(132,429,o),
(139,421,q),
(299,421,ls),
(305,421,o),
(326,420,o),
(331,420,q),
(324,413,o),
(288,387,o),
(278,375,q),
(270,374,o),
(222,344,o),
(160,302,o),
(102,260,o),
(84,247,q),
(83,247,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
45 1 13 15 39 1 12 13 30 1 6 12 96 1 2 6 4 76 15 1 1 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 13 15 12 12 13 114 5 3 2 2 6 1 1 2 114 0 12 0 6 2 12 6 106 11 8 2 7 7 46 77 0 15 15 9 97 10 1 9 9 40 77 4 1 1 1 0 98 0 0 0 38 77 4 1 1 1 14 96 0 14 14 38 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 13 15 12 12 13 114 3 1 2 6 1 1 2 114 0 12 0 6 2 12 6 106 11 8 2 7 7 46 77 0 15 15 9 97 10 1 9 9 40 77 5 4 2 1 1 0 98 0 0 0 38 77 5 4 2 1 1 14 96 0 14 14 38 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 13 15 12 12 13 114 5 3 2 2 6 1 1 2 114 0 12 0 6 2 12 6 106 11 8 2 7 7 46 77 0 15 15 9 97 10 1 9 9 40 77 4 1 1 1 0 98 0 0 0 38 77 4 1 1 1 14 96 0 14 14 38 14 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 13 15 12 12 13 114 5 3 2 2 6 1 1 2 114 0 12 0 6 2 12 6 106 0 0 14 1 0 90 11 8 2 7 7 46 77 0 15 15 9 97 10 1 9 9 40 77 4 1 1 1 14 96 0 14 14 38 14 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
124 120 109 104 90 89 87 85 72 70 68 64 62 61 60 58 55 53 98 49 49 37 17 21 36 16 8 29 
CALL[ ]	/* CallFunction */";
};
width = 428;
}
);
note = s;
unicode = 115;
},
{
glyphname = sacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = s;
},
{
pos = (143,-105);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHW[ ]	/* 1 value pushed */
-105 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 428;
}
);
note = sacute;
unicode = 347;
},
{
glyphname = uni1E65;
layers = (
{
layerId = m01;
shapes = (
{
ref = s;
},
{
pos = (143,-105);
ref = acutecomb;
},
{
pos = (69,-115);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHW[ ]	/* 1 value pushed */
-105 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-115 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 428;
}
);
note = uni1E65;
unicode = 7781;
},
{
glyphname = uniA78C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(60,472,o),
(60,479,qs),
(60,485,o),
(70,489,o),
(71,493,qs),
(72,499,o),
(72,524,o),
(72,550,o),
(72,555,qs),
(72,663,ls),
(72,728,o),
(56,728,qs),
(52,728,o),
(44,726,o),
(39,703,qs),
(38,700,o),
(39,687,o),
(39,663,qs),
(39,636,o),
(36,614,o),
(33,603,o),
(30,584,o),
(30,559,qs),
(30,538,o),
(38,497,o),
(42,478,qs),
(44,471,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 26 45 2 8 24 
CALL[ ]	/* CallFunction */";
};
width = 102;
}
);
note = uniA78C;
unicode = 42892;
},
{
glyphname = scaron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(133,10,o),
(139,2,q),
(301,2,ls),
(312,2,o),
(318,1,o),
(328,1,qs),
(338,1,o),
(356,8,o),
(366,9,qs),
(380,11,o),
(388,63,o),
(388,95,qs),
(388,124,o),
(385,187,o),
(385,201,qs),
(383,217,l),
(381,228,l),
(379,231,o),
(370,236,o),
(365,238,qs),
(347,245,o),
(314,243,o),
(297,235,q),
(293,235,o),
(193,238,o),
(122,238,q),
(144,255,o),
(206,298,o),
(275,344,o),
(337,387,o),
(359,403,q),
(365,411,o),
(377,426,o),
(384,433,qs),
(392,442,o),
(377,451,o),
(369,453,qs),
(359,454,o),
(350,459,q),
(338,458,ls),
(331,458,o),
(317,456,o),
(311,451,q),
(295,451,o),
(256,451,o),
(219,452,qs),
(201,453,o),
(195,452,o),
(189,452,o),
(171,452,q),
(156,459,o),
(143,459,qs),
(131,459,o),
(113,452,q),
(112,452,o),
(88,458,o),
(75,458,qs),
(68,458,o),
(57,456,o),
(53,452,q),
(48,449,o),
(47,427,o),
(52,404,o),
(55,398,q),
(58,396,o),
(55,393,q),
(50,383,o),
(46,363,o),
(46,352,qs),
(46,340,o),
(48,293,o),
(48,243,q),
(52,215,o),
(70,204,o),
(93,204,qs),
(104,204,o),
(154,203,o),
(220,203,o),
(286,203,o),
(338,205,o),
(350,206,q),
(350,39,l),
(346,39,ls),
(339,39,o),
(320,38,o),
(312,32,q),
(279,32,o),
(242,34,o),
(213,36,o),
(176,39,o),
(143,40,qs),
(131,40,o),
(113,33,q),
(112,33,o),
(108,32,o),
(107,33,qs),
(101,39,o),
(92,39,q),
(80,33,o),
(67,33,q),
(45,36,o),
(36,12,o),
(61,9,qs),
(66,9,o),
(76,10,o),
(80,10,qs),
(85,10,o),
(93,8,qs),
(98,6,o),
(109,3,o),
(114,1,q),
(121,0,o)
);
},
{
closed = 1;
nodes = (
(82,280,o),
(82,330,o),
(82,383,o),
(82,423,o),
(82,429,q),
(87,428,o),
(109,422,o),
(113,420,qs),
(120,418,o),
(132,429,o),
(139,421,q),
(299,421,ls),
(305,421,o),
(326,420,o),
(331,420,q),
(324,413,o),
(288,387,o),
(278,375,q),
(270,374,o),
(222,344,o),
(160,302,o),
(102,260,o),
(84,247,q),
(83,247,o)
);
},
{
closed = 1;
nodes = (
(264,588,o),
(261,584,qs),
(259,582,o),
(246,565,o),
(244,563,qs),
(242,560,o),
(235,549,o),
(233,548,qs),
(227,545,o),
(223,545,o),
(218,547,q),
(214,552,o),
(192,572,o),
(165,595,o),
(142,611,o),
(137,611,q),
(129,613,o),
(117,611,o),
(121,602,q),
(127,596,o),
(139,583,o),
(143,576,q),
(148,573,o),
(160,558,o),
(166,555,q),
(174,548,o),
(181,539,o),
(188,533,qs),
(196,526,o),
(212,512,o),
(216,501,qs),
(218,497,o),
(226,496,o),
(228,500,q),
(239,512,o),
(270,546,o),
(300,581,o),
(320,604,o),
(319,605,qs),
(317,607,o),
(311,612,o),
(309,612,q),
(304,614,o),
(297,612,q),
(283,605,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
45 1 13 15 39 1 12 13 30 1 6 12 96 1 2 6 4 76 15 1 1 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 13 15 12 12 13 114 5 3 2 2 6 1 1 2 114 0 12 0 6 2 12 6 106 11 8 2 7 7 46 77 0 15 15 9 97 10 1 9 9 40 77 4 1 1 1 0 98 0 0 0 38 77 4 1 1 1 14 96 0 14 14 38 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 13 15 12 12 13 114 3 1 2 6 1 1 2 114 0 12 0 6 2 12 6 106 11 8 2 7 7 46 77 0 15 15 9 97 10 1 9 9 40 77 5 4 2 1 1 0 98 0 0 0 38 77 5 4 2 1 1 14 96 0 14 14 38 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 13 15 12 12 13 114 5 3 2 2 6 1 1 2 114 0 12 0 6 2 12 6 106 11 8 2 7 7 46 77 0 15 15 9 97 10 1 9 9 40 77 4 1 1 1 0 98 0 0 0 38 77 4 1 1 1 14 96 0 14 14 38 14 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 13 15 12 12 13 114 5 3 2 2 6 1 1 2 114 0 12 0 6 2 12 6 106 0 0 14 1 0 90 11 8 2 7 7 46 77 0 15 15 9 97 10 1 9 9 40 77 4 1 1 1 14 96 0 14 14 38 14 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
124 120 109 104 90 89 87 85 72 70 68 64 62 61 60 58 55 53 98 49 49 37 17 21 36 16 8 29 
CALL[ ]	/* CallFunction */";
};
width = 428;
}
);
note = scaron;
unicode = 353;
},
{
glyphname = uni1E67;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(133,10,o),
(139,2,q),
(301,2,ls),
(312,2,o),
(318,1,o),
(328,1,qs),
(338,1,o),
(356,8,o),
(366,9,qs),
(380,11,o),
(388,63,o),
(388,95,qs),
(388,124,o),
(385,187,o),
(385,201,qs),
(383,217,l),
(381,228,l),
(379,231,o),
(370,236,o),
(365,238,qs),
(347,245,o),
(314,243,o),
(297,235,q),
(293,235,o),
(193,238,o),
(122,238,q),
(144,255,o),
(206,298,o),
(275,344,o),
(337,387,o),
(359,403,q),
(365,411,o),
(377,426,o),
(384,433,qs),
(392,442,o),
(377,451,o),
(369,453,qs),
(359,454,o),
(350,459,q),
(338,458,ls),
(331,458,o),
(317,456,o),
(311,451,q),
(295,451,o),
(256,451,o),
(219,452,qs),
(201,453,o),
(195,452,o),
(189,452,o),
(171,452,q),
(156,459,o),
(143,459,qs),
(131,459,o),
(113,452,q),
(112,452,o),
(88,458,o),
(75,458,qs),
(68,458,o),
(57,456,o),
(53,452,q),
(48,449,o),
(47,427,o),
(52,404,o),
(55,398,q),
(58,396,o),
(55,393,q),
(50,383,o),
(46,363,o),
(46,352,qs),
(46,340,o),
(48,293,o),
(48,243,q),
(52,215,o),
(70,204,o),
(93,204,qs),
(104,204,o),
(154,203,o),
(220,203,o),
(286,203,o),
(338,205,o),
(350,206,q),
(350,39,l),
(346,39,ls),
(339,39,o),
(320,38,o),
(312,32,q),
(279,32,o),
(242,34,o),
(213,36,o),
(176,39,o),
(143,40,qs),
(131,40,o),
(113,33,q),
(112,33,o),
(108,32,o),
(107,33,qs),
(101,39,o),
(92,39,q),
(80,33,o),
(67,33,q),
(45,36,o),
(36,12,o),
(61,9,qs),
(66,9,o),
(76,10,o),
(80,10,qs),
(85,10,o),
(93,8,qs),
(98,6,o),
(109,3,o),
(114,1,q),
(121,0,o)
);
},
{
closed = 1;
nodes = (
(82,280,o),
(82,330,o),
(82,383,o),
(82,423,o),
(82,429,q),
(87,428,o),
(109,422,o),
(113,420,qs),
(120,418,o),
(132,429,o),
(139,421,q),
(299,421,ls),
(305,421,o),
(326,420,o),
(331,420,q),
(324,413,o),
(288,387,o),
(278,375,q),
(270,374,o),
(222,344,o),
(160,302,o),
(102,260,o),
(84,247,q),
(83,247,o)
);
},
{
closed = 1;
nodes = (
(264,588,o),
(261,584,qs),
(259,582,o),
(246,565,o),
(244,563,qs),
(242,560,o),
(235,549,o),
(233,548,qs),
(227,545,o),
(223,545,o),
(218,547,q),
(214,552,o),
(192,572,o),
(165,595,o),
(142,611,o),
(137,611,q),
(129,613,o),
(117,611,o),
(121,602,q),
(127,596,o),
(139,583,o),
(143,576,q),
(148,573,o),
(160,558,o),
(166,555,q),
(174,548,o),
(181,539,o),
(188,533,qs),
(196,526,o),
(212,512,o),
(216,501,qs),
(218,497,o),
(226,496,o),
(228,500,q),
(239,512,o),
(270,546,o),
(300,581,o),
(320,604,o),
(319,605,qs),
(317,607,o),
(311,612,o),
(309,612,q),
(304,614,o),
(297,612,q),
(283,605,o)
);
},
{
closed = 1;
nodes = (
(253,690,o),
(260,703,qs),
(266,714,o),
(254,723,q),
(248,726,o),
(234,733,o),
(229,737,qs),
(222,742,o),
(202,735,o),
(193,728,q),
(179,721,o),
(175,692,o),
(177,686,qs),
(180,678,o),
(203,666,o),
(217,666,qs),
(236,666,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
45 1 13 15 39 1 12 13 30 1 6 12 96 1 2 6 4 76 15 1 1 1 75 184 1 16 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
17 1 16 7 16 133 0 13 15 12 12 13 114 5 3 2 2 6 1 1 2 114 0 12 0 6 2 12 6 106 11 8 2 7 7 46 77 0 15 15 9 97 10 1 9 9 40 77 4 1 1 1 0 98 0 0 0 38 77 4 1 1 1 14 96 0 14 14 38 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
17 1 16 7 16 133 0 13 15 12 12 13 114 3 1 2 6 1 1 2 114 0 12 0 6 2 12 6 106 11 8 2 7 7 46 77 0 15 15 9 97 10 1 9 9 40 77 5 4 2 1 1 0 98 0 0 0 38 77 5 4 2 1 1 14 96 0 14 14 38 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
17 1 16 7 16 133 0 13 15 12 12 13 114 5 3 2 2 6 1 1 2 114 0 12 0 6 2 12 6 106 11 8 2 7 7 46 77 0 15 15 9 97 10 1 9 9 40 77 4 1 1 1 0 98 0 0 0 38 77 4 1 1 1 14 96 0 14 14 38 14 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
17 1 16 7 16 133 0 13 15 12 12 13 114 5 3 2 2 6 1 1 2 114 0 12 0 6 2 12 6 106 0 0 14 1 0 90 11 8 2 7 7 46 77 0 15 15 9 97 10 1 9 9 40 77 4 1 1 1 14 96 0 14 14 38 14 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
182 181 181 197 182 197 124 120 109 104 90 89 87 85 72 70 68 64 62 61 60 58 55 53 98 49 49 37 17 21 36 18 8 29 
CALL[ ]	/* CallFunction */";
};
width = 428;
}
);
note = uni1E67;
unicode = 7783;
},
{
glyphname = scedilla;
layers = (
{
layerId = m01;
shapes = (
{
ref = s;
},
{
pos = (175,3);
ref = uni0327;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHB[ ]	/* 1 value pushed */
3 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 428;
}
);
note = scedilla;
unicode = 351;
},
{
glyphname = scircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = s;
},
{
pos = (84,-117);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHW[ ]	/* 1 value pushed */
-117 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 428;
}
);
note = scircumflex;
unicode = 349;
},
{
glyphname = uni0219;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(133,10,o),
(139,2,q),
(301,2,ls),
(312,2,o),
(318,1,o),
(328,1,qs),
(338,1,o),
(356,8,o),
(366,9,qs),
(380,11,o),
(388,63,o),
(388,95,qs),
(388,124,o),
(385,187,o),
(385,201,qs),
(383,217,l),
(381,228,l),
(379,231,o),
(370,236,o),
(365,238,qs),
(347,245,o),
(314,243,o),
(297,235,q),
(293,235,o),
(193,238,o),
(122,238,q),
(144,255,o),
(206,298,o),
(275,344,o),
(337,387,o),
(359,403,q),
(365,411,o),
(377,426,o),
(384,433,qs),
(392,442,o),
(377,451,o),
(369,453,qs),
(359,454,o),
(350,459,q),
(338,458,ls),
(331,458,o),
(317,456,o),
(311,451,q),
(295,451,o),
(256,451,o),
(219,452,qs),
(201,453,o),
(195,452,o),
(189,452,o),
(171,452,q),
(156,459,o),
(143,459,qs),
(131,459,o),
(113,452,q),
(112,452,o),
(88,458,o),
(75,458,qs),
(68,458,o),
(57,456,o),
(53,452,q),
(48,449,o),
(47,427,o),
(52,404,o),
(55,398,q),
(58,396,o),
(55,393,q),
(50,383,o),
(46,363,o),
(46,352,qs),
(46,340,o),
(48,293,o),
(48,243,q),
(52,215,o),
(70,204,o),
(93,204,qs),
(104,204,o),
(154,203,o),
(220,203,o),
(286,203,o),
(338,205,o),
(350,206,q),
(350,39,l),
(346,39,ls),
(339,39,o),
(320,38,o),
(312,32,q),
(279,32,o),
(242,34,o),
(213,36,o),
(176,39,o),
(143,40,qs),
(131,40,o),
(113,33,q),
(112,33,o),
(108,32,o),
(107,33,qs),
(101,39,o),
(92,39,q),
(80,33,o),
(67,33,q),
(45,36,o),
(36,12,o),
(61,9,qs),
(66,9,o),
(76,10,o),
(80,10,qs),
(85,10,o),
(93,8,qs),
(98,6,o),
(109,3,o),
(114,1,q),
(121,0,o)
);
},
{
closed = 1;
nodes = (
(82,280,o),
(82,330,o),
(82,383,o),
(82,423,o),
(82,429,q),
(87,428,o),
(109,422,o),
(113,420,qs),
(120,418,o),
(132,429,o),
(139,421,q),
(299,421,ls),
(305,421,o),
(326,420,o),
(331,420,q),
(324,413,o),
(288,387,o),
(278,375,q),
(270,374,o),
(222,344,o),
(160,302,o),
(102,260,o),
(84,247,q),
(83,247,o)
);
},
{
closed = 1;
nodes = (
(171,-192,o),
(173,-189,q),
(177,-189,o),
(194,-165,o),
(196,-163,q),
(205,-149,o),
(208,-134,o),
(215,-120,qs),
(221,-104,o),
(234,-93,qs),
(247,-82,o),
(251,-56,o),
(252,-39,qs),
(253,-28,o),
(246,-18,o),
(240,-22,q),
(235,-27,o),
(215,-42,o),
(213,-49,qs),
(210,-60,o),
(199,-82,o),
(193,-94,qs),
(185,-115,o),
(165,-150,o),
(151,-185,q),
(154,-190,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
45 1 13 15 39 1 12 13 30 1 6 12 96 1 2 6 4 76 15 1 1 1 75 148 1 14 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 13 15 12 12 13 114 5 3 2 2 6 1 1 2 114 0 12 0 6 2 12 6 106 11 8 2 7 7 46 77 0 15 15 9 97 10 1 9 9 40 77 4 1 1 1 0 98 0 0 0 38 77 4 1 1 1 14 96 0 14 14 38 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 13 15 12 12 13 114 3 1 2 6 1 1 2 114 0 12 0 6 2 12 6 106 11 8 2 7 7 46 77 0 15 15 9 97 10 1 9 9 40 77 5 4 2 1 1 0 98 0 0 0 38 77 5 4 2 1 1 14 96 0 14 14 38 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 13 15 12 12 13 114 5 3 2 2 6 1 1 2 114 0 12 0 6 2 12 6 106 11 8 2 7 7 46 77 0 15 15 9 97 10 1 9 9 40 77 4 1 1 1 0 98 0 0 0 38 77 4 1 1 1 14 96 0 14 14 38 14 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 13 15 12 12 13 114 5 3 2 2 6 1 1 2 114 0 12 0 6 2 12 6 106 0 0 14 1 0 90 11 8 2 7 7 46 77 0 15 15 9 97 10 1 9 9 40 77 4 1 1 1 14 96 0 14 14 38 14 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
124 120 109 104 90 89 87 85 72 70 68 64 62 61 60 58 55 53 98 49 49 37 17 21 36 16 8 29 
CALL[ ]	/* CallFunction */";
};
width = 428;
}
);
note = uni0219;
unicode = 537;
},
{
glyphname = uni1E61;
layers = (
{
layerId = m01;
shapes = (
{
ref = s;
},
{
pos = (147,-132);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHW[ ]	/* 1 value pushed */
-132 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 428;
}
);
note = uni1E61;
unicode = 7777;
},
{
glyphname = uni1E63;
layers = (
{
layerId = m01;
shapes = (
{
ref = s;
},
{
pos = (154,-105);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHW[ ]	/* 1 value pushed */
-105 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 428;
}
);
note = uni1E63;
unicode = 7779;
},
{
glyphname = uni1E69;
layers = (
{
layerId = m01;
shapes = (
{
ref = s;
},
{
pos = (154,-105);
ref = period;
},
{
pos = (147,-132);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHW[ ]	/* 1 value pushed */
-105 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-132 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 428;
}
);
note = uni1E69;
unicode = 7785;
},
{
glyphname = germandbls;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,-83,o),
(87,-50,o),
(89,-19,o),
(92,-11,q),
(92,1,o),
(85,16,o),
(85,38,qs),
(85,399,ls),
(85,457,o),
(81,543,o),
(78,552,q),
(205,552,ls),
(210,552,o),
(246,561,o),
(253,561,qs),
(259,561,o),
(270,558,o),
(275,557,qs),
(297,553,o),
(285,543,qs),
(277,535,l),
(255,522,o),
(255,501,qs),
(255,480,o),
(236,469,q),
(233,468,o),
(235,457,o),
(232,455,qs),
(228,452,o),
(222,447,o),
(220,442,q),
(206,418,o),
(181,390,o),
(155,363,o),
(139,339,qs),
(135,332,o),
(135,326,qs),
(135,319,o),
(142,310,o),
(142,309,q),
(165,288,o),
(191,255,o),
(213,226,o),
(240,194,o),
(262,172,qs),
(267,167,o),
(294,136,o),
(325,100,o),
(349,68,o),
(352,61,qs),
(360,41,o),
(376,32,q),
(322,30,o),
(262,29,o),
(233,29,o),
(225,30,o),
(223,30,q),
(213,35,o),
(206,35,qs),
(194,35,o),
(172,25,o),
(160,25,q),
(156,15,o),
(171,0,o),
(182,0,qs),
(268,0,o),
(358,2,o),
(397,3,o),
(406,3,qs),
(423,3,o),
(423,16,qs),
(423,26,o),
(411,38,qs),
(392,56,o),
(353,110,o),
(314,165,o),
(295,183,qs),
(273,205,o),
(247,236,o),
(226,263,o),
(201,294,o),
(178,316,q),
(168,321,o),
(175,328,qs),
(196,350,o),
(247,421,o),
(295,496,o),
(310,523,qs),
(314,532,o),
(318,534,q),
(330,548,o),
(330,565,qs),
(330,581,o),
(312,582,qs),
(285,583,o),
(212,584,o),
(138,583,o),
(81,582,o),
(69,582,qs),
(52,581,o),
(43,568,o),
(43,558,qs),
(43,549,o),
(43,515,o),
(45,484,o),
(47,476,qs),
(54,451,o),
(54,424,qs),
(54,297,ls),
(54,288,o),
(56,267,o),
(56,258,qs),
(56,250,o),
(54,242,qs),
(49,222,o),
(52,181,o),
(52,161,qs),
(52,142,o),
(53,70,o),
(55,-13,o),
(59,-86,o),
(62,-106,q),
(73,-106,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
118 1 7 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 5 0 6 6 5 114 0 3 6 4 4 3 114 0 2 4 1 4 2 1 128 8 1 7 1 7 134 0 0 0 6 3 0 6 103 0 4 4 1 96 0 1 1 38 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 5 0 6 6 5 114 0 3 6 2 2 3 114 8 1 7 1 7 134 0 0 0 6 3 0 6 103 4 1 2 2 1 96 0 1 1 38 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 5 0 6 6 5 114 0 3 6 4 4 3 114 0 2 4 1 4 2 1 128 8 1 7 1 7 134 0 0 0 6 3 0 6 103 0 4 4 1 96 0 1 1 38 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
0 0 0 122 0 122 111 109 108 106 70 67 63 62 61 60 58 52 29 22 9 8 22 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = germandbls;
unicode = 223;
},
{
glyphname = uniA7A9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(178,175,o),
(223,203,q),
(269,203,o),
(356,204,o),
(372,206,q),
(372,39,l),
(368,39,ls),
(361,39,o),
(342,38,o),
(334,32,q),
(301,32,o),
(264,34,o),
(235,36,o),
(198,39,o),
(165,40,qs),
(153,40,o),
(135,33,q),
(134,33,o),
(130,32,o),
(129,33,qs),
(123,39,o),
(114,39,q),
(102,33,o),
(89,33,q),
(67,36,o),
(58,12,o),
(83,9,qs),
(88,9,o),
(98,10,o),
(102,10,qs),
(107,10,o),
(115,8,qs),
(120,6,o),
(131,3,o),
(136,1,q),
(143,0,o),
(155,10,o),
(161,2,q),
(323,2,ls),
(334,2,o),
(340,1,o),
(350,1,qs),
(360,1,o),
(378,8,o),
(388,9,qs),
(402,11,o),
(410,63,o),
(410,95,qs),
(410,124,o),
(407,187,o),
(407,201,qs),
(405,217,l),
(403,228,l),
(401,231,o),
(392,236,o),
(387,238,qs),
(369,245,o),
(336,243,o),
(319,235,q),
(317,235,o),
(294,236,o),
(276,236,q),
(315,261,o),
(391,308,o),
(423,328,qs),
(443,340,o),
(452,356,qs),
(457,363,o),
(458,372,o),
(456,377,q),
(452,376,o),
(426,372,o),
(400,353,qs),
(396,350,o),
(374,336,o),
(354,323,o),
(350,320,qs),
(322,303,o),
(254,260,o),
(218,237,q),
(201,238,o),
(164,238,o),
(144,238,q),
(166,255,o),
(228,298,o),
(297,344,o),
(359,387,o),
(381,403,q),
(387,411,o),
(399,426,o),
(406,433,qs),
(414,442,o),
(399,451,o),
(391,453,qs),
(381,454,o),
(372,459,q),
(360,458,ls),
(353,458,o),
(339,456,o),
(333,451,q),
(317,451,o),
(278,451,o),
(241,452,qs),
(223,453,o),
(217,452,o),
(211,452,o),
(193,452,q),
(178,459,o),
(165,459,qs),
(153,459,o),
(135,452,q),
(134,452,o),
(110,458,o),
(97,458,qs),
(90,458,o),
(79,456,o),
(75,452,q),
(70,449,o),
(69,427,o),
(74,404,o),
(77,398,q),
(80,396,o),
(77,393,q),
(72,383,o),
(68,363,o),
(68,352,qs),
(68,340,o),
(70,293,o),
(70,243,q),
(74,215,o),
(92,204,o),
(115,204,qs),
(122,204,o),
(147,204,o),
(164,204,q),
(138,187,o),
(90,157,o),
(69,144,qs),
(59,138,o),
(40,123,o),
(39,107,o),
(56,98,q),
(93,121,o)
);
},
{
closed = 1;
nodes = (
(104,280,o),
(104,330,o),
(104,383,o),
(104,423,o),
(104,429,q),
(109,428,o),
(131,422,o),
(135,420,qs),
(142,418,o),
(154,429,o),
(161,421,q),
(321,421,ls),
(327,421,o),
(348,420,o),
(353,420,q),
(346,413,o),
(310,387,o),
(300,375,q),
(292,374,o),
(244,344,o),
(182,302,o),
(124,260,o),
(106,247,q),
(105,247,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
19 1 8 17 13 1 6 8 137 1 0 6 91 1 12 0 4 76 122 1 11 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 8 17 6 6 8 114 15 13 2 12 0 11 11 12 114 7 1 6 16 1 0 12 6 0 106 5 2 2 1 1 46 77 0 17 17 3 97 4 1 3 3 40 77 14 1 11 11 10 98 0 10 10 38 77 14 1 11 11 9 96 0 9 9 38 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 8 17 6 6 8 114 13 1 12 0 11 11 12 114 7 1 6 16 1 0 12 6 0 106 5 2 2 1 1 46 77 0 17 17 3 97 4 1 3 3 40 77 15 14 2 11 11 10 98 0 10 10 38 77 15 14 2 11 11 9 96 0 9 9 38 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 8 17 6 6 8 114 15 13 2 12 0 11 11 12 114 7 1 6 16 1 0 12 6 0 106 5 2 2 1 1 46 77 0 17 17 3 97 4 1 3 3 40 77 14 1 11 11 10 98 0 10 10 38 77 14 1 11 11 9 96 0 9 9 38 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 8 17 6 6 8 114 15 13 2 12 0 11 11 12 114 7 1 6 16 1 0 12 6 0 106 0 10 9 11 10 90 5 2 2 1 1 46 77 0 17 17 3 97 4 1 3 3 40 77 14 1 11 11 9 96 0 9 9 38 9 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
155 151 140 138 136 133 132 129 128 126 121 120 119 118 113 111 104 99 85 84 82 80 62 59 46 44 42 38 36 35 34 32 29 27 71 18 8 23 
CALL[ ]	/* CallFunction */";
};
width = 497;
}
);
note = uniA7A9;
unicode = 42921;
},
{
glyphname = t;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(225,30,o),
(261,66,o),
(277,79,qs),
(281,83,o),
(289,97,o),
(292,99,qs),
(304,108,o),
(319,123,o),
(325,134,qs),
(330,142,o),
(333,158,o),
(323,162,q),
(321,172,l),
(314,172,o),
(299,153,o),
(283,134,qs),
(276,127,o),
(251,105,o),
(245,98,qs),
(235,88,o),
(206,58,o),
(183,36,o),
(181,36,q),
(183,77,o),
(182,145,o),
(182,194,qs),
(182,196,o),
(182,240,o),
(181,302,o),
(180,365,o),
(179,411,o),
(177,415,q),
(189,415,o),
(229,413,o),
(269,410,o),
(279,408,qs),
(281,408,o),
(287,408,o),
(289,407,q),
(299,407,o),
(323,422,o),
(323,428,qs),
(323,433,o),
(311,447,o),
(303,447,qs),
(177,447,l),
(177,576,ls),
(177,580,o),
(179,603,o),
(179,613,qs),
(179,632,o),
(174,633,q),
(161,638,o),
(147,626,o),
(147,603,qs),
(147,447,l),
(43,447,ls),
(22,447,o),
(4,431,o),
(19,416,q),
(30,410,o),
(43,410,qs),
(62,410,o),
(119,416,o),
(147,415,q),
(147,24,l),
(148,18,o),
(163,0,o),
(184,1,qs),
(193,2,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
46 1 0 2 1 76 19 1 3 74 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
46 1 0 5 1 76 19 1 3 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
46 1 0 2 1 76 19 1 3 74 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 1 3 95 4 1 3 3 40 77 6 5 2 2 2 3 95 4 1 3 3 40 77 0 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 5 1 0 1 5 114 6 2 2 1 1 3 95 4 1 3 3 40 77 0 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 1 1 3 95 4 1 3 3 40 77 6 5 2 2 2 3 95 4 1 3 3 40 77 0 0 0 38 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
37 21 26 35 33 19 16 7 8 29 
CALL[ ]	/* CallFunction */";
};
width = 342;
}
);
note = t;
unicode = 116;
},
{
glyphname = tbar;
layers = (
{
layerId = m01;
shapes = (
{
ref = t;
},
{
pos = (0,46);
ref = uni0335;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
46 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 342;
}
);
note = tbar;
unicode = 359;
},
{
glyphname = tcaron;
layers = (
{
layerId = m01;
shapes = (
{
ref = t;
},
{
pos = (189,0);
ref = uni030C.alt;
}
);
width = 342;
}
);
note = tcaron;
unicode = 357;
},
{
glyphname = uni0163;
layers = (
{
layerId = m01;
shapes = (
{
ref = t;
},
{
pos = (119,-2);
ref = uni0327;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-2 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 342;
}
);
note = uni0163;
unicode = 355;
},
{
glyphname = uni1E71;
layers = (
{
layerId = m01;
shapes = (
{
ref = t;
},
{
pos = (36,-778);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-778 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 342;
}
);
note = uni1E71;
unicode = 7793;
},
{
glyphname = uni021B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(225,30,o),
(261,66,o),
(277,79,qs),
(281,83,o),
(289,97,o),
(292,99,qs),
(304,108,o),
(319,123,o),
(325,134,qs),
(330,142,o),
(333,158,o),
(323,162,q),
(321,172,l),
(314,172,o),
(299,153,o),
(283,134,qs),
(276,127,o),
(251,105,o),
(245,98,qs),
(235,88,o),
(206,58,o),
(183,36,o),
(181,36,q),
(183,77,o),
(182,145,o),
(182,194,qs),
(182,196,o),
(182,240,o),
(181,302,o),
(180,365,o),
(179,411,o),
(177,415,q),
(189,415,o),
(229,413,o),
(269,410,o),
(279,408,qs),
(281,408,o),
(287,408,o),
(289,407,q),
(299,407,o),
(323,422,o),
(323,428,qs),
(323,433,o),
(311,447,o),
(303,447,qs),
(177,447,l),
(177,576,ls),
(177,580,o),
(179,603,o),
(179,613,qs),
(179,632,o),
(174,633,q),
(161,638,o),
(147,626,o),
(147,603,qs),
(147,447,l),
(43,447,ls),
(22,447,o),
(4,431,o),
(19,416,q),
(30,410,o),
(43,410,qs),
(62,410,o),
(119,416,o),
(147,415,q),
(147,24,l),
(148,18,o),
(163,0,o),
(184,1,qs),
(193,2,o)
);
},
{
closed = 1;
nodes = (
(115,-197,o),
(117,-194,q),
(121,-194,o),
(138,-170,o),
(140,-168,q),
(149,-154,o),
(152,-139,o),
(159,-125,qs),
(165,-109,o),
(178,-98,qs),
(191,-87,o),
(195,-61,o),
(196,-44,qs),
(197,-33,o),
(190,-23,o),
(184,-27,q),
(179,-32,o),
(159,-47,o),
(157,-54,qs),
(154,-65,o),
(143,-87,o),
(137,-99,qs),
(129,-120,o),
(109,-155,o),
(95,-190,q),
(98,-195,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
46 1 0 2 1 76 19 1 3 74 82 1 0 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
46 1 0 5 1 76 19 1 3 74 82 1 0 73 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
46 1 0 2 1 76 19 1 3 74 82 1 0 73 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 1 3 95 4 1 3 3 40 77 6 5 2 2 2 3 95 4 1 3 3 40 77 0 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 5 1 0 1 5 114 6 2 2 1 1 3 95 4 1 3 3 40 77 0 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 1 1 3 95 4 1 3 3 40 77 6 5 2 2 2 3 95 4 1 3 3 40 77 0 0 0 38 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
37 21 26 35 33 19 16 7 8 29 
CALL[ ]	/* CallFunction */";
};
width = 342;
}
);
note = uni021B;
unicode = 539;
},
{
glyphname = uni2C66;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(62,28,o),
(79,47,o),
(80,66,q),
(92,76,o),
(100,105,o),
(102,119,q),
(114,130,o),
(124,158,o),
(125,173,q),
(133,189,o),
(143,213,o),
(147,223,q),
(147,24,l),
(148,18,o),
(163,0,o),
(184,1,qs),
(198,3,o),
(241,36,o),
(268,52,qs),
(273,55,o),
(283,67,o),
(287,69,qs),
(300,76,o),
(318,87,o),
(325,97,qs),
(332,105,o),
(337,120,o),
(328,125,q),
(328,135,l),
(321,137,o),
(303,121,o),
(284,105,qs),
(276,98,o),
(248,81,o),
(240,76,qs),
(222,63,o),
(184,36,o),
(181,36,q),
(183,77,o),
(182,145,o),
(182,194,qs),
(182,301,l),
(183,304,o),
(186,310,o),
(187,313,qs),
(191,322,o),
(205,338,o),
(206,349,qs),
(206,368,o),
(223,382,o),
(228,394,qs),
(235,411,o),
(248,441,o),
(254,455,q),
(279,452,ls),
(281,452,o),
(287,452,o),
(289,451,q),
(299,451,o),
(323,466,o),
(323,472,qs),
(323,477,o),
(311,491,o),
(303,491,qs),
(271,491,l),
(288,528,o),
(322,600,o),
(342,646,q),
(347,654,o),
(350,674,o),
(349,681,qs),
(348,691,o),
(340,697,q),
(337,694,o),
(320,680,o),
(309,654,qs),
(307,648,o),
(293,612,o),
(290,606,qs),
(275,569,o),
(250,519,o),
(237,491,q),
(177,491,l),
(177,600,ls),
(177,604,o),
(179,627,o),
(179,637,qs),
(179,656,o),
(174,657,q),
(161,662,o),
(147,650,o),
(147,627,qs),
(147,491,l),
(43,491,ls),
(22,491,o),
(4,475,o),
(19,460,q),
(30,454,o),
(43,454,qs),
(62,454,o),
(119,460,o),
(147,459,q),
(147,295,l),
(142,285,o),
(136,267,qs),
(131,253,o),
(118,241,o),
(118,224,q),
(111,214,o),
(103,193,o),
(101,180,qs),
(100,173,o),
(91,152,o),
(86,144,qs),
(79,131,o),
(57,92,o),
(37,52,o),
(31,38,qs),
(19,16,o),
(21,-1,qs),
(22,-11,o),
(31,-10,o),
(37,-7,q),
(43,11,o)
);
},
{
closed = 1;
nodes = (
(179,455,o),
(177,459,q),
(185,459,o),
(208,458,o),
(221,457,q),
(212,436,ls),
(208,426,o),
(194,392,o),
(182,364,o),
(181,362,q),
(180,400,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
129 1 1 0 124 120 114 111 95 94 85 75 20 15 10 6 1 2 76 52 36 2 2 74 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
129 1 5 0 124 120 114 111 95 94 85 75 20 15 10 6 5 2 76 52 36 2 2 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
129 1 1 0 124 120 114 111 95 94 85 75 20 15 10 6 1 2 76 52 36 2 2 74 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 0 1 2 0 89 4 3 2 2 7 5 2 1 6 2 1 105 0 6 6 38 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
7 1 2 0 5 2 0 89 4 3 2 2 0 5 6 2 5 105 0 6 6 38 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 0 1 2 0 89 4 3 2 2 7 5 2 1 6 2 1 105 0 6 6 38 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
131 130 108 107 65 64 59 58 41 40 30 28 25 23 22 21 8 8 22 
CALL[ ]	/* CallFunction */";
};
width = 367;
}
);
note = uni2C66;
unicode = 11366;
},
{
glyphname = uni1E6B;
layers = (
{
layerId = m01;
shapes = (
{
ref = t;
},
{
pos = (91,29);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
29 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 342;
}
);
note = uni1E6B;
unicode = 7787;
},
{
glyphname = uni1E6D;
layers = (
{
layerId = m01;
shapes = (
{
ref = t;
},
{
pos = (98,-110);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-110 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 342;
}
);
note = uni1E6D;
unicode = 7789;
},
{
glyphname = uni01AD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(225,30,o),
(261,66,o),
(277,79,qs),
(281,83,o),
(289,97,o),
(292,99,qs),
(304,108,o),
(319,123,o),
(325,134,qs),
(330,142,o),
(333,158,o),
(323,162,q),
(321,172,l),
(314,172,o),
(299,153,o),
(283,134,qs),
(276,127,o),
(251,105,o),
(245,98,qs),
(235,88,o),
(206,58,o),
(183,36,o),
(181,36,q),
(183,77,o),
(182,145,o),
(182,194,qs),
(182,196,o),
(182,240,o),
(181,302,o),
(180,365,o),
(179,411,o),
(177,415,q),
(189,415,o),
(229,413,o),
(269,410,o),
(279,408,qs),
(281,408,o),
(287,408,o),
(289,407,q),
(299,407,o),
(323,422,o),
(323,428,qs),
(323,433,o),
(311,447,o),
(303,447,qs),
(177,447,l),
(177,576,ls),
(177,580,o),
(179,603,o),
(179,613,qs),
(179,618,o),
(179,621,qs),
(181,635,o),
(180,677,o),
(190,710,o),
(210,709,qs),
(215,709,o),
(238,710,o),
(243,708,q),
(250,707,o),
(255,709,o),
(269,711,o),
(288,708,qs),
(293,707,o),
(303,713,o),
(309,710,q),
(322,718,o),
(320,729,o),
(309,734,q),
(297,742,o),
(278,745,o),
(264,740,qs),
(260,739,o),
(230,739,o),
(225,739,qs),
(202,740,o),
(197,740,o),
(193,740,qs),
(165,739,o),
(151,705,o),
(149,680,qs),
(148,670,o),
(154,649,o),
(149,642,qs),
(147,639,o),
(148,627,o),
(149,622,q),
(147,615,o),
(147,603,qs),
(147,447,l),
(43,447,ls),
(22,447,o),
(4,431,o),
(19,416,q),
(30,410,o),
(43,410,qs),
(62,410,o),
(119,416,o),
(147,415,q),
(147,24,l),
(148,18,o),
(163,0,o),
(184,1,qs),
(193,2,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
37 1 5 4 51 16 2 3 5 80 1 0 2 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
37 1 5 4 51 16 2 3 5 80 1 0 7 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
37 1 5 4 51 16 2 3 5 80 1 0 2 3 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 4 0 5 3 4 5 105 0 1 1 3 95 6 1 3 3 40 77 8 7 2 2 2 3 95 6 1 3 3 40 77 0 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 7 1 0 1 7 114 0 4 0 5 3 4 5 105 8 2 2 1 1 3 95 6 1 3 3 40 77 0 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 4 0 5 3 4 5 105 0 1 1 3 95 6 1 3 3 40 77 8 7 2 2 2 3 95 6 1 3 3 40 77 0 0 0 38 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
37 21 25 78 107 35 33 19 16 9 8 31 
CALL[ ]	/* CallFunction */";
};
width = 367;
}
);
note = uni01AD;
unicode = 429;
},
{
glyphname = tmacronbelow;
layers = (
{
layerId = m01;
shapes = (
{
ref = t;
},
{
pos = (-12,-325);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-325 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 342;
}
);
note = tmacronbelow;
unicode = 7791;
},
{
glyphname = uni0288;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(288,-98,o),
(282,-98,q),
(276,-93,o),
(244,-94,o),
(208,-93,o),
(182,-81,o),
(183,-64,qs),
(183,-59,o),
(182,-36,o),
(183,-31,qs),
(185,-24,o),
(182,-19,o),
(181,-5,o),
(183,14,q),
(183,14,l),
(187,18,o),
(182,34,o),
(181,46,q),
(182,74,o),
(182,115,o),
(182,161,o),
(182,194,qs),
(182,196,o),
(182,240,o),
(181,302,o),
(180,365,o),
(179,411,o),
(177,415,q),
(189,415,o),
(229,413,o),
(269,410,o),
(279,408,qs),
(281,408,o),
(287,408,o),
(289,407,q),
(299,407,o),
(323,422,o),
(323,428,qs),
(323,433,o),
(311,447,o),
(303,447,qs),
(177,447,l),
(177,576,ls),
(177,580,o),
(179,603,o),
(179,613,qs),
(179,632,o),
(174,633,q),
(161,638,o),
(147,626,o),
(147,603,qs),
(147,447,l),
(43,447,ls),
(22,447,o),
(4,431,o),
(19,416,q),
(30,410,o),
(43,410,qs),
(62,410,o),
(119,416,o),
(147,415,q),
(147,34,ls),
(146,15,o),
(147,12,q),
(146,2,o),
(151,-10,qs),
(153,-14,o),
(152,-44,o),
(152,-49,qs),
(152,-81,ls),
(154,-109,o),
(187,-122,o),
(212,-124,qs),
(222,-125,o),
(243,-119,o),
(250,-124,qs),
(254,-126,o),
(273,-123,o),
(276,-124,q),
(288,-124,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
69 61 15 9 4 6 1 1 76 33 1 2 74 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 13 values pushed */
69 61 15 9 4 6 4 1 76 33 1 2 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 13 values pushed */
69 61 15 9 4 6 1 1 76 33 1 2 74 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 6 1 7 1 6 7 128 8 1 7 7 132 0 0 0 2 95 3 1 2 2 40 77 5 4 2 1 1 2 95 3 1 2 2 40 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 0 6 0 4 114 0 6 7 0 6 7 126 8 1 7 7 132 5 1 2 0 0 2 95 3 1 2 2 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 6 1 7 1 6 7 128 8 1 7 7 132 0 0 0 2 95 3 1 2 2 40 77 5 4 2 1 1 2 95 3 1 2 2 40 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
0 0 0 79 0 79 76 74 51 49 44 43 38 37 27 25 22 20 19 18 9 8 22 
CALL[ ]	/* CallFunction */";
};
width = 333;
}
);
note = uni0288;
unicode = 648;
},
{
glyphname = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(90,2,o),
(98,2,qs),
(105,2,o),
(169,1,o),
(257,0,o),
(345,0,o),
(410,0,o),
(418,1,qs),
(423,1,o),
(436,14,o),
(436,19,qs),
(436,21,o),
(436,69,o),
(436,138,o),
(436,208,o),
(436,261,o),
(436,268,qs),
(436,292,o),
(441,306,o),
(446,316,o),
(446,330,qs),
(446,340,o),
(435,362,o),
(445,375,q),
(438,393,o),
(442,406,o),
(450,421,o),
(450,440,qs),
(450,452,o),
(435,455,o),
(418,447,o),
(413,441,qs),
(409,435,o),
(409,425,o),
(409,420,qs),
(408,361,o),
(408,229,o),
(408,170,qs),
(408,163,o),
(411,148,o),
(408,143,qs),
(401,129,o),
(397,101,o),
(407,89,q),
(398,78,o),
(399,63,o),
(407,52,qs),
(410,48,o),
(406,39,o),
(402,36,qs),
(384,26,o),
(355,31,o),
(347,36,qs),
(343,39,o),
(321,36,o),
(299,30,o),
(295,30,qs),
(289,30,o),
(278,38,o),
(271,38,qs),
(264,38,o),
(249,26,o),
(240,33,qs),
(234,38,o),
(203,30,o),
(172,30,qs),
(162,30,o),
(154,36,o),
(140,32,qs),
(133,30,o),
(92,29,o),
(82,30,q),
(76,42,o),
(76,54,qs),
(76,84,o),
(77,116,o),
(77,122,qs),
(77,133,o),
(74,153,o),
(68,163,q),
(68,173,o),
(69,197,o),
(77,206,q),
(77,284,l),
(78,292,o),
(71,303,o),
(69,310,qs),
(67,317,o),
(67,334,o),
(72,341,qs),
(74,344,o),
(77,363,o),
(77,367,qs),
(77,432,ls),
(77,446,o),
(59,454,o),
(40,445,o),
(40,431,qs),
(40,22,ls),
(40,11,o),
(56,0,o),
(62,-7,q),
(73,-2,o)
);
},
{
closed = 1;
nodes = (
(261,198,o),
(268,207,qs),
(274,215,o),
(274,223,qs),
(274,231,o),
(263,250,o),
(256,251,qs),
(246,253,o),
(214,250,o),
(214,235,qs),
(214,224,o),
(200,214,o),
(208,206,qs),
(222,192,ls),
(233,182,o)
);
},
{
closed = 1;
nodes = (
(229,218,o),
(233,220,o),
(233,224,qs),
(233,228,o),
(241,229,o),
(244,228,qs),
(249,226,o),
(249,220,qs),
(249,217,o),
(247,216,q),
(246,214,o),
(238,209,o),
(235,212,qs),
(231,216,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
123 61 58 22 19 5 2 5 1 76 78 18 9 3 5 74 0 1 4 73 0 5 2 5 133 0 2 0 0 2 112 3 1 2 0 0 4 98 0 4 4 38 4 78 127 125 101 95 46 44 43 41 37 35 32 31 6 8 22 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = u;
unicode = 117;
},
{
glyphname = uacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (162,-107);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-107 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = uacute;
unicode = 250;
},
{
glyphname = uni0289;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(85,2,o),
(93,2,qs),
(100,2,o),
(164,1,o),
(252,0,o),
(340,0,o),
(405,0,o),
(413,1,qs),
(418,1,o),
(431,14,o),
(431,19,qs),
(431,21,o),
(431,69,o),
(431,138,o),
(431,208,o),
(431,261,o),
(431,268,qs),
(431,285,o),
(432,294,q),
(439,294,o),
(460,293,o),
(465,293,qs),
(484,292,o),
(498,300,o),
(501,301,q),
(499,308,o),
(493,313,q),
(480,320,o),
(469,320,qs),
(460,320,o),
(446,319,o),
(440,319,q),
(441,324,o),
(441,330,qs),
(441,340,o),
(430,362,o),
(440,375,q),
(433,393,o),
(437,406,o),
(445,421,o),
(445,440,qs),
(445,452,o),
(430,455,o),
(413,447,o),
(408,441,qs),
(404,435,o),
(404,425,o),
(404,420,qs),
(404,396,o),
(403,345,o),
(403,319,q),
(397,319,o),
(376,319,o),
(357,320,qs),
(348,320,o),
(335,312,o),
(323,318,qs),
(315,322,o),
(300,316,o),
(293,316,qs),
(256,315,o),
(190,315,o),
(180,314,q),
(172,317,o),
(129,320,o),
(86,319,o),
(78,316,q),
(70,318,o),
(62,319,q),
(60,331,o),
(67,341,qs),
(69,344,o),
(72,363,o),
(72,367,qs),
(72,432,ls),
(72,446,o),
(54,454,o),
(35,445,o),
(35,431,qs),
(35,318,l),
(27,317,o),
(11,314,o),
(3,313,q),
(-13,320,o),
(-30,306,o),
(-29,287,o),
(-20,287,qs),
(2,287,ls),
(13,287,o),
(35,289,q),
(35,22,ls),
(35,11,o),
(51,0,o),
(57,-7,q),
(68,-2,o)
);
},
{
closed = 1;
nodes = (
(316,36,o),
(294,30,o),
(290,30,qs),
(284,30,o),
(273,38,o),
(266,38,qs),
(259,38,o),
(244,26,o),
(235,33,qs),
(229,38,o),
(198,30,o),
(167,30,qs),
(157,30,o),
(149,36,o),
(135,32,qs),
(128,30,o),
(87,29,o),
(77,30,q),
(71,42,o),
(71,54,qs),
(71,84,o),
(72,116,o),
(72,122,qs),
(72,133,o),
(69,153,o),
(63,163,q),
(63,173,o),
(64,197,o),
(72,206,q),
(72,284,ls),
(72,288,o),
(72,291,q),
(99,294,o),
(114,295,qs),
(128,296,o),
(160,290,o),
(174,294,q),
(181,290,o),
(211,289,o),
(240,289,o),
(248,288,qs),
(255,288,o),
(288,293,o),
(323,297,o),
(332,295,qs),
(342,293,o),
(368,294,o),
(380,294,qs),
(391,295,o),
(401,295,o),
(403,295,q),
(403,263,o),
(403,200,o),
(403,170,qs),
(403,163,o),
(406,148,o),
(403,143,qs),
(396,129,o),
(392,101,o),
(402,89,q),
(393,78,o),
(394,63,o),
(402,52,qs),
(405,48,o),
(401,39,o),
(397,36,qs),
(379,26,o),
(350,31,o),
(342,36,qs),
(338,39,o)
);
},
{
closed = 1;
nodes = (
(255,148,o),
(262,157,qs),
(268,165,o),
(268,173,qs),
(268,181,o),
(257,200,o),
(250,201,qs),
(240,203,o),
(208,200,o),
(208,185,qs),
(208,174,o),
(194,164,o),
(202,156,qs),
(216,142,ls),
(227,132,o)
);
},
{
closed = 1;
nodes = (
(223,168,o),
(227,170,o),
(227,174,qs),
(227,178,o),
(235,179,o),
(238,178,qs),
(243,176,o),
(243,170,qs),
(243,167,o),
(241,166,q),
(240,164,o),
(232,159,o),
(229,162,qs),
(225,166,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
127 69 31 27 11 5 5 1 132 4 2 0 5 135 1 15 0 185 138 107 104 4 13 15 4 76 60 57 20 14 4 1 74 0 1 6 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 15 0 13 0 15 114 0 13 11 11 13 112 10 8 7 3 5 0 1 5 89 4 3 2 3 1 9 1 0 15 1 0 105 14 12 2 11 11 6 98 0 6 6 38 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 15 0 13 0 15 13 128 0 13 11 11 13 112 10 8 7 3 5 0 1 5 89 4 3 2 3 1 9 1 0 15 1 0 105 14 12 2 11 11 6 98 0 6 6 38 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
189 187 162 160 159 157 153 151 148 147 131 130 126 122 118 116 115 113 93 87 74 71 66 62 42 39 34 32 30 28 53 16 8 23 
CALL[ ]	/* CallFunction */";
};
width = 471;
}
);
note = uni0289;
unicode = 649;
},
{
glyphname = ubreve;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (100,-129);
ref = uni0306;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-129 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = ubreve;
unicode = 365;
},
{
glyphname = uni01D4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(90,2,o),
(98,2,qs),
(105,2,o),
(169,1,o),
(257,0,o),
(345,0,o),
(410,0,o),
(418,1,qs),
(423,1,o),
(436,14,o),
(436,19,qs),
(436,21,o),
(436,69,o),
(436,138,o),
(436,208,o),
(436,261,o),
(436,268,qs),
(436,292,o),
(441,306,o),
(446,316,o),
(446,330,qs),
(446,340,o),
(435,362,o),
(445,375,q),
(438,393,o),
(442,406,o),
(450,421,o),
(450,440,qs),
(450,452,o),
(435,455,o),
(418,447,o),
(413,441,qs),
(409,435,o),
(409,425,o),
(409,420,qs),
(408,361,o),
(408,229,o),
(408,170,qs),
(408,163,o),
(411,148,o),
(408,143,qs),
(401,129,o),
(397,101,o),
(407,89,q),
(398,78,o),
(399,63,o),
(407,52,qs),
(410,48,o),
(406,39,o),
(402,36,qs),
(384,26,o),
(355,31,o),
(347,36,qs),
(343,39,o),
(321,36,o),
(299,30,o),
(295,30,qs),
(289,30,o),
(278,38,o),
(271,38,qs),
(264,38,o),
(249,26,o),
(240,33,qs),
(234,38,o),
(203,30,o),
(172,30,qs),
(162,30,o),
(154,36,o),
(140,32,qs),
(133,30,o),
(92,29,o),
(82,30,q),
(76,42,o),
(76,54,qs),
(76,84,o),
(77,116,o),
(77,122,qs),
(77,133,o),
(74,153,o),
(68,163,q),
(68,173,o),
(69,197,o),
(77,206,q),
(77,284,l),
(78,292,o),
(71,303,o),
(69,310,qs),
(67,317,o),
(67,334,o),
(72,341,qs),
(74,344,o),
(77,363,o),
(77,367,qs),
(77,432,ls),
(77,446,o),
(59,454,o),
(40,445,o),
(40,431,qs),
(40,22,ls),
(40,11,o),
(56,0,o),
(62,-7,q),
(73,-2,o)
);
},
{
closed = 1;
nodes = (
(261,198,o),
(268,207,qs),
(274,215,o),
(274,223,qs),
(274,231,o),
(263,250,o),
(256,251,qs),
(246,253,o),
(214,250,o),
(214,235,qs),
(214,224,o),
(200,214,o),
(208,206,qs),
(222,192,ls),
(233,182,o)
);
},
{
closed = 1;
nodes = (
(229,218,o),
(233,220,o),
(233,224,qs),
(233,228,o),
(241,229,o),
(244,228,qs),
(249,226,o),
(249,220,qs),
(249,217,o),
(247,216,q),
(246,214,o),
(238,209,o),
(235,212,qs),
(231,216,ls)
);
},
{
closed = 1;
nodes = (
(283,586,o),
(280,582,qs),
(278,580,o),
(265,563,o),
(263,561,qs),
(261,558,o),
(254,547,o),
(252,546,qs),
(246,543,o),
(242,543,o),
(237,545,q),
(233,550,o),
(211,570,o),
(184,593,o),
(161,609,o),
(156,609,q),
(148,611,o),
(136,609,o),
(140,600,q),
(146,594,o),
(158,581,o),
(162,574,q),
(167,571,o),
(179,556,o),
(185,553,q),
(193,546,o),
(200,537,o),
(207,531,qs),
(215,524,o),
(231,510,o),
(235,499,qs),
(237,495,o),
(245,494,o),
(247,498,q),
(258,510,o),
(289,544,o),
(319,579,o),
(339,602,o),
(338,603,qs),
(336,605,o),
(330,610,o),
(328,610,q),
(323,612,o),
(316,610,q),
(302,603,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
123 61 58 22 19 5 2 5 1 76 78 18 9 3 5 74 0 1 4 73 0 5 2 5 133 0 2 0 0 2 112 3 1 2 0 0 4 98 0 4 4 38 4 78 127 125 101 95 46 44 43 41 37 35 32 31 6 8 22 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = uni01D4;
unicode = 468;
},
{
glyphname = ucircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (103,-119);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-119 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = ucircumflex;
unicode = 251;
},
{
glyphname = uni1E77;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (105,-782);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-782 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = uni1E77;
unicode = 7799;
},
{
glyphname = uni0215;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (86,-129);
ref = uni030F;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 2 
PUSHW[ ]	/* 1 value pushed */
-129 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = uni0215;
unicode = 533;
},
{
glyphname = udieresis;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (80,-120);
ref = uni0308;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 2 
PUSHW[ ]	/* 1 value pushed */
-120 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = udieresis;
unicode = 252;
},
{
glyphname = uni01D8;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (80,-120);
ref = uni0308;
},
{
pos = (160,14);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 2 
PUSHW[ ]	/* 1 value pushed */
-120 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHB[ ]	/* 1 value pushed */
14 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = uni01D8;
unicode = 472;
},
{
glyphname = uni1E73;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (91,-763);
ref = uni0308;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 2 
PUSHW[ ]	/* 1 value pushed */
-763 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = uni1E73;
unicode = 7795;
},
{
glyphname = uni01DA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(90,2,o),
(98,2,qs),
(105,2,o),
(169,1,o),
(257,0,o),
(345,0,o),
(410,0,o),
(418,1,qs),
(423,1,o),
(436,14,o),
(436,19,qs),
(436,21,o),
(436,69,o),
(436,138,o),
(436,208,o),
(436,261,o),
(436,268,qs),
(436,292,o),
(441,306,o),
(446,316,o),
(446,330,qs),
(446,340,o),
(435,362,o),
(445,375,q),
(438,393,o),
(442,406,o),
(450,421,o),
(450,440,qs),
(450,452,o),
(435,455,o),
(418,447,o),
(413,441,qs),
(409,435,o),
(409,425,o),
(409,420,qs),
(408,361,o),
(408,229,o),
(408,170,qs),
(408,163,o),
(411,148,o),
(408,143,qs),
(401,129,o),
(397,101,o),
(407,89,q),
(398,78,o),
(399,63,o),
(407,52,qs),
(410,48,o),
(406,39,o),
(402,36,qs),
(384,26,o),
(355,31,o),
(347,36,qs),
(343,39,o),
(321,36,o),
(299,30,o),
(295,30,qs),
(289,30,o),
(278,38,o),
(271,38,qs),
(264,38,o),
(249,26,o),
(240,33,qs),
(234,38,o),
(203,30,o),
(172,30,qs),
(162,30,o),
(154,36,o),
(140,32,qs),
(133,30,o),
(92,29,o),
(82,30,q),
(76,42,o),
(76,54,qs),
(76,84,o),
(77,116,o),
(77,122,qs),
(77,133,o),
(74,153,o),
(68,163,q),
(68,173,o),
(69,197,o),
(77,206,q),
(77,284,l),
(78,292,o),
(71,303,o),
(69,310,qs),
(67,317,o),
(67,334,o),
(72,341,qs),
(74,344,o),
(77,363,o),
(77,367,qs),
(77,432,ls),
(77,446,o),
(59,454,o),
(40,445,o),
(40,431,qs),
(40,22,ls),
(40,11,o),
(56,0,o),
(62,-7,q),
(73,-2,o)
);
},
{
closed = 1;
nodes = (
(261,198,o),
(268,207,qs),
(274,215,o),
(274,223,qs),
(274,231,o),
(263,250,o),
(256,251,qs),
(246,253,o),
(214,250,o),
(214,235,qs),
(214,224,o),
(200,214,o),
(208,206,qs),
(222,192,ls),
(233,182,o)
);
},
{
closed = 1;
nodes = (
(229,218,o),
(233,220,o),
(233,224,qs),
(233,228,o),
(241,229,o),
(244,228,qs),
(249,226,o),
(249,220,qs),
(249,217,o),
(247,216,q),
(246,214,o),
(238,209,o),
(235,212,qs),
(231,216,ls)
);
},
{
closed = 1;
nodes = (
(121,568,o),
(120,554,qs),
(120,543,o),
(132,534,qs),
(139,530,o),
(149,523,o),
(155,524,qs),
(164,525,o),
(179,522,o),
(188,528,qs),
(202,536,o),
(207,566,o),
(205,571,qs),
(201,582,o),
(178,591,o),
(164,591,qs),
(145,591,o)
);
},
{
closed = 1;
nodes = (
(342,539,o),
(349,552,qs),
(356,564,o),
(344,571,qs),
(338,575,o),
(324,581,o),
(319,585,qs),
(312,590,o),
(292,583,o),
(282,578,qs),
(269,571,o),
(266,542,o),
(267,535,q),
(276,516,o),
(307,516,qs),
(326,516,o)
);
},
{
closed = 1;
nodes = (
(281,707,o),
(278,703,qs),
(276,701,o),
(263,684,o),
(261,682,qs),
(259,679,o),
(252,668,o),
(250,667,qs),
(244,664,o),
(240,664,o),
(235,666,q),
(231,671,o),
(209,691,o),
(182,714,o),
(159,730,o),
(154,730,q),
(146,732,o),
(134,730,o),
(138,721,q),
(144,715,o),
(156,702,o),
(160,695,q),
(165,692,o),
(177,677,o),
(183,674,q),
(191,667,o),
(198,658,o),
(205,652,qs),
(213,645,o),
(229,631,o),
(233,620,qs),
(235,616,o),
(243,615,o),
(245,619,q),
(256,631,o),
(287,665,o),
(317,700,o),
(337,723,o),
(336,724,qs),
(334,726,o),
(328,731,o),
(326,731,q),
(321,733,o),
(314,731,q),
(300,724,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 89 values pushed */
151 146 135 3 7 6 78 18 9 3 5 7 123 61 58 22 19 5 2 5 3 76 0 1 4 73 8 1 6 7 6 133 9 1 7 5 7 133 0 5 2 5 133 0 2 0 0 2 112 3 1 2 0 0 4 98 0 4 4 38 4 78 150 149 133 132 149 164 150 164 132 148 133 148 127 125 101 95 46 44 43 41 37 35 32 31 10 8 22 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = uni01DA;
unicode = 474;
},
{
glyphname = uni01DC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(90,2,o),
(98,2,qs),
(105,2,o),
(169,1,o),
(257,0,o),
(345,0,o),
(410,0,o),
(418,1,qs),
(423,1,o),
(436,14,o),
(436,19,qs),
(436,21,o),
(436,69,o),
(436,138,o),
(436,208,o),
(436,261,o),
(436,268,qs),
(436,292,o),
(441,306,o),
(446,316,o),
(446,330,qs),
(446,340,o),
(435,362,o),
(445,375,q),
(438,393,o),
(442,406,o),
(450,421,o),
(450,440,qs),
(450,452,o),
(435,455,o),
(418,447,o),
(413,441,qs),
(409,435,o),
(409,425,o),
(409,420,qs),
(408,361,o),
(408,229,o),
(408,170,qs),
(408,163,o),
(411,148,o),
(408,143,qs),
(401,129,o),
(397,101,o),
(407,89,q),
(398,78,o),
(399,63,o),
(407,52,qs),
(410,48,o),
(406,39,o),
(402,36,qs),
(384,26,o),
(355,31,o),
(347,36,qs),
(343,39,o),
(321,36,o),
(299,30,o),
(295,30,qs),
(289,30,o),
(278,38,o),
(271,38,qs),
(264,38,o),
(249,26,o),
(240,33,qs),
(234,38,o),
(203,30,o),
(172,30,qs),
(162,30,o),
(154,36,o),
(140,32,qs),
(133,30,o),
(92,29,o),
(82,30,q),
(76,42,o),
(76,54,qs),
(76,84,o),
(77,116,o),
(77,122,qs),
(77,133,o),
(74,153,o),
(68,163,q),
(68,173,o),
(69,197,o),
(77,206,q),
(77,284,l),
(78,292,o),
(71,303,o),
(69,310,qs),
(67,317,o),
(67,334,o),
(72,341,qs),
(74,344,o),
(77,363,o),
(77,367,qs),
(77,432,ls),
(77,446,o),
(59,454,o),
(40,445,o),
(40,431,qs),
(40,22,ls),
(40,11,o),
(56,0,o),
(62,-7,q),
(73,-2,o)
);
},
{
closed = 1;
nodes = (
(261,198,o),
(268,207,qs),
(274,215,o),
(274,223,qs),
(274,231,o),
(263,250,o),
(256,251,qs),
(246,253,o),
(214,250,o),
(214,235,qs),
(214,224,o),
(200,214,o),
(208,206,qs),
(222,192,ls),
(233,182,o)
);
},
{
closed = 1;
nodes = (
(229,218,o),
(233,220,o),
(233,224,qs),
(233,228,o),
(241,229,o),
(244,228,qs),
(249,226,o),
(249,220,qs),
(249,217,o),
(247,216,q),
(246,214,o),
(238,209,o),
(235,212,qs),
(231,216,ls)
);
},
{
closed = 1;
nodes = (
(121,568,o),
(120,554,qs),
(120,543,o),
(132,534,qs),
(139,530,o),
(149,523,o),
(155,524,qs),
(164,525,o),
(179,522,o),
(188,528,qs),
(202,536,o),
(207,566,o),
(205,571,qs),
(201,582,o),
(178,591,o),
(164,591,qs),
(145,591,o)
);
},
{
closed = 1;
nodes = (
(342,539,o),
(349,552,qs),
(356,564,o),
(344,571,qs),
(338,575,o),
(324,581,o),
(319,585,qs),
(312,590,o),
(292,583,o),
(282,578,qs),
(269,571,o),
(266,542,o),
(267,535,q),
(276,516,o),
(307,516,qs),
(326,516,o)
);
},
{
closed = 1;
nodes = (
(260,663,o),
(249,673,qs),
(228,691,o),
(216,707,q),
(208,714,o),
(194,727,o),
(187,735,qs),
(183,740,o),
(174,750,o),
(167,751,q),
(165,753,o),
(159,748,o),
(157,749,qs),
(154,751,o),
(143,740,o),
(144,737,qs),
(149,725,o),
(159,702,o),
(175,697,qs),
(181,695,o),
(192,687,o),
(196,682,qs),
(204,673,o),
(225,651,o),
(241,637,qs),
(259,624,o),
(287,629,o),
(291,633,q),
(281,643,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 93 values pushed */
151 146 135 3 7 6 78 18 9 3 5 7 123 61 58 22 19 5 2 5 3 76 177 1 6 74 0 1 4 73 8 1 6 7 6 133 9 1 7 5 7 133 0 5 2 5 133 0 2 0 0 2 112 3 1 2 0 0 4 98 0 4 4 38 4 78 150 149 133 132 149 164 150 164 132 148 133 148 127 125 101 95 46 44 43 41 37 35 32 31 10 8 22 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = uni01DC;
unicode = 476;
},
{
glyphname = uni01D6;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (80,-120);
ref = uni0308;
},
{
pos = (65,421);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 2 
PUSHW[ ]	/* 1 value pushed */
-120 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
5 1 
PUSHW[ ]	/* 1 value pushed */
421 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = uni01D6;
unicode = 470;
},
{
glyphname = uni1EE5;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (167,-114);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = uni1EE5;
unicode = 7909;
},
{
glyphname = ugrave;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(90,2,o),
(98,2,qs),
(105,2,o),
(169,1,o),
(257,0,o),
(345,0,o),
(410,0,o),
(418,1,qs),
(423,1,o),
(436,14,o),
(436,19,qs),
(436,21,o),
(436,69,o),
(436,138,o),
(436,208,o),
(436,261,o),
(436,268,qs),
(436,292,o),
(441,306,o),
(446,316,o),
(446,330,qs),
(446,340,o),
(435,362,o),
(445,375,q),
(438,393,o),
(442,406,o),
(450,421,o),
(450,440,qs),
(450,452,o),
(435,455,o),
(418,447,o),
(413,441,qs),
(409,435,o),
(409,425,o),
(409,420,qs),
(408,361,o),
(408,229,o),
(408,170,qs),
(408,163,o),
(411,148,o),
(408,143,qs),
(401,129,o),
(397,101,o),
(407,89,q),
(398,78,o),
(399,63,o),
(407,52,qs),
(410,48,o),
(406,39,o),
(402,36,qs),
(384,26,o),
(355,31,o),
(347,36,qs),
(343,39,o),
(321,36,o),
(299,30,o),
(295,30,qs),
(289,30,o),
(278,38,o),
(271,38,qs),
(264,38,o),
(249,26,o),
(240,33,qs),
(234,38,o),
(203,30,o),
(172,30,qs),
(162,30,o),
(154,36,o),
(140,32,qs),
(133,30,o),
(92,29,o),
(82,30,q),
(76,42,o),
(76,54,qs),
(76,84,o),
(77,116,o),
(77,122,qs),
(77,133,o),
(74,153,o),
(68,163,q),
(68,173,o),
(69,197,o),
(77,206,q),
(77,284,l),
(78,292,o),
(71,303,o),
(69,310,qs),
(67,317,o),
(67,334,o),
(72,341,qs),
(74,344,o),
(77,363,o),
(77,367,qs),
(77,432,ls),
(77,446,o),
(59,454,o),
(40,445,o),
(40,431,qs),
(40,22,ls),
(40,11,o),
(56,0,o),
(62,-7,q),
(73,-2,o)
);
},
{
closed = 1;
nodes = (
(261,198,o),
(268,207,qs),
(274,215,o),
(274,223,qs),
(274,231,o),
(263,250,o),
(256,251,qs),
(246,253,o),
(214,250,o),
(214,235,qs),
(214,224,o),
(200,214,o),
(208,206,qs),
(222,192,ls),
(233,182,o)
);
},
{
closed = 1;
nodes = (
(229,218,o),
(233,220,o),
(233,224,qs),
(233,228,o),
(241,229,o),
(244,228,qs),
(249,226,o),
(249,220,qs),
(249,217,o),
(247,216,q),
(246,214,o),
(238,209,o),
(235,212,qs),
(231,216,ls)
);
},
{
closed = 1;
nodes = (
(262,542,o),
(251,552,qs),
(230,570,o),
(218,586,q),
(210,593,o),
(196,606,o),
(189,614,qs),
(185,619,o),
(176,629,o),
(169,630,q),
(167,632,o),
(161,627,o),
(159,628,qs),
(156,630,o),
(145,619,o),
(146,616,qs),
(151,604,o),
(161,581,o),
(177,576,qs),
(183,574,o),
(194,566,o),
(198,561,qs),
(206,552,o),
(227,530,o),
(243,516,qs),
(261,503,o),
(289,508,o),
(293,512,q),
(283,522,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
123 61 58 22 19 5 2 5 1 76 144 78 18 9 4 5 74 0 1 4 73 0 5 2 5 133 0 2 0 0 2 112 3 1 2 0 0 4 98 0 4 4 38 4 78 127 125 101 95 46 44 43 41 37 35 32 31 6 8 22 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = ugrave;
unicode = 249;
},
{
glyphname = uni1EE7;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (131,-92);
ref = hookabovecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-92 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = uni1EE7;
unicode = 7911;
},
{
glyphname = uhorn;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (361,-41);
ref = uni031B;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-41 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = uhorn;
unicode = 432;
},
{
glyphname = uni1EE9;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (361,-41);
ref = uni031B;
},
{
pos = (142,-107);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-41 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-107 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = uni1EE9;
unicode = 7913;
},
{
glyphname = uni1EF1;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (361,-41);
ref = uni031B;
},
{
pos = (167,-114);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-41 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = uni1EF1;
unicode = 7921;
},
{
glyphname = uni1EEB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(90,2,o),
(98,2,qs),
(105,2,o),
(169,1,o),
(257,0,o),
(345,0,o),
(410,0,o),
(418,1,qs),
(423,1,o),
(436,14,o),
(436,19,qs),
(436,21,o),
(436,69,o),
(436,138,o),
(436,208,o),
(436,261,o),
(436,268,qs),
(436,292,o),
(441,306,o),
(446,316,o),
(446,330,qs),
(446,340,o),
(435,362,o),
(445,375,q),
(438,393,o),
(442,406,o),
(450,421,o),
(450,440,qs),
(450,452,o),
(435,455,o),
(418,447,o),
(413,441,qs),
(409,435,o),
(409,425,o),
(409,420,qs),
(408,361,o),
(408,229,o),
(408,170,qs),
(408,163,o),
(411,148,o),
(408,143,qs),
(401,129,o),
(397,101,o),
(407,89,q),
(398,78,o),
(399,63,o),
(407,52,qs),
(410,48,o),
(406,39,o),
(402,36,qs),
(384,26,o),
(355,31,o),
(347,36,qs),
(343,39,o),
(321,36,o),
(299,30,o),
(295,30,qs),
(289,30,o),
(278,38,o),
(271,38,qs),
(264,38,o),
(249,26,o),
(240,33,qs),
(234,38,o),
(203,30,o),
(172,30,qs),
(162,30,o),
(154,36,o),
(140,32,qs),
(133,30,o),
(92,29,o),
(82,30,q),
(76,42,o),
(76,54,qs),
(76,84,o),
(77,116,o),
(77,122,qs),
(77,133,o),
(74,153,o),
(68,163,q),
(68,173,o),
(69,197,o),
(77,206,q),
(77,284,l),
(78,292,o),
(71,303,o),
(69,310,qs),
(67,317,o),
(67,334,o),
(72,341,qs),
(74,344,o),
(77,363,o),
(77,367,qs),
(77,432,ls),
(77,446,o),
(59,454,o),
(40,445,o),
(40,431,qs),
(40,22,ls),
(40,11,o),
(56,0,o),
(62,-7,q),
(73,-2,o)
);
},
{
closed = 1;
nodes = (
(261,198,o),
(268,207,qs),
(274,215,o),
(274,223,qs),
(274,231,o),
(263,250,o),
(256,251,qs),
(246,253,o),
(214,250,o),
(214,235,qs),
(214,224,o),
(200,214,o),
(208,206,qs),
(222,192,ls),
(233,182,o)
);
},
{
closed = 1;
nodes = (
(229,218,o),
(233,220,o),
(233,224,qs),
(233,228,o),
(241,229,o),
(244,228,qs),
(249,226,o),
(249,220,qs),
(249,217,o),
(247,216,q),
(246,214,o),
(238,209,o),
(235,212,qs),
(231,216,ls)
);
},
{
closed = 1;
nodes = (
(436,418,o),
(440,420,qs),
(447,425,o),
(468,419,o),
(478,420,qs),
(503,422,o),
(537,435,o),
(538,463,qs),
(538,495,ls),
(538,500,o),
(538,530,o),
(539,534,qs),
(544,548,o),
(541,567,o),
(533,579,q),
(528,590,o),
(517,592,o),
(509,579,q),
(512,573,o),
(506,563,o),
(507,558,qs),
(510,539,o),
(508,525,o),
(506,520,o),
(507,513,q),
(509,508,o),
(507,485,o),
(507,480,qs),
(508,463,o),
(482,451,o),
(446,450,o),
(414,451,o),
(408,446,q),
(402,446,o),
(402,420,o),
(414,420,q),
(417,421,o)
);
},
{
closed = 1;
nodes = (
(262,542,o),
(251,552,qs),
(230,570,o),
(218,586,q),
(210,593,o),
(196,606,o),
(189,614,qs),
(185,619,o),
(176,629,o),
(169,630,q),
(167,632,o),
(161,627,o),
(159,628,qs),
(156,630,o),
(145,619,o),
(146,616,qs),
(151,604,o),
(161,581,o),
(177,576,qs),
(183,574,o),
(194,566,o),
(198,561,qs),
(206,552,o),
(227,530,o),
(243,516,qs),
(261,503,o),
(289,508,o),
(293,512,q),
(283,522,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 89 values pushed */
78 18 9 3 5 6 123 61 58 22 19 5 2 5 2 76 181 156 150 147 140 5 7 74 0 1 4 73 0 5 6 2 6 5 2 128 0 2 0 0 2 112 8 1 6 6 7 97 0 7 7 40 77 3 1 2 0 0 4 98 0 4 4 38 4 78 133 132 138 136 132 168 133 166 127 125 101 95 46 44 43 41 37 35 32 31 9 8 22 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = uni1EEB;
unicode = 7915;
},
{
glyphname = uni1EED;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (361,-41);
ref = uni031B;
},
{
pos = (131,-92);
ref = hookabovecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-41 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-92 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = uni1EED;
unicode = 7917;
},
{
glyphname = uni1EEF;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (361,-41);
ref = uni031B;
},
{
pos = (112,-155);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-41 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-155 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = uni1EEF;
unicode = 7919;
},
{
glyphname = uhungarumlaut;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (112,-130);
ref = uni030B;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 2 
PUSHW[ ]	/* 1 value pushed */
-130 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = uhungarumlaut;
unicode = 369;
},
{
glyphname = uni0217;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (135,-132);
ref = uni0311;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-132 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = uni0217;
unicode = 535;
},
{
glyphname = umacron;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (67,300);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
300 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = umacron;
unicode = 363;
},
{
glyphname = uni1E7B;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (67,300);
ref = hyphen;
},
{
pos = (80,-1);
ref = uni0308;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
300 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
4 2 
PUSHW[ ]	/* 1 value pushed */
-1 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = uni1E7B;
unicode = 7803;
},
{
glyphname = uogonek;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (351,42);
ref = uni0328;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHB[ ]	/* 1 value pushed */
42 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = uogonek;
unicode = 371;
},
{
glyphname = uni028A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,-12,o),
(531,2,o),
(531,10,qs),
(531,12,o),
(518,41,o),
(501,81,o),
(488,115,o),
(487,121,qs),
(486,133,o),
(475,160,o),
(469,172,qs),
(451,208,o),
(433,244,o),
(426,262,o),
(421,277,o),
(413,306,o),
(395,364,o),
(377,416,q),
(431,416,o),
(483,416,o),
(503,415,o),
(508,415,qs),
(513,415,o),
(522,432,o),
(522,438,qs),
(522,446,o),
(514,448,o),
(509,448,q),
(506,450,o),
(479,456,o),
(474,457,q),
(465,448,o),
(453,448,qs),
(347,448,ls),
(340,448,o),
(340,441,q),
(339,436,o),
(338,423,o),
(340,420,q),
(347,414,o),
(346,398,o),
(350,390,qs),
(354,383,o),
(374,333,o),
(396,272,o),
(412,220,o),
(412,211,qs),
(412,210,o),
(428,171,o),
(451,116,o),
(475,63,o),
(483,46,qs),
(485,40,o),
(479,25,o),
(474,23,q),
(427,22,o),
(383,22,o),
(369,22,o),
(363,22,o),
(347,23,o),
(322,23,qs),
(317,23,o),
(309,29,q),
(305,31,o),
(301,22,o),
(296,26,q),
(145,29,ls),
(141,29,o),
(130,29,o),
(127,27,qs),
(119,21,o),
(107,21,qs),
(91,21,o),
(77,35,o),
(77,42,qs),
(77,52,o),
(92,77,o),
(107,103,o),
(108,112,qs),
(110,127,o),
(117,134,qs),
(121,139,o),
(141,192,o),
(167,267,o),
(192,343,o),
(212,398,o),
(216,403,qs),
(223,414,o),
(217,446,o),
(203,447,qs),
(197,447,o),
(185,445,o),
(179,445,qs),
(170,445,o),
(154,454,o),
(146,454,qs),
(137,454,o),
(132,448,q),
(128,455,o),
(120,452,o),
(113,445,o),
(108,446,qs),
(102,448,o),
(80,447,o),
(48,447,qs),
(43,447,o),
(36,441,o),
(33,436,q),
(30,434,o),
(31,424,o),
(34,422,q),
(42,419,o),
(57,414,o),
(66,414,qs),
(72,414,o),
(104,414,o),
(141,414,o),
(170,414,o),
(173,414,qs),
(179,414,o),
(183,405,o),
(180,400,qs),
(176,391,o),
(158,341,o),
(136,278,o),
(115,215,o),
(101,170,o),
(100,164,qs),
(98,157,o),
(77,114,o),
(51,61,o),
(31,18,o),
(31,10,qs),
(31,3,o),
(36,-5,qs),
(42,-12,o),
(63,-4,o),
(85,7,o),
(93,2,qs),
(104,-5,o),
(114,-7,o),
(123,2,q),
(131,7,o),
(142,-6,o),
(153,-6,qs),
(198,-6,o),
(239,-3,o),
(253,0,o),
(257,0,qs),
(258,0,o),
(302,-1,o),
(363,-3,o),
(386,-3,q),
(426,-7,o),
(464,-11,o),
(479,-12,o),
(483,-12,qs),
(512,-12,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
59 1 4 5 118 1 3 4 82 1 9 3 3 76 126 1 5 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 5 5 40 77 12 1 3 3 4 97 11 7 6 3 4 4 40 77 0 9 9 1 97 2 1 1 1 38 77 10 1 8 8 1 97 2 1 1 1 38 77 13 1 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 5 5 40 77 12 1 3 3 4 97 11 7 6 3 4 4 40 77 0 9 9 1 97 2 1 1 1 47 77 10 1 8 8 1 97 2 1 1 1 47 77 13 1 0 0 44 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
2 0 139 134 125 122 102 95 91 89 86 84 68 66 64 63 61 60 54 51 44 37 13 11 7 4 0 157 2 156 14 8 22 
CALL[ ]	/* CallFunction */";
};
width = 561;
}
);
note = uni028A;
unicode = 650;
},
{
glyphname = uring;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (113,-167);
ref = uni030A;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 2 
PUSHW[ ]	/* 1 value pushed */
-167 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = uring;
unicode = 367;
},
{
glyphname = utilde;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (112,-155);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-155 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = utilde;
unicode = 361;
},
{
glyphname = uni1E79;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (112,-155);
ref = tildecomb;
},
{
pos = (152,23);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-155 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHB[ ]	/* 1 value pushed */
23 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = uni1E79;
unicode = 7801;
},
{
glyphname = uni1E75;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (105,-785);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-785 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = uni1E75;
unicode = 7797;
},
{
glyphname = v;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(235,-30,o),
(236,-26,qs),
(244,-6,o),
(280,50,o),
(287,73,qs),
(293,92,o),
(318,151,o),
(348,217,o),
(376,276,o),
(384,295,qs),
(389,307,o),
(400,331,o),
(410,341,q),
(414,343,o),
(414,348,qs),
(414,365,o),
(434,397,o),
(447,429,o),
(438,444,q),
(436,449,o),
(417,453,o),
(403,453,qs),
(342,450,o),
(266,448,o),
(213,449,o),
(164,451,o),
(101,453,o),
(51,453,qs),
(26,453,o),
(10,451,o),
(10,446,qs),
(10,443,o),
(17,428,o),
(17,416,qs),
(17,412,o),
(31,380,o),
(51,337,o),
(70,294,o),
(74,279,qs),
(79,262,o),
(98,229,o),
(106,212,qs),
(111,201,o),
(126,163,o),
(139,124,o),
(140,111,q),
(160,87,o),
(176,44,o),
(192,18,qs),
(197,8,o),
(208,-17,o),
(213,-26,qs),
(216,-30,o)
);
},
{
closed = 1;
nodes = (
(194,88,o),
(167,149,o),
(145,198,o),
(141,205,qs),
(138,212,o),
(121,245,o),
(106,277,o),
(106,284,qs),
(105,295,o),
(94,308,o),
(91,318,qs),
(87,329,o),
(77,350,o),
(74,362,qs),
(70,376,o),
(49,406,o),
(49,422,q),
(52,422,o),
(72,422,o),
(95,423,o),
(99,422,q),
(107,422,o),
(149,422,o),
(202,422,o),
(251,423,o),
(266,423,qs),
(290,423,o),
(314,417,qs),
(324,415,o),
(359,415,o),
(395,419,o),
(405,421,q),
(396,411,o),
(398,384,o),
(393,376,qs),
(378,351,o),
(354,298,o),
(338,273,qs),
(332,263,o),
(308,210,o),
(279,142,o),
(250,76,o),
(228,28,o),
(224,22,q),
(218,35,o)
);
},
{
closed = 1;
nodes = (
(262,272,o),
(260,276,qs),
(256,285,o),
(245,301,o),
(234,306,qs),
(225,309,o),
(217,302,o),
(211,301,qs),
(204,300,o),
(186,282,o),
(188,277,qs),
(191,270,o),
(197,255,o),
(202,249,qs),
(205,246,o),
(238,246,qs),
(243,246,o)
);
},
{
closed = 1;
nodes = (
(218,270,qs),
(215,274,o),
(213,278,qs),
(212,280,o),
(218,284,o),
(220,285,q),
(222,285,o),
(224,288,o),
(227,286,q),
(230,285,o),
(233,280,o),
(235,277,qs),
(236,276,o),
(230,268,o),
(228,268,qs),
(219,268,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
65 1 1 2 112 103 37 3 5 1 2 76 0 1 2 5 2 1 114 7 1 5 6 1 4 5 4 101 3 1 2 2 0 95 0 0 0 40 2 78 115 115 99 98 115 130 115 130 98 114 99 114 79 77 75 70 68 67 31 23 8 8 22 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = v;
unicode = 118;
},
{
glyphname = uni1E7F;
layers = (
{
layerId = m01;
shapes = (
{
ref = v;
},
{
pos = (152,-114);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = uni1E7F;
unicode = 7807;
},
{
glyphname = uni028B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(17,428,o),
(17,416,qs),
(17,412,o),
(31,380,o),
(51,337,o),
(70,294,o),
(74,279,qs),
(79,262,o),
(98,229,o),
(106,212,qs),
(111,201,o),
(126,163,o),
(139,124,o),
(140,111,q),
(160,87,o),
(176,44,o),
(192,18,qs),
(197,8,o),
(208,-17,o),
(213,-26,qs),
(216,-30,o),
(235,-30,o),
(236,-26,qs),
(244,-6,o),
(280,50,o),
(287,73,qs),
(293,92,o),
(318,151,o),
(348,217,o),
(376,276,o),
(384,295,qs),
(389,307,o),
(400,331,o),
(410,341,q),
(414,343,o),
(414,348,qs),
(414,365,o),
(434,397,o),
(447,429,o),
(438,444,q),
(436,449,o),
(417,453,o),
(403,453,qs),
(364,451,o),
(306,449,o),
(283,448,q),
(272,438,o),
(289,414,o),
(314,417,qs),
(324,418,o),
(359,418,o),
(395,419,o),
(405,421,q),
(396,411,o),
(398,384,o),
(393,376,qs),
(378,351,o),
(354,298,o),
(338,273,qs),
(332,263,o),
(308,210,o),
(279,142,o),
(250,76,o),
(228,28,o),
(224,22,q),
(218,35,o),
(194,88,o),
(167,149,o),
(145,198,o),
(141,205,qs),
(138,212,o),
(121,245,o),
(106,277,o),
(106,284,qs),
(105,295,o),
(94,308,o),
(91,318,qs),
(87,329,o),
(77,350,o),
(74,362,qs),
(70,376,o),
(49,406,o),
(49,422,qs),
(47,438,o),
(28,456,o),
(10,457,o),
(10,446,qs),
(10,443,o)
);
},
{
closed = 1;
nodes = (
(262,272,o),
(260,276,qs),
(256,285,o),
(245,301,o),
(234,306,qs),
(225,309,o),
(217,302,o),
(211,301,qs),
(204,300,o),
(186,282,o),
(188,277,qs),
(191,270,o),
(197,255,o),
(202,249,qs),
(205,246,o),
(238,246,qs),
(243,246,o)
);
},
{
closed = 1;
nodes = (
(218,270,qs),
(215,274,o),
(213,278,qs),
(212,280,o),
(218,284,o),
(220,285,q),
(222,285,o),
(224,288,o),
(227,286,q),
(230,285,o),
(233,280,o),
(235,277,qs),
(236,276,o),
(230,268,o),
(228,268,qs),
(219,268,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
34 4 2 1 2 102 93 51 3 4 1 2 76 22 1 3 73 6 1 4 5 1 3 4 3 101 0 0 0 40 77 0 1 1 2 95 0 2 2 40 1 78 105 105 89 88 105 120 105 120 88 104 89 104 45 41 37 35 17 7 8 23 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = uni028B;
unicode = 651;
},
{
glyphname = uni1E7D;
layers = (
{
layerId = m01;
shapes = (
{
ref = v;
},
{
pos = (98,-158);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-158 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = uni1E7D;
unicode = 7805;
},
{
glyphname = uni028C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,442,o),
(192,432,q),
(176,407,o),
(160,363,o),
(140,339,q),
(139,326,o),
(126,287,o),
(111,249,o),
(106,238,qs),
(98,221,o),
(79,188,o),
(74,171,qs),
(70,156,o),
(51,113,o),
(31,70,o),
(17,38,o),
(17,34,qs),
(17,22,o),
(10,7,o),
(10,4,qs),
(10,0,o),
(26,-3,o),
(51,-3,qs),
(101,-3,o),
(164,-1,o),
(213,1,o),
(266,2,o),
(342,0,o),
(403,-3,qs),
(417,-3,o),
(436,1,o),
(438,6,qs),
(447,22,o),
(434,53,o),
(414,85,o),
(414,102,qs),
(414,107,o),
(410,109,q),
(400,119,o),
(389,143,o),
(384,155,qs),
(376,174,o),
(348,233,o),
(318,299,o),
(293,358,o),
(287,377,qs),
(280,400,o),
(244,457,o),
(236,476,q),
(235,481,o),
(216,481,o),
(213,476,qs),
(208,467,o)
);
},
{
closed = 1;
nodes = (
(250,374,o),
(279,308,o),
(308,240,o),
(332,187,o),
(338,177,qs),
(354,152,o),
(378,99,o),
(393,74,qs),
(398,66,o),
(396,40,o),
(405,29,q),
(395,32,o),
(359,35,o),
(324,36,o),
(314,33,qs),
(290,27,o),
(266,27,qs),
(251,27,o),
(202,28,o),
(149,28,o),
(107,28,o),
(99,28,q),
(95,27,o),
(72,28,o),
(52,29,o),
(49,28,q),
(49,44,o),
(70,75,o),
(74,88,qs),
(77,100,o),
(87,121,o),
(91,132,qs),
(94,143,o),
(105,156,o),
(106,166,qs),
(106,173,o),
(121,206,o),
(138,238,o),
(141,245,qs),
(145,253,o),
(167,301,o),
(194,362,o),
(218,415,o),
(224,428,q),
(228,422,o)
);
},
{
closed = 1;
nodes = (
(202,201,qs),
(197,195,o),
(191,180,o),
(188,173,qs),
(186,168,o),
(204,150,o),
(211,149,qs),
(217,148,o),
(225,141,o),
(234,144,qs),
(245,149,o),
(256,165,o),
(260,174,qs),
(262,179,o),
(243,204,o),
(238,204,qs),
(205,204,o)
);
},
{
closed = 1;
nodes = (
(236,174,o),
(235,173,qs),
(233,170,o),
(230,166,o),
(227,164,q),
(224,163,o),
(222,165,o),
(220,165,q),
(218,166,o),
(212,171,o),
(213,172,q),
(215,177,o),
(218,180,q),
(219,182,o),
(228,182,qs),
(230,182,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
128 16 2 3 4 86 35 2 1 3 2 76 5 1 4 3 4 133 0 3 1 1 3 112 2 1 1 1 0 96 0 0 0 38 0 78 116 115 115 130 116 130 84 83 81 76 74 71 30 22 6 8 22 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = uni028C;
unicode = 652;
},
{
glyphname = w;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(623,32,qs),
(623,37,o),
(618,44,q),
(625,51,o),
(622,68,o),
(618,89,q),
(624,96,o),
(622,112,o),
(617,119,q),
(617,142,o),
(618,190,o),
(618,212,qs),
(618,217,o),
(626,226,o),
(621,230,q),
(614,238,o),
(624,247,o),
(624,252,qs),
(624,276,o),
(624,341,o),
(623,406,o),
(623,429,qs),
(623,437,o),
(612,448,o),
(605,448,qs),
(603,448,o),
(592,440,o),
(592,420,qs),
(592,417,o),
(593,408,o),
(593,403,qs),
(593,265,ls),
(593,258,o),
(590,243,o),
(593,236,qs),
(596,226,o),
(586,213,o),
(593,204,q),
(592,199,o),
(584,189,o),
(585,183,qs),
(587,170,o),
(584,145,o),
(593,137,q),
(587,125,o),
(593,115,q),
(597,111,o),
(592,84,o),
(585,57,o),
(585,52,qs),
(585,42,o),
(589,13,o),
(585,17,qs),
(352,271,l),
(358,277,o),
(382,306,o),
(408,342,o),
(429,373,o),
(432,381,qs),
(437,392,o),
(448,415,o),
(448,425,qs),
(448,436,o),
(428,450,o),
(401,450,qs),
(396,450,o),
(385,450,o),
(378,449,q),
(269,449,ls),
(241,449,o),
(219,437,o),
(219,426,qs),
(219,419,o),
(227,393,o),
(232,381,qs),
(236,373,o),
(260,338,o),
(289,301,o),
(311,273,o),
(312,271,q),
(291,249,o),
(232,186,o),
(169,119,o),
(114,61,o),
(80,25,o),
(79,24,q),
(79,37,o),
(77,53,o),
(74,76,o),
(72,98,q),
(69,108,o),
(72,115,q),
(79,125,o),
(73,137,q),
(80,143,o),
(80,168,o),
(75,196,o),
(73,204,q),
(81,212,o),
(67,226,o),
(71,236,qs),
(73,243,o),
(71,258,o),
(71,265,qs),
(71,405,ls),
(71,408,o),
(76,432,o),
(77,436,qs),
(77,438,o),
(69,450,o),
(58,450,qs),
(52,450,o),
(42,438,o),
(42,431,qs),
(42,252,ls),
(42,247,o),
(50,238,o),
(42,230,qs),
(38,226,o),
(49,217,o),
(49,212,qs),
(49,190,o),
(47,142,o),
(47,119,q),
(36,105,o),
(49,92,q),
(45,86,o),
(42,54,o),
(49,47,q),
(42,40,o),
(42,34,qs),
(42,27,o),
(47,7,o),
(47,-1,qs),
(47,-5,l),
(45,-15,o),
(67,-26,o),
(73,-22,qs),
(76,-20,o),
(103,5,o),
(108,10,qs),
(114,17,o),
(152,59,o),
(205,116,o),
(263,178,o),
(315,232,o),
(332,250,q),
(338,244,o),
(377,200,o),
(431,137,o),
(492,70,o),
(548,12,o),
(590,-25,o),
(598,-25,qs),
(623,-25,o)
);
},
{
closed = 1;
nodes = (
(311,326,o),
(292,351,o),
(285,357,q),
(247,418,l),
(249,417,o),
(269,419,o),
(270,418,q),
(285,412,o),
(311,422,o),
(314,421,q),
(342,424,o),
(374,421,o),
(398,417,o),
(414,417,q),
(410,403,o),
(397,386,o),
(380,357,q),
(370,348,o),
(358,337,o),
(352,322,qs),
(345,309,o),
(332,300,q),
(329,303,o)
);
},
{
closed = 1;
nodes = (
(354,62,o),
(361,71,qs),
(367,79,o),
(367,87,qs),
(367,95,o),
(356,114,o),
(349,115,qs),
(339,117,o),
(307,114,o),
(307,99,qs),
(307,88,o),
(293,78,o),
(301,70,qs),
(315,56,ls),
(326,46,o)
);
},
{
closed = 1;
nodes = (
(322,82,o),
(326,84,o),
(326,88,qs),
(326,92,o),
(334,93,o),
(337,92,qs),
(342,90,o),
(342,84,qs),
(342,81,o),
(340,80,q),
(339,78,o),
(331,73,o),
(328,76,qs),
(324,80,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
40 1 4 0 145 136 123 113 110 100 74 60 56 50 33 30 7 13 6 4 198 151 148 104 101 68 25 19 8 3 6 3 76 28 1 6 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 6 4 3 4 6 3 128 5 1 4 4 0 97 2 1 2 0 0 40 77 7 1 3 3 44 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 6 4 3 4 6 3 128 7 1 3 3 132 5 1 4 4 0 97 2 1 2 0 0 40 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
0 0 202 200 172 170 164 163 0 154 0 154 130 128 90 84 44 42 8 8 22 
CALL[ ]	/* CallFunction */";
};
width = 664;
}
);
note = w;
unicode = 119;
},
{
glyphname = wacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = w;
},
{
pos = (237,-108);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-108 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 664;
}
);
note = wacute;
unicode = 7811;
},
{
glyphname = wcircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = w;
},
{
pos = (198,-120);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-120 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 664;
}
);
note = wcircumflex;
unicode = 373;
},
{
glyphname = wdieresis;
layers = (
{
layerId = m01;
shapes = (
{
ref = w;
},
{
pos = (175,-121);
ref = uni0308;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 2 
PUSHW[ ]	/* 1 value pushed */
-121 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 664;
}
);
note = wdieresis;
unicode = 7813;
},
{
glyphname = uni1E87;
layers = (
{
layerId = m01;
shapes = (
{
ref = w;
},
{
pos = (261,-135);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-135 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 664;
}
);
note = uni1E87;
unicode = 7815;
},
{
glyphname = uni1E89;
layers = (
{
layerId = m01;
shapes = (
{
ref = w;
},
{
pos = (264,-112);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-112 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 664;
}
);
note = uni1E89;
unicode = 7817;
},
{
glyphname = wgrave;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(623,32,qs),
(623,37,o),
(618,44,q),
(625,51,o),
(622,68,o),
(618,89,q),
(624,96,o),
(622,112,o),
(617,119,q),
(617,142,o),
(618,190,o),
(618,212,qs),
(618,217,o),
(626,226,o),
(621,230,q),
(614,238,o),
(624,247,o),
(624,252,qs),
(624,276,o),
(624,341,o),
(623,406,o),
(623,429,qs),
(623,437,o),
(612,448,o),
(605,448,qs),
(603,448,o),
(592,440,o),
(592,420,qs),
(592,417,o),
(593,408,o),
(593,403,qs),
(593,265,ls),
(593,258,o),
(590,243,o),
(593,236,qs),
(596,226,o),
(586,213,o),
(593,204,q),
(592,199,o),
(584,189,o),
(585,183,qs),
(587,170,o),
(584,145,o),
(593,137,q),
(587,125,o),
(593,115,q),
(597,111,o),
(592,84,o),
(585,57,o),
(585,52,qs),
(585,42,o),
(589,13,o),
(585,17,qs),
(352,271,l),
(358,277,o),
(382,306,o),
(408,342,o),
(429,373,o),
(432,381,qs),
(437,392,o),
(448,415,o),
(448,425,qs),
(448,436,o),
(428,450,o),
(401,450,qs),
(396,450,o),
(385,450,o),
(378,449,q),
(269,449,ls),
(241,449,o),
(219,437,o),
(219,426,qs),
(219,419,o),
(227,393,o),
(232,381,qs),
(236,373,o),
(260,338,o),
(289,301,o),
(311,273,o),
(312,271,q),
(291,249,o),
(232,186,o),
(169,119,o),
(114,61,o),
(80,25,o),
(79,24,q),
(79,37,o),
(77,53,o),
(74,76,o),
(72,98,q),
(69,108,o),
(72,115,q),
(79,125,o),
(73,137,q),
(80,143,o),
(80,168,o),
(75,196,o),
(73,204,q),
(81,212,o),
(67,226,o),
(71,236,qs),
(73,243,o),
(71,258,o),
(71,265,qs),
(71,405,ls),
(71,408,o),
(76,432,o),
(77,436,qs),
(77,438,o),
(69,450,o),
(58,450,qs),
(52,450,o),
(42,438,o),
(42,431,qs),
(42,252,ls),
(42,247,o),
(50,238,o),
(42,230,qs),
(38,226,o),
(49,217,o),
(49,212,qs),
(49,190,o),
(47,142,o),
(47,119,q),
(36,105,o),
(49,92,q),
(45,86,o),
(42,54,o),
(49,47,q),
(42,40,o),
(42,34,qs),
(42,27,o),
(47,7,o),
(47,-1,qs),
(47,-5,l),
(45,-15,o),
(67,-26,o),
(73,-22,qs),
(76,-20,o),
(103,5,o),
(108,10,qs),
(114,17,o),
(152,59,o),
(205,116,o),
(263,178,o),
(315,232,o),
(332,250,q),
(338,244,o),
(377,200,o),
(431,137,o),
(492,70,o),
(548,12,o),
(590,-25,o),
(598,-25,qs),
(623,-25,o)
);
},
{
closed = 1;
nodes = (
(311,326,o),
(292,351,o),
(285,357,q),
(247,418,l),
(249,417,o),
(269,419,o),
(270,418,q),
(285,412,o),
(311,422,o),
(314,421,q),
(342,424,o),
(374,421,o),
(398,417,o),
(414,417,q),
(410,403,o),
(397,386,o),
(380,357,q),
(370,348,o),
(358,337,o),
(352,322,qs),
(345,309,o),
(332,300,q),
(329,303,o)
);
},
{
closed = 1;
nodes = (
(354,62,o),
(361,71,qs),
(367,79,o),
(367,87,qs),
(367,95,o),
(356,114,o),
(349,115,qs),
(339,117,o),
(307,114,o),
(307,99,qs),
(307,88,o),
(293,78,o),
(301,70,qs),
(315,56,ls),
(326,46,o)
);
},
{
closed = 1;
nodes = (
(322,82,o),
(326,84,o),
(326,88,qs),
(326,92,o),
(334,93,o),
(337,92,qs),
(342,90,o),
(342,84,qs),
(342,81,o),
(340,80,q),
(339,78,o),
(331,73,o),
(328,76,qs),
(324,80,ls)
);
},
{
closed = 1;
nodes = (
(357,541,o),
(346,551,qs),
(325,569,o),
(313,585,q),
(305,592,o),
(291,605,o),
(284,613,qs),
(280,618,o),
(271,628,o),
(264,629,q),
(262,631,o),
(256,626,o),
(254,627,qs),
(251,629,o),
(240,618,o),
(241,615,qs),
(246,603,o),
(256,580,o),
(272,575,qs),
(278,573,o),
(289,565,o),
(293,560,qs),
(301,551,o),
(322,529,o),
(338,515,qs),
(356,502,o),
(384,507,o),
(388,511,q),
(378,521,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
40 1 4 0 145 136 123 113 110 100 74 60 56 50 33 30 7 13 6 4 198 151 148 104 101 68 25 19 8 3 6 3 76 28 1 6 1 75 219 1 0 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 6 4 3 4 6 3 128 5 1 4 4 0 97 2 1 2 0 0 40 77 7 1 3 3 44 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 6 4 3 4 6 3 128 7 1 3 3 132 5 1 4 4 0 97 2 1 2 0 0 40 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
0 0 202 200 172 170 164 163 0 154 0 154 130 128 90 84 44 42 8 8 22 
CALL[ ]	/* CallFunction */";
};
width = 664;
}
);
note = wgrave;
unicode = 7809;
},
{
glyphname = uni2C73;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(623,32,qs),
(623,37,o),
(618,44,q),
(625,51,o),
(622,68,o),
(618,89,q),
(624,96,o),
(622,112,o),
(617,119,q),
(617,142,o),
(618,190,o),
(618,212,qs),
(618,217,o),
(626,226,o),
(621,230,q),
(614,238,o),
(624,247,o),
(624,252,qs),
(624,282,o),
(623,366,o),
(623,402,q),
(625,411,o),
(625,442,o),
(627,473,o),
(640,494,o),
(655,493,qs),
(660,493,o),
(683,494,o),
(688,492,q),
(695,491,o),
(700,493,o),
(714,495,o),
(733,492,qs),
(738,491,o),
(748,497,o),
(754,494,q),
(767,502,o),
(765,513,o),
(754,518,q),
(742,526,o),
(723,529,o),
(709,524,qs),
(705,523,o),
(675,523,o),
(670,523,qs),
(647,524,o),
(642,524,o),
(638,524,qs),
(610,523,o),
(596,489,o),
(594,464,qs),
(594,459,o),
(595,447,o),
(596,442,q),
(592,435,o),
(592,420,qs),
(592,417,o),
(593,408,o),
(593,403,qs),
(593,265,ls),
(593,258,o),
(590,243,o),
(593,236,qs),
(596,226,o),
(586,213,o),
(593,204,q),
(592,199,o),
(584,189,o),
(585,183,qs),
(587,170,o),
(584,145,o),
(593,137,q),
(587,125,o),
(593,115,q),
(597,111,o),
(592,84,o),
(585,57,o),
(585,52,qs),
(585,42,o),
(589,13,o),
(585,17,qs),
(352,271,l),
(358,277,o),
(382,306,o),
(408,342,o),
(429,373,o),
(432,381,qs),
(437,392,o),
(448,415,o),
(448,425,qs),
(448,436,o),
(428,450,o),
(401,450,qs),
(396,450,o),
(385,450,o),
(378,449,q),
(269,449,ls),
(241,449,o),
(219,437,o),
(219,426,qs),
(219,419,o),
(227,393,o),
(232,381,qs),
(236,373,o),
(260,338,o),
(289,301,o),
(311,273,o),
(312,271,q),
(291,249,o),
(232,186,o),
(169,119,o),
(114,61,o),
(80,25,o),
(79,24,q),
(79,37,o),
(77,53,o),
(74,76,o),
(72,98,q),
(69,108,o),
(72,115,q),
(79,125,o),
(73,137,q),
(80,143,o),
(80,168,o),
(75,196,o),
(73,204,q),
(81,212,o),
(67,226,o),
(71,236,qs),
(73,243,o),
(71,258,o),
(71,265,qs),
(71,405,ls),
(71,408,o),
(76,432,o),
(77,436,qs),
(77,438,o),
(69,450,o),
(58,450,qs),
(52,450,o),
(42,438,o),
(42,431,qs),
(42,252,ls),
(42,247,o),
(50,238,o),
(42,230,qs),
(38,226,o),
(49,217,o),
(49,212,qs),
(49,190,o),
(47,142,o),
(47,119,q),
(36,105,o),
(49,92,q),
(45,86,o),
(42,54,o),
(49,47,q),
(42,40,o),
(42,34,qs),
(42,27,o),
(47,7,o),
(47,-1,qs),
(47,-5,l),
(45,-15,o),
(67,-26,o),
(73,-22,qs),
(76,-20,o),
(103,5,o),
(108,10,qs),
(114,17,o),
(152,59,o),
(205,116,o),
(263,178,o),
(315,232,o),
(332,250,q),
(338,244,o),
(377,200,o),
(431,137,o),
(492,70,o),
(548,12,o),
(590,-25,o),
(598,-25,qs),
(623,-25,o)
);
},
{
closed = 1;
nodes = (
(311,326,o),
(292,351,o),
(285,357,q),
(247,418,l),
(249,417,o),
(269,419,o),
(270,418,q),
(285,412,o),
(311,422,o),
(314,421,q),
(342,424,o),
(374,421,o),
(398,417,o),
(414,417,q),
(410,403,o),
(397,386,o),
(380,357,q),
(370,348,o),
(358,337,o),
(352,322,qs),
(345,309,o),
(332,300,q),
(329,303,o)
);
},
{
closed = 1;
nodes = (
(354,62,o),
(361,71,qs),
(367,79,o),
(367,87,qs),
(367,95,o),
(356,114,o),
(349,115,qs),
(339,117,o),
(307,114,o),
(307,99,qs),
(307,88,o),
(293,78,o),
(301,70,qs),
(315,56,ls),
(326,46,o)
);
},
{
closed = 1;
nodes = (
(322,82,o),
(326,84,o),
(326,88,qs),
(326,92,o),
(334,93,o),
(337,92,qs),
(342,90,o),
(342,84,qs),
(342,81,o),
(340,80,q),
(339,78,o),
(331,73,o),
(328,76,qs),
(324,80,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
146 1 3 2 128 40 2 5 0 173 164 161 123 113 110 100 74 60 56 50 33 30 7 14 7 5 226 179 176 104 101 68 25 19 8 4 7 4 76 28 1 7 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 7 5 4 5 7 4 128 0 2 0 3 0 2 3 105 6 1 5 5 0 97 1 1 0 0 40 77 8 1 4 4 44 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 7 5 4 5 7 4 128 8 1 4 4 132 0 2 0 3 0 2 3 105 6 1 5 5 0 97 1 1 0 0 40 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
0 0 230 228 200 198 192 191 0 182 0 182 157 153 139 133 90 84 44 42 9 8 22 
CALL[ ]	/* CallFunction */";
};
width = 664;
}
);
note = uni2C73;
unicode = 11379;
},
{
glyphname = x;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(451,10,o),
(450,26,q),
(447,33,o),
(425,49,o),
(405,66,o),
(403,72,qs),
(399,82,o),
(370,108,o),
(366,113,q),
(356,112,o),
(339,135,o),
(338,137,qs),
(320,172,o),
(285,188,qs),
(281,190,o),
(265,211,o),
(263,214,q),
(249,222,o),
(259,230,qs),
(267,238,o),
(283,254,o),
(291,262,qs),
(323,294,ls),
(331,302,o),
(346,319,o),
(355,326,qs),
(364,333,o),
(372,355,o),
(382,359,qs),
(393,364,o),
(410,391,o),
(438,419,q),
(443,421,o),
(445,429,o),
(445,436,q),
(429,449,o),
(381,449,qs),
(376,449,o),
(364,449,o),
(357,448,qs),
(350,448,o),
(298,448,o),
(225,449,o),
(149,450,o),
(86,450,o),
(71,450,qs),
(47,450,o),
(10,443,o),
(10,432,qs),
(10,424,o),
(21,413,qs),
(39,395,o),
(77,360,o),
(89,337,q),
(91,336,o),
(94,332,o),
(96,332,qs),
(106,330,o),
(118,317,o),
(124,310,q),
(145,291,o),
(186,249,o),
(207,228,q),
(189,204,o),
(144,163,o),
(124,142,qs),
(114,131,o),
(90,108,o),
(79,97,qs),
(76,94,o),
(55,73,o),
(29,46,o),
(11,21,o),
(11,13,qs),
(11,6,o),
(19,4,q),
(21,4,o),
(73,3,o),
(153,2,o),
(245,1,o),
(332,0,o),
(396,0,o),
(408,0,qs),
(427,0,o)
);
},
{
closed = 1;
nodes = (
(168,314,o),
(143,329,qs),
(136,334,o),
(128,353,o),
(121,355,qs),
(113,358,o),
(110,372,o),
(104,373,q),
(96,376,o),
(85,385,o),
(83,393,qs),
(81,402,o),
(67,404,o),
(62,408,q),
(58,413,o),
(51,419,o),
(61,418,qs),
(78,417,o),
(95,416,o),
(102,416,qs),
(174,414,o),
(283,419,o),
(317,411,qs),
(335,408,o),
(353,408,qs),
(373,408,o),
(391,411,q),
(389,406,o),
(379,403,o),
(377,399,qs),
(370,384,o),
(343,363,o),
(334,349,qs),
(325,334,o),
(298,318,o),
(287,305,qs),
(277,292,o),
(251,268,o),
(240,256,q),
(236,253,o),
(231,251,o),
(226,255,qs),
(206,274,o)
);
},
{
closed = 1;
nodes = (
(332,34,o),
(258,35,o),
(173,36,o),
(93,38,o),
(64,38,q),
(72,45,o),
(87,61,o),
(95,68,qs),
(104,76,o),
(116,97,o),
(128,102,qs),
(138,107,o),
(153,125,o),
(160,133,qs),
(165,138,o),
(177,147,o),
(179,152,qs),
(185,167,o),
(209,189,o),
(219,199,q),
(226,210,o),
(235,200,qs),
(245,190,o),
(269,170,o),
(275,154,qs),
(280,144,o),
(302,132,o),
(310,122,qs),
(320,111,o),
(356,74,o),
(389,43,o),
(393,41,q),
(390,40,o),
(382,36,qs),
(380,35,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
48 1 4 1 20 1 5 3 81 1 0 5 3 76 0 3 4 5 4 3 114 0 4 4 1 97 2 1 1 1 40 77 0 5 5 0 97 6 1 0 0 38 0 78 6 0 161 156 109 104 102 100 47 44 42 36 0 83 6 83 7 8 22 
CALL[ ]	/* CallFunction */";
};
width = 460;
}
);
note = x;
unicode = 120;
},
{
glyphname = uni1E8D;
layers = (
{
layerId = m01;
shapes = (
{
ref = x;
},
{
pos = (65,-120);
ref = uni0308;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 2 
PUSHW[ ]	/* 1 value pushed */
-120 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 460;
}
);
note = uni1E8D;
unicode = 7821;
},
{
glyphname = uni1E8B;
layers = (
{
layerId = m01;
shapes = (
{
ref = x;
},
{
pos = (151,-134);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
3 1 
PUSHW[ ]	/* 1 value pushed */
-134 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 460;
}
);
note = uni1E8B;
unicode = 7819;
},
{
glyphname = y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(166,-183,o),
(175,-155,q),
(189,-132,o),
(199,-101,o),
(205,-90,qs),
(210,-81,o),
(230,-38,o),
(236,-26,q),
(236,-26,o),
(236,-26,o),
(236,-26,q),
(236,-26,o),
(257,11,o),
(282,58,o),
(287,73,qs),
(293,92,o),
(318,151,o),
(348,217,o),
(376,276,o),
(384,295,qs),
(389,307,o),
(400,331,o),
(410,341,q),
(414,343,o),
(414,348,qs),
(414,362,o),
(428,389,o),
(442,415,o),
(442,428,qs),
(442,437,o),
(438,444,qs),
(436,449,o),
(417,453,o),
(403,453,qs),
(369,451,o),
(298,450,o),
(263,450,qs),
(200,450,o),
(87,452,o),
(51,453,qs),
(26,453,o),
(10,451,o),
(10,446,qs),
(10,443,o),
(17,428,o),
(17,416,qs),
(17,412,o),
(31,380,o),
(51,337,o),
(70,294,o),
(74,279,qs),
(79,262,o),
(98,229,o),
(106,212,qs),
(111,201,o),
(126,163,o),
(139,124,o),
(140,111,q),
(160,87,o),
(176,44,o),
(192,18,qs),
(195,12,o),
(202,-4,o),
(206,-12,q),
(199,-33,l),
(200,-41,o),
(179,-63,o),
(178,-74,q),
(177,-77,o),
(167,-101,o),
(155,-124,o),
(152,-127,q),
(149,-132,o),
(145,-140,o),
(145,-145,qs),
(145,-146,o),
(145,-163,o),
(143,-165,q),
(140,-172,o),
(132,-184,o),
(132,-191,qs),
(132,-201,o),
(141,-201,qs),
(149,-201,o)
);
},
{
closed = 1;
nodes = (
(194,88,o),
(167,149,o),
(145,198,o),
(141,205,qs),
(138,212,o),
(121,245,o),
(106,277,o),
(106,284,qs),
(105,295,o),
(94,308,o),
(91,318,qs),
(87,329,o),
(77,350,o),
(74,362,qs),
(70,376,o),
(49,406,o),
(49,422,q),
(52,421,o),
(77,423,o),
(87,423,qs),
(97,423,o),
(99,422,q),
(107,422,o),
(149,422,o),
(202,422,o),
(251,423,o),
(266,423,qs),
(290,423,o),
(314,417,qs),
(319,416,o),
(333,415,o),
(341,415,qs),
(358,415,o),
(395,419,o),
(405,421,q),
(396,411,o),
(398,384,o),
(393,376,qs),
(378,351,o),
(354,298,o),
(338,273,qs),
(332,263,o),
(308,210,o),
(279,142,o),
(250,76,o),
(228,28,o),
(224,22,q),
(218,35,o)
);
},
{
closed = 1;
nodes = (
(262,272,o),
(260,276,qs),
(256,285,o),
(245,301,o),
(234,306,qs),
(225,309,o),
(217,302,o),
(211,301,qs),
(204,300,o),
(186,282,o),
(188,277,qs),
(191,270,o),
(197,255,o),
(202,249,qs),
(205,246,o),
(238,246,qs),
(243,246,o)
);
},
{
closed = 1;
nodes = (
(218,270,qs),
(215,274,o),
(213,278,qs),
(212,280,o),
(218,284,o),
(220,285,q),
(222,285,o),
(224,288,o),
(227,286,q),
(230,285,o),
(233,280,o),
(235,277,qs),
(236,276,o),
(230,268,o),
(228,268,qs),
(219,268,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
96 1 2 3 146 137 58 3 6 2 18 2 2 0 5 3 76 0 2 3 6 3 2 114 9 1 6 8 1 5 0 6 5 105 4 1 3 3 1 95 0 1 1 40 77 7 1 0 0 48 0 78 149 149 133 132 1 0 149 164 149 164 132 148 133 148 112 110 108 103 101 98 50 42 0 83 1 83 10 8 22 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = y;
unicode = 121;
},
{
glyphname = yacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = y;
},
{
pos = (131,-108);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-108 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = yacute;
unicode = 253;
},
{
glyphname = ycircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = y;
},
{
pos = (92,-120);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-120 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = ycircumflex;
unicode = 375;
},
{
glyphname = ydieresis;
layers = (
{
layerId = m01;
shapes = (
{
ref = y;
},
{
pos = (69,-121);
ref = uni0308;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 2 
PUSHW[ ]	/* 1 value pushed */
-121 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = ydieresis;
unicode = 255;
},
{
glyphname = uni1E8F;
layers = (
{
layerId = m01;
shapes = (
{
ref = y;
},
{
pos = (155,-135);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-135 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = uni1E8F;
unicode = 7823;
},
{
glyphname = uni1EF5;
layers = (
{
layerId = m01;
shapes = (
{
ref = y;
},
{
pos = (70,-301);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-301 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = uni1EF5;
unicode = 7925;
},
{
glyphname = ygrave;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(166,-183,o),
(175,-155,q),
(189,-132,o),
(199,-101,o),
(205,-90,qs),
(210,-81,o),
(230,-38,o),
(236,-26,q),
(236,-26,o),
(236,-26,o),
(236,-26,q),
(236,-26,o),
(257,11,o),
(282,58,o),
(287,73,qs),
(293,92,o),
(318,151,o),
(348,217,o),
(376,276,o),
(384,295,qs),
(389,307,o),
(400,331,o),
(410,341,q),
(414,343,o),
(414,348,qs),
(414,362,o),
(428,389,o),
(442,415,o),
(442,428,qs),
(442,437,o),
(438,444,qs),
(436,449,o),
(417,453,o),
(403,453,qs),
(369,451,o),
(298,450,o),
(263,450,qs),
(200,450,o),
(87,452,o),
(51,453,qs),
(26,453,o),
(10,451,o),
(10,446,qs),
(10,443,o),
(17,428,o),
(17,416,qs),
(17,412,o),
(31,380,o),
(51,337,o),
(70,294,o),
(74,279,qs),
(79,262,o),
(98,229,o),
(106,212,qs),
(111,201,o),
(126,163,o),
(139,124,o),
(140,111,q),
(160,87,o),
(176,44,o),
(192,18,qs),
(195,12,o),
(202,-4,o),
(206,-12,q),
(199,-33,l),
(200,-41,o),
(179,-63,o),
(178,-74,q),
(177,-77,o),
(167,-101,o),
(155,-124,o),
(152,-127,q),
(149,-132,o),
(145,-140,o),
(145,-145,qs),
(145,-146,o),
(145,-163,o),
(143,-165,q),
(140,-172,o),
(132,-184,o),
(132,-191,qs),
(132,-201,o),
(141,-201,qs),
(149,-201,o)
);
},
{
closed = 1;
nodes = (
(194,88,o),
(167,149,o),
(145,198,o),
(141,205,qs),
(138,212,o),
(121,245,o),
(106,277,o),
(106,284,qs),
(105,295,o),
(94,308,o),
(91,318,qs),
(87,329,o),
(77,350,o),
(74,362,qs),
(70,376,o),
(49,406,o),
(49,422,q),
(52,421,o),
(77,423,o),
(87,423,qs),
(97,423,o),
(99,422,q),
(107,422,o),
(149,422,o),
(202,422,o),
(251,423,o),
(266,423,qs),
(290,423,o),
(314,417,qs),
(319,416,o),
(333,415,o),
(341,415,qs),
(358,415,o),
(395,419,o),
(405,421,q),
(396,411,o),
(398,384,o),
(393,376,qs),
(378,351,o),
(354,298,o),
(338,273,qs),
(332,263,o),
(308,210,o),
(279,142,o),
(250,76,o),
(228,28,o),
(224,22,q),
(218,35,o)
);
},
{
closed = 1;
nodes = (
(262,272,o),
(260,276,qs),
(256,285,o),
(245,301,o),
(234,306,qs),
(225,309,o),
(217,302,o),
(211,301,qs),
(204,300,o),
(186,282,o),
(188,277,qs),
(191,270,o),
(197,255,o),
(202,249,qs),
(205,246,o),
(238,246,qs),
(243,246,o)
);
},
{
closed = 1;
nodes = (
(218,270,qs),
(215,274,o),
(213,278,qs),
(212,280,o),
(218,284,o),
(220,285,q),
(222,285,o),
(224,288,o),
(227,286,q),
(230,285,o),
(233,280,o),
(235,277,qs),
(236,276,o),
(230,268,o),
(228,268,qs),
(219,268,o)
);
},
{
closed = 1;
nodes = (
(251,541,o),
(240,551,qs),
(219,569,o),
(207,585,q),
(199,592,o),
(185,605,o),
(178,613,qs),
(174,618,o),
(165,628,o),
(158,629,q),
(156,631,o),
(150,626,o),
(148,627,qs),
(145,629,o),
(134,618,o),
(135,615,qs),
(140,603,o),
(150,580,o),
(166,575,qs),
(172,573,o),
(183,565,o),
(187,560,qs),
(195,551,o),
(216,529,o),
(232,515,qs),
(250,502,o),
(278,507,o),
(282,511,q),
(272,521,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 85 values pushed */
96 1 2 3 146 137 58 3 6 2 18 2 2 0 5 3 76 177 1 1 74 0 2 3 6 3 2 114 9 1 6 8 1 5 0 6 5 105 4 1 3 3 1 95 0 1 1 40 77 7 1 0 0 48 0 78 149 149 133 132 1 0 149 164 149 164 132 148 133 148 112 110 108 103 101 98 50 42 0 83 1 83 10 8 22 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = ygrave;
unicode = 7923;
},
{
glyphname = uni01B4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(166,-183,o),
(175,-155,q),
(189,-132,o),
(199,-101,o),
(205,-90,qs),
(210,-81,o),
(230,-38,o),
(236,-26,q),
(236,-26,o),
(236,-26,o),
(236,-26,q),
(236,-26,o),
(257,11,o),
(282,58,o),
(287,73,qs),
(293,92,o),
(318,151,o),
(348,217,o),
(376,276,o),
(384,295,qs),
(389,307,o),
(400,331,o),
(410,341,q),
(414,343,o),
(414,348,qs),
(414,362,o),
(428,389,o),
(442,415,o),
(442,428,qs),
(442,431,o),
(442,433,q),
(449,456,o),
(472,515,o),
(502,558,o),
(519,557,qs),
(524,557,o),
(547,558,o),
(552,556,q),
(559,555,o),
(564,557,o),
(578,559,o),
(597,556,qs),
(602,555,o),
(612,561,o),
(618,558,q),
(631,566,o),
(629,577,o),
(618,582,q),
(606,590,o),
(587,593,o),
(573,588,qs),
(569,587,o),
(549,587,o),
(544,587,qs),
(521,588,o),
(516,588,o),
(512,588,qs),
(494,587,o),
(469,574,o),
(447,533,o),
(430,491,qs),
(427,484,o),
(419,462,o),
(416,453,q),
(410,453,o),
(403,453,qs),
(369,451,o),
(298,450,o),
(263,450,qs),
(200,450,o),
(87,452,o),
(51,453,qs),
(26,453,o),
(10,451,o),
(10,446,qs),
(10,443,o),
(17,428,o),
(17,416,qs),
(17,412,o),
(31,380,o),
(51,337,o),
(70,294,o),
(74,279,qs),
(79,262,o),
(98,229,o),
(106,212,qs),
(111,201,o),
(126,163,o),
(139,124,o),
(140,111,q),
(160,87,o),
(176,44,o),
(192,18,qs),
(195,12,o),
(202,-4,o),
(206,-12,q),
(199,-33,l),
(200,-41,o),
(179,-63,o),
(178,-74,q),
(177,-77,o),
(167,-101,o),
(155,-124,o),
(152,-127,q),
(149,-132,o),
(145,-140,o),
(145,-145,qs),
(145,-146,o),
(145,-163,o),
(143,-165,q),
(140,-172,o),
(132,-184,o),
(132,-191,qs),
(132,-201,o),
(141,-201,qs),
(149,-201,o)
);
},
{
closed = 1;
nodes = (
(194,88,o),
(167,149,o),
(145,198,o),
(141,205,qs),
(138,212,o),
(121,245,o),
(106,277,o),
(106,284,qs),
(105,295,o),
(94,308,o),
(91,318,qs),
(87,329,o),
(77,350,o),
(74,362,qs),
(70,376,o),
(49,406,o),
(49,422,q),
(52,421,o),
(77,423,o),
(87,423,qs),
(97,423,o),
(99,422,q),
(107,422,o),
(149,422,o),
(202,422,o),
(251,423,o),
(266,423,qs),
(290,423,o),
(314,417,qs),
(319,416,o),
(333,415,o),
(341,415,qs),
(358,415,o),
(395,419,o),
(405,421,q),
(396,411,o),
(398,384,o),
(393,376,qs),
(378,351,o),
(354,298,o),
(338,273,qs),
(332,263,o),
(308,210,o),
(279,142,o),
(250,76,o),
(228,28,o),
(224,22,q),
(218,35,o)
);
},
{
closed = 1;
nodes = (
(262,272,o),
(260,276,qs),
(256,285,o),
(245,301,o),
(234,306,qs),
(225,309,o),
(217,302,o),
(211,301,qs),
(204,300,o),
(186,282,o),
(188,277,qs),
(191,270,o),
(197,255,o),
(202,249,qs),
(205,246,o),
(238,246,qs),
(243,246,o)
);
},
{
closed = 1;
nodes = (
(218,270,qs),
(215,274,o),
(213,278,qs),
(212,280,o),
(218,284,o),
(220,285,q),
(222,285,o),
(224,288,o),
(227,286,q),
(230,285,o),
(233,280,o),
(235,277,qs),
(236,276,o),
(230,268,o),
(228,268,qs),
(219,268,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 101 values pushed */
70 1 3 2 84 1 5 1 128 1 4 5 178 169 90 3 8 4 18 2 2 0 7 5 76 0 4 5 8 5 4 114 0 2 0 3 1 2 3 105 11 1 8 10 1 7 0 8 7 105 6 1 5 5 1 95 0 1 1 40 77 9 1 0 0 48 0 78 181 181 165 164 1 0 181 196 181 196 164 180 165 180 144 142 140 135 133 130 81 77 63 57 51 42 0 115 1 115 12 8 22 
CALL[ ]	/* CallFunction */";
};
width = 440;
}
);
note = uni01B4;
unicode = 436;
},
{
glyphname = uni1EF7;
layers = (
{
layerId = m01;
shapes = (
{
ref = y;
},
{
pos = (120,-93);
ref = hookabovecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-93 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = uni1EF7;
unicode = 7927;
},
{
glyphname = uni0233;
layers = (
{
layerId = m01;
shapes = (
{
ref = y;
},
{
pos = (56,299);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
299 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = uni0233;
unicode = 563;
},
{
glyphname = uni024F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(180,-183,o),
(189,-155,q),
(203,-132,o),
(213,-101,o),
(219,-90,qs),
(224,-81,o),
(244,-38,o),
(250,-26,q),
(250,-26,o),
(250,-26,o),
(250,-26,q),
(250,-26,o),
(271,11,o),
(296,58,o),
(301,73,qs),
(307,92,o),
(332,151,o),
(362,217,o),
(390,276,o),
(398,295,qs),
(399,297,o),
(400,301,q),
(416,302,o),
(447,306,o),
(463,308,qs),
(471,309,o),
(471,321,o),
(463,322,qs),
(454,322,o),
(449,328,o),
(442,329,qs),
(435,330,o),
(423,331,o),
(416,331,q),
(419,336,o),
(424,341,q),
(428,343,o),
(428,348,qs),
(428,362,o),
(442,389,o),
(456,415,o),
(456,428,qs),
(456,437,o),
(452,444,qs),
(450,449,o),
(431,453,o),
(417,453,qs),
(383,451,o),
(312,450,o),
(277,450,qs),
(214,450,o),
(101,452,o),
(65,453,qs),
(40,453,o),
(24,451,o),
(24,446,qs),
(24,443,o),
(31,428,o),
(31,416,qs),
(31,411,o),
(57,356,o),
(70,326,q),
(50,327,o),
(-6,326,o),
(-30,326,q),
(-30,319,o),
(-10,301,o),
(12,296,q),
(15,296,o),
(44,295,o),
(75,294,o),
(81,294,qs),
(83,294,l),
(86,285,o),
(88,279,qs),
(93,262,o),
(112,229,o),
(120,212,qs),
(125,201,o),
(140,163,o),
(153,124,o),
(154,111,q),
(174,87,o),
(190,44,o),
(206,18,qs),
(209,12,o),
(216,-4,o),
(220,-12,q),
(213,-33,l),
(214,-41,o),
(193,-63,o),
(192,-74,q),
(191,-77,o),
(181,-101,o),
(169,-124,o),
(166,-127,q),
(163,-132,o),
(159,-140,o),
(159,-145,qs),
(159,-146,o),
(159,-163,o),
(157,-165,q),
(154,-172,o),
(146,-184,o),
(146,-191,qs),
(146,-201,o),
(155,-201,qs),
(163,-201,o)
);
},
{
closed = 1;
nodes = (
(63,406,o),
(63,422,q),
(66,421,o),
(91,423,o),
(101,423,qs),
(111,423,o),
(113,422,q),
(121,422,o),
(163,422,o),
(216,422,o),
(265,423,o),
(280,423,qs),
(304,423,o),
(328,417,qs),
(333,416,o),
(347,415,o),
(355,415,qs),
(372,415,o),
(409,419,o),
(419,421,q),
(410,411,o),
(412,384,o),
(407,376,qs),
(400,365,o),
(389,342,o),
(383,331,q),
(368,331,o),
(338,330,o),
(325,330,qs),
(306,330,o),
(267,329,o),
(247,329,qs),
(202,328,o),
(142,325,o),
(102,326,q),
(99,335,o),
(90,352,o),
(88,362,qs),
(84,376,o)
);
},
{
closed = 1;
nodes = (
(208,88,o),
(181,149,o),
(159,198,o),
(155,205,qs),
(152,212,o),
(135,245,o),
(120,277,o),
(120,284,qs),
(119,291,o),
(118,293,q),
(138,293,o),
(165,294,o),
(194,296,o),
(217,298,q),
(210,294,o),
(200,281,o),
(202,277,qs),
(205,270,o),
(211,255,o),
(216,249,qs),
(219,246,o),
(252,246,qs),
(257,246,o),
(276,272,o),
(274,276,qs),
(271,283,o),
(263,295,o),
(257,300,q),
(275,300,o),
(317,299,o),
(350,298,o),
(356,298,qs),
(361,298,o),
(367,298,q),
(359,284,o),
(352,273,qs),
(346,263,o),
(322,210,o),
(293,142,o),
(264,76,o),
(242,28,o),
(238,22,q),
(232,35,o)
);
},
{
closed = 1;
nodes = (
(232,270,qs),
(229,274,o),
(227,278,qs),
(226,280,o),
(232,284,o),
(234,285,q),
(236,285,o),
(238,288,o),
(241,286,q),
(244,285,o),
(247,280,o),
(249,277,qs),
(250,276,o),
(244,268,o),
(242,268,qs),
(233,268,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
126 1 7 8 69 1 2 7 175 1 1 5 172 164 2 13 1 18 2 2 0 11 5 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 7 8 2 8 7 114 0 5 2 1 8 5 114 6 4 2 2 12 10 2 1 13 2 1 105 15 1 13 0 11 0 13 11 105 9 1 8 8 3 95 0 3 3 40 77 14 1 0 0 48 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 7 8 2 8 7 114 0 5 2 1 2 5 1 128 6 4 2 2 12 10 2 1 13 2 1 105 15 1 13 0 11 0 13 11 105 9 1 8 8 3 95 0 3 3 40 77 14 1 0 0 48 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 39 values pushed */
190 190 1 0 190 205 190 205 179 176 168 166 161 155 142 140 138 133 131 128 120 111 85 84 79 78 61 53 45 43 38 34 0 107 1 107 16 8 22 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = uni024F;
unicode = 591;
},
{
glyphname = uni1EF9;
layers = (
{
layerId = m01;
shapes = (
{
ref = y;
},
{
pos = (101,-156);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-156 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = uni1EF9;
unicode = 7929;
},
{
glyphname = z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(55,-3,qs),
(67,3,o),
(101,3,o),
(130,-2,o),
(135,-5,q),
(141,-2,o),
(180,1,o),
(219,2,o),
(222,1,qs),
(233,-3,o),
(260,-5,o),
(276,-5,qs),
(299,-5,o),
(349,-1,o),
(389,2,o),
(396,2,qs),
(407,1,o),
(414,11,o),
(424,11,qs),
(428,11,o),
(430,20,o),
(428,24,q),
(428,38,ls),
(428,69,o),
(432,120,o),
(432,139,qs),
(432,161,o),
(432,199,o),
(414,196,qs),
(405,195,o),
(360,151,o),
(302,90,o),
(275,65,qs),
(268,59,o),
(243,38,o),
(235,32,q),
(72,32,l),
(78,37,o),
(89,51,o),
(96,57,qs),
(105,66,o),
(116,89,o),
(129,96,qs),
(138,101,o),
(161,121,o),
(169,130,qs),
(174,135,o),
(192,148,o),
(194,155,qs),
(201,172,o),
(243,199,o),
(253,212,qs),
(255,214,o),
(281,244,o),
(317,282,o),
(347,313,o),
(351,317,qs),
(360,325,o),
(367,352,o),
(377,356,qs),
(388,362,o),
(400,382,o),
(413,391,qs),
(422,398,o),
(446,429,o),
(446,439,qs),
(446,444,o),
(432,451,o),
(429,451,qs),
(411,451,o),
(397,451,o),
(389,451,o),
(375,451,o),
(357,451,qs),
(293,451,o),
(191,454,o),
(177,445,q),
(170,449,o),
(135,452,o),
(127,452,qs),
(107,452,o),
(60,452,o),
(25,441,qs),
(22,440,o),
(21,424,o),
(25,423,qs),
(34,419,o),
(53,409,o),
(63,409,qs),
(67,409,o),
(75,412,o),
(79,413,q),
(82,415,o),
(128,417,o),
(185,417,o),
(231,418,o),
(234,418,qs),
(242,419,o),
(258,420,o),
(263,418,qs),
(283,408,o),
(329,412,o),
(350,410,q),
(363,420,o),
(382,419,o),
(398,419,q),
(392,408,o),
(381,404,o),
(380,401,q),
(367,383,o),
(338,360,o),
(330,344,qs),
(321,327,o),
(291,309,o),
(283,294,qs),
(270,272,o),
(132,145,o),
(27,32,q),
(21,30,o),
(8,3,o),
(11,1,q),
(17,-9,o),
(29,-6,q),
(44,-9,o)
);
},
{
closed = 1;
nodes = (
(199,323,o),
(185,333,o),
(185,344,qs),
(185,359,o),
(154,362,o),
(143,360,qs),
(136,359,o),
(125,340,o),
(125,332,qs),
(125,324,o),
(131,316,qs),
(138,307,o),
(167,291,o),
(177,301,qs),
(191,315,ls)
);
},
{
closed = 1;
nodes = (
(154,323,o),
(152,325,q),
(150,326,o),
(150,329,qs),
(150,335,o),
(155,337,qs),
(158,338,o),
(166,337,o),
(166,333,qs),
(166,329,o),
(170,327,o),
(168,325,qs),
(164,321,ls),
(161,318,o)
);
},
{
closed = 1;
nodes = (
(324,76,o),
(338,89,qs),
(358,108,o),
(385,134,o),
(403,153,q),
(403,152,o),
(402,131,o),
(400,108,o),
(400,102,qs),
(399,76,o),
(399,47,o),
(393,35,o),
(369,32,o),
(342,32,qs),
(284,32,l),
(297,45,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
46 1 0 4 20 1 3 0 2 76 118 1 9 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
46 1 0 4 20 1 3 0 2 76 118 1 8 73 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
46 1 0 4 20 1 3 0 2 76 118 1 9 73 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 0 6 0 3 114 2 1 2 0 0 4 97 5 1 4 4 40 77 0 7 7 38 77 12 1 6 6 8 97 11 10 2 8 8 38 77 0 9 9 44 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 3 0 6 0 3 114 2 1 2 0 0 4 97 5 1 4 4 40 77 0 7 7 38 77 12 1 6 6 8 97 11 10 9 3 8 8 38 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 3 0 6 0 3 114 0 7 6 8 6 7 8 128 2 1 2 0 0 4 97 5 1 4 4 40 77 12 1 6 6 8 97 11 10 2 8 8 38 77 0 9 9 44 9 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
155 153 121 120 116 114 112 110 109 107 105 103 87 86 54 47 45 41 35 33 30 26 25 23 19 17 13 8 22 
CALL[ ]	/* CallFunction */";
};
width = 456;
}
);
note = z;
unicode = 122;
},
{
glyphname = zacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = z;
},
{
pos = (156,-107);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-107 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 456;
}
);
note = zacute;
unicode = 378;
},
{
glyphname = zcaron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(55,-3,qs),
(67,3,o),
(101,3,o),
(130,-2,o),
(135,-5,q),
(141,-2,o),
(180,1,o),
(219,2,o),
(222,1,qs),
(233,-3,o),
(260,-5,o),
(276,-5,qs),
(299,-5,o),
(349,-1,o),
(389,2,o),
(396,2,qs),
(407,1,o),
(414,11,o),
(424,11,qs),
(428,11,o),
(430,20,o),
(428,24,q),
(428,38,ls),
(428,69,o),
(432,120,o),
(432,139,qs),
(432,161,o),
(432,199,o),
(414,196,qs),
(405,195,o),
(360,151,o),
(302,90,o),
(275,65,qs),
(268,59,o),
(243,38,o),
(235,32,q),
(72,32,l),
(78,37,o),
(89,51,o),
(96,57,qs),
(105,66,o),
(116,89,o),
(129,96,qs),
(138,101,o),
(161,121,o),
(169,130,qs),
(174,135,o),
(192,148,o),
(194,155,qs),
(201,172,o),
(243,199,o),
(253,212,qs),
(255,214,o),
(281,244,o),
(317,282,o),
(347,313,o),
(351,317,qs),
(360,325,o),
(367,352,o),
(377,356,qs),
(388,362,o),
(400,382,o),
(413,391,qs),
(422,398,o),
(446,429,o),
(446,439,qs),
(446,444,o),
(432,451,o),
(429,451,qs),
(411,451,o),
(397,451,o),
(389,451,o),
(375,451,o),
(357,451,qs),
(293,451,o),
(191,454,o),
(177,445,q),
(170,449,o),
(135,452,o),
(127,452,qs),
(107,452,o),
(60,452,o),
(25,441,qs),
(22,440,o),
(21,424,o),
(25,423,qs),
(34,419,o),
(53,409,o),
(63,409,qs),
(67,409,o),
(75,412,o),
(79,413,q),
(82,415,o),
(128,417,o),
(185,417,o),
(231,418,o),
(234,418,qs),
(242,419,o),
(258,420,o),
(263,418,qs),
(283,408,o),
(329,412,o),
(350,410,q),
(363,420,o),
(382,419,o),
(398,419,q),
(392,408,o),
(381,404,o),
(380,401,q),
(367,383,o),
(338,360,o),
(330,344,qs),
(321,327,o),
(291,309,o),
(283,294,qs),
(270,272,o),
(132,145,o),
(27,32,q),
(21,30,o),
(8,3,o),
(11,1,q),
(17,-9,o),
(29,-6,q),
(44,-9,o)
);
},
{
closed = 1;
nodes = (
(199,323,o),
(185,333,o),
(185,344,qs),
(185,359,o),
(154,362,o),
(143,360,qs),
(136,359,o),
(125,340,o),
(125,332,qs),
(125,324,o),
(131,316,qs),
(138,307,o),
(167,291,o),
(177,301,qs),
(191,315,ls)
);
},
{
closed = 1;
nodes = (
(154,323,o),
(152,325,q),
(150,326,o),
(150,329,qs),
(150,335,o),
(155,337,qs),
(158,338,o),
(166,337,o),
(166,333,qs),
(166,329,o),
(170,327,o),
(168,325,qs),
(164,321,ls),
(161,318,o)
);
},
{
closed = 1;
nodes = (
(324,76,o),
(338,89,qs),
(358,108,o),
(385,134,o),
(403,153,q),
(403,152,o),
(402,131,o),
(400,108,o),
(400,102,qs),
(399,76,o),
(399,47,o),
(393,35,o),
(369,32,o),
(342,32,qs),
(284,32,l),
(297,45,o)
);
},
{
closed = 1;
nodes = (
(297,586,o),
(294,582,qs),
(292,580,o),
(279,563,o),
(277,561,qs),
(275,558,o),
(268,547,o),
(266,546,qs),
(260,543,o),
(256,543,o),
(251,545,q),
(247,550,o),
(225,570,o),
(198,593,o),
(175,609,o),
(170,609,q),
(162,611,o),
(150,609,o),
(154,600,q),
(160,594,o),
(172,581,o),
(176,574,q),
(181,571,o),
(193,556,o),
(199,553,q),
(207,546,o),
(214,537,o),
(221,531,qs),
(229,524,o),
(245,510,o),
(249,499,qs),
(251,495,o),
(259,494,o),
(261,498,q),
(272,510,o),
(303,544,o),
(333,579,o),
(353,602,o),
(352,603,qs),
(350,605,o),
(344,610,o),
(342,610,q),
(337,612,o),
(330,610,q),
(316,603,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
46 1 0 4 20 1 3 0 2 76 118 1 9 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
46 1 0 4 20 1 3 0 2 76 118 1 8 73 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
46 1 0 4 20 1 3 0 2 76 118 1 9 73 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 0 6 0 3 114 2 1 2 0 0 4 97 5 1 4 4 40 77 0 7 7 38 77 12 1 6 6 8 97 11 10 2 8 8 38 77 0 9 9 44 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 3 0 6 0 3 114 2 1 2 0 0 4 97 5 1 4 4 40 77 0 7 7 38 77 12 1 6 6 8 97 11 10 9 3 8 8 38 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 3 0 6 0 3 114 0 7 6 8 6 7 8 128 2 1 2 0 0 4 97 5 1 4 4 40 77 12 1 6 6 8 97 11 10 2 8 8 38 77 0 9 9 44 9 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
155 153 121 120 116 114 112 110 109 107 105 103 87 86 54 47 45 41 35 33 30 26 25 23 19 17 13 8 22 
CALL[ ]	/* CallFunction */";
};
width = 456;
}
);
note = zcaron;
unicode = 382;
},
{
glyphname = uni1E91;
layers = (
{
layerId = m01;
shapes = (
{
ref = z;
},
{
pos = (117,-119);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-119 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 456;
}
);
note = uni1E91;
unicode = 7825;
},
{
glyphname = zdotaccent;
layers = (
{
layerId = m01;
shapes = (
{
ref = z;
},
{
pos = (180,-134);
ref = uni0307;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-134 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 456;
}
);
note = zdotaccent;
unicode = 380;
},
{
glyphname = uni1E93;
layers = (
{
layerId = m01;
shapes = (
{
ref = z;
},
{
pos = (179,-114);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-114 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 456;
}
);
note = uni1E93;
unicode = 7827;
},
{
glyphname = zmacronbelow;
layers = (
{
layerId = m01;
shapes = (
{
ref = z;
},
{
pos = (69,-329);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-329 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 456;
}
);
note = zmacronbelow;
unicode = 7829;
},
{
glyphname = uni01B6;
layers = (
{
layerId = m01;
shapes = (
{
ref = z;
},
{
pos = (86,-35);
ref = uni0335;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-35 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 456;
}
);
note = uni01B6;
unicode = 438;
},
{
glyphname = f.alt;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(217,2,o),
(284,2,o),
(342,3,o),
(381,3,q),
(393,18,l),
(395,23,o),
(364,36,o),
(356,36,qs),
(326,36,o),
(299,36,o),
(284,36,o),
(257,36,o),
(227,36,qs),
(225,36,o),
(220,42,o),
(219,44,q),
(219,456,l),
(227,456,o),
(243,456,o),
(251,455,qs),
(260,455,o),
(273,465,o),
(289,469,o),
(300,460,qs),
(305,457,o),
(339,455,o),
(375,456,o),
(381,456,qs),
(386,456,o),
(398,466,o),
(399,471,qs),
(401,477,o),
(388,491,o),
(381,491,qs),
(219,491,l),
(219,649,ls),
(219,653,o),
(216,667,o),
(228,667,q),
(230,663,o),
(240,654,o),
(245,650,qs),
(262,637,o),
(290,602,o),
(297,600,qs),
(309,596,o),
(345,571,o),
(351,558,qs),
(356,548,o),
(375,537,o),
(385,532,qs),
(407,521,o),
(426,517,o),
(424,542,qs),
(424,546,o),
(425,570,o),
(429,596,o),
(432,602,q),
(436,607,o),
(428,623,o),
(426,629,qs),
(425,632,o),
(432,637,o),
(429,642,qs),
(424,652,o),
(433,676,o),
(429,683,qs),
(423,696,o),
(417,700,o),
(406,700,qs),
(363,700,o),
(278,700,o),
(222,699,o),
(221,698,qs),
(215,693,o),
(211,693,o),
(204,692,qs),
(197,691,o),
(186,680,o),
(186,673,qs),
(186,666,o),
(187,628,o),
(186,582,o),
(183,544,o),
(178,538,q),
(183,533,o),
(185,508,o),
(185,491,q),
(35,491,ls),
(25,491,o),
(10,469,o),
(14,461,q),
(47,453,l),
(55,456,o),
(63,456,qs),
(66,456,o),
(92,456,o),
(125,458,o),
(152,461,o),
(156,464,q),
(164,464,o),
(178,464,o),
(185,461,q),
(185,47,ls),
(185,40,o),
(180,36,o),
(172,35,q),
(39,35,ls),
(30,35,o),
(7,26,o),
(11,18,qs),
(17,8,o),
(23,2,o),
(35,2,qs),
(116,2,o)
);
},
{
closed = 1;
nodes = (
(338,610,o),
(294,653,o),
(278,666,q),
(316,666,o),
(359,666,o),
(382,665,o),
(391,665,q),
(395,658,o),
(397,644,o),
(397,637,qs),
(397,633,o),
(396,631,o),
(395,607,o),
(394,569,q),
(381,574,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 94 values pushed */
115 50 29 3 4 11 11 1 3 2 98 21 2 1 3 3 76 0 2 4 3 3 2 114 0 5 0 11 4 5 11 103 6 1 4 9 8 7 3 3 1 4 3 105 10 1 1 0 0 1 87 10 1 1 1 0 95 12 1 0 1 0 79 1 0 126 122 106 100 96 95 94 93 89 85 80 79 45 40 26 24 20 16 13 12 7 5 0 114 1 110 13 6 22 
CALL[ ]	/* CallFunction */";
};
width = 443;
}
);
note = f.alt;
},
{
glyphname = l.alt;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(128,2,o),
(212,2,o),
(299,2,o),
(332,2,qs),
(344,2,o),
(345,6,o),
(350,19,qs),
(354,27,o),
(356,43,o),
(351,50,qs),
(346,59,o),
(342,78,o),
(347,87,qs),
(350,92,o),
(344,97,o),
(345,100,qs),
(350,117,o),
(348,135,o),
(345,154,q),
(344,157,o),
(331,176,o),
(326,171,qs),
(317,162,o),
(316,162,o),
(306,159,qs),
(296,155,o),
(282,145,o),
(277,135,q),
(256,115,l),
(252,113,o),
(244,107,o),
(242,103,qs),
(232,84,o),
(194,67,o),
(177,52,qs),
(165,42,o),
(162,34,q),
(154,34,o),
(123,35,o),
(94,36,o),
(88,36,q),
(81,38,o),
(81,45,qs),
(81,643,ls),
(81,649,o),
(87,668,o),
(87,691,o),
(77,701,q),
(59,704,o),
(47,683,o),
(47,665,qs),
(47,525,o),
(47,346,o),
(47,245,o),
(48,199,o),
(48,187,o),
(48,185,qs),
(48,180,o),
(45,169,o),
(40,164,q),
(45,157,o),
(48,141,o),
(48,133,qs),
(48,127,o),
(48,96,o),
(47,59,o),
(47,27,o),
(47,21,qs),
(48,14,o),
(59,3,o),
(66,2,qs),
(70,2,o)
);
},
{
closed = 1;
nodes = (
(264,85,o),
(303,117,o),
(317,122,q),
(317,83,o),
(317,48,o),
(316,39,o),
(314,39,o),
(312,36,q),
(210,36,l),
(225,48,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
78 55 28 11 4 0 74 2 1 0 1 1 0 89 2 1 0 0 1 97 0 1 0 1 81 73 72 71 67 33 30 3 6 22 
CALL[ ]	/* CallFunction */";
};
width = 365;
}
);
note = l.alt;
},
{
glyphname = q.alt;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(408,-188,o),
(408,-170,qs),
(410,2,o),
(412,264,o),
(412,425,o),
(411,446,qs),
(411,449,o),
(403,461,o),
(384,461,q),
(344,457,ls),
(338,457,o),
(325,455,o),
(319,450,qs),
(315,447,o),
(302,449,o),
(297,449,qs),
(79,449,ls),
(74,449,o),
(62,449,o),
(57,448,qs),
(51,448,o),
(40,437,o),
(40,430,qs),
(40,269,ls),
(40,264,o),
(50,255,o),
(42,248,qs),
(38,244,o),
(46,235,o),
(46,230,qs),
(47,208,o),
(47,161,o),
(47,138,q),
(35,125,o),
(46,113,q),
(42,107,o),
(39,95,o),
(46,88,q),
(38,80,o),
(48,57,o),
(48,43,q),
(47,36,o),
(57,26,o),
(63,25,q),
(66,22,o),
(72,27,qs),
(79,31,o),
(124,76,o),
(187,142,o),
(255,214,o),
(316,279,o),
(336,300,qs),
(347,311,o),
(370,335,o),
(377,354,q),
(377,91,ls),
(377,84,o),
(379,68,o),
(374,60,q),
(375,51,o),
(376,0,o),
(377,-63,o),
(378,-122,o),
(378,-138,qs),
(378,-139,o),
(380,-161,o),
(381,-166,qs),
(383,-178,o),
(383,-199,o),
(394,-199,qs),
(399,-199,o)
);
},
{
closed = 1;
nodes = (
(72,113,o),
(70,119,qs),
(69,123,o),
(69,133,o),
(70,135,qs),
(77,147,o),
(72,156,q),
(79,163,o),
(76,193,o),
(77,200,qs),
(79,207,o),
(73,217,o),
(72,223,q),
(80,231,o),
(66,244,o),
(69,253,qs),
(71,257,o),
(71,277,o),
(70,338,o),
(70,404,qs),
(70,415,o),
(78,415,qs),
(328,415,ls),
(335,415,o),
(348,418,o),
(354,422,q),
(357,425,o),
(372,423,o),
(380,414,o),
(372,405,qs),
(369,401,o),
(345,372,o),
(322,340,o),
(319,332,q),
(318,326,o),
(303,314,o),
(298,309,qs),
(244,253,o),
(135,138,o),
(78,78,q),
(78,83,o)
);
},
{
closed = 1;
nodes = (
(506,-196,o),
(556,-196,o),
(590,-195,o),
(591,-194,qs),
(594,-191,o),
(594,-180,o),
(592,-179,q),
(591,-175,o),
(586,-171,o),
(583,-168,qs),
(580,-166,o),
(571,-161,o),
(567,-158,q),
(563,-153,o),
(559,-143,o),
(554,-139,qs),
(533,-119,o),
(498,-73,o),
(477,-52,qs),
(470,-45,ls),
(467,-42,o),
(462,-36,o),
(461,-32,q),
(458,-29,o),
(452,-18,o),
(444,-18,q),
(440,-25,o),
(437,-56,o),
(435,-64,q),
(436,-71,o),
(436,-104,o),
(436,-108,qs),
(436,-115,o),
(435,-128,o),
(435,-135,qs),
(435,-151,ls),
(435,-159,o),
(434,-175,o),
(429,-183,qs),
(427,-187,o),
(432,-195,o),
(436,-195,qs),
(454,-195,o)
);
},
{
closed = 1;
nodes = (
(475,-170,o),
(473,-169,qs),
(466,-167,o),
(464,-164,o),
(464,-157,qs),
(464,-90,ls),
(464,-81,o),
(481,-95,o),
(507,-125,o),
(533,-157,o),
(542,-166,q),
(540,-169,o),
(537,-169,qs),
(521,-170,o),
(510,-170,o),
(508,-172,q),
(493,-179,o),
(481,-172,q),
(480,-170,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
47 1 3 1 168 128 104 101 98 91 40 37 35 32 15 11 12 5 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 2 1 2 133 0 1 0 3 5 1 3 103 0 5 0 0 5 89 0 5 5 0 97 7 4 6 3 0 5 0 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 1 2 133 6 1 0 4 0 134 0 1 0 3 5 1 3 103 0 5 4 4 5 89 0 5 5 4 97 7 1 4 5 4 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 2 1 2 133 0 1 0 3 5 1 3 103 0 5 0 0 5 89 0 5 5 0 97 7 4 6 3 0 5 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
112 112 1 0 160 159 112 154 112 152 89 87 62 61 54 51 0 70 1 70 8 6 22 
CALL[ ]	/* CallFunction */";
};
width = 509;
}
);
note = q.alt;
},
{
glyphname = t.alt;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(224,1,o),
(279,1,o),
(318,8,o),
(318,20,qs),
(318,43,o),
(282,73,o),
(267,90,qs),
(252,107,o),
(226,129,o),
(217,145,qs),
(207,165,o),
(173,185,o),
(172,194,qs),
(172,196,o),
(171,248,o),
(171,324,o),
(170,401,o),
(169,455,o),
(167,459,q),
(194,463,o),
(224,457,o),
(250,452,q),
(276,452,ls),
(278,452,o),
(284,452,o),
(286,451,q),
(296,451,o),
(320,466,o),
(320,472,qs),
(320,477,o),
(308,491,o),
(300,491,qs),
(167,491,l),
(167,640,ls),
(167,644,o),
(169,667,o),
(169,677,qs),
(169,696,o),
(164,697,q),
(151,702,o),
(137,690,o),
(137,667,qs),
(137,491,l),
(43,491,ls),
(22,491,o),
(4,475,o),
(19,460,q),
(30,454,o),
(43,454,qs),
(70,454,o),
(87,456,o),
(93,459,o),
(110,460,o),
(137,459,q),
(137,24,l),
(138,18,o),
(148,3,o),
(155,3,qs),
(170,4,o)
);
},
{
closed = 1;
nodes = (
(226,29,o),
(215,32,o),
(202,32,qs),
(195,32,o),
(179,33,o),
(171,33,q),
(173,91,o),
(169,143,o),
(173,143,qs),
(175,143,o),
(195,122,o),
(217,97,o),
(221,90,qs),
(230,76,o),
(244,62,o),
(263,47,o),
(279,31,q),
(249,29,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
39 1 0 1 75 21 1 2 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 1 2 0 89 3 1 2 5 4 2 1 7 2 1 105 10 8 2 7 6 6 7 89 10 8 2 7 7 6 97 9 1 6 7 6 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 4 0 1 114 0 0 1 2 0 89 3 1 2 5 1 4 7 2 4 105 10 8 2 7 6 6 7 89 10 8 2 7 7 6 97 9 1 6 7 6 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 0 1 2 0 89 3 1 2 5 4 2 1 7 2 1 105 10 8 2 7 6 6 7 89 10 8 2 7 7 6 97 9 1 6 7 6 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
59 59 0 0 59 76 59 75 74 70 0 58 0 56 34 21 26 35 34 36 11 6 28 
CALL[ ]	/* CallFunction */";
};
width = 330;
}
);
note = t.alt;
},
{
glyphname = y.alt;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(95,-196,o),
(152,-196,o),
(193,-195,o),
(194,-194,qs),
(195,-193,o),
(208,-139,o),
(229,-55,o),
(254,39,o),
(267,80,qs),
(273,99,o),
(301,177,o),
(332,274,o),
(358,370,o),
(362,406,qs),
(364,424,o),
(354,447,o),
(344,448,q),
(343,449,o),
(331,449,o),
(329,448,qs),
(325,445,o),
(311,447,o),
(305,447,qs),
(244,448,o),
(123,448,o),
(62,449,qs),
(56,449,o),
(44,450,o),
(38,449,q),
(28,449,o),
(12,436,o),
(12,426,qs),
(12,421,o),
(15,415,qs),
(26,389,o),
(49,351,o),
(71,312,o),
(82,286,qs),
(85,280,o),
(98,274,o),
(95,263,qs),
(94,256,o),
(105,250,o),
(107,245,qs),
(119,220,o),
(152,169,o),
(163,143,q),
(162,134,o),
(165,120,o),
(174,115,q),
(174,107,o),
(177,92,o),
(186,87,q),
(186,70,o),
(207,51,o),
(211,37,q),
(219,31,l),
(219,30,o),
(208,-15,o),
(193,-78,o),
(179,-138,o),
(174,-153,q),
(170,-149,o),
(167,-147,qs),
(157,-139,o),
(138,-113,o),
(123,-88,o),
(118,-85,qs),
(108,-79,o),
(90,-67,o),
(85,-57,qs),
(81,-48,o),
(64,-37,o),
(54,-33,qs),
(50,-31,o),
(28,-25,o),
(26,-27,qs),
(21,-31,o),
(14,-40,o),
(15,-48,qs),
(15,-54,o),
(13,-90,o),
(12,-133,o),
(10,-167,o),
(10,-171,qs),
(10,-180,o),
(18,-195,o),
(31,-195,qs),
(43,-195,o)
);
},
{
closed = 1;
nodes = (
(217,101,o),
(212,109,qs),
(207,117,o),
(186,140,o),
(186,150,qs),
(187,165,o),
(178,173,q),
(180,180,o),
(167,200,o),
(153,220,o),
(151,225,qs),
(147,236,o),
(135,242,o),
(135,251,qs),
(135,260,o),
(120,270,o),
(118,280,qs),
(117,288,o),
(108,304,o),
(104,312,qs),
(96,331,o),
(79,356,o),
(63,380,o),
(55,399,qs),
(51,407,o),
(50,415,o),
(59,415,qs),
(95,415,ls),
(151,415,o),
(268,414,o),
(324,413,qs),
(326,413,o),
(326,407,qs),
(321,360,o),
(287,241,o),
(247,120,o),
(233,68,q),
(229,73,o)
);
},
{
closed = 1;
nodes = (
(61,-161,o),
(49,-161,q),
(45,-157,o),
(45,-146,o),
(45,-134,qs),
(45,-74,l),
(64,-81,o),
(91,-106,o),
(104,-117,qs),
(118,-129,o),
(122,-140,o),
(126,-151,o),
(139,-162,q),
(96,-162,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
134 119 93 35 26 11 6 4 3 1 76 2 1 1 0 3 4 1 3 105 6 1 4 0 0 4 89 6 1 4 4 0 95 5 1 0 4 0 79 127 127 1 0 127 140 127 139 100 96 70 69 65 58 0 88 1 83 7 6 22 
CALL[ ]	/* CallFunction */";
};
width = 373;
}
);
note = y.alt;
},
{
glyphname = g.001;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(410,-186,o),
(410,-181,qs),
(410,-166,o),
(410,-88,o),
(410,18,o),
(411,133,o),
(411,237,o),
(411,311,o),
(411,322,qs),
(411,441,ls),
(411,444,o),
(403,456,o),
(384,456,qs),
(378,456,o),
(360,454,o),
(345,452,qs),
(339,452,o),
(326,455,o),
(319,450,qs),
(315,447,o),
(303,449,o),
(297,449,qs),
(80,449,ls),
(74,449,o),
(63,449,o),
(57,448,qs),
(51,448,o),
(40,437,o),
(40,430,qs),
(40,407,o),
(41,376,o),
(42,344,o),
(42,318,qs),
(42,295,o),
(49,238,o),
(47,229,qs),
(43,208,o),
(46,176,o),
(46,171,qs),
(46,156,o),
(48,143,o),
(49,130,o),
(49,114,q),
(45,108,o),
(40,96,o),
(46,89,q),
(38,61,o),
(49,31,o),
(49,23,qs),
(49,19,l),
(47,9,o),
(66,-2,o),
(72,3,qs),
(77,6,o),
(82,10,o),
(86,14,qs),
(121,53,o),
(201,143,o),
(277,230,o),
(340,301,o),
(377,344,o),
(378,344,q),
(378,86,ls),
(378,79,o),
(379,64,o),
(374,56,q),
(376,49,o),
(378,33,o),
(378,25,qs),
(378,22,o),
(378,-15,o),
(378,-67,o),
(378,-118,o),
(378,-153,o),
(378,-155,q),
(367,-153,o),
(360,-151,o),
(353,-152,o),
(342,-156,qs),
(338,-157,o),
(331,-158,o),
(327,-158,qs),
(321,-158,o),
(272,-157,o),
(207,-156,o),
(142,-156,o),
(93,-155,o),
(87,-155,qs),
(80,-155,o),
(65,-157,o),
(59,-160,q),
(46,-164,o),
(52,-187,o),
(68,-187,qs),
(299,-187,ls),
(310,-187,o),
(323,-182,qs),
(328,-180,o),
(337,-178,o),
(341,-178,qs),
(346,-178,o),
(354,-184,o),
(358,-187,qs),
(363,-191,o),
(380,-182,o),
(382,-187,q),
(396,-188,ls),
(397,-188,o)
);
},
{
closed = 1;
nodes = (
(66,54,o),
(66,83,o),
(69,108,o),
(71,111,q),
(78,128,o),
(72,147,q),
(77,155,o),
(74,187,o),
(73,197,qs),
(72,224,o),
(77,252,o),
(72,263,q),
(80,276,o),
(67,299,o),
(70,313,qs),
(72,324,o),
(70,367,o),
(70,404,qs),
(70,415,o),
(79,415,qs),
(328,415,ls),
(338,415,o),
(348,413,o),
(355,417,q),
(359,421,o),
(376,417,o),
(378,417,q),
(379,399,l),
(357,369,o),
(310,310,o),
(274,269,o),
(268,263,qs),
(254,248,o),
(191,178,o),
(113,88,o),
(76,44,qs),
(71,38,o)
);
},
{
closed = 1;
nodes = (
(237,320,o),
(223,330,o),
(223,341,qs),
(223,356,o),
(192,359,o),
(181,357,qs),
(174,356,o),
(163,337,o),
(163,329,qs),
(163,321,o),
(169,313,qs),
(176,304,o),
(205,288,o),
(215,298,qs),
(229,312,ls)
);
},
{
closed = 1;
nodes = (
(192,320,o),
(190,322,q),
(188,323,o),
(188,326,qs),
(188,332,o),
(193,334,qs),
(196,335,o),
(204,334,o),
(204,330,qs),
(204,326,o),
(208,324,o),
(206,322,qs),
(202,318,ls),
(199,315,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 85 values pushed */
117 78 2 6 4 138 135 132 116 68 64 61 57 45 41 32 11 3 6 105 1 0 1 3 76 0 5 4 5 133 0 1 3 0 3 1 0 128 0 4 0 6 3 4 6 103 0 3 1 0 3 87 0 3 3 0 97 2 7 2 0 3 0 81 1 0 125 122 95 93 85 82 26 18 14 11 8 6 0 107 1 107 8 6 22 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = g.001;
},
{
glyphname = uni013C.loclMAH;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(105,19,o),
(155,51,o),
(207,89,o),
(228,106,qs),
(238,114,o),
(261,119,o),
(261,136,qs),
(261,145,o),
(271,149,o),
(266,156,qs),
(261,165,o),
(230,152,o),
(201,129,q),
(88,52,l),
(81,54,o),
(81,61,qs),
(81,643,ls),
(81,649,o),
(87,668,o),
(87,691,o),
(77,701,q),
(59,704,o),
(47,683,o),
(47,665,qs),
(47,524,o),
(47,345,o),
(47,243,o),
(48,197,o),
(48,185,o),
(48,183,qs),
(48,178,o),
(45,167,o),
(40,162,q),
(45,155,o),
(48,139,o),
(48,131,qs),
(48,125,o),
(48,94,o),
(47,57,o),
(47,25,o),
(47,19,qs),
(48,12,o),
(59,1,o),
(66,0,qs),
(70,0,o)
);
},
{
closed = 1;
nodes = (
(91,-201,o),
(93,-198,q),
(97,-198,o),
(114,-174,o),
(116,-172,q),
(125,-158,o),
(128,-143,o),
(135,-129,qs),
(141,-113,o),
(154,-102,qs),
(167,-91,o),
(171,-65,o),
(172,-48,qs),
(173,-37,o),
(166,-27,o),
(160,-31,q),
(155,-36,o),
(135,-51,o),
(133,-58,qs),
(130,-69,o),
(119,-91,o),
(113,-103,qs),
(105,-124,o),
(85,-159,o),
(71,-194,q),
(74,-199,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
69 55 22 0 2 50 
CALL[ ]	/* CallFunction */";
};
width = 268;
}
);
note = uni013C.loclMAH;
},
{
glyphname = uni0146.loclMAH;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(101,58,o),
(165,158,o),
(208,221,qs),
(238,265,o),
(280,330,o),
(312,386,o),
(327,415,q),
(328,415,o),
(329,415,qs),
(331,415,o),
(349,414,o),
(368,414,o),
(369,413,q),
(382,409,o),
(414,412,o),
(414,410,qs),
(413,368,o),
(413,326,o),
(413,319,qs),
(413,309,o),
(412,285,o),
(418,274,q),
(418,270,o),
(416,239,o),
(414,200,o),
(412,165,o),
(412,157,qs),
(412,144,o),
(420,127,o),
(420,116,qs),
(420,113,o),
(419,107,o),
(418,103,qs),
(417,99,o),
(413,90,o),
(413,85,qs),
(413,21,ls),
(413,11,o),
(424,0,o),
(431,0,qs),
(438,0,o),
(450,11,o),
(450,22,qs),
(450,426,ls),
(450,450,o),
(425,450,qs),
(421,450,o),
(368,450,o),
(289,450,o),
(201,449,o),
(123,449,o),
(72,448,o),
(70,448,qs),
(65,448,o),
(52,435,o),
(52,429,qs),
(52,158,ls),
(52,140,o),
(49,106,o),
(43,86,q),
(40,81,o),
(47,74,q),
(52,67,o),
(52,64,qs),
(52,60,o),
(45,55,o),
(43,50,qs),
(42,47,o),
(40,31,o),
(40,26,qs),
(40,17,o),
(47,0,o),
(52,1,q),
(60,1,o)
);
},
{
closed = 1;
nodes = (
(86,251,o),
(87,286,o),
(88,297,qs),
(89,307,o),
(93,324,o),
(93,333,qs),
(93,344,o),
(87,357,q),
(93,365,o),
(93,373,qs),
(93,383,o),
(86,393,qs),
(82,398,o),
(86,408,o),
(90,411,qs),
(98,416,o),
(111,420,o),
(116,420,qs),
(125,420,o),
(137,413,o),
(141,411,q),
(144,408,o),
(157,408,qs),
(169,408,o),
(202,412,o),
(229,417,o),
(232,417,q),
(240,419,o),
(253,409,o),
(260,409,qs),
(262,409,o),
(266,411,qs),
(270,413,o),
(277,417,o),
(281,417,qs),
(286,417,o),
(291,413,q),
(285,403,o),
(274,382,o),
(273,381,q),
(265,360,o),
(250,344,o),
(235,327,o),
(227,304,qs),
(225,298,o),
(206,273,o),
(187,249,o),
(183,242,qs),
(174,225,o),
(134,170,o),
(94,115,o),
(85,97,q),
(83,113,o),
(86,148,o),
(86,164,qs),
(86,230,ls)
);
},
{
closed = 1;
nodes = (
(325,171,o),
(325,178,qs),
(325,209,o),
(305,218,q),
(298,223,o),
(274,204,o),
(270,197,q),
(262,187,o),
(265,167,o),
(266,159,q),
(268,154,o),
(288,150,o),
(310,151,o),
(314,151,qs),
(320,151,o)
);
},
{
closed = 1;
nodes = (
(287,175,o),
(286,177,q),
(286,180,o),
(286,185,o),
(288,187,q),
(289,189,o),
(296,196,o),
(298,194,qs),
(302,191,o),
(302,183,qs),
(302,181,o),
(301,175,o),
(299,175,qs),
(298,175,o)
);
},
{
closed = 1;
nodes = (
(196,-201,o),
(198,-198,q),
(202,-198,o),
(219,-174,o),
(221,-172,q),
(230,-158,o),
(233,-143,o),
(240,-129,qs),
(246,-113,o),
(259,-102,qs),
(272,-91,o),
(276,-65,o),
(277,-48,qs),
(278,-37,o),
(271,-27,o),
(265,-31,q),
(260,-36,o),
(240,-51,o),
(238,-58,qs),
(235,-69,o),
(224,-91,o),
(218,-103,qs),
(210,-124,o),
(190,-159,o),
(176,-194,q),
(179,-199,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
17 1 4 0 150 148 142 121 119 5 8 2 77 43 37 3 4 1 8 3 76 171 1 1 73 7 1 4 0 2 2 4 114 9 1 8 2 1 2 8 1 128 6 5 3 3 2 2 0 96 0 0 0 40 77 0 1 1 38 1 78 132 130 130 144 132 144 111 110 107 105 100 98 95 93 63 60 59 57 34 32 28 19 10 8 22 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = uni0146.loclMAH;
},
{
glyphname = f_f;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(173,2,o),
(212,2,o),
(238,2,o),
(270,3,o),
(301,3,q),
(313,18,l),
(315,23,o),
(284,36,o),
(276,36,qs),
(246,36,o),
(226,36,o),
(220,36,o),
(204,36,o),
(177,36,qs),
(175,36,o),
(170,42,o),
(169,44,q),
(169,415,l),
(177,415,o),
(193,415,o),
(201,414,qs),
(210,414,o),
(223,424,o),
(239,428,o),
(250,419,qs),
(254,416,o),
(269,414,o),
(276,414,q),
(276,414,l),
(287,414,o),
(314,417,o),
(322,417,qs),
(337,417,o),
(357,418,o),
(364,418,q),
(390,412,l),
(398,415,o),
(406,415,qs),
(425,415,o),
(437,418,o),
(446,420,o),
(458,420,q),
(458,47,ls),
(458,40,o),
(453,36,o),
(445,35,q),
(362,35,ls),
(353,35,o),
(330,26,o),
(334,18,qs),
(340,8,o),
(346,2,o),
(358,2,qs),
(423,2,o),
(496,2,o),
(535,2,o),
(561,2,o),
(593,3,o),
(624,3,q),
(636,18,l),
(638,23,o),
(607,36,o),
(599,36,qs),
(569,36,o),
(549,36,o),
(543,36,o),
(527,36,o),
(500,36,qs),
(498,36,o),
(493,42,o),
(492,44,q),
(492,415,l),
(500,415,o),
(516,415,o),
(524,414,qs),
(533,414,o),
(546,424,o),
(562,428,o),
(573,419,qs),
(580,414,o),
(605,414,o),
(614,415,qs),
(619,415,o),
(631,425,o),
(632,430,qs),
(634,436,o),
(621,450,o),
(614,450,qs),
(492,450,l),
(492,644,ls),
(492,648,o),
(489,662,o),
(501,662,qs),
(532,662,o),
(561,662,o),
(572,662,o),
(577,663,o),
(584,663,qs),
(600,662,o),
(626,674,o),
(622,681,qs),
(616,694,o),
(610,698,o),
(599,698,qs),
(556,698,o),
(511,698,o),
(495,697,o),
(494,696,qs),
(488,691,o),
(484,691,o),
(477,690,qs),
(470,689,o),
(459,678,o),
(459,671,qs),
(459,664,o),
(460,614,o),
(459,553,o),
(456,503,o),
(451,497,q),
(456,492,o),
(458,467,o),
(458,450,q),
(378,450,l),
(374,449,l),
(373,450,o),
(373,450,q),
(354,448,o),
(331,448,o),
(309,450,o),
(291,450,qs),
(169,450,l),
(169,644,ls),
(169,648,o),
(166,662,o),
(178,662,qs),
(209,662,o),
(238,662,o),
(249,662,o),
(254,663,o),
(261,663,qs),
(277,662,o),
(303,674,o),
(299,681,qs),
(293,694,o),
(287,698,o),
(276,698,qs),
(233,698,o),
(188,698,o),
(172,697,o),
(171,696,qs),
(165,691,o),
(161,691,o),
(154,690,qs),
(147,689,o),
(136,678,o),
(136,671,qs),
(136,664,o),
(137,614,o),
(136,553,o),
(133,503,o),
(128,497,q),
(133,492,o),
(135,467,o),
(135,450,q),
(55,450,ls),
(45,450,o),
(30,428,o),
(34,420,q),
(67,412,l),
(75,415,o),
(83,415,qs),
(102,415,o),
(114,418,o),
(123,420,o),
(135,420,q),
(135,47,ls),
(135,40,o),
(130,36,o),
(122,35,q),
(39,35,ls),
(30,35,o),
(7,26,o),
(11,18,qs),
(17,8,o),
(23,2,o),
(35,2,qs),
(100,2,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
67 25 2 4 6 169 150 115 17 4 1 3 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
67 25 2 4 6 169 150 115 17 4 1 15 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
67 25 2 4 6 169 150 115 17 4 1 3 2 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
21 1 2 4 3 3 2 114 13 12 7 3 6 6 5 97 11 1 5 5 39 77 26 25 24 23 22 17 16 15 8 3 3 4 96 14 10 9 8 4 4 4 40 77 27 20 18 3 1 1 0 95 19 28 2 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
13 12 7 3 6 6 5 97 11 1 5 5 39 77 21 3 2 2 2 4 95 14 10 9 8 4 4 4 40 77 26 25 24 23 22 17 16 7 15 15 4 96 14 10 9 8 4 4 4 40 77 27 20 18 3 1 1 0 95 19 28 2 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
21 1 2 4 3 3 2 114 13 12 7 3 6 6 5 97 11 1 5 5 39 77 26 25 24 23 22 17 16 15 8 3 3 4 96 14 10 9 8 4 4 4 40 77 27 20 18 3 1 1 0 95 19 28 2 0 0 38 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 63 values pushed */
1 0 177 171 167 166 165 164 157 156 154 151 148 147 145 144 140 138 134 127 123 117 113 112 111 110 106 105 98 97 94 90 88 87 83 80 64 60 59 58 57 55 52 48 46 45 41 38 22 20 15 14 12 11 7 5 0 186 1 181 29 8 22 
CALL[ ]	/* CallFunction */";
};
width = 646;
}
);
note = f_f;
},
{
glyphname = f_f_i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(173,2,o),
(212,2,o),
(238,2,o),
(270,3,o),
(301,3,q),
(313,18,l),
(315,23,o),
(284,36,o),
(276,36,qs),
(246,36,o),
(226,36,o),
(220,36,o),
(204,36,o),
(177,36,qs),
(175,36,o),
(170,42,o),
(169,44,q),
(169,415,l),
(177,415,o),
(193,415,o),
(201,414,qs),
(210,414,o),
(223,424,o),
(239,428,o),
(250,419,qs),
(254,416,o),
(269,414,o),
(276,414,q),
(276,414,l),
(287,414,o),
(314,417,o),
(322,417,qs),
(337,417,o),
(357,418,o),
(364,418,q),
(390,412,l),
(398,415,o),
(406,415,qs),
(425,415,o),
(437,418,o),
(446,420,o),
(458,420,q),
(458,47,ls),
(458,40,o),
(453,36,o),
(445,35,q),
(362,35,ls),
(353,35,o),
(330,26,o),
(334,18,qs),
(340,8,o),
(346,2,o),
(358,2,qs),
(423,2,o),
(496,2,o),
(535,2,o),
(561,2,o),
(593,3,o),
(624,3,q),
(636,18,l),
(638,23,o),
(607,36,o),
(599,36,qs),
(569,36,o),
(549,36,o),
(543,36,o),
(527,36,o),
(500,36,qs),
(498,36,o),
(493,42,o),
(492,44,q),
(492,415,l),
(500,415,o),
(516,415,o),
(524,414,qs),
(533,414,o),
(546,424,o),
(562,428,o),
(573,419,qs),
(577,416,o),
(592,414,o),
(599,414,q),
(599,414,l),
(610,414,o),
(637,417,o),
(645,417,qs),
(669,418,o),
(693,419,o),
(704,419,qs),
(706,419,o),
(710,419,o),
(711,419,qs),
(714,419,o),
(718,419,q),
(718,419,l),
(730,419,o),
(761,422,o),
(776,422,qs),
(796,422,o),
(807,418,qs),
(812,417,o),
(816,400,o),
(816,392,qs),
(816,119,ls),
(816,112,o),
(811,101,o),
(809,94,qs),
(805,81,o),
(804,55,o),
(811,44,qs),
(815,39,o),
(810,35,o),
(807,35,qs),
(762,34,o),
(717,35,o),
(710,33,qs),
(709,33,o),
(701,17,o),
(710,2,o),
(733,2,qs),
(808,2,ls),
(816,2,o),
(859,4,o),
(875,4,qs),
(881,4,o),
(894,4,o),
(910,2,qs),
(915,2,o),
(938,5,o),
(960,11,o),
(960,17,qs),
(961,23,o),
(955,34,o),
(951,34,qs),
(865,34,ls),
(854,34,o),
(847,41,o),
(847,53,qs),
(847,387,ls),
(847,395,o),
(853,425,o),
(851,450,o),
(840,450,qs),
(696,450,l),
(677,448,o),
(654,448,o),
(632,450,o),
(614,450,qs),
(492,450,l),
(492,644,ls),
(492,648,o),
(489,662,o),
(501,662,qs),
(532,662,o),
(561,662,o),
(572,662,o),
(577,663,o),
(584,663,qs),
(600,662,o),
(626,674,o),
(622,681,qs),
(616,694,o),
(610,698,o),
(599,698,qs),
(556,698,o),
(511,698,o),
(495,697,o),
(494,696,qs),
(488,691,o),
(484,691,o),
(477,690,qs),
(470,689,o),
(459,678,o),
(459,671,qs),
(459,664,o),
(460,614,o),
(459,553,o),
(456,503,o),
(451,497,q),
(456,492,o),
(458,467,o),
(458,450,q),
(378,450,l),
(374,449,l),
(373,450,o),
(373,450,q),
(354,448,o),
(331,448,o),
(309,450,o),
(291,450,qs),
(169,450,l),
(169,644,ls),
(169,648,o),
(166,662,o),
(178,662,qs),
(209,662,o),
(238,662,o),
(249,662,o),
(254,663,o),
(261,663,qs),
(277,662,o),
(303,674,o),
(299,681,qs),
(293,694,o),
(287,698,o),
(276,698,qs),
(233,698,o),
(188,698,o),
(172,697,o),
(171,696,qs),
(165,691,o),
(161,691,o),
(154,690,qs),
(147,689,o),
(136,678,o),
(136,671,qs),
(136,664,o),
(137,614,o),
(136,553,o),
(133,503,o),
(128,497,q),
(133,492,o),
(135,467,o),
(135,450,q),
(55,450,ls),
(45,450,o),
(30,428,o),
(34,420,q),
(67,412,l),
(75,415,o),
(83,415,qs),
(102,415,o),
(114,418,o),
(123,420,o),
(135,420,q),
(135,47,ls),
(135,40,o),
(130,36,o),
(122,35,q),
(39,35,ls),
(30,35,o),
(7,26,o),
(11,18,qs),
(17,8,o),
(23,2,o),
(35,2,qs),
(100,2,o)
);
},
{
closed = 1;
nodes = (
(867,588,o),
(874,601,qs),
(880,612,o),
(868,621,q),
(862,624,o),
(848,631,o),
(843,635,qs),
(836,640,o),
(816,633,o),
(807,626,q),
(793,619,o),
(789,590,o),
(791,584,qs),
(794,576,o),
(817,564,o),
(831,564,qs),
(850,564,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
250 1 35 6 67 25 2 4 35 229 210 175 143 17 5 1 3 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
37 1 35 6 4 6 35 4 128 11 1 5 13 12 7 3 6 35 5 6 105 28 20 2 2 3 4 2 89 16 15 14 10 9 8 6 4 33 32 31 30 29 24 23 22 21 9 3 1 4 3 105 34 27 25 19 17 5 1 0 0 1 87 34 27 25 19 17 5 1 1 0 95 26 18 36 3 0 1 0 79 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
37 1 35 6 4 6 35 4 128 11 1 5 13 12 7 3 6 35 5 6 105 28 21 20 3 2 3 4 2 89 16 15 14 10 9 8 6 4 33 32 31 30 29 24 23 22 8 3 1 4 3 105 34 27 25 19 17 5 1 0 0 1 87 34 27 25 19 17 5 1 1 0 95 26 18 36 3 0 1 0 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 81 values pushed */
37 1 35 6 4 6 35 4 128 11 1 5 13 12 7 3 6 35 5 6 105 28 20 2 2 3 4 2 89 16 15 14 10 9 8 6 4 33 32 31 30 29 24 23 22 21 9 3 1 4 3 105 34 27 25 19 17 5 1 0 0 1 87 34 27 25 19 17 5 1 1 0 95 26 18 36 3 0 1 0 79 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 83 values pushed */
248 247 1 0 247 263 248 263 237 231 227 226 225 224 217 216 214 211 208 207 205 204 200 198 194 187 183 177 173 172 171 170 163 162 160 150 149 147 133 131 127 120 112 110 104 102 101 100 99 97 94 90 88 87 83 80 64 60 59 58 57 55 52 48 46 45 41 38 22 20 15 14 12 11 7 5 0 246 1 241 38 6 22 
CALL[ ]	/* CallFunction */";
};
width = 990;
}
);
note = f_f_i;
},
{
glyphname = f_f_l;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(173,2,o),
(212,2,o),
(238,2,o),
(270,3,o),
(301,3,q),
(313,18,l),
(315,23,o),
(284,36,o),
(276,36,qs),
(246,36,o),
(226,36,o),
(220,36,o),
(204,36,o),
(177,36,qs),
(175,36,o),
(170,42,o),
(169,44,q),
(169,415,l),
(177,415,o),
(193,415,o),
(201,414,qs),
(210,414,o),
(223,424,o),
(239,428,o),
(250,419,qs),
(254,416,o),
(269,414,o),
(276,414,q),
(276,414,l),
(287,414,o),
(314,417,o),
(322,417,qs),
(337,417,o),
(357,418,o),
(364,418,q),
(390,412,l),
(398,415,o),
(406,415,qs),
(425,415,o),
(437,418,o),
(446,420,o),
(458,420,q),
(458,47,ls),
(458,40,o),
(453,36,o),
(445,35,q),
(362,35,ls),
(353,35,o),
(330,26,o),
(334,18,qs),
(340,8,o),
(346,2,o),
(358,2,qs),
(423,2,o),
(496,2,o),
(535,2,o),
(561,2,o),
(593,3,o),
(624,3,q),
(636,18,l),
(638,23,o),
(607,36,o),
(599,36,qs),
(569,36,o),
(549,36,o),
(543,36,o),
(527,36,o),
(500,36,qs),
(498,36,o),
(493,42,o),
(492,44,q),
(492,415,l),
(500,415,o),
(516,415,o),
(524,414,qs),
(533,414,o),
(546,424,o),
(562,428,o),
(573,419,qs),
(580,414,o),
(605,414,o),
(614,415,qs),
(619,415,o),
(631,425,o),
(632,430,qs),
(634,436,o),
(621,450,o),
(614,450,qs),
(492,450,l),
(492,644,ls),
(492,648,o),
(489,662,o),
(501,662,qs),
(532,662,o),
(561,662,o),
(572,662,o),
(577,663,o),
(584,663,qs),
(586,663,l),
(586,663,l),
(587,663,l),
(586,663,o),
(592,663,qs),
(602,663,o),
(625,665,o),
(632,665,qs),
(658,666,o),
(681,667,o),
(693,667,q),
(693,665,ls),
(693,524,o),
(693,345,o),
(694,243,o),
(694,197,o),
(694,185,o),
(694,183,qs),
(694,178,o),
(691,167,o),
(686,162,q),
(691,155,o),
(694,139,o),
(694,131,qs),
(694,125,o),
(694,94,o),
(693,57,o),
(693,25,o),
(693,19,qs),
(694,12,o),
(705,1,o),
(712,0,qs),
(716,0,o),
(751,19,o),
(801,51,o),
(853,89,o),
(874,106,qs),
(884,114,o),
(907,119,o),
(907,136,qs),
(907,145,o),
(917,149,o),
(912,156,qs),
(907,165,o),
(876,152,o),
(847,129,q),
(734,52,l),
(727,54,o),
(727,61,qs),
(727,643,ls),
(727,649,o),
(733,668,o),
(733,691,o),
(723,701,q),
(718,702,o),
(714,701,q),
(705,702,o),
(663,700,o),
(617,698,o),
(601,698,q),
(601,698,l),
(599,698,ls),
(556,698,o),
(511,698,o),
(495,697,o),
(494,696,qs),
(488,691,o),
(484,691,o),
(477,690,qs),
(470,689,o),
(459,678,o),
(459,671,qs),
(459,664,o),
(460,614,o),
(459,553,o),
(456,503,o),
(451,497,q),
(456,492,o),
(458,467,o),
(458,450,q),
(378,450,l),
(374,449,l),
(373,450,o),
(373,450,q),
(354,448,o),
(331,448,o),
(309,450,o),
(291,450,qs),
(169,450,l),
(169,644,ls),
(169,648,o),
(166,662,o),
(178,662,qs),
(209,662,o),
(238,662,o),
(249,662,o),
(254,663,o),
(261,663,qs),
(277,662,o),
(303,674,o),
(299,681,qs),
(293,694,o),
(287,698,o),
(276,698,qs),
(233,698,o),
(188,698,o),
(172,697,o),
(171,696,qs),
(165,691,o),
(161,691,o),
(154,690,qs),
(147,689,o),
(136,678,o),
(136,671,qs),
(136,664,o),
(137,614,o),
(136,553,o),
(133,503,o),
(128,497,q),
(133,492,o),
(135,467,o),
(135,450,q),
(55,450,ls),
(45,450,o),
(30,428,o),
(34,420,q),
(67,412,l),
(75,415,o),
(83,415,qs),
(102,415,o),
(114,418,o),
(123,420,o),
(135,420,q),
(135,47,ls),
(135,40,o),
(130,36,o),
(122,35,q),
(39,35,ls),
(30,35,o),
(7,26,o),
(11,18,qs),
(17,8,o),
(23,2,o),
(35,2,qs),
(100,2,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
132 1 6 5 67 25 2 4 6 225 206 171 123 97 95 17 7 1 3 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
21 1 2 4 3 3 2 114 12 11 2 5 13 7 2 6 4 5 6 105 14 10 9 8 4 4 26 25 24 23 22 17 16 15 8 3 1 4 3 105 27 20 18 3 1 0 0 1 87 27 20 18 3 1 1 0 95 19 28 2 0 1 0 79 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 12 5 12 133 21 1 2 4 3 3 2 114 11 1 5 13 7 2 6 4 5 6 105 14 10 9 8 4 4 26 25 24 23 22 17 16 15 8 3 1 4 3 105 27 20 18 3 1 0 0 1 87 27 20 18 3 1 1 0 95 19 28 2 0 1 0 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
21 1 2 4 3 3 2 114 12 11 2 5 13 7 2 6 4 5 6 105 14 10 9 8 4 4 26 25 24 23 22 17 16 15 8 3 1 4 3 105 27 20 18 3 1 0 0 1 87 27 20 18 3 1 1 0 95 19 28 2 0 1 0 79 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 63 values pushed */
1 0 233 227 223 222 221 220 213 212 210 207 204 203 201 200 196 194 190 183 179 173 169 168 167 166 162 161 154 153 150 134 90 88 87 80 64 60 59 58 57 55 52 48 46 45 41 38 22 20 15 14 12 11 7 5 0 242 1 237 29 6 22 
CALL[ ]	/* CallFunction */";
};
width = 914;
}
);
note = f_f_l;
},
{
glyphname = f_i;
layers = (
{
layerId = m01;
shapes = (
{
ref = fi;
}
);
width = 667;
}
);
note = f_i;
},
{
glyphname = fi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(173,2,o),
(212,2,o),
(238,2,o),
(270,3,o),
(301,3,q),
(313,18,l),
(315,23,o),
(284,36,o),
(276,36,qs),
(246,36,o),
(226,36,o),
(220,36,o),
(204,36,o),
(177,36,qs),
(175,36,o),
(170,42,o),
(169,44,q),
(169,415,l),
(177,415,o),
(193,415,o),
(201,414,qs),
(210,414,o),
(223,424,o),
(239,428,o),
(250,419,qs),
(254,416,o),
(269,414,o),
(276,414,q),
(276,414,l),
(287,414,o),
(314,417,o),
(322,417,qs),
(346,418,o),
(370,419,o),
(381,419,qs),
(383,419,o),
(387,419,o),
(388,419,qs),
(391,419,o),
(395,419,q),
(395,419,l),
(407,419,o),
(438,422,o),
(453,422,qs),
(473,422,o),
(484,418,qs),
(489,417,o),
(493,400,o),
(493,392,qs),
(493,119,ls),
(493,112,o),
(488,101,o),
(486,94,qs),
(482,81,o),
(481,55,o),
(488,44,qs),
(492,39,o),
(487,35,o),
(484,35,qs),
(439,34,o),
(394,35,o),
(387,33,qs),
(386,33,o),
(378,17,o),
(387,2,o),
(410,2,qs),
(485,2,ls),
(493,2,o),
(536,4,o),
(552,4,qs),
(558,4,o),
(571,4,o),
(587,2,qs),
(592,2,o),
(615,5,o),
(637,11,o),
(637,17,qs),
(638,23,o),
(632,34,o),
(628,34,qs),
(542,34,ls),
(531,34,o),
(524,41,o),
(524,53,qs),
(524,387,ls),
(524,395,o),
(530,425,o),
(528,450,o),
(517,450,qs),
(373,450,l),
(354,448,o),
(331,448,o),
(309,450,o),
(291,450,qs),
(169,450,l),
(169,644,ls),
(169,648,o),
(166,662,o),
(178,662,qs),
(209,662,o),
(238,662,o),
(249,662,o),
(254,663,o),
(261,663,qs),
(277,662,o),
(303,674,o),
(299,681,qs),
(293,694,o),
(287,698,o),
(276,698,qs),
(233,698,o),
(188,698,o),
(172,697,o),
(171,696,qs),
(165,691,o),
(161,691,o),
(154,690,qs),
(147,689,o),
(136,678,o),
(136,671,qs),
(136,664,o),
(137,614,o),
(136,553,o),
(133,503,o),
(128,497,q),
(133,492,o),
(135,467,o),
(135,450,q),
(55,450,ls),
(45,450,o),
(30,428,o),
(34,420,q),
(67,412,l),
(75,415,o),
(83,415,qs),
(102,415,o),
(114,418,o),
(123,420,o),
(135,420,q),
(135,47,ls),
(135,40,o),
(130,36,o),
(122,35,q),
(39,35,ls),
(30,35,o),
(7,26,o),
(11,18,qs),
(17,8,o),
(23,2,o),
(35,2,qs),
(100,2,o)
);
},
{
closed = 1;
nodes = (
(544,588,o),
(551,601,qs),
(557,612,o),
(545,621,q),
(539,624,o),
(525,631,o),
(520,635,qs),
(513,640,o),
(493,633,o),
(484,626,q),
(470,619,o),
(466,590,o),
(468,584,qs),
(471,576,o),
(494,564,o),
(508,564,qs),
(527,564,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
154 1 20 6 25 1 4 20 133 101 17 3 1 3 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
154 1 20 6 25 1 4 20 133 101 17 3 1 16 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
154 1 20 6 25 1 4 20 133 101 17 3 1 3 3 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
22 1 20 6 4 6 20 4 128 7 1 6 6 5 97 0 5 5 39 77 14 1 2 2 4 95 10 9 8 3 4 4 40 77 18 17 16 15 4 3 3 4 96 10 9 8 3 4 4 40 77 19 13 11 3 1 1 0 95 12 21 2 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
22 1 20 6 4 6 20 4 128 7 1 6 6 5 97 0 5 5 39 77 15 14 3 3 2 2 4 95 10 9 8 3 4 4 40 77 18 17 2 16 16 4 95 10 9 8 3 4 4 40 77 19 13 11 3 1 1 0 95 12 21 2 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
22 1 20 6 4 6 20 4 128 7 1 6 6 5 97 0 5 5 39 77 14 1 2 2 4 95 10 9 8 3 4 4 40 77 18 17 16 15 4 3 3 4 96 10 9 8 3 4 4 40 77 19 13 11 3 1 1 0 95 12 21 2 0 0 38 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 53 values pushed */
152 151 1 0 151 167 152 167 141 135 131 130 129 128 121 120 118 108 107 105 91 89 85 78 70 68 62 60 59 58 57 55 52 48 46 45 41 38 22 20 15 14 12 11 7 5 0 150 1 145 23 8 22 
CALL[ ]	/* CallFunction */";
};
width = 667;
}
);
note = fi;
unicode = 64257;
},
{
glyphname = fl;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(173,2,o),
(212,2,o),
(238,2,o),
(270,3,o),
(301,3,q),
(313,18,l),
(315,23,o),
(284,36,o),
(276,36,qs),
(246,36,o),
(226,36,o),
(220,36,o),
(204,36,o),
(177,36,qs),
(175,36,o),
(170,42,o),
(169,44,q),
(169,415,l),
(177,415,o),
(193,415,o),
(201,414,qs),
(210,414,o),
(223,424,o),
(239,428,o),
(250,419,qs),
(257,414,o),
(282,414,o),
(291,415,qs),
(296,415,o),
(308,425,o),
(309,430,qs),
(311,436,o),
(298,450,o),
(291,450,qs),
(169,450,l),
(169,644,ls),
(169,648,o),
(166,662,o),
(178,662,qs),
(209,662,o),
(238,662,o),
(249,662,o),
(254,663,o),
(261,663,qs),
(268,663,l),
(268,663,l),
(279,663,o),
(306,665,o),
(314,665,qs),
(337,666,o),
(360,667,o),
(370,667,q),
(370,665,ls),
(370,524,o),
(370,345,o),
(371,243,o),
(371,197,o),
(371,185,o),
(371,183,qs),
(371,178,o),
(368,167,o),
(363,162,q),
(368,155,o),
(371,139,o),
(371,131,qs),
(371,125,o),
(371,94,o),
(370,57,o),
(370,25,o),
(370,19,qs),
(371,12,o),
(382,1,o),
(389,0,qs),
(393,0,o),
(428,19,o),
(478,51,o),
(530,89,o),
(551,106,qs),
(561,114,o),
(584,119,o),
(584,136,qs),
(584,145,o),
(594,149,o),
(589,156,qs),
(584,165,o),
(553,152,o),
(524,129,q),
(411,52,l),
(404,54,o),
(404,61,qs),
(404,643,ls),
(404,649,o),
(410,668,o),
(410,691,o),
(400,701,q),
(399,701,o),
(396,701,qs),
(397,701,o),
(394,702,o),
(392,701,q),
(381,702,o),
(340,700,o),
(298,698,o),
(283,698,q),
(283,698,l),
(281,698,o),
(276,698,qs),
(233,698,o),
(188,698,o),
(172,697,o),
(171,696,qs),
(165,691,o),
(161,691,o),
(154,690,qs),
(147,689,o),
(136,678,o),
(136,671,qs),
(136,664,o),
(137,614,o),
(136,553,o),
(133,503,o),
(128,497,q),
(133,492,o),
(135,467,o),
(135,450,q),
(55,450,ls),
(45,450,o),
(30,428,o),
(34,420,q),
(67,412,l),
(75,415,o),
(83,415,qs),
(102,415,o),
(114,418,o),
(123,420,o),
(135,420,q),
(135,47,ls),
(135,40,o),
(130,36,o),
(122,35,q),
(39,35,ls),
(30,35,o),
(7,26,o),
(11,18,qs),
(17,8,o),
(23,2,o),
(35,2,qs),
(100,2,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
94 1 6 5 25 1 4 6 130 85 59 57 17 5 1 3 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
94 1 6 5 25 1 4 6 130 85 59 57 17 5 1 8 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
94 1 6 5 25 1 4 6 130 85 59 57 17 5 1 3 3 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 2 4 3 3 2 114 0 6 6 5 97 0 5 5 37 77 10 9 8 3 3 3 4 96 7 1 4 4 40 77 11 1 1 1 0 95 12 1 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 6 6 5 97 0 5 5 37 77 3 1 2 2 4 95 7 1 4 4 40 77 10 9 2 8 8 4 95 7 1 4 4 40 77 11 1 1 1 0 95 12 1 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 2 4 3 3 2 114 0 6 6 5 97 0 5 5 37 77 10 9 8 3 3 3 4 96 7 1 4 4 40 77 11 1 1 1 0 95 12 1 0 0 38 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
1 0 138 132 128 127 126 125 121 120 113 112 109 96 46 38 22 20 15 14 12 11 7 5 0 147 1 142 13 8 22 
CALL[ ]	/* CallFunction */";
};
width = 591;
}
);
note = fl;
unicode = 64258;
},
{
glyphname = uni02B0;
layers = (
{
layerId = m01;
shapes = (
{
ref = h;
}
);
width = 502;
}
);
note = uni02B0;
unicode = 688;
},
{
glyphname = uni207F;
layers = (
{
layerId = m01;
shapes = (
{
ref = n;
}
);
width = 490;
}
);
note = uni207F;
unicode = 8319;
},
{
glyphname = uni02B7;
layers = (
{
layerId = m01;
shapes = (
{
ref = w;
}
);
width = 664;
}
);
note = uni02B7;
unicode = 695;
},
{
glyphname = uni02B8;
layers = (
{
layerId = m01;
shapes = (
{
ref = y;
}
);
width = 452;
}
);
note = uni02B8;
unicode = 696;
},
{
glyphname = uni01C2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(193,-152,o),
(197,-147,q),
(196,-128,o),
(203,-94,o),
(207,-60,o),
(200,-42,q),
(207,-28,o),
(203,2,o),
(199,16,q),
(206,31,o),
(203,60,o),
(198,74,q),
(199,127,o),
(199,250,o),
(200,302,q),
(210,302,o),
(226,302,o),
(234,303,qs),
(239,303,o),
(250,304,o),
(254,304,qs),
(261,304,o),
(272,303,o),
(277,302,q),
(302,302,ls),
(318,302,o),
(329,309,o),
(344,313,qs),
(347,314,o),
(347,330,o),
(345,331,qs),
(338,335,o),
(321,343,o),
(312,343,qs),
(306,343,o),
(299,339,qs),
(292,336,o),
(280,334,o),
(275,334,qs),
(268,335,o),
(252,336,o),
(243,336,qs),
(237,336,o),
(224,335,o),
(216,334,qs),
(214,334,o),
(208,334,o),
(205,333,q),
(205,337,o),
(205,343,o),
(203,347,qs),
(196,364,o),
(205,384,o),
(205,397,qs),
(205,417,o),
(205,452,o),
(204,469,q),
(208,468,o),
(215,468,o),
(218,468,qs),
(232,468,o),
(281,478,o),
(294,477,qs),
(299,477,o),
(310,476,o),
(315,476,qs),
(317,476,o),
(323,478,o),
(326,478,qs),
(333,478,o),
(343,484,o),
(348,486,q),
(344,504,o),
(329,511,o),
(311,511,o),
(304,516,q),
(303,516,o),
(284,508,o),
(278,508,qs),
(204,508,l),
(204,537,o),
(204,583,o),
(204,633,o),
(203,666,q),
(205,675,o),
(200,694,o),
(196,701,qs),
(190,711,o),
(181,712,q),
(180,708,o),
(170,689,o),
(171,661,qs),
(171,654,o),
(173,616,o),
(173,609,qs),
(173,586,o),
(173,555,o),
(174,528,o),
(174,508,q),
(144,508,ls),
(137,508,o),
(125,507,o),
(120,507,qs),
(115,507,o),
(106,508,o),
(100,508,qs),
(81,508,l),
(62,509,ls),
(53,509,o),
(41,500,o),
(33,498,q),
(31,497,o),
(30,482,o),
(33,480,qs),
(41,476,o),
(57,467,o),
(66,467,qs),
(72,467,o),
(80,471,q),
(85,475,o),
(97,476,o),
(103,476,qs),
(111,476,o),
(129,475,o),
(139,475,qs),
(146,475,o),
(167,477,o),
(174,477,q),
(174,429,ls),
(173,413,o),
(172,376,o),
(174,361,qs),
(176,349,o),
(174,340,q),
(154,343,o),
(94,337,o),
(41,329,o),
(30,325,q),
(31,322,o),
(36,311,o),
(58,302,o),
(85,302,qs),
(169,302,l),
(172,283,o),
(168,262,o),
(164,242,o),
(166,222,qs),
(167,212,o),
(166,170,o),
(168,128,o),
(172,118,q),
(169,105,o),
(170,84,o),
(173,70,qs),
(175,64,o),
(175,42,o),
(174,32,qs),
(173,17,o),
(168,-27,o),
(166,-72,o),
(166,-87,q),
(171,-115,o),
(176,-140,o),
(180,-148,qs),
(185,-157,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 103 values pushed */
92 36 2 1 3 30 1 10 11 2 76 80 1 3 74 162 158 155 152 13 7 3 7 0 73 8 7 2 1 2 3 1 89 6 5 4 3 3 9 1 2 11 3 2 105 0 11 10 0 11 89 0 10 0 0 10 89 0 10 10 0 97 14 13 12 3 0 10 0 81 149 147 144 142 140 138 131 129 124 121 106 103 102 98 96 94 90 89 85 84 65 63 62 55 48 46 43 38 23 21 15 8 22 
CALL[ ]	/* CallFunction */";
};
width = 378;
}
);
note = uni01C2;
unicode = 450;
},
{
glyphname = uni01C0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(67,-184,o),
(71,-178,q),
(70,-159,o),
(77,-124,o),
(81,-89,o),
(74,-70,q),
(81,-55,o),
(77,-25,o),
(73,-10,q),
(80,6,o),
(77,35,o),
(72,50,q),
(73,105,o),
(73,215,o),
(74,269,qs),
(74,280,o),
(82,301,o),
(77,311,qs),
(70,329,o),
(79,350,o),
(79,363,qs),
(79,419,o),
(78,513,o),
(78,606,o),
(77,661,q),
(79,671,o),
(74,691,o),
(70,698,qs),
(64,708,o),
(55,709,q),
(54,705,o),
(44,685,o),
(45,656,qs),
(45,649,o),
(47,610,o),
(47,603,qs),
(47,564,o),
(48,500,o),
(48,436,o),
(48,396,qs),
(47,379,o),
(46,341,o),
(48,326,qs),
(51,305,o),
(38,276,o),
(45,256,q),
(45,241,o),
(39,219,o),
(40,203,qs),
(41,192,o),
(40,149,o),
(42,106,o),
(46,95,q),
(43,82,o),
(44,60,o),
(47,46,qs),
(49,40,o),
(49,17,o),
(48,7,qs),
(47,-8,o),
(42,-54,o),
(40,-100,o),
(40,-116,q),
(45,-146,o),
(50,-171,o),
(54,-179,qs),
(59,-189,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
66 36 1 50 
CALL[ ]	/* CallFunction */";
};
width = 119;
}
);
note = uni01C0;
unicode = 448;
},
{
glyphname = uni01C1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(79,369,o),
(77,370,q),
(73,374,o),
(78,380,o),
(79,384,q),
(83,392,o),
(83,402,qs),
(83,473,o),
(83,601,o),
(84,671,qs),
(84,681,o),
(63,703,o),
(57,698,qs),
(45,686,o),
(41,677,o),
(42,675,q),
(48,669,o),
(48,656,o),
(48,649,qs),
(48,580,o),
(47,516,o),
(44,496,o),
(41,493,q),
(40,475,o),
(40,453,o),
(40,433,qs),
(40,-180,ls),
(40,-188,o),
(52,-188,qs),
(60,-187,o),
(73,-178,o),
(74,-173,q),
(73,-164,o),
(73,-94,o),
(73,5,o),
(73,118,o),
(74,223,o),
(74,305,o),
(74,323,qs),
(74,334,o)
);
},
{
closed = 1;
nodes = (
(250,327,o),
(250,303,qs),
(250,196,o),
(250,59,o),
(250,-20,o),
(250,-57,o),
(251,-69,o),
(251,-72,qs),
(252,-79,o),
(241,-92,o),
(250,-99,qs),
(251,-100,o),
(249,-104,o),
(248,-106,qs),
(239,-122,o),
(243,-154,o),
(244,-173,qs),
(244,-182,o),
(261,-191,o),
(277,-185,o),
(277,-172,qs),
(277,-167,o),
(277,-150,o),
(277,-102,o),
(276,-52,q),
(284,-29,l),
(284,-14,o),
(284,64,o),
(285,168,o),
(285,281,o),
(286,386,o),
(286,463,o),
(286,478,qs),
(286,482,o),
(287,509,o),
(288,542,o),
(291,568,o),
(293,571,q),
(291,574,o),
(288,604,o),
(287,641,o),
(286,673,o),
(286,677,qs),
(286,681,ls),
(286,689,o),
(271,698,o),
(262,697,qs),
(259,697,o),
(252,694,o),
(252,692,qs),
(251,686,o),
(251,672,o),
(251,665,qs),
(251,393,ls),
(251,383,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
69 68 23 16 7 5 0 74 0 0 0 42 0 78 26 1 8 23 
CALL[ ]	/* CallFunction */";
};
width = 333;
}
);
note = uni01C1;
unicode = 449;
},
{
glyphname = uni01C3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(153,195,o),
(160,201,q),
(165,209,o),
(176,241,o),
(185,273,o),
(187,281,qs),
(195,307,o),
(214,385,o),
(232,463,o),
(244,517,o),
(244,519,q),
(252,553,o),
(258,594,o),
(265,635,o),
(275,668,qs),
(276,672,o),
(276,677,qs),
(276,695,o),
(232,703,o),
(194,703,qs),
(171,703,ls),
(165,703,o),
(153,702,o),
(148,697,qs),
(144,693,o),
(140,695,q),
(135,700,o),
(122,702,o),
(114,702,qs),
(108,702,o),
(79,703,o),
(76,701,q),
(62,701,l),
(53,698,o),
(52,706,o),
(41,701,q),
(33,699,o),
(30,689,o),
(30,688,qs),
(31,682,o),
(41,624,o),
(57,536,o),
(77,433,o),
(98,332,o),
(118,248,o),
(135,196,o),
(141,195,qs),
(142,195,o)
);
},
{
closed = 1;
nodes = (
(130,349,o),
(115,420,o),
(101,483,o),
(92,524,o),
(91,526,q),
(89,537,o),
(81,586,o),
(74,635,o),
(72,645,qs),
(71,651,o),
(70,662,o),
(68,668,q),
(109,669,o),
(200,671,o),
(241,672,q),
(190,417,ls),
(186,397,o),
(171,340,o),
(155,284,o),
(149,263,q),
(145,284,o)
);
},
{
closed = 1;
nodes = (
(139,4,qs),
(150,4,o),
(198,2,o),
(209,3,qs),
(214,3,o),
(227,16,o),
(227,21,qs),
(227,24,o),
(227,51,o),
(227,83,o),
(226,110,o),
(226,113,qs),
(226,118,o),
(213,131,o),
(208,131,q),
(197,133,o),
(149,130,o),
(138,130,qs),
(120,130,o),
(92,133,o),
(78,126,o),
(80,110,qs),
(84,77,l),
(81,24,ls),
(80,13,o),
(106,-5,o),
(107,-4,q),
(120,4,o)
);
},
{
closed = 1;
nodes = (
(178,33,o),
(175,34,qs),
(167,37,o),
(154,35,o),
(151,34,qs),
(139,31,o),
(133,31,o),
(121,32,q),
(118,37,o),
(114,49,o),
(115,55,qs),
(116,70,o),
(114,73,q),
(114,79,ls),
(114,92,o),
(120,102,q),
(132,103,o),
(177,103,o),
(185,101,q),
(191,101,o),
(204,86,o),
(198,72,q),
(192,47,o),
(198,30,o),
(194,31,q),
(186,29,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
30 21 2 3 0 111 108 97 73 72 5 5 6 2 76 0 2 3 4 3 2 4 128 0 4 0 6 5 4 6 105 0 3 3 0 97 1 1 0 0 37 77 0 5 5 38 5 78 105 104 96 91 80 77 56 53 47 46 54 94 7 8 24 
CALL[ ]	/* CallFunction */";
};
width = 306;
}
);
note = uni01C3;
unicode = 451;
},
{
glyphname = ordfeminine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(194,454,o),
(218,460,o),
(216,468,q),
(216,693,l),
(215,696,o),
(211,702,qs),
(209,704,o),
(203,704,o),
(200,704,qs),
(64,704,ls),
(51,704,o),
(41,688,o),
(33,683,q),
(31,681,o),
(31,679,qs),
(31,674,o),
(65,671,o),
(82,671,qs),
(182,671,l),
(182,616,l),
(42,617,l),
(34,613,o),
(33,603,o),
(33,595,qs),
(33,593,o),
(31,554,o),
(30,506,o),
(30,469,o),
(32,468,q),
(33,455,o),
(55,455,o),
(65,454,q),
(183,454,ls)
);
},
{
closed = 1;
nodes = (
(182,583,l),
(182,489,l),
(171,489,o),
(125,488,o),
(78,487,o),
(64,487,q),
(65,583,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
29 3 2 0 5 1 76 0 1 0 6 5 1 6 103 0 2 2 3 95 0 3 3 63 77 0 5 5 0 97 7 4 2 0 0 62 0 78 0 0 39 38 37 33 0 32 0 31 70 33 25 17 8 10 26 
CALL[ ]	/* CallFunction */";
};
width = 246;
}
);
note = ordfeminine;
unicode = 170;
},
{
glyphname = ordmasculine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(89,456,qs),
(95,456,o),
(144,455,o),
(204,454,o),
(253,454,o),
(259,455,qs),
(264,455,o),
(277,468,o),
(277,473,qs),
(278,481,o),
(278,551,o),
(275,634,q),
(277,650,o),
(277,682,o),
(276,689,qs),
(276,694,o),
(263,707,o),
(258,707,qs),
(252,708,o),
(203,708,o),
(143,707,o),
(94,706,o),
(88,706,qs),
(70,706,o),
(44,709,o),
(30,702,o),
(30,686,qs),
(34,523,l),
(31,476,ls),
(30,465,o),
(56,447,o),
(57,448,q),
(70,456,o)
);
},
{
closed = 1;
nodes = (
(198,482,o),
(158,483,o),
(127,485,o),
(125,486,qs),
(117,489,o),
(104,487,o),
(101,486,qs),
(89,483,o),
(83,483,o),
(71,484,q),
(68,489,o),
(64,501,o),
(65,507,qs),
(65,511,o),
(66,554,o),
(66,608,o),
(65,648,o),
(64,649,q),
(64,655,ls),
(64,668,o),
(70,678,q),
(82,679,o),
(112,678,o),
(122,678,qs),
(126,678,o),
(159,679,o),
(198,680,o),
(231,680,o),
(235,679,q),
(241,679,o),
(254,662,o),
(248,648,qs),
(245,642,o),
(245,635,qs),
(244,527,ls),
(244,518,o),
(250,506,qs),
(255,498,o),
(242,483,o),
(236,483,q),
(232,482,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
39 20 2 3 2 3 1 1 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 2 2 0 97 0 0 0 63 77 0 3 3 1 97 0 1 1 62 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
0 0 0 2 3 0 2 105 0 3 3 1 97 0 1 1 62 1 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
73 71 109 94 88 4 10 25 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = ordmasculine;
unicode = 186;
},
{
glyphname = uni03A9;
layers = (
{
layerId = m01;
shapes = (
{
ref = uniA7B6;
}
);
width = 689;
}
);
note = uni03A9;
unicode = 937;
},
{
glyphname = lambda;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(87,53,o),
(92,80,q),
(104,89,o),
(115,116,o),
(119,129,q),
(132,139,o),
(144,164,o),
(146,177,q),
(172,221,o),
(222,309,o),
(248,352,qs),
(253,361,o),
(270,374,o),
(271,384,qs),
(273,397,o),
(277,412,q),
(282,402,o),
(299,385,o),
(296,367,qs),
(293,356,o),
(305,337,o),
(306,326,q),
(336,255,l),
(333,239,o),
(356,192,o),
(365,178,q),
(364,162,o),
(378,131,o),
(387,118,q),
(383,90,o),
(404,46,o),
(408,20,q),
(405,16,o),
(405,8,q),
(416,7,l),
(417,6,o),
(419,6,qs),
(437,4,l),
(446,6,o),
(463,7,o),
(472,5,q),
(474,4,o),
(478,1,o),
(481,5,qs),
(483,8,o),
(490,8,q),
(497,10,o),
(509,8,o),
(516,6,q),
(519,6,o),
(535,7,o),
(550,13,o),
(549,21,qs),
(549,26,o),
(539,38,o),
(534,37,q),
(528,38,o),
(489,38,o),
(449,38,o),
(443,37,qs),
(441,37,o),
(430,66,o),
(429,82,qs),
(427,98,o),
(410,142,o),
(392,186,o),
(387,201,qs),
(385,211,o),
(367,239,o),
(368,246,qs),
(369,260,o),
(358,277,o),
(353,289,q),
(356,301,o),
(340,338,o),
(323,376,o),
(322,390,qs),
(321,406,o),
(303,443,o),
(299,459,qs),
(292,499,o),
(276,533,o),
(262,556,o),
(256,576,qs),
(255,581,o),
(241,607,o),
(228,635,o),
(227,639,qs),
(225,659,o),
(210,688,o),
(209,689,q),
(197,693,o),
(182,684,o),
(169,689,qs),
(162,691,o),
(141,693,o),
(134,693,qs),
(122,692,o),
(112,695,o),
(99,691,qs),
(96,690,o),
(74,683,o),
(72,680,q),
(70,679,o),
(64,659,o),
(65,654,q),
(95,655,o),
(127,661,o),
(143,659,q),
(172,662,o),
(185,654,o),
(192,653,q),
(192,644,o),
(195,635,qs),
(205,597,o),
(230,547,o),
(256,498,o),
(266,461,q),
(259,454,o),
(252,431,o),
(248,422,qs),
(241,403,o),
(220,374,o),
(217,355,q),
(210,343,o),
(194,329,o),
(188,315,qs),
(184,306,o),
(163,272,o),
(144,237,o),
(143,226,q),
(135,217,o),
(126,198,o),
(122,186,q),
(121,180,o),
(110,161,o),
(105,153,qs),
(96,142,o),
(71,106,o),
(48,71,o),
(41,58,q),
(31,33,o),
(24,10,o),
(24,3,qs),
(24,-8,o),
(33,-7,o),
(40,-5,q),
(51,19,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
131 121 118 84 74 70 35 29 8 1 0 115 113 2 2 1 2 76 38 1 0 74 109 3 2 2 73 0 0 1 0 133 0 1 1 2 97 4 3 2 2 2 26 2 78 108 107 106 103 97 96 92 88 41 40 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = lambda;
unicode = 955;
},
{
glyphname = pi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(148,446,o),
(145,455,q),
(156,453,o),
(178,451,o),
(188,455,q),
(188,455,o),
(204,452,o),
(222,452,o),
(225,456,qs),
(229,461,o),
(243,457,o),
(248,457,qs),
(262,457,o),
(267,455,qs),
(280,451,o),
(305,448,o),
(317,448,qs),
(331,448,o),
(375,453,o),
(397,455,q),
(395,453,l),
(394,453,o),
(392,440,o),
(393,439,qs),
(398,432,o),
(399,417,o),
(399,410,qs),
(399,305,o),
(399,166,o),
(399,82,o),
(399,40,o),
(399,24,o),
(399,22,o),
(399,20,qs),
(399,15,o),
(412,2,o),
(416,2,qs),
(435,1,o),
(474,0,o),
(501,6,o),
(501,14,q),
(505,28,o),
(471,32,o),
(448,24,qs),
(439,21,o),
(426,46,o),
(426,51,qs),
(426,67,o),
(429,113,o),
(433,119,qs),
(438,126,o),
(429,140,o),
(427,147,q),
(427,154,o),
(432,190,o),
(436,225,o),
(433,230,q),
(431,237,o),
(429,263,qs),
(429,277,o),
(428,327,o),
(431,370,o),
(433,373,qs),
(438,379,o),
(435,414,o),
(422,457,q),
(434,457,o),
(442,457,qs),
(448,457,o),
(471,459,o),
(474,456,q),
(479,453,o),
(488,458,o),
(493,458,qs),
(504,458,o),
(521,464,o),
(529,466,q),
(522,484,o),
(497,491,o),
(469,491,o),
(457,496,q),
(456,496,o),
(424,488,o),
(414,488,qs),
(231,488,ls),
(222,488,o),
(199,490,o),
(197,488,q),
(193,487,o),
(171,486,o),
(151,488,o),
(150,488,q),
(143,494,o),
(126,487,o),
(124,488,q),
(118,493,o),
(100,488,o),
(93,488,qs),
(88,488,o),
(69,489,o),
(62,489,qs),
(47,489,o),
(29,480,o),
(15,478,qs),
(11,477,o),
(10,462,o),
(14,460,q),
(28,456,o),
(55,447,o),
(68,447,qs),
(79,447,o),
(91,451,qs),
(98,454,o),
(116,456,o),
(125,456,q),
(122,435,o),
(115,372,o),
(111,305,o),
(113,251,o),
(118,239,q),
(120,231,o),
(120,223,qs),
(120,219,o),
(119,206,o),
(119,200,qs),
(118,190,o),
(117,172,o),
(117,163,qs),
(117,150,o),
(123,120,o),
(119,115,qs),
(115,111,o),
(117,90,o),
(114,81,qs),
(112,76,o),
(110,59,o),
(110,53,qs),
(110,40,o),
(118,17,o),
(122,8,qs),
(124,3,o),
(139,4,o),
(140,9,qs),
(143,23,o),
(148,38,o),
(151,58,o),
(151,77,qs),
(151,112,l),
(150,120,o),
(151,136,o),
(149,146,qs),
(148,152,o),
(150,176,o),
(150,176,q),
(156,177,o),
(154,199,o),
(150,221,o),
(151,222,qs),
(157,230,o),
(151,257,o),
(151,270,qs),
(151,392,ls),
(151,416,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
85 1 0 2 160 1 1 0 138 115 105 103 37 25 14 4 8 8 1 3 76 67 1 2 74 9 7 6 3 0 0 2 97 5 4 3 3 2 2 25 77 10 1 1 1 2 97 5 4 3 3 2 2 25 77 0 8 8 26 8 78 146 144 143 140 125 123 96 93 88 87 83 82 79 76 73 72 65 60 53 51 48 47 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 539;
}
);
note = pi;
unicode = 960;
},
{
glyphname = chi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(428,-153,o),
(437,-155,q),
(439,-156,o),
(443,-159,o),
(446,-155,qs),
(448,-152,o),
(455,-152,q),
(462,-150,o),
(474,-152,o),
(481,-154,q),
(486,-154,o),
(515,-151,o),
(514,-140,qs),
(514,-135,o),
(504,-124,o),
(499,-125,q),
(493,-124,o),
(454,-124,o),
(414,-124,o),
(408,-125,qs),
(406,-125,o),
(395,-97,o),
(394,-82,qs),
(392,-67,o),
(375,-25,o),
(357,17,o),
(352,31,qs),
(350,40,o),
(332,67,o),
(333,74,qs),
(334,88,o),
(323,103,o),
(318,114,q),
(322,128,o),
(299,172,o),
(292,191,q),
(294,195,o),
(298,201,o),
(300,205,qs),
(305,214,o),
(322,227,o),
(323,237,qs),
(325,256,o),
(342,268,o),
(348,279,qs),
(367,313,o),
(389,352,o),
(406,382,o),
(427,421,o),
(446,455,q),
(451,462,o),
(456,479,o),
(456,486,qs),
(456,496,o),
(449,502,q),
(446,500,o),
(427,488,o),
(415,465,qs),
(412,458,o),
(395,426,o),
(392,421,qs),
(379,397,o),
(367,377,o),
(361,364,o),
(350,343,o),
(336,319,qs),
(328,305,o),
(309,277,o),
(304,263,qs),
(300,253,o),
(287,239,o),
(281,232,q),
(277,243,o),
(266,266,o),
(264,276,qs),
(257,314,o),
(241,347,o),
(227,368,o),
(221,387,qs),
(220,392,o),
(206,417,o),
(193,443,o),
(192,447,qs),
(190,466,o),
(175,493,o),
(174,494,q),
(162,498,o),
(147,490,o),
(134,494,qs),
(127,496,o),
(106,498,o),
(99,498,qs),
(87,497,o),
(77,500,o),
(64,496,qs),
(61,495,o),
(39,489,o),
(37,486,q),
(35,485,o),
(29,466,o),
(30,461,q),
(60,462,o),
(92,468,o),
(108,466,q),
(137,469,o),
(150,461,o),
(157,460,q),
(157,452,o),
(160,443,qs),
(169,411,o),
(190,367,o),
(213,328,o),
(233,276,o),
(240,237,qs),
(242,226,o),
(261,211,o),
(262,197,q),
(256,190,o),
(245,178,o),
(240,168,qs),
(236,159,o),
(215,125,o),
(196,90,o),
(195,79,q),
(187,70,o),
(178,51,o),
(174,39,q),
(173,33,o),
(162,14,o),
(157,6,qs),
(148,-5,o),
(123,-41,o),
(100,-76,o),
(93,-89,q),
(83,-114,o),
(76,-137,o),
(76,-144,qs),
(76,-155,o),
(85,-154,o),
(92,-152,q),
(103,-128,o),
(139,-94,o),
(144,-67,q),
(156,-58,o),
(167,-31,o),
(171,-18,q),
(184,-8,o),
(196,17,o),
(198,30,q),
(216,62,o),
(252,124,o),
(270,155,q),
(270,154,o),
(273,147,o),
(286,117,o),
(301,82,q),
(298,66,o),
(321,22,o),
(330,9,q),
(329,-6,o),
(343,-36,o),
(352,-48,q),
(348,-75,o),
(369,-116,o),
(373,-141,q),
(370,-145,o),
(370,-152,q),
(381,-153,l),
(382,-154,o),
(384,-154,qs),
(402,-156,l),
(411,-154,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
148 138 99 54 12 9 6 1 0 34 6 4 0 4 2 1 2 76 118 67 2 0 74 0 0 1 0 133 0 1 1 2 97 3 1 2 2 27 2 78 171 170 169 166 156 152 70 69 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 544;
}
);
note = chi;
unicode = 967;
},
{
glyphname = uni1DBF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(160,406,o),
(164,416,q),
(169,424,o),
(183,446,o),
(187,452,qs),
(189,454,o),
(188,461,o),
(189,462,qs),
(191,464,o),
(198,471,o),
(198,475,q),
(207,491,o),
(218,504,o),
(218,511,q),
(225,518,o),
(232,535,o),
(238,543,qs),
(248,555,o),
(261,583,o),
(269,595,q),
(271,601,o),
(268,604,q),
(261,615,o),
(249,637,o),
(239,647,qs),
(234,652,o),
(234,657,qs),
(234,662,o),
(229,670,o),
(227,673,qs),
(223,679,o),
(204,713,o),
(202,719,q),
(199,724,o),
(193,734,o),
(191,740,qs),
(189,748,o),
(180,760,o),
(177,766,qs),
(166,787,o),
(155,796,qs),
(152,799,o),
(149,796,qs),
(144,792,o),
(140,784,o),
(138,779,qs),
(137,777,o),
(137,773,o),
(135,771,qs),
(130,767,o),
(125,756,o),
(122,751,qs),
(119,747,o),
(112,736,o),
(109,731,q),
(105,727,o),
(104,718,o),
(100,715,q),
(100,711,o),
(77,675,o),
(51,635,o),
(45,622,qs),
(42,615,o),
(40,604,qs),
(40,601,o),
(50,578,o),
(62,554,o),
(65,547,q),
(69,541,o),
(78,529,o),
(78,522,q),
(95,492,l),
(105,482,o),
(120,461,o),
(125,451,qs),
(128,446,o),
(133,436,o),
(134,431,q),
(138,423,ls),
(142,413,o)
);
},
{
closed = 1;
nodes = (
(82,628,o),
(100,654,o),
(107,669,q),
(113,673,o),
(118,681,o),
(119,686,qs),
(120,690,o),
(130,709,o),
(142,727,o),
(146,729,q),
(149,734,o),
(152,741,o),
(155,743,q),
(159,736,o),
(174,708,o),
(179,703,qs),
(183,698,o),
(198,671,o),
(211,645,o),
(212,642,qs),
(213,637,o),
(218,631,o),
(218,626,q),
(218,626,o),
(221,622,o),
(226,614,q),
(223,614,o),
(218,615,o),
(215,615,qs),
(209,615,o),
(193,614,o),
(187,614,qs),
(159,614,ls),
(147,613,o),
(143,612,o),
(139,613,o),
(126,614,qs),
(77,614,l)
);
},
{
closed = 1;
nodes = (
(128,498,o),
(119,509,q),
(119,514,o),
(115,523,o),
(110,524,q),
(107,526,o),
(102,551,o),
(100,554,qs),
(93,569,o),
(83,587,o),
(80,592,q),
(83,590,o),
(88,588,qs),
(90,587,o),
(103,587,o),
(106,587,qs),
(128,585,o),
(148,585,o),
(155,587,qs),
(163,588,o),
(175,584,o),
(182,581,q),
(187,580,o),
(194,578,o),
(198,578,qs),
(206,578,o),
(220,583,o),
(227,586,q),
(225,580,o),
(224,578,o),
(224,578,q),
(218,561,o),
(210,551,qs),
(193,525,o),
(177,495,o),
(173,490,qs),
(171,487,o),
(169,478,o),
(164,474,qs),
(161,472,o),
(162,462,o),
(158,459,qs),
(152,454,o),
(150,459,qs),
(143,473,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
134 59 2 3 0 1 76 104 91 36 3 0 74 5 1 2 0 4 1 3 2 0 3 105 5 1 2 0 0 2 97 0 2 0 2 81 80 80 148 146 145 144 138 136 80 117 80 117 89 81 6 10 22 
CALL[ ]	/* CallFunction */";
};
width = 310;
}
);
note = uni1DBF;
unicode = 7615;
},
{
glyphname = uni1D58;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
}
);
width = 490;
}
);
note = uni1D58;
unicode = 7512;
},
{
glyphname = uni1D5B;
layers = (
{
layerId = m01;
shapes = (
{
ref = v;
}
);
width = 452;
}
);
note = uni1D5B;
unicode = 7515;
},
{
glyphname = uni1DBB;
layers = (
{
layerId = m01;
shapes = (
{
ref = z;
}
);
width = 456;
}
);
note = uni1DBB;
unicode = 7611;
},
{
glyphname = zero;
kernLeft = zero;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(247,-17,o),
(256,1,qs),
(263,14,o),
(288,58,o),
(295,68,q),
(298,71,o),
(298,92,o),
(301,96,qs),
(304,102,o),
(316,111,o),
(315,119,q),
(332,148,o),
(350,172,o),
(350,184,q),
(363,197,o),
(377,229,o),
(388,242,qs),
(405,262,o),
(427,314,o),
(442,336,qs),
(447,344,o),
(441,353,qs),
(428,371,o),
(408,412,o),
(391,428,qs),
(387,432,o),
(381,442,o),
(381,447,qs),
(380,457,o),
(371,471,o),
(367,478,qs),
(364,485,o),
(344,518,o),
(325,551,o),
(322,557,qs),
(318,568,o),
(304,587,o),
(302,598,qs),
(298,618,o),
(282,641,o),
(277,653,qs),
(267,678,o),
(253,699,o),
(240,709,qs),
(234,715,o),
(225,708,qs),
(218,702,o),
(211,687,o),
(208,679,qs),
(207,675,o),
(206,667,o),
(202,662,qs),
(195,652,o),
(185,629,o),
(180,618,qs),
(175,608,o),
(162,589,o),
(154,580,qs),
(147,573,o),
(148,555,o),
(139,550,q),
(138,545,o),
(114,505,o),
(81,452,o),
(49,401,o),
(41,384,qs),
(33,370,o),
(30,353,q),
(30,347,o),
(48,305,o),
(71,260,o),
(77,249,qs),
(84,239,o),
(99,217,o),
(99,204,q),
(131,150,l),
(148,133,o),
(174,84,o),
(185,64,qs),
(190,56,o),
(200,37,o),
(201,28,q),
(207,14,ls),
(215,-5,o)
);
},
{
closed = 1;
nodes = (
(183,132,o),
(167,159,qs),
(163,167,o),
(155,183,o),
(147,188,qs),
(140,193,o),
(142,206,o),
(138,213,qs),
(127,230,o),
(108,268,o),
(97,291,qs),
(93,299,o),
(81,315,o),
(81,325,qs),
(81,330,o),
(65,344,o),
(64,350,qs),
(63,358,o),
(72,369,o),
(74,374,qs),
(87,404,o),
(126,458,o),
(139,489,q),
(150,495,o),
(157,514,o),
(161,524,qs),
(165,533,o),
(187,577,o),
(213,620,o),
(221,626,q),
(227,636,o),
(233,649,o),
(239,653,q),
(245,644,o),
(262,605,o),
(281,567,o),
(288,558,qs),
(294,551,o),
(316,514,o),
(339,472,o),
(357,438,o),
(358,433,qs),
(360,425,o),
(371,411,o),
(372,402,qs),
(372,399,o),
(378,393,o),
(380,390,qs),
(409,346,l),
(405,338,o),
(392,319,o),
(384,297,qs),
(378,281,o),
(364,253,o),
(353,242,qs),
(347,235,o),
(343,216,o),
(334,210,q),
(333,200,o),
(315,187,o),
(313,178,qs),
(312,173,o),
(297,147,o),
(281,121,o),
(277,115,qs),
(271,108,o),
(270,78,o),
(259,71,qs),
(252,66,o),
(253,45,o),
(245,38,qs),
(238,32,o),
(233,30,o),
(228,37,q),
(213,65,o)
);
},
{
closed = 1;
nodes = (
(270,342,o),
(268,346,qs),
(264,355,o),
(253,371,o),
(242,376,qs),
(233,379,o),
(225,372,o),
(219,371,qs),
(212,370,o),
(194,352,o),
(196,347,qs),
(199,340,o),
(205,325,o),
(210,319,qs),
(213,316,o),
(246,316,qs),
(251,316,o)
);
},
{
closed = 1;
nodes = (
(226,340,qs),
(223,344,o),
(221,348,qs),
(220,350,o),
(226,354,o),
(228,355,q),
(230,355,o),
(232,358,o),
(235,356,q),
(238,355,o),
(241,350,o),
(243,347,qs),
(244,346,o),
(238,338,o),
(236,338,qs),
(227,338,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
173 164 125 109 4 1 74 69 8 2 0 73 3 1 1 0 0 1 89 3 1 1 1 0 97 2 1 0 1 0 81 176 176 160 159 176 191 176 191 159 175 160 175 4 8 22 
CALL[ ]	/* CallFunction */";
};
width = 474;
}
);
note = zero;
unicode = 48;
},
{
glyphname = one;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,0,o),
(221,0,o),
(286,1,qs),
(290,1,o),
(321,0,o),
(359,-1,o),
(393,1,o),
(400,4,q),
(423,7,o),
(423,27,q),
(413,32,o),
(393,31,o),
(382,39,q),
(360,39,o),
(338,40,o),
(330,35,q),
(316,35,o),
(304,35,o),
(291,36,o),
(277,36,qs),
(270,36,o),
(270,43,qs),
(269,51,o),
(269,66,o),
(269,73,qs),
(269,598,ls),
(269,608,o),
(270,644,o),
(271,677,o),
(271,680,qs),
(271,686,o),
(262,701,o),
(254,701,q),
(239,691,o),
(235,683,o),
(235,664,qs),
(235,629,o),
(243,620,qs),
(244,619,o),
(234,593,o),
(234,585,qs),
(234,576,o),
(236,559,o),
(236,551,qs),
(236,527,o),
(236,506,o),
(235,494,o),
(235,473,o),
(235,449,qs),
(235,401,o),
(236,305,o),
(236,257,qs),
(236,148,ls),
(235,122,o),
(235,69,o),
(235,43,qs),
(235,39,o),
(228,37,o),
(223,35,qs),
(212,31,o),
(198,34,o),
(184,36,o),
(174,28,qs),
(169,24,o),
(166,27,qs),
(158,35,o),
(146,35,q),
(131,28,o),
(113,28,qs),
(85,28,l),
(85,23,ls),
(85,3,o),
(105,1,qs),
(111,1,o),
(123,2,o),
(128,2,qs),
(134,2,o)
);
},
{
closed = 1;
nodes = (
(160,526,q),
(164,535,o),
(155,544,q),
(151,550,o),
(129,561,o),
(108,566,o),
(102,560,q),
(98,554,o),
(91,541,o),
(89,533,q),
(89,529,o),
(98,517,o),
(99,511,qs),
(102,497,o),
(134,496,o),
(152,509,q),
(158,515,o)
);
},
{
closed = 1;
nodes = (
(120,522,o),
(119,526,qs),
(118,528,o),
(116,531,o),
(116,532,qs),
(116,534,o),
(118,538,o),
(119,539,qs),
(121,541,o),
(133,537,o),
(134,535,q),
(136,533,o),
(135,530,q),
(135,527,o),
(133,525,qs),
(129,522,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
66 11 5 3 0 1 1 76 43 35 32 3 8 74 0 8 2 8 133 5 4 3 3 2 2 0 97 7 9 2 0 0 38 77 6 1 1 1 0 97 7 9 2 0 0 38 0 78 1 0 79 78 75 69 65 64 63 61 60 58 57 56 10 9 8 7 0 76 1 76 10 8 22 
CALL[ ]	/* CallFunction */";
};
width = 474;
}
);
note = one;
unicode = 49;
},
{
glyphname = two;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(413,0,o),
(424,14,o),
(423,18,qs),
(422,23,o),
(412,33,o),
(407,33,qs),
(344,33,ls),
(339,33,o),
(331,29,qs),
(325,25,o),
(304,25,o),
(276,26,qs),
(270,26,o),
(261,34,o),
(255,34,qs),
(249,33,o),
(236,25,o),
(229,25,qs),
(204,25,o),
(172,33,o),
(164,33,qs),
(145,33,o),
(124,33,o),
(107,32,qs),
(97,32,o),
(89,37,q),
(88,53,o),
(86,82,o),
(90,98,qs),
(91,101,o),
(93,105,o),
(91,108,q),
(87,119,o),
(87,168,o),
(87,179,qs),
(87,185,o),
(96,195,o),
(91,200,q),
(86,208,o),
(91,217,o),
(94,222,qs),
(99,231,o),
(87,245,o),
(88,252,qs),
(90,259,o),
(98,272,o),
(94,279,qs),
(90,285,o),
(88,322,o),
(88,329,qs),
(88,335,o),
(94,343,qs),
(100,353,o),
(106,347,qs),
(113,342,o),
(126,339,o),
(133,345,qs),
(134,346,o),
(174,342,o),
(201,348,qs),
(206,349,o),
(218,349,o),
(223,349,qs),
(387,349,ls),
(392,349,o),
(409,348,o),
(410,353,qs),
(412,360,o),
(421,376,o),
(420,383,qs),
(419,390,o),
(420,455,o),
(420,494,qs),
(420,536,o),
(423,636,o),
(423,678,qs),
(423,698,o),
(399,698,qs),
(244,698,l),
(243,699,o),
(241,699,qs),
(237,699,o),
(206,698,o),
(202,698,qs),
(194,698,o),
(187,702,qs),
(183,705,o),
(174,700,o),
(166,697,o),
(162,704,q),
(153,703,o),
(141,697,o),
(134,698,qs),
(130,699,o),
(123,699,o),
(120,699,qs),
(95,699,o),
(78,698,o),
(73,698,qs),
(61,697,o),
(58,683,q),
(58,677,o),
(61,674,qs),
(66,670,o),
(75,667,o),
(79,667,qs),
(310,667,ls),
(318,667,o),
(352,667,o),
(359,660,q),
(361,657,o),
(371,663,o),
(374,665,qs),
(381,669,o),
(397,657,o),
(394,650,qs),
(390,643,o),
(394,631,o),
(394,625,q),
(396,618,o),
(395,588,o),
(395,580,qs),
(391,403,ls),
(391,398,o),
(390,389,o),
(383,387,qs),
(378,386,o),
(365,376,o),
(357,383,q),
(356,385,o),
(349,388,o),
(348,386,q),
(342,381,o),
(312,380,o),
(305,384,qs),
(299,388,o),
(284,386,o),
(276,387,q),
(271,382,o),
(258,378,o),
(252,378,qs),
(248,378,o),
(238,379,o),
(233,379,qs),
(80,379,l),
(69,378,o),
(56,367,o),
(56,362,qs),
(57,50,ls),
(57,43,o),
(55,30,o),
(51,23,q),
(50,22,o),
(67,0,o),
(82,0,qs),
(406,0,ls)
);
},
{
closed = 1;
nodes = (
(288,185,q),
(292,194,o),
(283,203,q),
(279,209,o),
(257,220,o),
(236,225,o),
(230,219,q),
(226,213,o),
(219,200,o),
(217,192,q),
(217,188,o),
(226,176,o),
(227,170,qs),
(230,156,o),
(262,155,o),
(280,168,q),
(286,174,o)
);
},
{
closed = 1;
nodes = (
(248,181,o),
(247,185,qs),
(246,187,o),
(244,190,o),
(244,191,qs),
(244,193,o),
(246,197,o),
(247,198,qs),
(249,200,o),
(261,196,o),
(262,194,q),
(264,192,o),
(263,189,q),
(263,186,o),
(261,184,qs),
(257,181,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 108 values pushed */
54 1 3 4 23 17 2 1 3 7 1 6 1 111 1 11 6 129 123 2 7 11 5 76 65 1 4 74 0 11 6 7 6 11 7 128 9 1 8 7 0 7 8 114 2 1 1 0 6 11 1 6 103 0 3 3 4 97 5 1 4 4 39 77 10 1 7 7 0 95 12 1 0 0 38 0 78 1 0 158 157 149 147 145 142 137 136 134 130 94 90 78 70 61 56 49 46 22 21 15 10 0 155 1 154 13 8 22 
CALL[ ]	/* CallFunction */";
};
width = 474;
}
);
note = two;
unicode = 50;
},
{
glyphname = three;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(52,668,o),
(84,664,q),
(221,665,ls),
(226,665,o),
(253,664,o),
(281,664,o),
(285,667,q),
(292,668,o),
(307,669,o),
(315,669,qs),
(329,669,o),
(338,665,qs),
(343,663,o),
(351,665,o),
(354,664,q),
(351,658,o),
(348,654,o),
(340,647,q),
(329,641,o),
(317,629,o),
(317,619,qs),
(317,598,o),
(297,588,qs),
(294,587,o),
(296,575,o),
(293,573,qs),
(283,568,o),
(280,561,q),
(268,542,o),
(228,490,o),
(183,434,o),
(143,383,o),
(131,365,qs),
(129,361,o),
(122,355,o),
(122,352,qs),
(122,345,o),
(128,336,o),
(128,335,q),
(136,324,o),
(151,306,o),
(174,280,o),
(194,256,qs),
(195,255,o),
(208,237,o),
(221,218,o),
(222,215,qs),
(224,211,o),
(234,211,o),
(241,208,o),
(237,200,q),
(237,200,o),
(249,196,o),
(249,193,q),
(255,170,o),
(269,163,o),
(278,152,q),
(283,148,o),
(287,135,o),
(290,137,qs),
(295,139,o),
(306,125,o),
(315,108,o),
(316,106,q),
(327,93,o),
(341,79,o),
(349,68,qs),
(357,58,o),
(372,35,o),
(379,30,q),
(216,33,ls),
(209,33,o),
(166,28,o),
(146,28,qs),
(128,28,o),
(118,36,o),
(102,36,qs),
(89,36,o),
(57,28,o),
(54,26,qs),
(48,21,o),
(56,8,o),
(72,0,o),
(78,0,qs),
(407,0,ls),
(417,0,o),
(424,17,o),
(424,22,qs),
(424,27,o),
(416,38,o),
(411,44,qs),
(391,70,o),
(340,130,o),
(291,188,o),
(273,210,qs),
(251,237,o),
(221,278,o),
(194,314,o),
(174,333,q),
(161,348,o),
(164,351,qs),
(175,365,o),
(220,422,o),
(275,494,o),
(330,566,o),
(373,625,o),
(382,641,qs),
(392,661,o),
(404,670,o),
(404,683,qs),
(404,700,o),
(385,700,qs),
(69,700,l),
(62,699,o),
(58,694,o),
(56,692,q),
(48,688,o)
);
},
{
closed = 1;
nodes = (
(327,339,o),
(327,346,qs),
(327,358,o),
(306,375,o),
(287,375,q),
(277,377,o),
(264,369,o),
(258,361,qs),
(250,350,o),
(258,338,q),
(266,331,o),
(285,314,o),
(295,314,qs),
(313,314,o)
);
},
{
closed = 1;
nodes = (
(282,343,qs),
(281,345,o),
(282,349,q),
(286,353,o),
(289,352,q),
(299,352,o),
(299,345,qs),
(299,344,o),
(297,336,o),
(292,336,qs),
(286,336,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
101 1 9 6 138 136 128 15 4 10 9 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 9 6 10 10 9 114 0 5 8 2 8 5 2 128 0 2 3 3 2 112 12 1 10 11 1 8 5 10 8 106 7 1 6 6 0 95 0 0 0 37 77 4 1 3 3 1 96 0 1 1 38 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 9 6 10 6 9 10 128 0 5 8 2 8 5 2 128 0 2 3 3 2 112 12 1 10 11 1 8 5 10 8 106 7 1 6 6 0 95 0 0 0 37 77 4 1 3 3 1 96 0 1 1 38 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
132 131 118 117 131 141 132 141 126 125 117 130 118 130 114 110 108 105 68 67 46 44 43 41 40 38 32 30 50 13 8 23 
CALL[ ]	/* CallFunction */";
};
width = 474;
}
);
note = three;
unicode = 51;
},
{
glyphname = four;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(249,126,o),
(254,127,q),
(268,127,o),
(296,128,o),
(310,128,qs),
(350,129,ls),
(355,129,o),
(363,128,o),
(367,129,qs),
(368,129,l),
(368,126,o),
(368,125,qs),
(368,119,o),
(367,109,o),
(362,105,qs),
(361,104,o),
(364,96,o),
(365,94,q),
(370,88,o),
(374,57,o),
(372,50,q),
(368,42,o),
(366,9,o),
(373,1,q),
(369,-4,o),
(366,-15,o),
(366,-21,qs),
(366,-25,o),
(377,-39,o),
(390,-43,o),
(399,-24,o),
(399,3,qs),
(398,57,o),
(396,105,o),
(397,122,o),
(400,126,qs),
(402,130,o),
(403,158,o),
(400,161,qs),
(396,166,o),
(393,197,o),
(391,229,o),
(390,235,qs),
(389,246,o),
(364,247,o),
(362,237,qs),
(357,216,l),
(362,212,o),
(364,199,o),
(364,193,qs),
(365,176,o),
(366,163,q),
(358,164,o),
(342,161,o),
(338,161,qs),
(157,156,ls),
(154,156,o),
(147,156,o),
(145,157,q),
(139,162,o),
(128,163,o),
(122,163,qs),
(116,163,o),
(83,163,o),
(77,162,q),
(70,166,o),
(74,177,qs),
(126,313,ls),
(128,317,o),
(135,341,o),
(141,341,q),
(142,345,o),
(150,371,o),
(158,397,o),
(159,400,qs),
(187,457,o),
(214,514,o),
(226,536,o),
(230,539,qs),
(234,541,o),
(240,553,o),
(239,557,qs),
(238,562,o),
(244,589,o),
(255,619,o),
(268,639,o),
(273,637,q),
(273,647,o),
(280,686,o),
(283,695,qs),
(287,710,o),
(274,714,o),
(260,709,o),
(259,708,qs),
(245,691,l),
(248,684,o),
(244,673,o),
(242,667,qs),
(234,646,o),
(212,593,o),
(190,542,o),
(174,507,o),
(173,505,qs),
(171,500,o),
(165,492,o),
(159,490,q),
(158,489,o),
(156,481,o),
(157,479,qs),
(159,472,o),
(150,441,o),
(145,436,qs),
(138,430,o),
(131,419,o),
(134,410,q),
(124,404,o),
(119,391,qs),
(116,382,o),
(96,331,o),
(72,265,o),
(48,202,o),
(32,160,o),
(32,159,q),
(28,150,o),
(32,142,q),
(32,132,o),
(39,125,o),
(55,125,qs),
(163,127,ls),
(168,127,o),
(180,131,o),
(184,129,qs),
(191,125,o),
(227,125,o),
(234,125,qs),
(239,125,o)
);
},
{
closed = 1;
nodes = (
(413,344,o),
(411,348,qs),
(407,357,o),
(396,373,o),
(385,378,qs),
(376,381,o),
(368,374,o),
(362,373,qs),
(355,372,o),
(337,354,o),
(339,349,qs),
(342,342,o),
(348,327,o),
(353,321,qs),
(356,318,o),
(389,318,qs),
(394,318,o)
);
},
{
closed = 1;
nodes = (
(369,342,qs),
(366,346,o),
(364,350,qs),
(363,352,o),
(369,356,o),
(371,357,q),
(373,357,o),
(375,360,o),
(378,358,q),
(381,357,o),
(384,352,o),
(386,349,qs),
(387,348,o),
(381,340,o),
(379,340,qs),
(370,340,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
88 85 83 3 2 4 96 10 3 3 0 2 2 76 150 141 48 40 4 7 74 111 1 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 4 6 2 2 4 114 10 1 7 9 1 6 4 7 6 105 3 1 2 0 0 2 89 3 1 2 2 0 96 5 1 8 3 0 2 0 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 6 2 6 4 2 128 10 1 7 9 1 6 4 7 6 105 3 1 2 0 0 2 89 3 1 2 2 0 96 5 1 8 3 0 2 0 80 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
153 153 137 136 2 0 153 168 153 168 136 152 137 152 133 125 91 90 80 78 74 70 8 5 0 135 2 135 11 8 22 
CALL[ ]	/* CallFunction */";
};
width = 474;
}
);
note = four;
unicode = 52;
},
{
glyphname = five;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(409,0,o),
(426,22,o),
(425,23,q),
(421,30,o),
(419,43,o),
(419,50,qs),
(420,352,ls),
(420,357,o),
(407,369,o),
(396,369,qs),
(215,369,ls),
(211,369,o),
(201,368,o),
(196,368,qs),
(190,368,o),
(177,372,o),
(172,377,q),
(165,376,o),
(149,378,o),
(143,374,qs),
(130,367,o),
(120,376,q),
(126,383,o),
(127,384,o),
(127,385,o),
(133,391,qs),
(151,411,o),
(205,470,o),
(260,529,o),
(298,570,o),
(301,571,q),
(306,575,o),
(315,580,o),
(321,578,q),
(323,578,o),
(328,585,o),
(329,587,q),
(331,595,o),
(347,618,o),
(354,620,qs),
(363,622,o),
(366,628,o),
(368,637,q),
(375,637,o),
(398,662,o),
(408,669,qs),
(412,671,o),
(415,674,qs),
(418,677,o),
(418,683,q),
(415,697,o),
(403,698,qs),
(398,698,o),
(382,699,o),
(356,699,qs),
(353,699,o),
(346,699,o),
(342,698,qs),
(335,697,o),
(324,703,o),
(318,704,q),
(315,697,o),
(306,700,o),
(297,705,o),
(293,702,qs),
(286,698,o),
(278,698,qs),
(274,698,o),
(267,699,o),
(263,699,qs),
(261,699,o),
(260,698,q),
(78,698,ls),
(54,698,o),
(54,678,qs),
(54,650,o),
(54,611,o),
(54,572,o),
(53,544,qs),
(52,478,o),
(52,407,o),
(52,378,o),
(51,373,qs),
(50,366,o),
(60,350,o),
(61,343,q),
(63,338,o),
(80,339,o),
(84,339,qs),
(277,339,ls),
(282,339,o),
(295,340,o),
(299,338,qs),
(311,332,o),
(342,336,o),
(343,335,qs),
(350,329,o),
(363,332,o),
(370,337,qs),
(376,343,o),
(382,333,qs),
(388,325,o),
(388,319,qs),
(388,312,o),
(387,285,o),
(382,279,qs),
(378,272,o),
(387,259,o),
(388,252,qs),
(389,245,o),
(378,231,o),
(382,222,qs),
(385,217,o),
(390,208,o),
(385,200,qs),
(381,195,o),
(389,185,o),
(389,179,qs),
(389,168,o),
(390,119,o),
(385,108,qs),
(383,105,o),
(385,101,o),
(386,98,qs),
(390,82,o),
(389,53,o),
(387,37,q),
(380,32,o),
(369,32,qs),
(353,33,o),
(333,33,o),
(316,33,qs),
(301,33,o),
(292,31,o),
(290,27,o),
(284,25,o),
(271,25,qs),
(267,25,o),
(233,29,o),
(199,34,o),
(195,34,qs),
(189,34,o),
(179,28,o),
(174,26,qs),
(169,25,o),
(155,25,o),
(149,29,qs),
(141,33,o),
(136,33,qs),
(66,33,ls),
(62,33,o),
(52,23,o),
(50,18,qs),
(49,14,o),
(60,0,o),
(67,0,qs),
(394,0,ls)
);
},
{
closed = 1;
nodes = (
(80,391,o),
(80,393,qs),
(82,580,ls),
(82,588,o),
(82,618,o),
(83,625,qs),
(83,631,o),
(87,643,o),
(83,650,qs),
(80,657,o),
(96,669,o),
(103,665,qs),
(106,663,o),
(113,657,o),
(115,660,q),
(122,667,o),
(137,667,o),
(144,667,qs),
(356,667,l),
(349,662,o),
(343,654,o),
(341,652,qs),
(328,639,o),
(286,593,o),
(244,544,o),
(211,510,o),
(207,510,qs),
(202,510,o),
(191,502,o),
(190,498,qs),
(188,493,o),
(169,466,o),
(144,437,o),
(122,419,o),
(118,423,q),
(113,414,o),
(89,391,o),
(81,383,q),
(80,385,o)
);
},
{
closed = 1;
nodes = (
(250,148,o),
(253,162,qs),
(255,168,o),
(263,180,o),
(263,184,qs),
(262,192,o),
(254,205,o),
(250,211,qs),
(245,217,o),
(223,212,o),
(202,201,o),
(197,195,qs),
(188,186,o),
(192,177,q),
(194,166,o),
(200,160,q),
(218,147,o)
);
},
{
closed = 1;
nodes = (
(217,181,q),
(216,184,o),
(218,186,qs),
(220,188,o),
(231,192,o),
(233,190,qs),
(234,189,o),
(236,185,o),
(236,183,qs),
(236,182,o),
(234,179,o),
(233,177,qs),
(232,173,o),
(224,173,o),
(219,176,q),
(217,178,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
180 1 11 12 193 157 2 8 11 227 222 219 207 60 38 6 13 5 150 1 0 13 153 1 10 1 5 76 95 91 2 6 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 11 12 8 8 11 114 0 13 5 0 5 13 0 128 3 1 1 0 10 0 1 114 9 1 8 0 5 13 8 5 104 0 12 12 6 97 7 1 6 6 39 77 4 2 2 0 0 10 95 14 1 10 10 38 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 11 12 8 12 11 8 128 0 13 5 0 5 13 0 128 3 1 1 0 10 0 1 114 9 1 8 0 5 13 8 5 104 0 12 12 6 97 7 1 6 6 39 77 4 2 2 0 0 10 95 14 1 10 10 38 10 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
0 0 212 211 179 176 169 167 0 156 0 155 147 144 143 141 105 99 90 82 69 63 83 34 35 19 37 15 8 27 
CALL[ ]	/* CallFunction */";
};
width = 474;
}
);
note = five;
unicode = 53;
},
{
glyphname = six;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(221,700,o),
(212,682,qs),
(181,622,o),
(95,453,o),
(51,362,q),
(51,29,ls),
(51,25,o),
(51,16,o),
(52,12,qs),
(52,9,o),
(60,-1,o),
(79,-1,qs),
(85,-1,o),
(102,-3,o),
(112,-1,q),
(120,-1,o),
(136,0,o),
(144,1,q),
(406,1,l),
(412,2,o),
(423,12,o),
(423,19,qs),
(423,54,o),
(414,100,o),
(421,107,qs),
(426,112,o),
(417,121,o),
(417,125,qs),
(417,141,o),
(417,194,o),
(417,256,o),
(417,284,q),
(420,290,o),
(424,302,o),
(417,308,q),
(419,311,o),
(423,317,o),
(423,320,qs),
(423,328,o),
(414,344,o),
(414,354,q),
(416,361,o),
(404,373,o),
(398,373,q),
(394,374,o),
(352,371,o),
(258,368,o),
(176,367,qs),
(168,367,o),
(132,366,o),
(124,362,q),
(123,361,o),
(99,362,o),
(89,361,q),
(236,655,ls),
(238,660,o),
(245,684,o),
(247,688,q),
(247,691,o),
(248,696,o),
(247,700,q),
(235,704,ls),
(225,707,o)
);
},
{
closed = 1;
nodes = (
(145,336,o),
(161,336,qs),
(379,339,l),
(385,337,o),
(385,330,qs),
(385,323,o),
(385,308,o),
(386,301,qs),
(386,298,o),
(386,255,o),
(386,200,o),
(385,158,o),
(385,155,qs),
(384,148,o),
(390,138,o),
(391,132,q),
(384,125,o),
(397,111,o),
(393,102,q),
(395,40,ls),
(395,29,o),
(386,29,qs),
(135,29,ls),
(128,29,o),
(115,35,o),
(108,33,q),
(104,29,o),
(90,30,o),
(82,30,q),
(82,30,o),
(83,78,o),
(84,151,o),
(84,229,o),
(85,291,o),
(85,304,qs),
(85,318,ls),
(85,331,o),
(99,332,qs),
(113,333,o)
);
},
{
closed = 1;
nodes = (
(217,204,o),
(210,195,qs),
(204,188,o),
(204,179,qs),
(204,171,o),
(215,153,o),
(222,151,q),
(233,150,o),
(264,152,o),
(264,167,qs),
(264,178,o),
(278,188,o),
(270,196,qs),
(256,210,ls),
(246,221,o)
);
},
{
closed = 1;
nodes = (
(249,184,o),
(245,182,o),
(245,178,qs),
(245,174,o),
(237,173,o),
(234,174,qs),
(229,176,o),
(229,182,qs),
(229,185,o),
(231,186,q),
(233,188,o),
(240,193,o),
(243,190,qs),
(247,186,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 88 values pushed */
57 1 0 1 21 1 7 0 122 30 2 9 7 85 82 34 3 5 8 40 1 2 5 5 76 1 1 1 74 0 0 1 7 1 0 7 128 0 1 0 7 9 1 7 103 0 9 0 8 5 9 8 105 6 1 5 5 2 97 4 3 2 2 2 38 2 78 126 124 108 107 100 97 80 77 74 71 51 49 46 45 44 42 66 25 10 8 24 
CALL[ ]	/* CallFunction */";
};
width = 474;
}
);
note = six;
unicode = 54;
},
{
glyphname = seven;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(215,303,o),
(216,279,o),
(216,276,qs),
(214,213,o),
(215,149,o),
(215,125,o),
(212,121,qs),
(209,117,o),
(209,104,o),
(211,101,qs),
(214,97,o),
(217,68,o),
(218,33,o),
(218,4,o),
(218,-1,qs),
(220,-16,o),
(234,-16,o),
(246,-5,o),
(246,-5,q),
(252,17,l),
(247,22,o),
(246,34,o),
(246,40,qs),
(246,73,o),
(247,134,o),
(248,174,o),
(248,173,qs),
(248,179,o),
(250,189,o),
(255,193,qs),
(256,194,o),
(254,202,o),
(252,203,q),
(248,209,o),
(244,242,o),
(247,248,qs),
(251,256,o),
(253,270,o),
(248,277,q),
(256,286,o),
(254,299,qs),
(254,304,o),
(254,325,o),
(253,340,q),
(264,368,o),
(308,449,o),
(332,491,qs),
(334,495,o),
(331,503,o),
(341,506,qs),
(346,508,o),
(347,519,o),
(350,522,q),
(350,522,o),
(360,529,o),
(367,550,qs),
(380,585,o),
(411,635,o),
(435,663,o),
(435,663,q),
(439,672,o),
(435,680,q),
(435,690,o),
(428,698,o),
(412,698,qs),
(304,698,ls),
(299,698,o),
(287,695,o),
(283,697,qs),
(276,702,o),
(263,701,o),
(256,701,qs),
(251,701,o),
(241,700,o),
(236,700,qs),
(70,700,ls),
(66,700,o),
(57,701,o),
(53,700,qs),
(49,700,o),
(37,689,o),
(37,684,qs),
(36,671,o),
(54,664,o),
(77,667,o),
(82,667,qs),
(310,669,ls),
(313,669,o),
(321,670,o),
(322,668,q),
(327,664,o),
(338,661,o),
(344,661,qs),
(379,661,l),
(387,656,o),
(382,646,qs),
(233,380,ls),
(220,358,o),
(215,348,o),
(213,340,q),
(214,332,o)
);
},
{
closed = 1;
nodes = (
(208,519,o),
(236,535,o),
(243,544,qs),
(249,552,o),
(249,560,qs),
(249,568,o),
(238,587,o),
(231,588,qs),
(221,590,o),
(189,587,o),
(189,572,qs),
(189,561,o),
(175,551,o),
(183,543,qs),
(197,529,ls)
);
},
{
closed = 1;
nodes = (
(208,557,o),
(208,561,qs),
(208,565,o),
(216,566,o),
(219,565,qs),
(224,563,o),
(224,557,qs),
(224,554,o),
(222,553,q),
(221,551,o),
(213,546,o),
(210,549,qs),
(206,553,ls),
(204,555,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
38 1 1 2 122 85 80 61 56 5 4 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 5 0 4 1 5 114 0 1 1 2 95 3 1 2 2 37 77 0 0 0 2 95 3 1 2 2 37 77 0 4 4 44 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 5 0 4 0 5 4 128 0 1 1 2 95 3 1 2 2 37 77 0 0 0 2 95 3 1 2 2 37 77 0 4 4 44 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 5 0 4 0 5 4 128 0 4 4 132 0 1 1 2 95 3 1 2 2 37 77 0 0 0 2 95 3 1 2 2 37 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
126 124 84 83 82 105 37 22 6 8 26 
CALL[ ]	/* CallFunction */";
};
width = 474;
}
);
note = seven;
unicode = 55;
},
{
glyphname = eight;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(273,6,o),
(278,11,q),
(292,4,o),
(309,4,qs),
(417,4,ls),
(425,4,o),
(434,18,o),
(431,25,qs),
(424,40,o),
(397,88,o),
(368,139,o),
(346,177,o),
(343,183,qs),
(335,198,o),
(316,226,o),
(307,240,qs),
(302,247,o),
(283,285,o),
(264,323,o),
(259,331,qs),
(256,336,o),
(251,346,o),
(251,351,qs),
(251,361,o),
(259,366,q),
(258,374,o),
(264,383,o),
(267,389,qs),
(272,396,o),
(280,413,o),
(284,420,qs),
(287,426,o),
(300,451,o),
(313,476,o),
(317,480,qs),
(328,491,o),
(337,517,o),
(344,528,qs),
(354,542,o),
(368,575,o),
(382,588,qs),
(391,596,o),
(391,610,o),
(401,626,qs),
(415,644,o),
(423,661,qs),
(425,665,o),
(425,675,o),
(425,679,qs),
(425,685,o),
(414,696,o),
(407,696,qs),
(349,696,ls),
(345,696,o),
(340,688,o),
(335,691,qs),
(327,696,o),
(305,696,o),
(297,690,qs),
(296,689,o),
(288,690,o),
(286,691,qs),
(281,695,o),
(243,692,o),
(236,690,q),
(230,696,o),
(216,696,o),
(209,696,qs),
(130,696,l),
(124,689,o),
(114,696,o),
(109,696,qs),
(108,696,o),
(91,687,o),
(87,690,qs),
(82,695,o),
(70,696,o),
(64,696,qs),
(51,696,o),
(42,693,o),
(42,679,qs),
(42,672,o),
(46,661,o),
(49,654,qs),
(57,639,o),
(75,611,o),
(84,597,qs),
(93,583,o),
(109,551,o),
(118,536,qs),
(119,534,o),
(123,530,q),
(134,523,o),
(141,499,o),
(150,490,q),
(150,489,ls),
(150,476,o),
(165,455,o),
(171,444,qs),
(177,431,o),
(193,408,o),
(197,395,q),
(201,388,o),
(206,372,o),
(213,367,qs),
(217,364,o),
(215,354,o),
(213,349,qs),
(205,334,o),
(191,303,o),
(180,289,qs),
(176,283,o),
(177,270,o),
(171,265,qs),
(160,255,o),
(149,230,o),
(142,218,qs),
(135,205,o),
(118,180,o),
(116,166,qs),
(114,154,o),
(105,147,qs),
(95,137,o),
(72,91,o),
(64,73,qs),
(60,63,o),
(47,47,o),
(42,38,q),
(41,34,o),
(42,27,o),
(42,23,qs),
(42,11,o),
(53,11,qs),
(191,11,ls),
(196,11,o),
(208,14,o),
(211,11,q),
(221,5,o),
(243,4,o),
(251,4,qs),
(259,4,o)
);
},
{
closed = 1;
nodes = (
(221,418,o),
(213,425,q),
(207,436,o),
(197,459,o),
(190,471,qs),
(184,482,o),
(174,505,o),
(168,516,qs),
(161,530,o),
(142,552,o),
(135,565,qs),
(128,579,o),
(115,605,o),
(104,616,qs),
(95,623,o),
(95,631,qs),
(94,637,o),
(86,651,o),
(79,657,qs),
(72,664,o),
(93,666,o),
(98,667,q),
(103,663,o),
(112,661,o),
(116,666,qs),
(121,671,o),
(129,661,o),
(133,665,qs),
(138,669,o),
(143,665,qs),
(152,658,o),
(163,663,qs),
(187,676,o),
(213,664,q),
(225,656,o),
(232,665,qs),
(237,670,o),
(247,661,o),
(253,667,q),
(258,669,o),
(288,671,o),
(295,664,q),
(302,669,o),
(313,662,o),
(319,662,qs),
(349,662,ls),
(353,662,o),
(359,669,o),
(363,670,qs),
(376,673,o),
(397,656,o),
(389,648,qs),
(384,644,o),
(365,618,o),
(350,592,o),
(350,586,qs),
(350,585,o),
(328,547,o),
(298,495,o),
(272,450,o),
(267,442,qs),
(261,431,o),
(248,408,o),
(242,397,qs),
(238,390,o),
(234,394,qs),
(226,402,o)
);
},
{
closed = 1;
nodes = (
(272,561,o),
(272,568,qs),
(272,580,o),
(251,597,o),
(232,597,q),
(222,599,o),
(209,591,o),
(203,583,qs),
(195,572,o),
(203,560,q),
(211,553,o),
(230,536,o),
(240,536,qs),
(258,536,o)
);
},
{
closed = 1;
nodes = (
(227,565,qs),
(226,567,o),
(227,571,q),
(231,575,o),
(234,574,q),
(244,574,o),
(244,567,qs),
(244,566,o),
(242,558,o),
(237,558,qs),
(231,558,o)
);
},
{
closed = 1;
nodes = (
(239,33,o),
(235,33,qs),
(230,33,o),
(209,34,o),
(152,34,o),
(90,34,qs),
(82,34,o),
(80,37,o),
(83,45,qs),
(84,47,o),
(91,69,o),
(95,75,qs),
(118,118,o),
(166,201,o),
(188,243,qs),
(192,249,o),
(201,261,o),
(201,269,qs),
(201,275,o),
(217,290,o),
(218,301,qs),
(219,305,o),
(228,318,o),
(232,321,qs),
(233,322,o),
(247,302,o),
(263,276,o),
(266,268,qs),
(270,258,o),
(285,238,o),
(285,225,qs),
(285,221,o),
(292,211,o),
(296,206,qs),
(306,194,o),
(311,173,o),
(325,156,q),
(325,135,o),
(352,110,o),
(360,91,qs),
(365,80,o),
(377,48,o),
(389,40,q),
(391,40,o),
(391,37,qs),
(391,36,o),
(382,34,o),
(380,34,qs),
(360,34,ls),
(357,34,o),
(350,34,o),
(347,33,q),
(343,30,o),
(338,30,qs),
(333,30,o),
(322,34,o),
(317,34,qs),
(314,34,ls),
(311,34,o),
(305,33,o),
(302,33,qs),
(283,33,o),
(271,34,o),
(267,34,qs),
(257,34,o),
(249,29,qs),
(245,26,o)
);
},
{
closed = 1;
nodes = (
(267,130,q),
(271,139,o),
(262,148,q),
(258,154,o),
(236,165,o),
(215,170,o),
(209,164,q),
(205,158,o),
(198,145,o),
(196,137,q),
(196,133,o),
(205,121,o),
(206,115,qs),
(209,101,o),
(241,100,o),
(259,113,q),
(265,119,o)
);
},
{
closed = 1;
nodes = (
(227,126,o),
(226,130,qs),
(225,132,o),
(223,135,o),
(223,136,qs),
(223,138,o),
(225,142,o),
(226,143,qs),
(228,145,o),
(240,141,o),
(241,139,q),
(243,137,o),
(242,134,q),
(242,131,o),
(240,129,qs),
(236,126,o)
);
}
);
userData = {
assembly = "NPUSHW[ ]	/* 31 values pushed */
84 75 65 3 8 2 185 179 165 3 7 8 229 227 219 3 11 10 262 117 115 44 4 17 9 9 1 1 12 5 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 8 2 7 2 8 7 128 0 10 7 11 11 10 114 0 17 9 12 9 17 12 128 20 1 11 19 1 9 17 11 9 106 0 7 7 2 97 5 4 3 3 2 2 39 77 16 15 14 13 4 12 12 1 95 0 1 1 38 77 16 15 14 13 4 12 12 0 97 6 18 2 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 8 2 7 2 8 7 128 0 10 7 11 7 10 11 128 0 17 9 12 9 17 12 128 20 1 11 19 1 9 17 11 9 106 0 7 7 2 97 5 4 3 3 2 2 39 77 16 15 14 13 4 12 12 1 95 0 1 1 38 77 16 15 14 13 4 12 12 0 97 6 18 2 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
0 8 2 7 2 8 7 128 0 10 7 11 7 10 11 128 0 17 9 12 9 17 12 128 20 1 11 19 1 9 17 11 9 106 0 1 0 12 1 87 0 7 7 2 97 5 4 3 3 2 2 39 77 16 15 14 13 4 12 12 0 97 6 18 2 0 0 38 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 51 values pushed */
223 222 209 208 2 0 302 301 298 293 251 248 246 244 243 240 238 234 222 232 223 232 217 216 208 221 209 221 167 166 162 160 137 134 88 86 83 82 74 71 64 61 8 3 0 140 2 140 21 8 22 
CALL[ ]	/* CallFunction */";
};
width = 474;
}
);
note = eight;
unicode = 56;
},
{
glyphname = nine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(253,11,qs),
(261,29,o),
(285,72,o),
(305,105,o),
(306,108,qs),
(308,112,o),
(317,121,o),
(318,135,qs),
(320,147,o),
(330,162,o),
(330,162,q),
(343,169,o),
(343,184,qs),
(343,193,o),
(365,224,o),
(367,228,qs),
(383,262,o),
(408,302,o),
(423,333,q),
(423,675,ls),
(423,679,o),
(423,688,o),
(422,692,qs),
(422,695,o),
(414,705,o),
(395,705,qs),
(389,705,o),
(373,703,o),
(362,701,q),
(355,701,o),
(338,700,o),
(330,699,q),
(68,699,l),
(62,698,o),
(51,688,o),
(51,681,qs),
(51,646,o),
(60,604,o),
(53,597,qs),
(49,593,o),
(57,584,o),
(57,579,qs),
(57,556,o),
(58,464,o),
(57,422,q),
(54,416,o),
(50,404,o),
(57,398,q),
(55,395,o),
(51,389,o),
(51,386,qs),
(51,379,o),
(60,363,o),
(60,352,qs),
(59,345,o),
(70,333,o),
(76,333,qs),
(79,333,o),
(93,333,o),
(134,333,o),
(221,333,o),
(298,333,qs),
(306,333,o),
(322,331,o),
(329,325,q),
(337,327,o),
(351,324,o),
(358,328,q),
(360,330,o),
(375,331,o),
(385,332,q),
(229,38,ls),
(227,34,o),
(220,9,o),
(218,5,q),
(214,-8,o),
(226,-12,o),
(230,-11,q),
(243,-10,o)
);
},
{
closed = 1;
nodes = (
(344,358,o),
(331,363,qs),
(327,365,o),
(318,364,o),
(313,364,qs),
(95,364,l),
(89,366,o),
(89,373,qs),
(89,381,o),
(90,395,o),
(88,402,q),
(88,405,o),
(88,448,o),
(88,503,o),
(89,546,o),
(89,549,qs),
(90,556,o),
(85,566,o),
(83,572,q),
(91,580,o),
(77,593,o),
(81,602,q),
(81,655,ls),
(81,666,o),
(90,666,qs),
(339,666,ls),
(346,666,o),
(359,662,o),
(366,666,q),
(370,670,o),
(385,669,o),
(392,669,q),
(392,669,o),
(391,622,o),
(391,551,o),
(390,474,o),
(389,413,o),
(389,400,qs),
(389,376,ls),
(389,362,o),
(375,362,qs),
(363,362,o)
);
},
{
closed = 1;
nodes = (
(253,486,o),
(260,495,qs),
(266,503,o),
(266,511,qs),
(266,519,o),
(255,538,o),
(248,539,qs),
(238,541,o),
(206,538,o),
(206,523,qs),
(206,512,o),
(192,502,o),
(200,494,qs),
(214,480,ls),
(225,470,o)
);
},
{
closed = 1;
nodes = (
(221,506,o),
(225,508,o),
(225,512,qs),
(225,516,o),
(233,517,o),
(236,516,qs),
(241,514,o),
(241,508,qs),
(241,505,o),
(239,504,q),
(238,502,o),
(230,497,o),
(227,500,qs),
(223,504,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 93 values pushed */
42 1 6 2 101 98 36 3 9 6 141 33 2 5 9 59 1 0 5 4 76 13 0 2 0 73 0 9 6 5 6 9 5 128 8 10 2 5 1 1 0 5 0 101 7 1 6 6 4 97 0 4 4 37 77 7 1 6 6 2 97 3 1 2 2 39 6 78 80 79 145 143 115 113 96 93 90 87 79 120 80 120 53 51 48 47 46 44 118 24 11 8 24 
CALL[ ]	/* CallFunction */";
};
width = 474;
}
);
note = nine;
unicode = 57;
},
{
glyphname = zero.zero;
layers = (
{
layerId = m01;
shapes = (
{
ref = zero;
}
);
width = 474;
}
);
note = zero.zero;
},
{
glyphname = zero.tf;
layers = (
{
layerId = m01;
shapes = (
{
ref = zero;
}
);
width = 474;
}
);
note = zero.tf;
},
{
glyphname = one.tf;
layers = (
{
layerId = m01;
shapes = (
{
ref = one;
}
);
width = 474;
}
);
note = one.tf;
},
{
glyphname = two.tf;
layers = (
{
layerId = m01;
shapes = (
{
ref = two;
}
);
width = 474;
}
);
note = two.tf;
},
{
glyphname = three.tf;
layers = (
{
layerId = m01;
shapes = (
{
ref = three;
}
);
width = 474;
}
);
note = three.tf;
},
{
glyphname = four.tf;
layers = (
{
layerId = m01;
shapes = (
{
ref = four;
}
);
width = 474;
}
);
note = four.tf;
},
{
glyphname = five.tf;
layers = (
{
layerId = m01;
shapes = (
{
ref = five;
}
);
width = 474;
}
);
note = five.tf;
},
{
glyphname = six.tf;
layers = (
{
layerId = m01;
shapes = (
{
ref = six;
}
);
width = 474;
}
);
note = six.tf;
},
{
glyphname = seven.tf;
layers = (
{
layerId = m01;
shapes = (
{
ref = seven;
}
);
width = 474;
}
);
note = seven.tf;
},
{
glyphname = eight.tf;
layers = (
{
layerId = m01;
shapes = (
{
ref = eight;
}
);
width = 474;
}
);
note = eight.tf;
},
{
glyphname = nine.tf;
layers = (
{
layerId = m01;
shapes = (
{
ref = nine;
}
);
width = 474;
}
);
note = nine.tf;
},
{
glyphname = zero.dnom;
layers = (
{
layerId = m01;
shapes = (
{
ref = zero;
}
);
width = 474;
}
);
note = zero.dnom;
},
{
glyphname = one.dnom;
layers = (
{
layerId = m01;
shapes = (
{
ref = one;
}
);
width = 474;
}
);
note = one.dnom;
},
{
glyphname = two.dnom;
layers = (
{
layerId = m01;
shapes = (
{
ref = two;
}
);
width = 474;
}
);
note = two.dnom;
},
{
glyphname = three.dnom;
layers = (
{
layerId = m01;
shapes = (
{
ref = three;
}
);
width = 474;
}
);
note = three.dnom;
},
{
glyphname = four.dnom;
layers = (
{
layerId = m01;
shapes = (
{
ref = four;
}
);
width = 474;
}
);
note = four.dnom;
},
{
glyphname = five.dnom;
layers = (
{
layerId = m01;
shapes = (
{
ref = five;
}
);
width = 474;
}
);
note = five.dnom;
},
{
glyphname = six.dnom;
layers = (
{
layerId = m01;
shapes = (
{
ref = six;
}
);
width = 474;
}
);
note = six.dnom;
},
{
glyphname = seven.dnom;
layers = (
{
layerId = m01;
shapes = (
{
ref = seven;
}
);
width = 474;
}
);
note = seven.dnom;
},
{
glyphname = eight.dnom;
layers = (
{
layerId = m01;
shapes = (
{
ref = eight;
}
);
width = 474;
}
);
note = eight.dnom;
},
{
glyphname = nine.dnom;
layers = (
{
layerId = m01;
shapes = (
{
ref = nine;
}
);
width = 474;
}
);
note = nine.dnom;
},
{
glyphname = zero.numr;
layers = (
{
layerId = m01;
shapes = (
{
ref = zero;
}
);
width = 474;
}
);
note = zero.numr;
},
{
glyphname = one.numr;
layers = (
{
layerId = m01;
shapes = (
{
ref = one;
}
);
width = 474;
}
);
note = one.numr;
},
{
glyphname = two.numr;
layers = (
{
layerId = m01;
shapes = (
{
ref = two;
}
);
width = 474;
}
);
note = two.numr;
},
{
glyphname = three.numr;
layers = (
{
layerId = m01;
shapes = (
{
ref = three;
}
);
width = 474;
}
);
note = three.numr;
},
{
glyphname = four.numr;
layers = (
{
layerId = m01;
shapes = (
{
ref = four;
}
);
width = 474;
}
);
note = four.numr;
},
{
glyphname = five.numr;
layers = (
{
layerId = m01;
shapes = (
{
ref = five;
}
);
width = 474;
}
);
note = five.numr;
},
{
glyphname = six.numr;
layers = (
{
layerId = m01;
shapes = (
{
ref = six;
}
);
width = 474;
}
);
note = six.numr;
},
{
glyphname = seven.numr;
layers = (
{
layerId = m01;
shapes = (
{
ref = seven;
}
);
width = 474;
}
);
note = seven.numr;
},
{
glyphname = eight.numr;
layers = (
{
layerId = m01;
shapes = (
{
ref = eight;
}
);
width = 474;
}
);
note = eight.numr;
},
{
glyphname = nine.numr;
layers = (
{
layerId = m01;
shapes = (
{
ref = nine;
}
);
width = 474;
}
);
note = nine.numr;
},
{
glyphname = fraction;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(89,47,o),
(112,74,o),
(117,94,q),
(131,102,o),
(145,129,o),
(150,142,q),
(164,152,o),
(179,177,o),
(183,192,q),
(215,238,o),
(276,328,o),
(307,372,qs),
(313,381,o),
(331,394,o),
(334,405,qs),
(338,424,o),
(357,435,o),
(364,447,qs),
(387,482,o),
(420,528,o),
(447,568,o),
(480,614,o),
(503,648,q),
(515,662,o),
(517,683,qs),
(518,694,o),
(512,700,q),
(508,698,o),
(488,688,o),
(473,663,qs),
(469,657,o),
(449,624,o),
(445,619,qs),
(429,594,o),
(409,566,o),
(394,545,o),
(374,517,o),
(357,492,qs),
(347,479,o),
(325,449,o),
(318,434,qs),
(309,416,o),
(282,400,o),
(277,380,q),
(268,367,o),
(250,352,o),
(242,339,qs),
(237,329,o),
(212,294,o),
(189,258,o),
(187,246,q),
(178,237,o),
(166,219,o),
(161,205,qs),
(159,198,o),
(145,179,o),
(139,171,qs),
(129,160,o),
(100,125,o),
(72,89,o),
(63,75,q),
(50,49,o),
(41,24,o),
(40,15,qs),
(39,4,o),
(47,4,o),
(54,5,q),
(64,22,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 0 0 38 0 78 32 1 8 23 
CALL[ ]	/* CallFunction */";
};
width = 557;
}
);
note = fraction;
unicode = 8260;
},
{
glyphname = onehalf;
layers = (
{
layerId = m01;
shapes = (
{
ref = fraction;
},
{
pos = (6,-52);
ref = uni00B9;
},
{
pos = (326,-444);
ref = uni00B2;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 3 
PUSHW[ ]	/* 1 value pushed */
-52 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-444 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 576;
}
);
note = onehalf;
unicode = 189;
},
{
glyphname = uni2153;
layers = (
{
layerId = m01;
shapes = (
{
ref = fraction;
},
{
pos = (293,-424);
ref = uni00B3;
},
{
pos = (6,-52);
ref = uni00B9;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-424 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
2 3 
PUSHW[ ]	/* 1 value pushed */
-52 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 563;
}
);
note = uni2153;
unicode = 8531;
},
{
glyphname = uni2154;
layers = (
{
layerId = m01;
shapes = (
{
ref = fraction;
},
{
pos = (284,-424);
ref = uni00B3;
},
{
pos = (0,-76);
ref = uni00B2;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-424 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
2 1 
PUSHW[ ]	/* 1 value pushed */
-76 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 557;
}
);
note = uni2154;
unicode = 8532;
},
{
glyphname = onequarter;
layers = (
{
layerId = m01;
shapes = (
{
ref = fraction;
},
{
pos = (6,-49);
ref = uni00B9;
},
{
pos = (296,-422);
ref = uni2074;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 3 
PUSHW[ ]	/* 1 value pushed */
-49 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
4 3 
PUSHW[ ]	/* 1 value pushed */
-422 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 631;
}
);
note = onequarter;
unicode = 188;
},
{
glyphname = threequarters;
layers = (
{
layerId = m01;
shapes = (
{
ref = fraction;
},
{
pos = (12,-41);
ref = uni00B3;
},
{
pos = (211,-402);
ref = uni2074;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-41 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
2 3 
PUSHW[ ]	/* 1 value pushed */
-402 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 557;
}
);
note = threequarters;
unicode = 190;
},
{
glyphname = oneeighth;
layers = (
{
layerId = m01;
shapes = (
{
ref = fraction;
},
{
pos = (6,-44);
ref = uni00B9;
},
{
pos = (322,-449);
ref = uni2078;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 3 
PUSHW[ ]	/* 1 value pushed */
-44 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
4 3 
PUSHW[ ]	/* 1 value pushed */
-449 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 569;
}
);
note = oneeighth;
unicode = 8539;
},
{
glyphname = threeeighths;
layers = (
{
layerId = m01;
shapes = (
{
ref = fraction;
},
{
pos = (331,-450);
ref = uni2078;
},
{
pos = (0,-47);
ref = uni00B3;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 3 
PUSHW[ ]	/* 1 value pushed */
-450 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-47 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 578;
}
);
note = threeeighths;
unicode = 8540;
},
{
glyphname = fiveeighths;
layers = (
{
layerId = m01;
shapes = (
{
ref = fraction;
},
{
pos = (329,-450);
ref = uni2078;
},
{
pos = (0,-50);
ref = uni2075;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 3 
PUSHW[ ]	/* 1 value pushed */
-450 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-50 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 576;
}
);
note = fiveeighths;
unicode = 8541;
},
{
glyphname = seveneighths;
layers = (
{
layerId = m01;
shapes = (
{
ref = fraction;
},
{
pos = (310,-450);
ref = uni2078;
},
{
pos = (49,-47);
ref = uni2077;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 3 
PUSHW[ ]	/* 1 value pushed */
-450 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
4 1 
PUSHW[ ]	/* 1 value pushed */
-47 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 557;
}
);
note = seveneighths;
unicode = 8542;
},
{
glyphname = uni2080;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-601);
ref = uni2070;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 2 
PUSHW[ ]	/* 1 value pushed */
-601 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 268;
}
);
note = uni2080;
unicode = 8320;
},
{
glyphname = uni2081;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-600);
ref = uni00B9;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 3 
PUSHW[ ]	/* 1 value pushed */
-600 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 246;
}
);
note = uni2081;
unicode = 8321;
},
{
glyphname = uni2082;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-602);
ref = uni00B2;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHW[ ]	/* 1 value pushed */
-602 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 250;
}
);
note = uni2082;
unicode = 8322;
},
{
glyphname = uni2083;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-601);
ref = uni00B3;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHW[ ]	/* 1 value pushed */
-601 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 270;
}
);
note = uni2083;
unicode = 8323;
},
{
glyphname = uni2084;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-592);
ref = uni2074;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 3 
PUSHW[ ]	/* 1 value pushed */
-592 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 335;
}
);
note = uni2084;
unicode = 8324;
},
{
glyphname = uni2085;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-602);
ref = uni2075;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHW[ ]	/* 1 value pushed */
-602 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 238;
}
);
note = uni2085;
unicode = 8325;
},
{
glyphname = uni2086;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-601);
ref = uni2076;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 2 
PUSHW[ ]	/* 1 value pushed */
-601 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 246;
}
);
note = uni2086;
unicode = 8326;
},
{
glyphname = uni2087;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-592);
ref = uni2077;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHW[ ]	/* 1 value pushed */
-592 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 241;
}
);
note = uni2087;
unicode = 8327;
},
{
glyphname = uni2088;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-591);
ref = uni2078;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 3 
PUSHW[ ]	/* 1 value pushed */
-591 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 247;
}
);
note = uni2088;
unicode = 8328;
},
{
glyphname = uni2089;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-594);
ref = uni2079;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 2 
PUSHW[ ]	/* 1 value pushed */
-594 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 252;
}
);
note = uni2089;
unicode = 8329;
},
{
glyphname = uni2070;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(86,447,o),
(109,447,qs),
(115,447,o),
(146,446,o),
(182,445,o),
(213,445,o),
(219,446,qs),
(224,446,o),
(237,459,o),
(237,464,qs),
(237,467,o),
(238,509,o),
(238,569,o),
(237,631,o),
(236,677,o),
(235,683,q),
(237,699,o),
(237,731,o),
(236,738,qs),
(236,743,o),
(223,756,o),
(218,756,qs),
(212,757,o),
(181,757,o),
(145,756,o),
(114,755,o),
(108,755,qs),
(66,755,o),
(29,758,o),
(30,735,qs),
(34,672,l),
(31,467,ls),
(31,456,o),
(56,438,o),
(57,439,qs),
(65,444,o)
);
},
{
closed = 1;
nodes = (
(168,473,o),
(147,476,o),
(145,477,qs),
(137,480,o),
(124,477,o),
(121,477,qs),
(103,475,o),
(88,474,o),
(79,475,o),
(71,475,q),
(68,480,o),
(64,492,o),
(65,498,qs),
(65,501,o),
(66,543,o),
(66,601,o),
(65,658,o),
(65,697,o),
(64,698,q),
(64,704,ls),
(64,717,o),
(70,727,q),
(78,728,o),
(107,727,o),
(135,727,o),
(142,727,qs),
(150,727,o),
(187,730,o),
(195,728,q),
(201,728,o),
(214,711,o),
(208,697,qs),
(205,691,o),
(205,684,qs),
(204,676,ls),
(204,675,o),
(204,639,o),
(205,588,o),
(207,536,o),
(209,499,o),
(210,497,qs),
(215,489,o),
(202,474,o),
(196,474,qs),
(191,473,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
19 1 3 2 1 76 0 1 1 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 2 2 0 97 0 0 0 61 77 4 1 3 3 64 77 0 1 1 68 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 2 2 0 97 0 0 0 61 77 4 1 3 3 1 97 0 1 1 68 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
80 79 73 72 57 53 34 29 87 5 10 23 
CALL[ ]	/* CallFunction */";
};
width = 268;
}
);
note = uni2070;
unicode = 8304;
},
{
glyphname = uni00B9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(192,451,o),
(197,451,o),
(204,458,qs),
(206,460,o),
(206,477,o),
(201,477,qs),
(197,477,o),
(168,477,o),
(149,478,q),
(149,482,o),
(149,490,o),
(149,493,qs),
(149,524,o),
(150,670,o),
(150,760,q),
(133,758,ls),
(124,758,o),
(117,733,o),
(118,706,o),
(120,702,qs),
(121,700,o),
(121,674,o),
(119,669,qs),
(117,665,o),
(118,653,o),
(119,649,qs),
(121,642,o),
(121,626,o),
(119,620,qs),
(116,611,o),
(116,575,o),
(119,566,qs),
(121,559,o),
(119,530,o),
(117,525,q),
(118,491,l),
(119,489,o),
(116,482,o),
(116,477,q),
(94,477,o),
(59,475,o),
(57,472,qs),
(56,471,o),
(51,462,o),
(51,460,qs),
(51,455,o),
(74,451,o),
(92,447,q),
(181,447,l)
);
},
{
closed = 1;
nodes = (
(111,676,q),
(115,685,o),
(106,694,q),
(102,700,o),
(80,711,o),
(59,716,o),
(53,710,q),
(49,704,o),
(42,691,o),
(40,683,q),
(40,679,o),
(49,667,o),
(50,661,qs),
(53,647,o),
(85,646,o),
(103,659,q),
(109,665,o)
);
},
{
closed = 1;
nodes = (
(71,672,o),
(70,676,qs),
(69,678,o),
(67,681,o),
(67,682,qs),
(67,684,o),
(69,688,o),
(70,689,qs),
(72,691,o),
(84,687,o),
(85,685,q),
(87,683,o),
(86,680,q),
(86,677,o),
(84,675,qs),
(80,672,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
13 1 0 4 1 76 33 1 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 1 0 1 4 0 128 0 1 1 61 77 2 1 0 0 64 77 5 1 3 3 62 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 4 1 0 1 4 0 128 0 1 1 61 77 2 1 0 0 3 95 5 1 3 3 62 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 51 50 0 48 0 48 43 40 32 31 24 6 10 23 
CALL[ ]	/* CallFunction */";
};
width = 246;
}
);
note = uni00B9;
unicode = 185;
},
{
glyphname = uni00B2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(194,451,o),
(206,454,qs),
(210,455,o),
(210,466,o),
(205,467,qs),
(194,469,o),
(178,475,o),
(165,475,qs),
(159,475,o),
(143,474,o),
(138,474,qs),
(132,474,o),
(116,479,o),
(111,474,q),
(109,473,o),
(95,479,o),
(88,474,q),
(88,474,o),
(82,474,o),
(77,473,q),
(77,588,l),
(82,589,o),
(87,589,qs),
(93,590,o),
(108,593,o),
(113,592,qs),
(116,592,o),
(123,593,o),
(125,591,qs),
(131,587,o),
(150,588,o),
(178,589,qs),
(184,589,o),
(203,604,o),
(204,610,qs),
(204,615,o),
(202,617,qs),
(196,623,o),
(196,634,qs),
(196,663,o),
(198,712,o),
(198,720,q),
(198,720,l),
(198,757,l),
(197,759,o),
(195,761,o),
(193,762,qs),
(190,764,o),
(184,763,o),
(181,763,qs),
(64,763,ls),
(51,763,o),
(36,747,o),
(45,730,q),
(45,730,o),
(47,730,qs),
(168,730,l),
(168,730,l),
(169,722,o),
(172,687,o),
(168,681,qs),
(164,674,o),
(170,674,o),
(170,657,qs),
(170,647,o),
(173,631,o),
(162,622,q),
(159,618,o),
(154,620,o),
(152,621,qs),
(148,623,o),
(130,621,o),
(126,619,q),
(121,615,o),
(101,618,o),
(81,617,qs),
(73,617,o),
(59,623,o),
(45,614,q),
(43,611,o),
(41,599,o),
(43,594,q),
(44,454,l),
(45,453,o),
(48,450,o),
(49,449,qs),
(51,448,o),
(58,449,o),
(61,449,q),
(72,445,o),
(95,451,o),
(107,451,qs),
(115,451,o),
(133,452,o),
(140,449,qs),
(151,446,o),
(159,446,qs),
(171,446,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
36 1 1 2 62 1 4 1 77 1 0 5 8 1 6 0 4 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
36 1 1 2 62 1 4 1 77 1 0 5 3 76 8 1 0 73 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
36 1 1 2 62 1 4 1 77 1 0 5 8 1 6 0 4 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 4 1 5 1 4 5 128 0 2 2 3 95 0 3 3 61 77 0 5 5 64 77 0 1 1 0 97 0 0 0 62 77 7 1 6 6 68 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 4 1 5 1 4 5 128 0 2 2 3 95 0 3 3 61 77 0 1 1 0 97 7 6 2 0 0 62 77 0 5 5 64 77 7 6 2 0 0 62 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 4 1 5 1 4 5 128 0 2 2 3 95 0 3 3 61 77 0 5 5 64 77 0 1 1 0 97 0 0 0 62 77 7 1 6 6 68 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 4 1 5 1 4 5 128 0 2 2 3 95 0 3 3 61 77 0 1 1 0 97 0 0 0 62 77 0 5 5 6 97 7 1 6 6 68 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
0 0 0 97 0 97 90 85 67 64 47 45 41 39 46 51 8 10 24 
CALL[ ]	/* CallFunction */";
};
width = 250;
}
);
note = uni00B2;
unicode = 178;
},
{
glyphname = uni00B3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(74,619,o),
(54,620,q),
(44,613,o),
(48,591,o),
(77,593,qs),
(84,594,o),
(98,595,o),
(103,593,qs),
(120,585,o),
(147,592,o),
(178,592,q),
(183,595,o),
(189,588,o),
(193,587,qs),
(211,583,o),
(201,556,qs),
(198,548,o),
(204,537,o),
(199,527,qs),
(196,521,o),
(199,505,o),
(199,497,qs),
(199,482,l),
(60,482,ls),
(48,482,o),
(40,467,o),
(49,451,o),
(60,451,qs),
(209,451,ls),
(224,451,o),
(230,463,o),
(230,482,qs),
(230,487,o),
(229,540,o),
(229,618,o),
(228,707,o),
(228,747,qs),
(228,751,o),
(215,761,o),
(210,761,qs),
(204,762,o),
(193,761,o),
(187,761,qs),
(169,761,o),
(105,760,o),
(79,760,qs),
(59,760,o),
(37,755,o),
(41,745,q),
(47,735,o),
(72,739,o),
(84,739,qs),
(87,739,o),
(113,737,o),
(146,735,o),
(173,735,o),
(176,738,q),
(182,742,o),
(200,731,o),
(200,723,qs),
(200,713,ls),
(200,708,o),
(200,697,o),
(199,692,qs),
(198,687,o),
(200,675,o),
(200,669,qs),
(200,663,o),
(198,647,o),
(199,642,qs),
(201,635,o),
(206,621,o),
(195,617,q),
(117,617,l),
(104,624,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
14 4 2 0 1 52 1 5 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
7 1 0 1 6 5 0 114 0 6 5 1 6 5 126 2 1 1 1 3 95 0 3 3 61 77 0 5 5 4 96 0 4 4 62 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
7 1 0 1 6 1 0 6 128 0 6 5 1 6 5 126 2 1 1 1 3 95 0 3 3 61 77 0 5 5 4 96 0 4 4 62 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
73 72 68 66 51 49 47 44 33 27 23 21 20 19 16 8 10 23 
CALL[ ]	/* CallFunction */";
};
width = 270;
}
);
note = uni00B3;
unicode = 179;
},
{
glyphname = uni2074;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(295,512,o),
(277,510,qs),
(259,509,o),
(233,511,o),
(219,512,q),
(222,513,o),
(224,543,o),
(224,573,o),
(224,576,qs),
(224,585,o),
(207,589,o),
(190,577,o),
(190,561,qs),
(190,542,o),
(190,519,o),
(191,513,q),
(187,513,o),
(176,512,o),
(171,507,q),
(160,513,o),
(150,506,qs),
(147,504,o),
(122,501,o),
(94,502,o),
(78,510,o),
(84,518,qs),
(104,550,o),
(132,605,o),
(145,633,qs),
(149,642,o),
(183,707,o),
(206,747,qs),
(213,761,l),
(203,769,o),
(176,761,o),
(165,730,q),
(155,712,o),
(126,657,o),
(93,597,o),
(63,544,o),
(43,509,o),
(42,507,q),
(37,501,o),
(48,482,o),
(58,484,q),
(62,484,ls),
(67,484,o),
(85,480,o),
(125,478,o),
(162,481,q),
(172,475,o),
(191,479,o),
(201,483,q),
(206,483,o),
(240,480,o),
(277,479,o),
(287,480,q),
(295,485,o)
);
},
{
closed = 1;
nodes = (
(215,474,q),
(206,478,o),
(197,469,q),
(191,465,o),
(178,444,o),
(174,423,o),
(179,417,q),
(185,413,o),
(198,405,o),
(205,403,q),
(210,403,o),
(221,411,o),
(228,412,qs),
(242,415,o),
(244,447,o),
(231,465,qs),
(226,472,o)
);
},
{
closed = 1;
nodes = (
(217,434,o),
(213,433,q),
(212,432,o),
(209,430,o),
(207,430,qs),
(205,430,o),
(202,432,o),
(200,433,q),
(198,435,o),
(203,447,o),
(205,448,q),
(207,450,o),
(210,449,q),
(213,449,o),
(215,447,qs),
(218,443,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
38 1 3 4 7 1 0 2 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
38 1 3 4 7 1 0 3 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
38 1 3 4 7 1 0 2 2 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 2 3 0 3 2 0 128 0 4 3 0 4 89 0 3 2 0 3 89 0 3 3 0 97 1 1 0 3 0 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 4 3 0 4 89 0 3 0 0 3 89 0 3 3 0 97 2 1 2 0 3 0 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 3 0 3 2 0 128 0 4 3 0 4 89 0 3 2 0 3 89 0 3 3 0 97 1 1 0 3 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
55 54 34 33 33 22 17 5 10 25 
CALL[ ]	/* CallFunction */";
};
width = 335;
}
);
note = uni2074;
unicode = 8308;
},
{
glyphname = uni2075;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(45,483,o),
(45,483,q),
(36,466,o),
(51,450,o),
(64,450,qs),
(181,450,ls),
(184,450,o),
(190,450,o),
(193,451,q),
(195,453,o),
(197,455,o),
(198,456,q),
(198,493,l),
(198,493,l),
(198,501,o),
(196,550,o),
(196,579,qs),
(196,584,o),
(198,610,o),
(198,611,qs),
(197,617,o),
(184,624,o),
(178,624,qs),
(150,625,o),
(131,627,o),
(125,622,q),
(123,621,o),
(116,621,o),
(113,621,qs),
(108,620,o),
(93,623,o),
(87,624,qs),
(82,624,o),
(77,625,q),
(77,740,l),
(82,739,o),
(88,739,o),
(88,739,q),
(95,735,o),
(109,740,o),
(111,739,qs),
(116,735,o),
(132,739,o),
(138,739,qs),
(143,739,o),
(141,738,o),
(147,738,qs),
(160,738,o),
(176,745,o),
(187,746,qs),
(192,747,o),
(192,758,o),
(188,759,qs),
(178,762,o),
(161,766,o),
(159,767,q),
(159,767,o),
(159,767,o),
(159,767,q),
(159,767,o),
(159,767,q),
(157,766,o),
(144,765,o),
(140,764,qs),
(133,761,o),
(115,762,o),
(107,762,qs),
(95,762,o),
(72,769,o),
(61,764,q),
(58,764,o),
(51,766,o),
(49,764,qs),
(48,763,o),
(45,760,o),
(44,759,q),
(43,619,l),
(41,617,o),
(43,603,o),
(45,599,q),
(59,590,o),
(73,596,o),
(81,596,qs),
(114,595,l),
(119,599,o),
(132,595,o),
(137,591,q),
(141,589,o),
(148,587,o),
(152,589,q),
(154,591,o),
(159,595,o),
(162,591,q),
(173,582,o),
(170,567,o),
(170,556,qs),
(170,545,o),
(164,522,o),
(168,515,qs),
(172,510,o),
(169,489,o),
(168,483,q),
(168,483,l),
(47,483,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
68 62 59 27 4 4 2 69 1 5 4 10 1 0 1 91 1 6 7 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 4 2 5 2 4 5 128 0 5 1 2 5 1 126 0 0 1 7 1 0 7 128 0 1 1 2 97 3 1 2 2 61 77 8 1 7 7 6 96 0 6 6 62 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 4 2 5 2 4 5 128 0 5 1 7 5 112 0 0 1 7 1 0 7 128 0 1 1 2 97 3 1 2 2 61 77 8 1 7 7 6 96 0 6 6 62 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 4 2 5 2 4 5 128 0 5 1 2 5 1 126 0 0 1 7 1 0 7 128 0 1 1 2 97 3 1 2 2 61 77 8 1 7 7 6 96 0 6 6 62 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
0 0 0 103 0 101 99 96 80 79 56 55 51 42 20 45 9 10 26 
CALL[ ]	/* CallFunction */";
};
width = 238;
}
);
note = uni2075;
unicode = 8309;
},
{
glyphname = uni2076;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(182,451,o),
(203,451,o),
(204,464,q),
(206,465,o),
(206,484,qs),
(206,486,o),
(205,504,o),
(204,529,q),
(201,532,o),
(200,554,o),
(202,576,o),
(203,578,qs),
(206,583,o),
(203,590,o),
(203,591,qs),
(203,599,o),
(202,609,o),
(194,613,q),
(79,612,l),
(199,758,l),
(181,769,l),
(178,769,o),
(173,768,o),
(170,767,qs),
(163,766,o),
(160,755,o),
(152,746,qs),
(149,743,o),
(141,740,o),
(140,733,qs),
(140,724,o),
(129,720,qs),
(125,719,o),
(123,710,o),
(119,708,qs),
(115,707,o),
(111,699,o),
(108,696,qs),
(83,666,o),
(40,612,o),
(40,607,qs),
(40,464,l),
(39,456,o),
(63,450,o),
(73,450,qs),
(171,450,l)
);
},
{
closed = 1;
nodes = (
(151,473,o),
(147,477,qs),
(144,479,o),
(139,477,o),
(137,477,qs),
(130,477,o),
(117,483,o),
(110,477,q),
(108,476,o),
(92,481,o),
(90,479,q),
(84,476,o),
(79,481,o),
(74,481,q),
(74,579,l),
(85,578,l),
(104,581,l),
(171,579,l),
(172,479,l),
(167,478,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
4 1 3 1 54 51 50 49 4 4 3 3 1 0 4 3 76 25 24 15 3 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 3 4 1 3 103 0 4 4 64 77 2 5 2 0 0 62 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 3 4 1 3 103 0 4 4 0 97 2 5 2 0 0 62 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
1 0 61 59 48 47 44 43 27 26 0 45 1 45 6 10 22 
CALL[ ]	/* CallFunction */";
};
width = 246;
}
);
note = uni2076;
unicode = 8310;
},
{
glyphname = uni2077;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(98,443,o),
(116,443,o),
(118,446,qs),
(122,450,o),
(121,474,o),
(132,480,q),
(201,748,l),
(200,750,o),
(191,761,o),
(189,762,qs),
(186,764,o),
(180,763,o),
(177,763,qs),
(152,763,l),
(136,760,l),
(126,764,l),
(110,760,l),
(62,763,ls),
(49,764,o),
(41,747,o),
(33,742,qs),
(32,741,o),
(29,732,o),
(31,730,q),
(31,730,o),
(33,730,qs),
(160,730,l),
(87,459,ls),
(84,450,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
13 1 0 1 1 76 12 1 1 74 0 0 0 1 95 2 1 1 1 61 77 0 3 3 68 3 78 27 19 24 17 4 10 26 
CALL[ ]	/* CallFunction */";
};
width = 241;
}
);
note = uni2077;
unicode = 8311;
},
{
glyphname = uni2078;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(126,450,l),
(171,450,ls),
(182,450,o),
(203,451,o),
(204,464,q),
(205,465,o),
(206,503,o),
(207,564,o),
(206,632,o),
(206,693,o),
(205,733,o),
(205,735,qs),
(205,737,o),
(203,739,q),
(203,750,o),
(186,760,o),
(172,760,qs),
(56,760,ls),
(53,760,o),
(47,760,o),
(45,758,qs),
(41,752,o),
(40,749,q),
(40,464,l),
(39,456,o),
(63,450,o),
(73,450,qs),
(113,453,l)
);
},
{
closed = 1;
nodes = (
(167,727,ls),
(168,727,o),
(174,703,o),
(168,685,qs),
(167,682,o),
(166,675,o),
(168,673,qs),
(171,669,o),
(168,662,o),
(168,658,qs),
(169,646,o),
(176,635,o),
(169,621,q),
(74,620,l),
(74,727,l)
);
},
{
closed = 1;
nodes = (
(142,488,o),
(125,483,qs),
(120,482,o),
(113,491,o),
(104,484,qs),
(100,481,o),
(94,485,o),
(91,485,qs),
(86,485,o),
(78,482,o),
(74,485,q),
(74,587,l),
(171,587,l),
(172,483,l),
(162,482,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
4 1 4 1 32 1 3 4 27 3 2 0 6 3 76 43 1 6 1 75 0 6 5 0 5 6 0 128 0 3 0 5 6 3 5 103 0 4 4 1 95 0 1 1 61 77 2 1 0 0 62 0 78 33 18 43 18 60 55 16 7 10 29 
CALL[ ]	/* CallFunction */";
};
width = 247;
}
);
note = uni2078;
unicode = 8312;
},
{
glyphname = uni2079;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(209,448,o),
(212,463,o),
(211,466,qs),
(204,492,o),
(210,542,q),
(210,744,l),
(212,752,o),
(188,758,o),
(177,758,qs),
(79,758,l),
(69,757,o),
(47,757,o),
(46,744,q),
(45,744,o),
(40,732,o),
(44,726,qs),
(47,722,o),
(48,713,o),
(48,709,qs),
(48,708,o),
(46,697,o),
(44,695,qs),
(39,690,o),
(43,665,o),
(45,660,qs),
(55,638,o),
(47,619,o),
(47,617,qs),
(47,609,o),
(48,599,o),
(56,595,q),
(176,596,l),
(176,481,l),
(96,481,ls),
(79,481,o),
(45,478,o),
(45,473,qs),
(45,471,o),
(47,469,q),
(55,465,o),
(65,448,o),
(78,448,qs),
(194,448,ls)
);
},
{
closed = 1;
nodes = (
(99,726,o),
(160,723,o),
(176,723,q),
(176,629,l),
(79,629,l),
(78,725,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
36 1 6 3 37 1 1 2 39 1 0 1 3 76 0 5 0 2 1 5 2 104 0 6 6 3 97 4 1 3 3 61 77 0 1 1 0 95 7 1 0 0 62 0 78 1 0 48 45 44 43 34 32 31 30 11 10 9 7 0 42 1 41 8 10 22 
CALL[ ]	/* CallFunction */";
};
width = 252;
}
);
note = uni2079;
unicode = 8313;
},
{
glyphname = space;
layers = (
{
layerId = m01;
width = 200;
}
);
note = space;
unicode = 32;
},
{
glyphname = uni00A0;
layers = (
{
layerId = m01;
width = 200;
}
);
note = uni00A0;
unicode = 160;
},
{
glyphname = uni27E8;
layers = (
{
layerId = m01;
shapes = (
{
ref = parenleft;
}
);
width = 354;
}
);
note = uni27E8;
unicode = 10216;
},
{
glyphname = uni27E9;
layers = (
{
layerId = m01;
shapes = (
{
ref = parenright;
}
);
width = 354;
}
);
note = uni27E9;
unicode = 10217;
},
{
glyphname = period;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(101,19,o),
(106,29,qs),
(111,37,o),
(101,45,q),
(97,47,o),
(86,52,o),
(82,56,qs),
(77,60,o),
(61,54,o),
(54,49,q),
(43,44,o),
(40,21,o),
(42,16,qs),
(48,1,o),
(73,1,qs),
(87,1,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
2 1 0 74 1 1 0 0 38 0 78 1 0 0 15 1 15 2 8 22 
CALL[ ]	/* CallFunction */";
};
width = 148;
}
);
note = period;
unicode = 46;
},
{
glyphname = comma;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-5);
ref = quotesinglbase;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHW[ ]	/* 1 value pushed */
-5 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 135;
}
);
note = comma;
unicode = 44;
},
{
glyphname = colon;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(175,325,o),
(178,333,q),
(177,339,o),
(178,351,o),
(178,357,qs),
(178,411,ls),
(178,418,o),
(180,431,o),
(183,438,qs),
(185,441,o),
(181,448,o),
(177,448,qs),
(48,448,l),
(41,446,o),
(40,437,o),
(41,433,q),
(47,425,o),
(56,423,o),
(63,415,qs),
(66,411,o),
(70,402,o),
(74,399,qs),
(93,382,o),
(123,341,o),
(141,323,qs),
(147,317,ls),
(150,314,o),
(154,310,o),
(155,306,q),
(160,299,o),
(169,290,o),
(173,299,q),
(174,307,o)
);
},
{
closed = 1;
nodes = (
(126,377,o),
(100,407,o),
(90,417,qs),
(88,419,o),
(91,422,o),
(93,422,qs),
(107,423,o),
(115,423,o),
(117,424,qs),
(122,427,o),
(141,424,o),
(145,422,q),
(151,421,o),
(153,418,o),
(153,412,qs),
(153,356,ls),
(153,353,o),
(151,351,q),
(148,353,o)
);
},
{
closed = 1;
nodes = (
(84,1,o),
(125,2,o),
(165,3,o),
(193,5,o),
(193,7,qs),
(193,13,o),
(192,15,qs),
(188,23,o),
(177,26,o),
(170,33,qs),
(167,37,o),
(163,46,o),
(159,50,qs),
(140,67,o),
(110,107,o),
(92,125,qs),
(79,138,o),
(78,142,q),
(75,147,o),
(62,160,o),
(60,149,qs),
(59,141,o),
(58,124,o),
(55,116,q),
(56,110,o),
(55,98,o),
(55,92,qs),
(56,86,o),
(56,52,o),
(54,18,o),
(50,11,qs),
(48,7,o),
(52,1,o),
(56,1,q),
(56,1,o)
);
},
{
closed = 1;
nodes = (
(90,27,o),
(88,28,qs),
(82,30,o),
(80,32,o),
(80,37,qs),
(80,92,ls),
(80,103,o),
(87,94,qs),
(141,34,l),
(143,29,ls),
(144,27,o),
(117,27,o),
(115,25,q),
(110,23,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
16 1 1 0 95 36 2 3 1 81 1 2 3 3 76 0 1 1 0 95 0 0 0 40 77 0 3 3 2 97 0 2 2 38 2 78 89 88 86 83 45 43 20 19 4 8 22 
CALL[ ]	/* CallFunction */";
};
width = 233;
}
);
note = colon;
unicode = 58;
},
{
glyphname = semicolon;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(135,326,o),
(138,334,q),
(137,340,o),
(138,352,o),
(138,358,qs),
(138,364,o),
(139,399,o),
(141,435,o),
(143,439,qs),
(145,442,o),
(141,449,o),
(137,449,qs),
(8,449,l),
(1,447,o),
(0,438,o),
(1,434,q),
(7,426,o),
(16,424,o),
(23,416,qs),
(26,412,o),
(30,403,o),
(34,400,qs),
(53,383,o),
(83,342,o),
(101,324,qs),
(107,318,ls),
(110,315,o),
(114,311,o),
(115,307,q),
(120,300,o),
(129,291,o),
(133,300,q),
(134,308,o)
);
},
{
closed = 1;
nodes = (
(73,398,o),
(60,414,qs),
(56,419,o),
(63,419,qs),
(68,419,o),
(77,420,o),
(79,421,qs),
(84,424,o),
(97,421,o),
(101,419,q),
(107,418,o),
(109,416,o),
(109,409,qs),
(109,384,o),
(112,368,o),
(112,362,qs),
(112,359,o),
(110,357,q),
(106,360,o)
);
},
{
closed = 1;
nodes = (
(73,-97,o),
(75,-93,q),
(79,-93,o),
(94,-68,o),
(96,-66,q),
(104,-51,o),
(106,-36,o),
(112,-21,qs),
(117,-5,o),
(129,7,qs),
(141,19,o),
(143,45,o),
(143,62,qs),
(143,73,o),
(135,83,o),
(130,78,qs),
(125,73,o),
(107,57,o),
(105,49,qs),
(103,38,o),
(93,15,o),
(88,3,q),
(82,-19,o),
(64,-55,o),
(53,-91,q),
(56,-95,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
16 1 1 0 1 76 38 1 1 73 0 1 1 0 95 0 0 0 40 1 78 48 46 20 19 2 8 22 
CALL[ ]	/* CallFunction */";
};
width = 184;
}
);
note = semicolon;
unicode = 59;
},
{
glyphname = ellipsis;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-10,0);
ref = period;
},
{
pos = (165,0);
ref = period;
},
{
pos = (346,0);
ref = period;
}
);
width = 484;
}
);
note = ellipsis;
unicode = 8230;
},
{
glyphname = exclam;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(153,195,o),
(160,201,q),
(165,209,o),
(176,241,o),
(185,273,o),
(187,281,qs),
(195,307,o),
(214,385,o),
(232,463,o),
(244,517,o),
(244,519,q),
(252,553,o),
(258,594,o),
(265,635,o),
(275,668,qs),
(276,672,o),
(276,677,qs),
(276,695,o),
(232,703,o),
(194,703,qs),
(171,703,ls),
(165,703,o),
(153,702,o),
(148,697,qs),
(144,693,o),
(140,695,q),
(135,700,o),
(122,702,o),
(114,702,qs),
(108,702,o),
(79,703,o),
(76,701,q),
(62,701,l),
(53,698,o),
(52,706,o),
(41,701,q),
(33,699,o),
(30,689,o),
(30,688,q),
(44,638,o),
(46,578,o),
(51,572,qs),
(55,568,o),
(54,557,o),
(55,551,qs),
(56,545,o),
(52,525,o),
(62,515,q),
(62,515,o),
(71,493,o),
(69,479,qs),
(67,465,o),
(70,455,o),
(74,451,o),
(75,445,qs),
(87,384,o),
(112,270,o),
(134,197,o),
(141,195,qs),
(142,195,o)
);
},
{
closed = 1;
nodes = (
(130,340,o),
(114,399,o),
(103,447,o),
(103,457,qs),
(103,474,o),
(95,492,o),
(98,502,qs),
(100,509,o),
(92,525,o),
(91,526,qs),
(86,534,o),
(89,546,o),
(92,559,o),
(85,566,qs),
(77,576,o),
(73,608,o),
(74,638,o),
(72,645,qs),
(71,651,o),
(64,662,o),
(68,668,q),
(109,669,o),
(200,671,o),
(241,672,q),
(190,417,ls),
(186,397,o),
(171,340,o),
(155,284,o),
(149,263,q),
(145,283,o)
);
},
{
closed = 1;
nodes = (
(189,22,o),
(202,43,o),
(200,47,qs),
(193,61,o),
(177,85,o),
(161,92,qs),
(148,97,o),
(136,86,o),
(127,85,qs),
(116,84,o),
(89,57,o),
(93,49,qs),
(97,39,o),
(106,16,o),
(113,7,q),
(118,3,o),
(167,3,qs),
(172,3,o)
);
},
{
closed = 1;
nodes = (
(134,33,q),
(127,38,o),
(125,47,q),
(123,50,o),
(134,60,o),
(138,62,q),
(143,62,o),
(147,66,o),
(153,63,qs),
(158,60,o),
(163,52,o),
(167,46,qs),
(169,44,o),
(157,29,o),
(154,29,qs),
(137,29,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
42 33 20 3 3 0 104 1 4 2 2 76 0 2 3 4 3 2 4 128 0 3 3 0 97 1 1 0 0 37 77 5 1 4 4 38 4 78 91 90 90 107 91 107 68 65 59 58 40 37 31 26 6 8 22 
CALL[ ]	/* CallFunction */";
};
width = 306;
}
);
note = exclam;
unicode = 33;
},
{
glyphname = exclamdown;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(112,274,o),
(87,161,o),
(75,99,qs),
(74,93,o),
(70,89,o),
(67,80,o),
(69,65,qs),
(71,52,o),
(62,29,o),
(62,29,q),
(52,19,o),
(56,-1,o),
(55,-7,qs),
(54,-13,o),
(55,-23,o),
(51,-28,qs),
(46,-34,o),
(44,-94,o),
(30,-144,q),
(30,-145,o),
(33,-155,o),
(41,-157,qs),
(52,-161,o),
(53,-154,o),
(62,-157,q),
(76,-157,l),
(79,-158,o),
(108,-158,o),
(114,-158,qs),
(122,-158,o),
(135,-155,o),
(140,-151,q),
(144,-149,o),
(148,-153,qs),
(153,-157,o),
(165,-159,o),
(171,-159,qs),
(194,-159,ls),
(232,-159,o),
(276,-151,o),
(276,-133,qs),
(276,-128,o),
(275,-124,qs),
(265,-91,o),
(258,-50,o),
(252,-8,o),
(244,25,q),
(244,27,o),
(232,81,o),
(214,159,o),
(195,237,o),
(187,263,qs),
(185,271,o),
(176,303,o),
(165,335,o),
(160,343,q),
(153,349,o),
(142,349,o),
(141,349,qs),
(134,347,o)
);
},
{
closed = 1;
nodes = (
(171,204,o),
(186,148,o),
(190,127,qs),
(241,-128,l),
(200,-127,o),
(109,-125,o),
(68,-124,q),
(64,-118,o),
(71,-107,o),
(72,-101,qs),
(74,-94,o),
(73,-64,o),
(77,-31,o),
(85,-22,qs),
(92,-14,o),
(89,-2,o),
(86,11,o),
(91,18,qs),
(92,19,o),
(100,35,o),
(98,42,qs),
(95,52,o),
(103,71,o),
(103,87,qs),
(103,97,o),
(114,145,o),
(130,204,o),
(145,261,o),
(149,281,q),
(155,261,o)
);
},
{
closed = 1;
nodes = (
(113,537,q),
(106,528,o),
(97,505,o),
(93,495,qs),
(89,488,o),
(116,461,o),
(127,459,qs),
(136,458,o),
(148,448,o),
(161,452,q),
(177,460,o),
(193,484,o),
(200,497,qs),
(202,501,o),
(189,522,o),
(172,541,o),
(167,541,qs),
(118,541,o)
);
},
{
closed = 1;
nodes = (
(169,500,o),
(167,498,qs),
(163,492,o),
(158,484,o),
(153,481,qs),
(147,478,o),
(143,482,o),
(138,482,q),
(134,484,o),
(123,494,o),
(125,497,q),
(127,506,o),
(134,511,q),
(137,515,o),
(154,515,qs),
(157,515,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
121 118 112 3 0 5 37 27 18 3 1 3 2 76 0 0 5 3 5 0 3 128 6 1 4 7 1 5 0 4 5 105 0 3 1 1 3 87 0 3 3 1 97 2 1 1 3 1 81 109 108 90 90 108 123 109 123 90 107 90 107 85 82 34 29 22 20 32 8 8 23 
CALL[ ]	/* CallFunction */";
};
width = 306;
}
);
note = exclamdown;
unicode = 161;
},
{
glyphname = question;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(167,334,o),
(173,348,qs),
(175,353,o),
(194,360,o),
(199,358,qs),
(203,356,o),
(210,355,o),
(214,355,q),
(236,360,o),
(257,364,o),
(266,364,qs),
(273,364,o),
(326,363,o),
(380,363,qs),
(391,363,o),
(405,396,o),
(405,411,qs),
(405,423,o),
(401,428,q),
(409,434,o),
(405,447,o),
(400,453,q),
(401,513,ls),
(401,518,o),
(410,527,o),
(405,532,qs),
(397,539,o),
(408,548,o),
(408,553,qs),
(407,588,o),
(407,658,o),
(407,693,qs),
(407,700,o),
(395,712,o),
(388,712,qs),
(68,712,ls),
(56,712,o),
(50,707,o),
(45,694,q),
(41,687,o),
(40,671,o),
(44,663,qs),
(55,646,o),
(45,627,q),
(42,623,o),
(48,617,o),
(47,614,qs),
(46,609,o),
(37,591,o),
(41,587,q),
(46,578,o),
(50,559,o),
(50,549,qs),
(50,543,o),
(49,531,o),
(49,525,qs),
(49,511,o),
(62,501,qs),
(64,499,o),
(70,491,o),
(75,496,q),
(78,501,o),
(101,514,o),
(126,529,o),
(129,535,qs),
(140,559,o),
(166,567,qs),
(174,569,o),
(175,579,o),
(179,581,qs),
(189,588,o),
(207,591,o),
(213,601,qs),
(223,620,o),
(257,647,o),
(274,660,q),
(279,665,o),
(289,674,o),
(291,678,q),
(291,679,o),
(308,678,o),
(328,678,o),
(330,678,qs),
(364,678,ls),
(373,678,o),
(373,667,qs),
(373,654,o),
(373,613,o),
(373,571,o),
(373,539,o),
(374,536,q),
(377,531,o),
(370,506,o),
(366,482,o),
(371,476,q),
(370,470,o),
(365,427,o),
(365,406,qs),
(365,398,o),
(358,398,qs),
(353,398,o),
(337,397,o),
(294,397,o),
(250,397,qs),
(245,397,o),
(233,399,o),
(230,396,qs),
(219,388,o),
(204,388,qs),
(190,389,o),
(178,389,o),
(166,389,o),
(151,388,qs),
(144,388,o),
(133,371,o),
(136,363,qs),
(140,353,o),
(138,318,o),
(138,309,q),
(134,305,o),
(131,295,o),
(131,290,qs),
(131,206,l),
(132,198,o),
(160,200,o),
(164,203,q),
(164,257,o)
);
},
{
closed = 1;
nodes = (
(82,587,o),
(80,628,o),
(83,666,o),
(88,675,q),
(102,675,o),
(129,676,o),
(143,676,qs),
(241,676,l),
(219,657,o),
(173,620,o),
(150,602,qs),
(134,590,o),
(106,561,o),
(86,555,q),
(85,556,o)
);
},
{
closed = 1;
nodes = (
(253,5,o),
(258,10,q),
(255,16,o),
(235,36,o),
(231,42,q),
(224,46,o),
(190,74,o),
(158,106,o),
(154,114,q),
(153,119,o),
(144,119,o),
(142,116,qs),
(55,14,l),
(54,10,o),
(57,6,qs),
(61,2,o),
(69,0,o),
(76,2,qs),
(80,3,o),
(88,6,o),
(92,6,qs),
(97,7,o),
(108,4,o),
(112,4,q),
(122,6,o),
(163,4,o),
(204,1,o),
(214,1,qs),
(229,1,o)
);
},
{
closed = 1;
nodes = (
(104,28,o),
(108,32,qs),
(110,35,o),
(115,41,o),
(117,44,qs),
(121,48,o),
(122,52,q),
(127,61,o),
(135,66,o),
(141,72,qs),
(145,76,o),
(149,75,o),
(153,71,qs),
(162,64,o),
(177,52,o),
(198,31,q),
(191,29,o),
(168,27,o),
(156,27,qs),
(111,27,ls),
(107,27,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
107 104 97 76 4 2 3 175 118 4 3 0 5 9 5 168 146 2 7 9 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
1 1 0 2 5 2 0 5 128 0 2 0 5 9 2 5 103 6 1 3 3 4 95 0 4 4 37 77 11 1 9 9 7 97 8 10 2 7 7 38 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
1 1 0 2 5 2 0 5 128 0 4 6 1 3 2 4 3 105 0 2 0 5 9 2 5 103 11 1 9 9 7 97 8 10 2 7 7 38 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
173 171 143 142 171 191 173 190 145 144 142 170 143 170 137 133 116 111 91 89 94 129 17 76 12 8 26 
CALL[ ]	/* CallFunction */";
};
width = 448;
}
);
note = question;
unicode = 63;
},
{
glyphname = questiondown;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(281,214,o),
(275,200,qs),
(273,196,o),
(254,188,o),
(249,190,qs),
(245,192,o),
(238,193,o),
(234,193,q),
(212,188,o),
(191,184,o),
(182,184,qs),
(175,184,o),
(122,185,o),
(68,185,qs),
(58,185,o),
(43,152,o),
(43,137,qs),
(43,125,o),
(47,120,q),
(40,114,o),
(44,101,o),
(48,95,q),
(47,35,ls),
(47,31,o),
(38,21,o),
(43,16,qs),
(51,9,o),
(40,0,o),
(40,-5,qs),
(41,-40,o),
(41,-110,o),
(41,-145,qs),
(41,-152,o),
(53,-164,o),
(60,-164,qs),
(380,-164,ls),
(392,-164,o),
(398,-159,o),
(403,-146,qs),
(407,-138,o),
(409,-122,o),
(404,-115,qs),
(393,-98,o),
(403,-79,qs),
(406,-74,o),
(400,-69,o),
(401,-66,qs),
(402,-61,o),
(411,-43,o),
(407,-39,q),
(402,-30,o),
(398,-11,o),
(398,-1,qs),
(398,5,o),
(399,17,o),
(399,23,qs),
(399,37,o),
(386,47,qs),
(384,49,o),
(378,57,o),
(373,52,q),
(371,48,o),
(347,34,o),
(323,20,o),
(319,13,qs),
(308,-11,o),
(282,-19,qs),
(275,-21,o),
(273,-31,o),
(269,-33,qs),
(259,-40,o),
(241,-42,o),
(235,-53,qs),
(225,-72,o),
(191,-99,o),
(174,-112,qs),
(169,-116,o),
(159,-125,o),
(157,-130,q),
(157,-130,o),
(140,-130,o),
(121,-130,o),
(118,-130,qs),
(84,-130,ls),
(75,-130,o),
(75,-119,qs),
(75,-106,o),
(75,-65,o),
(75,-23,o),
(75,9,o),
(74,12,qs),
(72,18,o),
(78,42,o),
(83,67,o),
(77,72,q),
(78,78,o),
(83,121,o),
(83,142,qs),
(83,150,o),
(90,150,q),
(95,151,o),
(112,151,o),
(154,151,o),
(198,151,qs),
(203,151,o),
(215,149,o),
(218,152,qs),
(229,160,o),
(244,160,qs),
(259,159,o),
(271,159,o),
(283,160,o),
(297,160,qs),
(304,160,o),
(315,178,o),
(312,185,qs),
(308,196,o),
(310,230,o),
(310,239,q),
(315,244,o),
(317,253,o),
(317,258,qs),
(317,342,l),
(316,350,o),
(289,348,o),
(284,345,q),
(284,291,o)
);
},
{
closed = 1;
nodes = (
(366,-39,o),
(368,-80,o),
(365,-118,o),
(360,-127,q),
(347,-127,o),
(319,-128,o),
(305,-128,qs),
(207,-128,l),
(230,-109,o),
(275,-72,o),
(298,-54,qs),
(314,-42,o),
(343,-13,o),
(362,-7,q),
(363,-8,o)
);
},
{
closed = 1;
nodes = (
(195,543,o),
(190,538,q),
(193,532,o),
(213,512,o),
(217,506,q),
(224,502,o),
(258,474,o),
(291,443,o),
(294,434,qs),
(296,430,o),
(304,429,o),
(306,432,qs),
(393,534,l),
(395,539,o),
(391,542,qs),
(387,546,o),
(380,548,o),
(372,546,qs),
(368,545,o),
(361,542,o),
(356,542,qs),
(351,541,o),
(341,544,o),
(336,544,qs),
(326,543,o),
(285,544,o),
(244,547,o),
(234,547,qs),
(219,547,o)
);
},
{
closed = 1;
nodes = (
(345,520,o),
(340,516,q),
(338,513,o),
(333,507,o),
(331,504,qs),
(328,501,o),
(326,496,qs),
(322,487,o),
(313,482,o),
(307,476,qs),
(303,472,o),
(300,473,o),
(295,477,qs),
(286,485,o),
(271,496,o),
(250,517,q),
(258,519,o),
(280,521,o),
(292,521,qs),
(337,521,ls),
(342,521,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 92 values pushed */
168 146 2 9 7 175 118 7 4 3 0 6 5 9 107 104 97 76 4 3 2 3 76 1 1 0 5 2 5 0 2 128 8 10 2 7 0 9 5 7 9 105 0 5 0 2 3 5 2 105 6 1 3 4 4 3 89 6 1 3 3 4 95 0 4 3 4 79 143 142 173 171 145 144 142 170 143 170 137 133 116 111 91 89 46 41 97 49 44 11 8 25 
CALL[ ]	/* CallFunction */";
};
width = 448;
}
);
note = questiondown;
unicode = 191;
},
{
glyphname = periodcentered;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-10,267);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHW[ ]	/* 1 value pushed */
267 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 128;
}
);
note = periodcentered;
unicode = 183;
},
{
glyphname = bullet;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(38,256,o),
(58,221,qs),
(77,189,o),
(139,162,o),
(182,170,q),
(214,179,o),
(251,225,o),
(262,283,o),
(255,310,qs),
(246,348,o),
(183,394,o),
(133,378,q),
(103,371,o),
(70,314,o),
(70,283,qs),
(71,257,o),
(96,213,o),
(122,205,q),
(149,200,o),
(193,232,o),
(202,254,qs),
(210,274,o),
(203,315,o),
(178,326,qs),
(160,334,o),
(131,321,o),
(125,310,qs),
(117,296,o),
(117,270,o),
(127,262,qs),
(135,256,o),
(157,262,o),
(157,269,q),
(158,274,o),
(148,271,o),
(142,273,qs),
(136,276,o),
(137,293,o),
(149,309,o),
(156,308,qs),
(177,307,o),
(188,279,o),
(183,263,qs),
(179,249,o),
(153,227,o),
(136,228,q),
(116,232,o),
(100,272,o),
(103,294,qs),
(106,315,o),
(128,348,o),
(147,353,qs),
(178,361,o),
(227,321,o),
(229,291,qs),
(231,266,o),
(212,215,o),
(189,200,q),
(154,182,o),
(97,202,o),
(80,227,qs),
(61,255,o),
(59,327,o),
(83,353,q),
(44,333,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
9 1 2 1 1 76 0 1 2 1 133 0 2 0 2 133 0 0 0 118 30 28 24 23 19 18 3 8 22 
CALL[ ]	/* CallFunction */";
};
width = 299;
}
);
note = bullet;
unicode = 8226;
},
{
glyphname = asterisk;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(193,336,o),
(203,346,q),
(205,357,o),
(212,383,o),
(212,393,qs),
(212,398,o),
(213,433,o),
(214,474,o),
(214,488,q),
(231,477,o),
(271,452,o),
(295,438,qs),
(306,431,o),
(354,406,o),
(371,406,qs),
(376,406,o),
(391,412,o),
(391,416,q),
(361,435,o),
(302,472,o),
(272,490,qs),
(259,498,o),
(238,510,o),
(229,516,q),
(235,519,ls),
(249,527,o),
(275,543,o),
(290,548,qs),
(322,560,o),
(367,600,o),
(388,620,qs),
(393,625,o),
(384,638,o),
(377,634,qs),
(372,632,o),
(364,636,o),
(359,634,qs),
(346,630,o),
(318,612,o),
(304,601,qs),
(292,593,o),
(250,566,o),
(215,544,o),
(213,543,q),
(213,559,ls),
(213,571,o),
(215,594,o),
(218,607,qs),
(220,616,o),
(222,634,o),
(222,643,qs),
(222,658,o),
(214,697,o),
(209,718,qs),
(208,726,o),
(192,725,o),
(191,717,qs),
(190,711,o),
(183,707,o),
(181,702,q),
(180,695,o),
(179,680,o),
(179,672,qs),
(179,662,o),
(181,628,o),
(181,617,qs),
(181,548,l),
(155,565,o),
(115,589,o),
(97,601,qs),
(82,612,o),
(54,630,o),
(41,634,qs),
(36,636,o),
(28,632,o),
(23,634,qs),
(16,638,o),
(7,625,o),
(13,620,qs),
(33,600,o),
(78,560,o),
(110,548,qs),
(127,542,o),
(155,524,o),
(171,516,q),
(162,510,o),
(141,498,o),
(128,490,qs),
(99,472,o),
(39,435,o),
(10,416,q),
(17,406,o),
(31,406,qs),
(41,406,o),
(74,419,o),
(81,423,qs),
(87,427,o),
(100,434,o),
(106,438,qs),
(128,451,o),
(166,474,o),
(182,484,q),
(182,474,o),
(181,452,o),
(181,439,qs),
(181,329,l),
(186,330,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
97 88 82 62 39 30 21 4 8 0 1 1 76 0 1 0 1 133 2 1 0 0 118 92 90 51 50 44 3 8 23 
CALL[ ]	/* CallFunction */";
};
width = 401;
}
);
note = asterisk;
unicode = 42;
},
{
glyphname = uni2016;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(47,661,o),
(47,625,o),
(47,597,o),
(47,594,qs),
(47,559,o),
(48,501,o),
(48,444,o),
(48,408,qs),
(47,392,o),
(46,359,o),
(48,345,qs),
(51,326,o),
(38,299,o),
(45,281,q),
(45,268,o),
(39,248,o),
(40,234,qs),
(41,224,o),
(40,185,o),
(42,147,o),
(46,137,q),
(43,125,o),
(44,105,o),
(47,93,qs),
(49,87,o),
(49,66,o),
(48,57,qs),
(46,36,o),
(39,-32,o),
(40,-53,q),
(45,-80,o),
(50,-103,o),
(54,-110,qs),
(59,-118,o),
(67,-114,o),
(71,-109,q),
(70,-92,o),
(77,-60,o),
(81,-28,o),
(74,-11,q),
(81,2,o),
(77,29,o),
(73,42,q),
(80,56,o),
(77,83,o),
(72,96,q),
(73,146,o),
(73,244,o),
(74,293,qs),
(74,303,o),
(82,322,o),
(77,332,qs),
(70,348,o),
(79,366,o),
(79,378,qs),
(79,467,o),
(80,583,o),
(80,652,o),
(80,686,o),
(79,693,q),
(75,704,o),
(56,698,o),
(52,693,qs),
(49,690,o)
);
},
{
closed = 1;
nodes = (
(231,644,o),
(235,584,o),
(240,527,o),
(241,513,qs),
(242,504,o),
(243,483,o),
(241,477,qs),
(234,454,o),
(239,433,q),
(235,424,o),
(233,385,o),
(233,346,o),
(232,336,qs),
(231,322,o),
(238,302,o),
(238,289,q),
(231,271,o),
(244,245,o),
(241,225,qs),
(239,212,o),
(240,178,o),
(240,162,qs),
(241,127,o),
(240,69,o),
(240,12,o),
(240,-24,qs),
(240,-30,o),
(238,-65,o),
(238,-72,qs),
(237,-97,o),
(247,-116,o),
(248,-119,q),
(258,-118,o),
(263,-109,qs),
(272,-95,o),
(272,-77,qs),
(272,-27,o),
(271,58,o),
(272,142,o),
(272,192,qs),
(272,204,o),
(263,222,o),
(270,238,qs),
(275,248,o),
(267,267,o),
(267,277,qs),
(266,326,o),
(266,425,o),
(265,474,q),
(270,487,o),
(273,514,o),
(266,528,q),
(270,541,o),
(274,568,o),
(267,581,q),
(275,602,o),
(266,640,o),
(264,659,q),
(273,680,o),
(255,702,o),
(231,701,o),
(231,688,qs),
(231,660,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
119 117 110 94 77 74 71 68 49 42 33 27 23 20 17 3 16 0 73 0 0 0 37 0 78 66 65 1 8 22 
CALL[ ]	/* CallFunction */";
};
width = 312;
}
);
note = uni2016;
unicode = 8214;
},
{
glyphname = numbersign;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(149,21,o),
(164,66,o),
(175,117,o),
(181,139,qs),
(184,148,o),
(189,165,o),
(192,172,q),
(245,172,o),
(312,172,o),
(355,173,o),
(386,173,o),
(402,173,q),
(400,148,o),
(383,90,o),
(375,64,q),
(369,34,o),
(366,7,o),
(365,-4,q),
(371,-5,o),
(390,1,o),
(412,41,o),
(422,87,q),
(422,102,ls),
(422,119,o),
(437,160,o),
(440,173,q),
(602,173,l),
(597,183,o),
(562,204,o),
(527,204,qs),
(507,204,o),
(474,208,o),
(451,208,q),
(454,217,o),
(469,268,o),
(488,332,o),
(506,390,o),
(510,405,q),
(516,405,ls),
(585,405,o),
(649,411,o),
(652,421,q),
(648,442,o),
(612,446,o),
(593,452,q),
(592,453,o),
(569,445,o),
(557,445,qs),
(520,445,l),
(523,454,o),
(537,501,o),
(551,548,o),
(554,556,qs),
(561,576,o),
(559,603,o),
(561,619,q),
(563,625,o),
(547,626,o),
(544,620,qs),
(531,598,o),
(508,551,o),
(507,525,qs),
(507,505,o),
(493,459,o),
(488,445,q),
(275,445,l),
(284,469,o),
(307,533,o),
(323,599,o),
(323,624,qs),
(323,626,ls),
(323,632,o),
(316,632,qs),
(309,632,o),
(290,616,o),
(286,599,qs),
(282,579,o),
(262,530,o),
(255,510,qs),
(248,490,o),
(244,467,o),
(237,444,q),
(228,444,o),
(213,443,o),
(206,443,qs),
(201,443,o),
(206,444,o),
(204,444,o),
(177,445,o),
(140,445,qs),
(121,445,o),
(93,436,o),
(76,434,qs),
(69,433,o),
(68,418,o),
(74,416,qs),
(92,412,o),
(127,404,o),
(146,404,qs),
(154,404,o),
(208,412,o),
(228,412,q),
(227,409,o),
(215,368,o),
(198,308,o),
(178,243,o),
(169,215,q),
(162,216,o),
(146,216,o),
(138,216,qs),
(114,216,o),
(82,212,o),
(52,206,o),
(29,203,qs),
(14,201,o),
(30,174,o),
(52,173,qs),
(72,172,o),
(123,170,o),
(156,172,q),
(143,129,o),
(117,40,o),
(104,-4,q),
(124,-6,o)
);
},
{
closed = 1;
nodes = (
(230,208,o),
(204,212,q),
(212,238,o),
(233,312,o),
(254,386,o),
(263,411,q),
(279,412,o),
(337,412,o),
(398,411,o),
(418,408,qs),
(433,406,o),
(462,405,o),
(477,405,q),
(472,390,o),
(461,338,o),
(453,324,qs),
(437,296,o),
(420,237,o),
(412,208,q),
(379,207,o),
(332,207,o),
(306,206,qs),
(280,206,o)
);
},
{
closed = 1;
nodes = (
(374,305,o),
(372,309,qs),
(368,318,o),
(357,334,o),
(346,339,qs),
(337,342,o),
(329,335,o),
(323,334,qs),
(316,333,o),
(298,315,o),
(300,310,qs),
(303,303,o),
(309,288,o),
(314,282,qs),
(317,279,o),
(350,279,qs),
(355,279,o)
);
},
{
closed = 1;
nodes = (
(330,303,qs),
(327,307,o),
(325,311,qs),
(324,313,o),
(330,317,o),
(332,318,q),
(334,318,o),
(336,321,o),
(339,319,q),
(342,318,o),
(345,313,o),
(347,310,qs),
(348,309,o),
(342,301,o),
(340,301,qs),
(331,301,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 130 values pushed */
81 1 16 3 161 152 2 18 2 144 1 10 1 3 76 101 1 0 73 0 5 7 5 133 0 7 3 7 133 21 1 18 20 1 17 1 18 17 105 0 1 10 0 1 89 19 14 11 3 10 13 12 2 0 10 0 100 0 16 16 3 97 8 6 4 3 3 3 40 77 15 9 2 2 2 3 97 8 6 4 3 3 3 40 2 78 164 164 148 147 127 124 164 179 164 179 147 163 148 163 140 137 135 133 124 146 127 145 116 111 97 96 94 92 91 90 84 83 40 23 22 40 36 55 40 53 67 22 8 31 
CALL[ ]	/* CallFunction */";
};
width = 672;
}
);
note = numbersign;
unicode = 35;
},
{
glyphname = slash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(68,-116,o),
(81,-84,o),
(80,-65,q),
(91,-54,o),
(95,-24,o),
(96,-10,q),
(107,3,o),
(113,31,o),
(112,46,q),
(128,97,o),
(158,199,o),
(174,249,qs),
(177,259,o),
(190,276,o),
(189,287,qs),
(187,306,o),
(201,322,o),
(205,335,qs),
(220,387,o),
(257,512,o),
(294,638,o),
(309,689,q),
(313,697,o),
(314,717,o),
(312,724,qs),
(309,735,o),
(301,739,q),
(299,736,o),
(283,720,o),
(276,693,qs),
(275,686,o),
(265,649,o),
(263,643,qs),
(253,607,o),
(224,509,o),
(195,411,o),
(184,374,qs),
(179,358,o),
(167,324,o),
(165,309,qs),
(162,289,o),
(142,265,o),
(143,245,q),
(139,232,o),
(126,212,o),
(123,197,qs),
(121,187,o),
(108,147,o),
(98,107,o),
(99,96,q),
(88,76,o),
(87,50,qs),
(87,43,o),
(80,22,o),
(77,13,qs),
(71,-1,o),
(54,-43,o),
(39,-84,o),
(35,-99,q),
(31,-127,o),
(30,-153,o),
(31,-161,qs),
(33,-171,o),
(42,-169,o),
(48,-165,q),
(52,-147,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
38 2 1 50 
CALL[ ]	/* CallFunction */";
};
width = 343;
}
);
note = slash;
unicode = 47;
},
{
glyphname = backslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(310,-171,o),
(312,-161,qs),
(314,-153,o),
(312,-127,o),
(308,-99,q),
(304,-84,o),
(289,-43,o),
(272,-1,o),
(266,13,qs),
(263,22,o),
(256,43,o),
(256,50,qs),
(255,76,o),
(244,96,q),
(246,107,o),
(235,147,o),
(223,187,o),
(220,197,qs),
(217,212,o),
(205,232,o),
(200,245,q),
(202,265,o),
(181,289,o),
(178,309,qs),
(176,324,o),
(164,358,o),
(159,374,qs),
(148,411,o),
(119,509,o),
(91,607,o),
(80,643,qs),
(78,649,o),
(69,686,o),
(67,693,qs),
(60,720,o),
(44,736,o),
(42,739,q),
(34,735,o),
(31,724,qs),
(30,717,o),
(30,697,o),
(34,689,q),
(49,638,o),
(86,512,o),
(123,387,o),
(138,335,qs),
(142,322,o),
(156,306,o),
(154,287,qs),
(153,276,o),
(166,259,o),
(169,249,qs),
(186,199,o),
(215,97,o),
(231,46,q),
(230,31,o),
(237,3,o),
(247,-10,q),
(248,-24,o),
(253,-54,o),
(263,-65,q),
(262,-84,o),
(275,-116,o),
(292,-147,o),
(295,-165,q),
(301,-169,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
64 28 1 50 
CALL[ ]	/* CallFunction */";
};
width = 343;
}
);
note = backslash;
unicode = 92;
},
{
glyphname = periodcentered.loclCAT;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(134,253,qs),
(143,262,o),
(148,285,o),
(148,298,qs),
(148,323,o),
(120,347,o),
(80,348,o),
(62,338,qs),
(56,334,o),
(44,320,o),
(42,312,q),
(40,293,o),
(43,261,o),
(59,247,qs),
(77,233,o),
(93,233,qs),
(110,233,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 89 0 1 1 0 97 2 1 0 1 0 81 1 0 10 9 0 16 1 16 3 8 22 
CALL[ ]	/* CallFunction */";
};
width = 188;
}
);
note = periodcentered.loclCAT;
},
{
glyphname = periodcentered.loclCAT.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(134,253,qs),
(143,262,o),
(148,285,o),
(148,298,qs),
(148,323,o),
(120,347,o),
(80,348,o),
(62,338,qs),
(56,334,o),
(44,320,o),
(42,312,q),
(40,293,o),
(43,261,o),
(59,247,qs),
(77,233,o),
(93,233,qs),
(110,233,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 89 0 1 1 0 97 2 1 0 1 0 81 1 0 10 9 0 16 1 16 3 8 22 
CALL[ ]	/* CallFunction */";
};
width = 188;
}
);
note = periodcentered.loclCAT.case;
},
{
glyphname = hyphen;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(255,242,o),
(266,245,qs),
(269,246,o),
(269,259,o),
(266,259,qs),
(262,260,o),
(260,266,o),
(257,267,qs),
(254,268,o),
(248,269,o),
(243,269,qs),
(236,269,o),
(220,268,o),
(212,268,qs),
(182,268,ls),
(169,267,o),
(165,266,o),
(160,267,o),
(147,268,qs),
(80,268,l),
(80,261,o),
(88,249,o),
(105,244,q),
(106,243,o),
(121,242,o),
(124,242,qs),
(148,241,o),
(170,241,o),
(177,242,qs),
(185,244,o),
(200,241,o),
(207,238,qs),
(216,235,o),
(224,235,qs),
(235,235,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
2 1 1 0 0 3 1 0 105 2 1 1 1 3 97 4 1 3 1 3 81 0 0 0 34 0 34 81 38 85 5 8 25 
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = hyphen;
unicode = 45;
},
{
glyphname = endash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(84,261,o),
(128,265,o),
(170,270,o),
(180,271,qs),
(194,273,o),
(226,265,o),
(239,269,q),
(246,265,o),
(275,263,o),
(304,263,o),
(311,262,qs),
(318,262,o),
(350,268,o),
(384,273,o),
(393,271,qs),
(403,269,o),
(428,270,o),
(440,270,qs),
(460,270,o),
(465,270,o),
(461,270,o),
(467,270,o),
(486,270,qs),
(491,270,o),
(517,268,o),
(522,268,qs),
(541,267,o),
(555,277,o),
(557,278,q),
(556,287,o),
(550,293,q),
(537,302,o),
(526,302,qs),
(498,302,o),
(477,301,o),
(467,301,o),
(445,302,o),
(417,302,qs),
(408,302,o),
(395,293,o),
(384,300,qs),
(377,305,o),
(362,297,o),
(355,297,qs),
(319,296,o),
(255,296,o),
(245,295,q),
(237,299,o),
(195,303,o),
(153,302,o),
(145,297,q),
(126,305,o),
(90,296,o),
(72,294,q),
(57,303,o),
(40,285,o),
(41,261,o),
(50,261,qs),
(71,261,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
7 1 2 1 51 29 4 3 4 2 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 4 0 2 89 3 1 1 0 4 0 1 4 103 0 2 2 0 97 5 6 2 0 2 0 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 1 2 1 133 3 1 2 0 4 0 2 4 103 3 1 2 2 0 97 5 6 2 0 2 0 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 2 4 0 2 89 3 1 1 0 4 0 1 4 103 0 2 2 0 97 5 6 2 0 2 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
1 0 50 48 42 31 26 19 14 12 9 8 0 58 1 57 7 8 22 
CALL[ ]	/* CallFunction */";
};
width = 597;
}
);
note = endash;
unicode = 8211;
},
{
glyphname = emdash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(803,307,o),
(743,303,o),
(686,299,o),
(672,297,qs),
(663,296,o),
(642,296,o),
(636,297,q),
(613,304,o),
(592,299,q),
(583,304,o),
(544,305,o),
(505,305,o),
(495,306,qs),
(481,307,o),
(461,300,o),
(448,300,q),
(430,307,o),
(404,294,o),
(384,297,qs),
(371,299,o),
(337,298,o),
(321,298,qs),
(286,298,o),
(228,298,o),
(171,298,o),
(135,298,qs),
(129,298,o),
(94,300,o),
(87,300,qs),
(62,302,o),
(43,291,o),
(40,290,q),
(41,280,o),
(50,275,qs),
(64,266,o),
(82,266,qs),
(132,267,o),
(217,267,o),
(301,267,o),
(351,266,qs),
(363,266,o),
(381,276,o),
(397,268,qs),
(407,264,o),
(426,271,o),
(436,271,qs),
(485,273,o),
(584,272,o),
(633,273,q),
(646,268,o),
(673,265,o),
(687,272,q),
(700,268,o),
(727,264,o),
(740,271,q),
(761,264,o),
(799,272,o),
(818,274,q),
(839,265,o),
(861,283,o),
(860,308,o),
(847,307,qs),
(819,307,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
30 4 2 0 2 7 1 1 0 2 76 53 1 2 10 1 0 2 75 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
30 4 2 0 2 7 1 1 0 2 76 10 1 0 1 75 53 1 2 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
30 4 2 0 2 7 1 1 0 2 76 53 1 2 10 1 0 2 75 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
7 6 5 3 4 2 0 1 2 89 0 4 0 0 1 4 0 103 7 6 5 3 4 2 2 1 95 0 1 2 1 79 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
7 6 5 4 3 5 2 0 0 1 2 0 103 7 6 5 4 3 5 2 2 1 95 0 1 2 1 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
7 6 5 3 4 2 0 1 2 89 0 4 0 0 1 4 0 103 7 6 5 3 4 2 2 1 95 0 1 2 1 79 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
0 0 0 62 0 59 35 35 20 150 100 77 8 8 28 
CALL[ ]	/* CallFunction */";
};
width = 900;
}
);
note = emdash;
unicode = 8212;
},
{
glyphname = underscore;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(262,-66,o),
(212,-67,q),
(199,-62,o),
(172,-59,o),
(158,-66,q),
(145,-62,o),
(118,-58,o),
(105,-65,q),
(88,-58,o),
(56,-62,o),
(24,-69,o),
(7,-68,q),
(2,-72,o),
(-2,-80,o),
(6,-85,qs),
(13,-89,o),
(36,-94,o),
(63,-99,q),
(84,-100,o),
(152,-93,o),
(173,-91,qs),
(182,-90,o),
(203,-90,o),
(209,-92,qs),
(221,-95,o),
(241,-96,o),
(253,-93,q),
(263,-97,o),
(301,-99,o),
(340,-98,o),
(350,-99,qs),
(364,-100,o),
(381,-94,o),
(397,-94,qs),
(408,-93,o),
(427,-79,o),
(427,-64,o),
(409,-65,qs),
(360,-66,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 57 values pushed */
11 1 1 0 1 76 33 30 2 0 74 0 4 1 4 134 5 6 2 0 1 1 0 89 5 6 2 0 0 1 97 3 2 2 1 0 1 81 1 0 27 26 20 19 13 12 10 8 5 4 0 38 1 36 7 8 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 427;
}
);
note = underscore;
unicode = 95;
},
{
glyphname = parenleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(308,-112,o),
(304,-104,qs),
(300,-98,o),
(303,-87,o),
(300,-81,qs),
(294,-65,o),
(273,-34,o),
(262,-18,qs),
(249,2,o),
(221,46,o),
(205,71,qs),
(187,97,o),
(158,144,o),
(135,180,qs),
(118,209,o),
(82,267,o),
(64,295,q),
(75,302,o),
(96,322,o),
(103,342,qs),
(106,354,o),
(116,370,o),
(121,378,qs),
(131,392,o),
(157,430,o),
(173,455,qs),
(178,464,o),
(190,484,o),
(195,487,qs),
(217,501,o),
(247,557,o),
(265,579,q),
(271,603,o),
(295,638,o),
(307,654,q),
(316,671,l),
(316,672,o),
(323,693,o),
(326,713,o),
(321,714,qs),
(307,717,o),
(289,689,o),
(275,677,q),
(274,677,o),
(265,655,o),
(253,630,o),
(248,622,qs),
(235,603,o),
(209,564,o),
(195,545,qs),
(182,524,o),
(153,482,o),
(139,461,qs),
(133,451,o),
(108,417,o),
(80,379,o),
(56,349,o),
(51,342,qs),
(37,319,o),
(26,295,o),
(35,278,qs),
(45,259,o),
(86,194,o),
(132,123,o),
(172,65,o),
(181,51,qs),
(202,22,o),
(216,-13,qs),
(233,-51,o),
(274,-98,o),
(294,-121,qs),
(299,-127,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
71 30 1 50 
CALL[ ]	/* CallFunction */";
};
width = 354;
}
);
note = parenleft;
unicode = 40;
},
{
glyphname = parenright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(122,-51,o),
(138,-13,qs),
(152,22,o),
(173,51,qs),
(182,65,o),
(222,123,o),
(268,194,o),
(309,259,o),
(319,278,qs),
(328,295,o),
(317,319,o),
(303,342,qs),
(298,349,o),
(274,379,o),
(246,417,o),
(221,451,o),
(215,461,qs),
(202,482,o),
(173,524,o),
(159,545,qs),
(146,564,o),
(120,603,o),
(106,622,qs),
(101,630,o),
(89,655,o),
(80,677,o),
(79,677,q),
(65,689,o),
(47,717,o),
(33,714,qs),
(28,713,o),
(31,693,o),
(38,672,o),
(38,671,q),
(47,654,l),
(59,638,o),
(83,603,o),
(89,579,q),
(107,557,o),
(137,501,o),
(159,487,qs),
(164,484,o),
(176,464,o),
(181,455,qs),
(197,430,o),
(223,392,o),
(233,378,qs),
(238,370,o),
(248,354,o),
(251,342,qs),
(258,322,o),
(279,302,o),
(290,295,q),
(272,267,o),
(236,209,o),
(219,180,qs),
(197,144,o),
(167,97,o),
(149,71,qs),
(133,46,o),
(106,2,o),
(92,-18,qs),
(81,-34,o),
(60,-65,o),
(54,-81,qs),
(51,-87,o),
(54,-98,o),
(50,-104,qs),
(46,-112,o),
(55,-127,o),
(60,-121,qs),
(80,-98,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
42 1 1 50 
CALL[ ]	/* CallFunction */";
};
width = 354;
}
);
note = parenright;
unicode = 41;
},
{
glyphname = braceleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(345,-113,o),
(343,-106,q),
(340,-101,o),
(344,-91,o),
(342,-85,qs),
(338,-71,o),
(321,-39,o),
(311,-23,qs),
(307,-15,o),
(278,43,o),
(238,122,o),
(197,204,o),
(164,270,o),
(156,285,q),
(166,294,o),
(181,316,o),
(184,334,qs),
(187,355,o),
(196,371,qs),
(203,387,o),
(222,425,o),
(233,451,qs),
(237,460,o),
(245,479,o),
(249,485,q),
(268,502,o),
(288,557,o),
(301,581,q),
(303,616,o),
(335,674,o),
(343,711,q),
(340,714,o),
(334,714,qs),
(327,714,o),
(312,695,o),
(299,674,o),
(294,671,q),
(294,671,o),
(288,650,o),
(281,625,o),
(277,618,qs),
(273,610,o),
(253,564,o),
(226,505,o),
(199,445,o),
(176,398,o),
(171,389,qs),
(163,372,o),
(152,332,o),
(140,305,o),
(130,305,qs),
(122,305,o),
(108,317,q),
(101,325,o),
(87,339,o),
(81,346,qs),
(77,351,o),
(67,358,o),
(62,364,q),
(56,367,o),
(50,372,o),
(43,378,qs),
(39,381,o),
(30,372,o),
(30,366,qs),
(31,359,o),
(32,344,o),
(31,341,q),
(31,327,ls),
(32,308,o),
(33,270,o),
(34,251,qs),
(34,236,ls),
(34,230,o),
(38,220,o),
(39,215,q),
(38,211,o),
(35,203,o),
(35,198,qs),
(35,190,o),
(43,176,o),
(54,178,qs),
(55,178,o),
(83,208,o),
(121,249,o),
(134,263,q),
(141,242,l),
(142,223,o),
(159,213,o),
(166,199,qs),
(188,151,o),
(226,81,o),
(240,53,qs),
(248,37,o),
(262,6,o),
(267,-12,qs),
(278,-48,o),
(313,-97,o),
(331,-122,q),
(336,-127,o)
);
},
{
closed = 1;
nodes = (
(61,240,qs),
(60,263,o),
(60,297,o),
(58,327,q),
(77,311,o),
(94,297,o),
(101,291,o),
(105,286,q),
(110,282,o),
(112,279,o),
(107,272,qs),
(103,265,o),
(88,260,o),
(81,249,qs),
(79,245,o),
(70,239,o),
(68,237,qs),
(62,231,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
113 71 2 0 1 1 76 116 85 13 12 4 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 1 0 134 0 1 1 37 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 9 values pushed */
0 1 0 1 133 0 0 0 118 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
67 65 49 47 2 8 22 
CALL[ ]	/* CallFunction */";
};
width = 334;
}
);
note = braceleft;
unicode = 123;
},
{
glyphname = braceright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(76,-48,o),
(87,-12,qs),
(92,6,o),
(106,37,o),
(114,53,qs),
(128,81,o),
(166,151,o),
(188,199,qs),
(195,213,o),
(212,223,o),
(213,242,q),
(220,263,l),
(234,249,o),
(271,208,o),
(300,178,o),
(300,178,q),
(311,176,o),
(319,190,o),
(319,198,qs),
(319,203,o),
(316,211,o),
(315,215,q),
(316,220,o),
(320,230,o),
(320,236,qs),
(320,251,ls),
(321,270,o),
(322,308,o),
(323,327,qs),
(323,341,l),
(322,344,o),
(323,359,o),
(324,366,qs),
(324,372,o),
(316,381,o),
(311,378,qs),
(304,372,o),
(298,367,o),
(292,364,q),
(288,358,o),
(278,351,o),
(273,346,qs),
(267,339,o),
(253,325,o),
(246,317,qs),
(233,305,o),
(224,305,qs),
(214,305,o),
(202,332,o),
(192,372,o),
(183,389,qs),
(178,398,o),
(155,445,o),
(128,505,o),
(101,564,o),
(81,610,o),
(77,618,qs),
(74,625,o),
(66,650,o),
(61,671,o),
(60,671,q),
(55,674,o),
(42,695,o),
(28,714,o),
(20,714,qs),
(14,714,o),
(11,711,q),
(19,674,o),
(51,616,o),
(53,581,q),
(67,557,o),
(86,502,o),
(105,485,q),
(110,479,o),
(117,460,o),
(121,451,qs),
(132,425,o),
(151,387,o),
(158,371,qs),
(167,355,o),
(170,334,qs),
(173,316,o),
(188,294,o),
(198,285,q),
(190,270,o),
(157,204,o),
(116,122,o),
(76,43,o),
(47,-15,o),
(43,-23,qs),
(33,-39,o),
(16,-71,o),
(12,-85,qs),
(11,-91,o),
(14,-101,o),
(11,-106,q),
(9,-113,o),
(19,-127,o),
(23,-122,qs),
(41,-97,o)
);
},
{
closed = 1;
nodes = (
(275,245,o),
(273,249,qs),
(266,260,o),
(252,265,o),
(247,272,qs),
(243,279,o),
(244,282,o),
(249,286,q),
(253,291,o),
(260,297,o),
(278,311,o),
(296,327,q),
(295,297,o),
(294,263,o),
(293,240,qs),
(292,231,o),
(286,237,qs),
(284,239,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
105 63 32 29 4 0 74 102 88 87 74 15 3 6 0 73 0 0 0 118 53 51 1 8 22 
CALL[ ]	/* CallFunction */";
};
width = 354;
}
);
note = braceright;
unicode = 125;
},
{
glyphname = bracketleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(242,-110,o),
(246,-108,qs),
(248,-107,o),
(249,-91,o),
(247,-90,qs),
(243,-87,o),
(232,-86,o),
(226,-86,qs),
(219,-86,o),
(207,-87,o),
(205,-87,qs),
(201,-86,o),
(191,-85,o),
(186,-85,qs),
(184,-85,o),
(171,-86,o),
(128,-86,o),
(79,-87,q),
(85,-68,o),
(86,-20,o),
(92,-1,q),
(87,16,o),
(84,41,o),
(84,53,qs),
(84,539,ls),
(84,563,o),
(85,606,o),
(85,626,qs),
(85,641,o),
(81,665,o),
(78,676,q),
(218,676,ls),
(232,677,o),
(250,698,o),
(242,706,qs),
(238,710,o),
(229,710,qs),
(221,710,o),
(203,706,o),
(201,706,qs),
(197,707,o),
(187,708,o),
(182,708,qs),
(178,708,o),
(171,708,o),
(166,706,q),
(165,706,o),
(131,707,o),
(91,708,o),
(79,708,qs),
(72,708,o),
(48,708,o),
(47,706,qs),
(38,684,o),
(41,643,o),
(41,623,qs),
(41,605,o),
(45,589,qs),
(49,575,o),
(54,546,o),
(54,531,qs),
(54,390,ls),
(54,385,o),
(54,360,o),
(54,335,o),
(52,329,qs),
(47,307,o),
(43,263,o),
(43,240,qs),
(43,201,o),
(45,158,o),
(48,131,o),
(51,103,o),
(53,60,o),
(53,21,qs),
(53,2,o),
(52,-38,o),
(52,-58,q),
(57,-92,o),
(74,-119,o),
(108,-119,qs),
(181,-119,ls),
(190,-119,o),
(201,-118,o),
(207,-119,qs),
(213,-119,o),
(224,-118,o),
(228,-119,qs),
(234,-120,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
67 22 10 3 5 4 1 76 6 1 5 0 0 5 0 99 0 4 4 1 97 3 2 2 1 1 37 4 78 81 73 72 70 57 56 52 50 46 44 41 37 53 7 8 23 
CALL[ ]	/* CallFunction */";
};
width = 248;
}
);
note = bracketleft;
unicode = 91;
},
{
glyphname = bracketright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(35,-119,o),
(41,-119,qs),
(47,-118,o),
(58,-119,o),
(67,-119,qs),
(140,-119,ls),
(175,-119,o),
(192,-92,o),
(196,-58,q),
(196,-38,o),
(195,2,o),
(195,21,qs),
(195,60,o),
(197,103,o),
(200,131,o),
(203,158,o),
(205,201,o),
(205,240,qs),
(205,263,o),
(201,307,o),
(196,329,qs),
(195,335,o),
(194,360,o),
(194,385,o),
(194,390,qs),
(194,531,ls),
(194,546,o),
(199,575,o),
(203,589,qs),
(207,605,o),
(207,623,qs),
(207,643,o),
(210,684,o),
(201,706,qs),
(200,708,o),
(177,708,o),
(169,708,qs),
(158,708,o),
(117,707,o),
(83,706,o),
(82,706,q),
(78,708,o),
(70,708,o),
(66,708,qs),
(61,708,o),
(52,707,o),
(47,706,qs),
(45,706,o),
(27,710,o),
(19,710,qs),
(10,710,o),
(6,706,qs),
(-2,698,o),
(16,677,o),
(30,676,qs),
(170,676,l),
(167,665,o),
(163,641,o),
(163,626,qs),
(163,606,o),
(164,563,o),
(164,539,qs),
(164,53,ls),
(164,41,o),
(161,16,o),
(156,-1,q),
(162,-20,o),
(163,-68,o),
(169,-87,q),
(120,-86,o),
(77,-86,o),
(65,-85,o),
(62,-85,qs),
(57,-85,o),
(48,-86,o),
(43,-87,qs),
(42,-87,o),
(30,-86,o),
(22,-86,qs),
(16,-86,o),
(5,-87,o),
(1,-90,qs),
(0,-91,o),
(0,-107,o),
(2,-108,qs),
(7,-110,o),
(14,-120,o),
(20,-119,qs),
(25,-118,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
79 22 2 0 2 1 76 38 1 3 74 1 1 0 0 5 0 5 99 0 2 2 3 97 4 1 3 3 37 2 78 84 81 98 42 29 84 40 6 8 27 
CALL[ ]	/* CallFunction */";
};
width = 248;
}
);
note = bracketright;
unicode = 93;
},
{
glyphname = quotesinglbase;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(40,-94,o),
(42,-90,q),
(46,-90,o),
(61,-65,o),
(63,-63,q),
(71,-48,o),
(73,-33,o),
(79,-18,qs),
(84,-2,o),
(96,10,qs),
(108,22,o),
(110,48,o),
(110,65,qs),
(110,76,o),
(102,86,o),
(97,81,qs),
(92,76,o),
(74,60,o),
(72,52,qs),
(70,41,o),
(60,18,o),
(55,6,q),
(49,-16,o),
(31,-52,o),
(20,-88,q),
(23,-92,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
24 10 1 50 
CALL[ ]	/* CallFunction */";
};
width = 130;
}
);
note = quotesinglbase;
unicode = 8218;
},
{
glyphname = quotedblbase;
layers = (
{
layerId = m01;
shapes = (
{
ref = quotesinglbase;
},
{
pos = (110,0);
ref = quotesinglbase;
}
);
width = 240;
}
);
note = quotedblbase;
unicode = 8222;
},
{
glyphname = quotedblleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(107,680,o),
(105,676,q),
(101,676,o),
(83,649,o),
(81,646,qs),
(71,630,o),
(68,612,o),
(60,595,q),
(54,577,o),
(40,564,qs),
(27,551,o),
(22,521,o),
(21,501,qs),
(19,489,o),
(26,476,o),
(32,481,qs),
(38,487,o),
(57,504,o),
(60,513,qs),
(63,526,o),
(75,551,o),
(82,565,q),
(90,590,o),
(111,631,o),
(126,672,q),
(124,677,o)
);
},
{
closed = 1;
nodes = (
(237,680,o),
(235,676,q),
(231,676,o),
(213,649,o),
(211,646,qs),
(201,630,o),
(198,612,o),
(190,595,q),
(184,577,o),
(170,564,qs),
(157,551,o),
(152,521,o),
(151,501,qs),
(149,489,o),
(156,476,o),
(162,481,qs),
(168,487,o),
(187,504,o),
(190,513,qs),
(193,526,o),
(205,551,o),
(212,565,q),
(220,590,o),
(241,631,o),
(256,672,q),
(254,677,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
50 36 24 10 2 50 
CALL[ ]	/* CallFunction */";
};
width = 276;
}
);
note = quotedblleft;
unicode = 8220;
},
{
glyphname = quotedblright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(39,529,o),
(42,533,q),
(46,532,o),
(63,560,o),
(66,562,q),
(76,579,o),
(79,596,o),
(87,613,q),
(93,631,o),
(107,645,qs),
(120,658,o),
(125,687,o),
(127,708,qs),
(128,720,o),
(121,732,o),
(116,728,qs),
(110,722,o),
(90,705,o),
(87,696,qs),
(84,683,o),
(72,657,o),
(65,644,q),
(57,619,o),
(35,578,o),
(20,537,q),
(23,532,o)
);
},
{
closed = 1;
nodes = (
(156,529,o),
(159,533,q),
(163,532,o),
(180,560,o),
(183,562,q),
(193,579,o),
(196,596,o),
(204,613,q),
(210,631,o),
(224,645,qs),
(237,658,o),
(242,687,o),
(244,708,qs),
(245,720,o),
(238,732,o),
(233,728,qs),
(227,722,o),
(207,705,o),
(204,696,qs),
(201,683,o),
(189,657,o),
(182,644,q),
(174,619,o),
(152,578,o),
(137,537,q),
(140,532,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
50 36 24 10 2 50 
CALL[ ]	/* CallFunction */";
};
width = 264;
}
);
note = quotedblright;
unicode = 8221;
},
{
glyphname = quoteleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(107,680,o),
(105,676,q),
(101,676,o),
(83,649,o),
(81,646,qs),
(71,630,o),
(68,612,o),
(60,595,q),
(54,577,o),
(40,564,qs),
(27,551,o),
(22,521,o),
(21,501,qs),
(19,489,o),
(26,476,o),
(32,481,qs),
(38,487,o),
(57,504,o),
(60,513,qs),
(63,526,o),
(75,551,o),
(82,565,q),
(90,590,o),
(111,631,o),
(126,672,q),
(124,677,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
24 10 1 50 
CALL[ ]	/* CallFunction */";
};
width = 146;
}
);
note = quoteleft;
unicode = 8216;
},
{
glyphname = quoteright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(39,529,o),
(42,533,q),
(46,532,o),
(63,560,o),
(66,562,q),
(76,579,o),
(79,596,o),
(87,613,q),
(93,631,o),
(107,645,qs),
(120,658,o),
(125,687,o),
(127,708,qs),
(128,720,o),
(121,732,o),
(116,728,qs),
(110,722,o),
(90,705,o),
(87,696,qs),
(84,683,o),
(72,657,o),
(65,644,q),
(57,619,o),
(35,578,o),
(20,537,q),
(23,532,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
24 10 1 50 
CALL[ ]	/* CallFunction */";
};
width = 147;
}
);
note = quoteright;
unicode = 8217;
},
{
glyphname = guillemotleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(245,94,o),
(240,98,q),
(237,102,o),
(240,111,o),
(237,115,qs),
(232,124,o),
(213,139,o),
(202,147,qs),
(196,151,o),
(165,174,o),
(128,204,o),
(94,233,o),
(83,242,qs),
(70,255,o),
(41,278,o),
(27,290,q),
(58,314,o),
(85,339,qs),
(107,359,o),
(135,382,o),
(152,393,q),
(167,406,o),
(194,428,o),
(207,438,qs),
(213,442,o),
(229,463,o),
(242,488,o),
(242,497,qs),
(242,504,o),
(237,505,q),
(233,507,o),
(202,484,o),
(165,452,o),
(134,424,o),
(129,420,qs),
(112,407,o),
(67,373,o),
(40,348,qs),
(32,341,o),
(14,324,o),
(8,314,qs),
(0,300,o),
(0,288,qs),
(0,268,o),
(32,240,o),
(39,233,qs),
(65,209,o),
(109,176,o),
(125,162,qs),
(135,154,o),
(151,139,o),
(158,128,qs),
(172,106,o),
(212,87,o),
(231,79,q),
(236,78,o)
);
},
{
closed = 1;
nodes = (
(466,94,o),
(461,98,q),
(458,102,o),
(461,111,o),
(458,115,qs),
(453,124,o),
(434,139,o),
(423,147,qs),
(417,151,o),
(386,174,o),
(349,204,o),
(315,233,o),
(304,242,qs),
(291,255,o),
(262,278,o),
(248,290,q),
(279,314,o),
(306,339,qs),
(328,359,o),
(356,382,o),
(373,393,q),
(388,406,o),
(415,428,o),
(428,438,qs),
(434,442,o),
(450,463,o),
(463,488,o),
(463,497,qs),
(463,504,o),
(458,505,q),
(454,507,o),
(423,484,o),
(386,452,o),
(355,424,o),
(350,420,qs),
(333,407,o),
(288,373,o),
(261,348,qs),
(253,341,o),
(235,324,o),
(229,314,qs),
(221,300,o),
(221,288,qs),
(221,268,o),
(253,240,o),
(260,233,qs),
(286,209,o),
(330,176,o),
(346,162,qs),
(356,154,o),
(372,139,o),
(379,128,qs),
(393,106,o),
(433,87,o),
(452,79,q),
(457,78,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
111 80 55 24 2 50 
CALL[ ]	/* CallFunction */";
};
width = 473;
}
);
note = guillemotleft;
unicode = 171;
},
{
glyphname = guillemotright;
layers = (
{
layerId = m01;
shapes = (
{
pos = (231,0);
ref = guilsinglright;
},
{
pos = (10,0);
ref = guilsinglright;
}
);
width = 473;
}
);
note = guillemotright;
unicode = 187;
},
{
glyphname = guilsinglleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(245,94,o),
(240,98,q),
(237,102,o),
(240,111,o),
(237,115,qs),
(232,124,o),
(213,139,o),
(202,147,qs),
(196,151,o),
(165,174,o),
(128,204,o),
(94,233,o),
(83,242,qs),
(70,255,o),
(41,278,o),
(27,290,q),
(58,314,o),
(85,339,qs),
(107,359,o),
(135,382,o),
(152,393,q),
(167,406,o),
(194,428,o),
(207,438,qs),
(213,442,o),
(229,463,o),
(242,488,o),
(242,497,qs),
(242,504,o),
(237,505,q),
(233,507,o),
(202,484,o),
(165,452,o),
(134,424,o),
(129,420,qs),
(112,407,o),
(67,373,o),
(40,348,qs),
(32,341,o),
(14,324,o),
(8,314,qs),
(0,300,o),
(0,288,qs),
(0,268,o),
(32,240,o),
(39,233,qs),
(65,209,o),
(109,176,o),
(125,162,qs),
(135,154,o),
(151,139,o),
(158,128,qs),
(172,106,o),
(212,87,o),
(231,79,q),
(236,78,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
55 24 1 50 
CALL[ ]	/* CallFunction */";
};
width = 252;
}
);
note = guilsinglleft;
unicode = 8249;
},
{
glyphname = guilsinglright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(80,106,o),
(94,128,qs),
(102,139,o),
(117,154,o),
(127,162,qs),
(144,176,o),
(187,209,o),
(213,233,qs),
(221,240,o),
(252,268,o),
(252,288,qs),
(252,300,o),
(244,314,qs),
(238,324,o),
(220,341,o),
(212,348,qs),
(185,373,o),
(140,407,o),
(123,420,qs),
(119,424,o),
(87,452,o),
(50,484,o),
(19,507,o),
(15,505,q),
(10,504,o),
(10,497,qs),
(10,488,o),
(23,463,o),
(40,442,o),
(45,438,qs),
(59,428,o),
(85,406,o),
(100,393,q),
(117,382,o),
(145,359,o),
(167,339,qs),
(194,314,o),
(225,290,q),
(211,278,o),
(183,255,o),
(169,242,qs),
(159,233,o),
(124,204,o),
(87,174,o),
(56,151,o),
(50,147,qs),
(40,139,o),
(20,124,o),
(15,115,qs),
(12,111,o),
(15,102,o),
(12,98,qs),
(8,94,o),
(17,78,o),
(21,79,qs),
(41,87,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
32 1 1 50 
CALL[ ]	/* CallFunction */";
};
width = 262;
}
);
note = guilsinglright;
unicode = 8250;
},
{
glyphname = quotedbl;
layers = (
{
layerId = m01;
shapes = (
{
pos = (30,0);
ref = quotesingle;
},
{
pos = (150,0);
ref = quotesingle;
}
);
width = 242;
}
);
note = quotedbl;
unicode = 34;
},
{
glyphname = quotesingle;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(40,472,o),
(40,479,qs),
(40,485,o),
(50,489,o),
(51,493,qs),
(52,499,o),
(52,524,o),
(52,550,o),
(52,555,qs),
(52,663,ls),
(52,728,o),
(36,728,qs),
(32,728,o),
(24,726,o),
(19,703,qs),
(18,700,o),
(19,687,o),
(19,663,qs),
(19,636,o),
(16,614,o),
(13,603,o),
(10,584,o),
(10,559,qs),
(10,538,o),
(18,497,o),
(22,478,qs),
(24,471,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 26 45 2 8 24 
CALL[ ]	/* CallFunction */";
};
width = 62;
}
);
note = quotesingle;
unicode = 39;
},
{
glyphname = florin;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(142,19,qs),
(142,20,l),
(209,209,l),
(214,213,o),
(227,235,o),
(237,255,qs),
(245,276,o),
(243,319,o),
(256,338,qs),
(262,347,ls),
(265,351,o),
(267,356,q),
(295,354,o),
(340,355,o),
(375,357,q),
(382,356,o),
(411,357,o),
(414,357,qs),
(451,357,o),
(459,382,o),
(442,383,qs),
(334,383,ls),
(313,383,o),
(288,382,o),
(277,382,q),
(277,384,o),
(278,388,o),
(279,390,q),
(286,398,o),
(288,405,o),
(289,414,o),
(294,424,qs),
(301,435,o),
(302,454,o),
(303,466,q),
(368,644,ls),
(370,648,o),
(373,655,o),
(376,658,q),
(387,655,l),
(393,663,o),
(404,663,q),
(429,656,l),
(438,656,o),
(446,663,q),
(450,662,o),
(459,659,o),
(464,659,qs),
(481,659,o),
(503,671,o),
(503,678,qs),
(503,684,o),
(498,695,o),
(494,695,qs),
(454,695,o),
(402,701,o),
(370,701,o),
(351,684,o),
(343,662,qs),
(325,608,l),
(324,589,o),
(310,563,o),
(292,532,o),
(284,503,q),
(271,499,o),
(272,474,o),
(270,463,q),
(264,456,o),
(259,436,o),
(259,433,q),
(241,383,l),
(236,384,o),
(230,384,qs),
(173,384,ls),
(160,384,o),
(130,386,o),
(116,386,qs),
(103,386,o),
(88,378,o),
(74,376,qs),
(67,375,o),
(67,359,o),
(74,358,qs),
(93,355,o),
(131,357,o),
(150,356,qs),
(158,356,o),
(175,356,o),
(182,352,qs),
(193,345,o),
(219,354,o),
(231,356,q),
(139,101,ls),
(137,94,o),
(128,84,o),
(125,77,q),
(118,68,o),
(109,49,o),
(107,38,q),
(106,37,o),
(104,37,qs),
(59,36,o),
(24,37,o),
(17,35,qs),
(16,35,o),
(8,19,o),
(17,4,o),
(40,4,qs),
(129,4,ls),
(142,4,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 91 values pushed */
69 49 2 3 6 107 1 0 1 2 76 17 1 2 1 75 9 1 3 10 1 2 1 3 2 105 8 7 2 6 6 4 97 0 4 4 37 77 8 7 2 6 6 5 97 0 5 5 39 77 0 1 1 0 95 11 1 0 0 38 0 78 2 0 96 90 89 84 68 67 66 65 61 60 55 54 53 52 36 31 25 21 8 6 0 109 2 109 12 8 22 
CALL[ ]	/* CallFunction */";
};
width = 513;
}
);
note = florin;
unicode = 402;
},
{
glyphname = uni0E3F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(78,6,o),
(84,5,q),
(156,5,l),
(156,-11,o),
(156,-22,q),
(161,-50,o),
(166,-75,o),
(170,-83,qs),
(175,-92,o),
(183,-87,o),
(187,-82,q),
(185,-59,o),
(197,-17,o),
(194,5,q),
(226,5,ls),
(236,5,o),
(241,1,qs),
(247,-3,o),
(254,5,o),
(259,5,qs),
(272,3,o),
(317,7,o),
(362,8,o),
(373,1,qs),
(374,0,o),
(398,3,o),
(406,1,qs),
(411,-1,o),
(432,7,o),
(438,12,qs),
(444,17,o),
(433,27,o),
(431,32,q),
(431,35,o),
(414,49,o),
(396,65,o),
(394,70,qs),
(391,78,o),
(377,83,o),
(373,90,qs),
(372,92,o),
(345,121,o),
(305,160,o),
(264,199,o),
(231,225,o),
(226,226,q),
(220,238,o),
(199,257,o),
(189,266,q),
(189,287,o),
(189,330,o),
(190,351,qs),
(190,362,o),
(198,382,o),
(193,392,qs),
(186,409,o),
(195,429,o),
(195,442,qs),
(195,446,l),
(221,474,o),
(280,541,o),
(335,605,o),
(377,653,o),
(386,662,q),
(389,664,o),
(392,671,o),
(393,675,q),
(395,677,o),
(398,681,o),
(394,684,qs),
(392,686,o),
(387,690,o),
(385,690,q),
(346,698,l),
(279,698,o),
(269,690,qs),
(265,686,o),
(251,698,o),
(242,698,qs),
(193,698,l),
(193,715,o),
(193,731,q),
(195,740,o),
(190,759,o),
(186,766,qs),
(180,776,o),
(171,777,q),
(170,773,o),
(160,754,o),
(161,726,qs),
(161,722,o),
(162,706,o),
(162,698,q),
(98,698,ls),
(88,698,o),
(72,690,o),
(61,690,q),
(52,692,o),
(41,680,o),
(41,673,qs),
(41,478,ls),
(41,473,o),
(43,462,o),
(47,457,q),
(41,429,l),
(41,422,o),
(43,410,o),
(47,404,qs),
(49,400,o),
(49,389,o),
(47,384,qs),
(44,372,o),
(45,341,o),
(49,318,o),
(48,317,qs),
(43,312,o),
(40,300,o),
(40,294,qs),
(41,272,o),
(42,201,o),
(42,120,o),
(41,47,o),
(41,23,qs),
(41,19,o),
(39,12,o),
(40,8,qs),
(41,4,o),
(58,-5,o),
(61,-2,q),
(66,1,o)
);
},
{
closed = 1;
nodes = (
(328,667,o),
(333,668,q),
(339,664,l),
(335,658,o),
(326,645,o),
(321,640,qs),
(317,636,o),
(297,607,o),
(272,573,o),
(249,546,o),
(242,544,q),
(238,538,o),
(231,521,o),
(221,519,qs),
(204,516,o),
(204,500,q),
(200,499,o),
(195,495,q),
(194,539,o),
(194,619,o),
(194,662,q),
(311,662,ls),
(316,662,o)
);
},
{
closed = 1;
nodes = (
(70,402,ls),
(70,403,o),
(71,421,o),
(73,433,qs),
(77,453,o),
(79,491,o),
(74,514,qs),
(71,527,o),
(69,568,o),
(70,613,qs),
(72,633,o),
(74,654,o),
(88,662,o),
(107,662,qs),
(163,662,l),
(163,610,o),
(164,529,o),
(164,474,qs),
(164,471,o),
(164,464,q),
(152,450,o),
(148,442,qs),
(147,439,o),
(120,415,o),
(89,390,o),
(81,383,q),
(74,386,l)
);
},
{
closed = 1;
nodes = (
(132,313,o),
(132,320,qs),
(132,329,o),
(114,334,o),
(108,338,qs),
(102,342,o),
(99,352,o),
(100,353,qs),
(107,361,o),
(119,378,o),
(128,384,qs),
(139,390,o),
(163,413,q),
(163,409,o),
(164,406,q),
(167,386,o),
(154,358,o),
(161,338,q),
(161,326,o),
(156,308,o),
(156,296,q),
(152,300,o),
(149,303,q),
(151,312,o)
);
},
{
closed = 1;
nodes = (
(74,40,o),
(74,47,qs),
(74,50,o),
(72,89,o),
(70,144,o),
(69,202,o),
(71,247,o),
(75,256,q),
(71,261,o),
(73,280,o),
(74,306,qs),
(74,309,o),
(75,314,o),
(76,317,q),
(76,319,o),
(85,319,o),
(87,318,qs),
(91,316,o),
(92,304,o),
(99,304,qs),
(107,304,o),
(108,288,o),
(118,289,q),
(123,286,o),
(132,278,o),
(137,275,qs),
(143,271,o),
(148,259,o),
(152,254,qs),
(156,250,l),
(156,232,o),
(158,192,o),
(162,183,q),
(159,170,o),
(160,149,o),
(163,135,qs),
(165,129,o),
(165,107,o),
(164,97,qs),
(163,85,o),
(160,52,o),
(158,35,q),
(133,35,o),
(98,35,o),
(88,35,qs),
(79,35,o)
);
},
{
closed = 1;
nodes = (
(193,125,o),
(188,139,q),
(188,160,o),
(188,201,o),
(189,221,q),
(206,206,o),
(235,180,o),
(245,164,q),
(252,166,o),
(257,157,o),
(261,148,o),
(268,148,q),
(271,145,o),
(298,119,o),
(333,87,o),
(361,60,o),
(364,57,qs),
(369,53,o),
(373,45,q),
(373,41,o),
(367,38,o),
(354,38,qs),
(305,37,o),
(225,36,o),
(194,36,q),
(196,47,o),
(192,70,o),
(189,81,q),
(196,96,o)
);
}
);
width = 441;
}
);
note = uni0E3F;
unicode = 3647;
},
{
glyphname = uniA789;
layers = (
{
layerId = m01;
shapes = (
{
ref = colon;
}
);
width = 233;
}
);
note = uniA789;
unicode = 42889;
},
{
glyphname = uni02EE;
layers = (
{
layerId = m01;
shapes = (
{
pos = (30,50);
ref = quotesingle;
},
{
pos = (150,50);
ref = quotesingle;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
50 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
50 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 242;
}
);
note = uni02EE;
unicode = 750;
},
{
glyphname = uni02D7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(344,353,o),
(350,358,q),
(348,377,o),
(354,396,o),
(360,416,o),
(356,434,q),
(360,467,l),
(360,478,o),
(357,498,o),
(355,508,q),
(363,542,o),
(338,560,o),
(330,539,q),
(331,535,o),
(330,527,o),
(327,502,o),
(324,470,q),
(275,470,o),
(215,473,o),
(175,476,o),
(141,478,o),
(99,476,o),
(65,472,q),
(64,486,o),
(61,531,o),
(64,538,q),
(57,560,o),
(31,543,o),
(37,509,q),
(35,502,o),
(31,487,o),
(30,479,q),
(37,449,o),
(39,397,o),
(36,368,q),
(41,362,o),
(48,357,o),
(52,367,q),
(57,375,o),
(64,385,o),
(69,394,q),
(69,403,o),
(68,425,o),
(67,437,q),
(82,437,l),
(321,435,l),
(323,422,o),
(326,372,o),
(332,358,qs),
(337,348,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 53 values pushed */
26 1 2 1 42 1 0 2 2 76 39 23 20 17 4 1 74 43 14 8 3 0 73 0 1 2 2 1 112 0 2 0 0 2 89 0 2 2 0 96 0 0 2 0 80 32 30 29 27 35 3 8 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 390;
}
);
note = uni02D7;
unicode = 727;
},
{
glyphname = uniA78A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(81,345,qs),
(86,349,o),
(96,350,o),
(100,350,qs),
(107,350,o),
(123,343,o),
(130,349,q),
(130,349,o),
(150,343,o),
(168,349,q),
(175,345,o),
(188,342,o),
(194,342,qs),
(205,342,o),
(245,352,o),
(256,351,qs),
(259,351,o),
(271,353,o),
(272,350,q),
(274,347,o),
(279,352,o),
(282,352,qs),
(287,352,o),
(295,358,o),
(299,360,q),
(296,378,o),
(283,385,o),
(269,385,o),
(263,390,q),
(263,390,o),
(247,382,o),
(242,382,qs),
(151,382,ls),
(147,382,o),
(135,384,o),
(134,382,q),
(82,382,ls),
(80,382,o),
(70,383,o),
(66,383,qs),
(59,383,o),
(50,374,o),
(43,372,qs),
(41,371,o),
(41,356,o),
(42,354,q),
(50,350,o),
(63,341,o),
(70,341,qs),
(74,341,o)
);
},
{
closed = 1;
nodes = (
(161,246,o),
(175,240,o),
(179,246,qs),
(180,247,o),
(193,243,o),
(206,242,o),
(206,247,q),
(206,247,o),
(219,250,o),
(222,248,qs),
(227,246,o),
(237,247,o),
(241,246,q),
(261,246,ls),
(274,246,o),
(284,253,o),
(295,257,qs),
(298,258,o),
(298,274,o),
(296,275,qs),
(290,279,o),
(278,287,o),
(270,287,qs),
(265,287,o),
(258,283,qs),
(254,280,o),
(242,283,o),
(239,278,qs),
(237,274,o),
(221,280,o),
(213,280,qs),
(209,280,o),
(197,279,o),
(192,278,qs),
(189,278,o),
(182,277,o),
(179,277,qs),
(166,277,o),
(109,277,o),
(53,274,o),
(40,269,q),
(41,265,o),
(53,245,o),
(85,246,qs),
(153,246,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
24 3 2 5 1 39 1 0 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 8 9 7 9 8 7 128 0 5 0 1 5 89 3 2 2 1 4 11 2 0 9 1 0 105 0 9 8 6 9 89 0 7 6 6 7 89 0 7 7 6 97 10 12 2 6 7 6 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 5 0 1 5 89 3 2 2 1 4 11 2 0 9 1 0 105 0 9 7 6 9 89 8 1 7 6 6 7 89 8 1 7 7 6 97 10 12 2 6 7 6 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 8 9 7 9 8 7 128 0 5 0 1 5 89 3 2 2 1 4 11 2 0 9 1 0 105 0 9 8 6 9 89 0 7 6 6 7 89 0 7 7 6 97 10 12 2 6 7 6 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
51 50 1 0 83 79 72 70 64 62 57 54 50 94 51 93 46 44 36 35 22 21 17 11 10 8 0 49 1 49 13 8 22 
CALL[ ]	/* CallFunction */";
};
width = 339;
}
);
note = uniA78A;
unicode = 42890;
},
{
glyphname = at;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(624,-67,o),
(630,-63,qs),
(633,-61,o),
(634,-50,o),
(634,-46,qs),
(634,32,l),
(628,45,o),
(614,45,qs),
(602,45,o),
(595,26,o),
(595,-2,o),
(595,-28,o),
(590,-36,q),
(577,-36,o),
(551,-38,o),
(538,-38,qs),
(509,-38,o),
(450,-37,o),
(421,-37,qs),
(407,-37,ls),
(403,-37,o),
(393,-36,o),
(388,-32,qs),
(386,-30,o),
(373,-37,o),
(368,-36,qs),
(363,-34,o),
(354,-30,o),
(348,-36,q),
(342,-39,o),
(336,-34,o),
(326,-28,o),
(312,-28,qs),
(86,-28,ls),
(81,-28,o),
(75,-18,o),
(78,-14,qs),
(83,-7,o),
(86,6,o),
(86,13,qs),
(86,114,ls),
(86,122,o),
(83,134,o),
(78,141,qs),
(77,143,o),
(79,151,o),
(80,154,q),
(88,163,o),
(88,178,qs),
(88,183,o),
(83,194,o),
(83,199,qs),
(83,255,o),
(86,334,o),
(86,370,qs),
(86,386,o),
(85,396,o),
(83,401,o),
(79,416,o),
(76,437,qs),
(76,438,o),
(79,456,o),
(82,475,o),
(82,475,q),
(82,479,o),
(83,503,o),
(83,528,o),
(83,531,qs),
(83,537,o),
(77,541,q),
(77,647,l),
(78,653,o),
(91,665,o),
(97,665,qs),
(103,666,o),
(116,666,o),
(122,666,qs),
(587,666,ls),
(601,666,o),
(605,660,o),
(605,646,qs),
(605,549,ls),
(605,542,o),
(603,529,o),
(599,522,qs),
(594,514,o),
(594,499,o),
(598,490,qs),
(601,485,o),
(603,478,o),
(598,473,qs),
(597,472,o),
(597,463,o),
(598,461,qs),
(603,454,o),
(605,443,o),
(599,435,qs),
(597,432,o),
(595,420,o),
(596,417,q),
(602,409,o),
(605,390,o),
(605,380,qs),
(605,261,ls),
(605,255,o),
(602,243,o),
(596,238,qs),
(595,237,o),
(596,230,o),
(595,228,q),
(594,221,o),
(607,207,o),
(596,199,q),
(596,176,l),
(584,173,o),
(579,169,o),
(565,167,q),
(561,175,o),
(552,190,o),
(544,197,qs),
(535,204,o),
(518,220,o),
(507,229,q),
(496,244,o),
(451,280,o),
(409,313,o),
(400,323,qs),
(393,333,o),
(358,365,o),
(316,399,o),
(282,428,o),
(274,435,qs),
(269,440,o),
(253,458,o),
(242,473,o),
(241,473,qs),
(232,475,o),
(215,489,o),
(206,493,qs),
(194,498,o),
(188,498,qs),
(177,498,o),
(167,482,o),
(167,474,qs),
(167,469,o),
(169,465,o),
(169,460,qs),
(169,452,o),
(163,434,o),
(163,425,qs),
(163,414,o),
(164,391,o),
(164,380,qs),
(164,369,o),
(163,346,o),
(163,335,qs),
(163,328,o),
(166,284,o),
(169,243,o),
(169,239,qs),
(169,226,o),
(168,185,o),
(168,176,qs),
(168,156,o),
(180,142,o),
(201,142,qs),
(207,142,o),
(219,143,o),
(226,143,qs),
(248,143,o),
(296,140,o),
(333,139,o),
(338,141,qs),
(343,143,o),
(358,142,o),
(365,142,qs),
(387,142,o),
(424,146,o),
(445,137,q),
(453,140,o),
(471,142,o),
(492,142,qs),
(507,142,o),
(518,137,qs),
(526,133,o),
(540,134,o),
(547,136,q),
(551,136,o),
(568,136,o),
(600,135,qs),
(610,135,o),
(624,144,o),
(632,146,q),
(634,147,o),
(636,157,o),
(634,161,q),
(634,419,ls),
(634,429,o),
(637,447,o),
(643,456,qs),
(644,458,o),
(635,469,o),
(636,472,q),
(639,477,o),
(644,487,o),
(644,494,qs),
(644,571,ls),
(644,582,o),
(638,589,qs),
(634,595,o),
(643,601,o),
(644,605,q),
(644,625,o),
(643,667,o),
(643,687,qs),
(643,692,o),
(632,699,o),
(627,702,qs),
(623,704,o),
(613,702,o),
(608,702,qs),
(559,702,o),
(421,703,o),
(271,704,o),
(134,705,o),
(84,705,qs),
(80,705,o),
(70,703,o),
(65,702,qs),
(60,702,o),
(47,689,o),
(47,684,qs),
(47,625,ls),
(47,617,o),
(45,600,o),
(45,592,q),
(36,585,o),
(47,574,o),
(47,567,qs),
(47,539,o),
(46,480,o),
(46,451,qs),
(46,447,o),
(40,437,o),
(41,435,q),
(46,429,o),
(48,417,o),
(48,411,qs),
(48,405,o),
(47,394,o),
(47,388,qs),
(47,-42,ls),
(47,-52,o),
(61,-67,o),
(71,-67,qs),
(308,-67,ls),
(314,-67,o),
(327,-68,o),
(331,-71,qs),
(341,-77,o),
(353,-66,o),
(361,-66,qs),
(389,-66,o),
(444,-67,o),
(472,-67,qs),
(480,-67,o),
(495,-69,o),
(501,-66,qs),
(507,-64,o),
(516,-72,o),
(526,-76,o),
(531,-69,q),
(537,-72,o),
(566,-75,o),
(596,-76,o),
(601,-76,qs),
(609,-76,o)
);
},
{
closed = 1;
nodes = (
(400,171,o),
(384,171,qs),
(373,171,o),
(343,174,o),
(288,176,o),
(237,172,qs),
(230,172,o),
(226,175,o),
(217,177,o),
(201,174,q),
(201,200,ls),
(201,213,o),
(202,238,o),
(204,251,q),
(204,259,o),
(201,287,o),
(201,294,qs),
(201,312,o),
(202,371,o),
(202,430,o),
(202,448,qs),
(202,462,l),
(212,448,o),
(234,432,o),
(253,416,o),
(260,400,q),
(280,385,o),
(316,346,o),
(340,338,qs),
(346,336,o),
(360,322,o),
(366,316,qs),
(397,285,o),
(457,236,o),
(502,198,o),
(510,183,qs),
(512,179,o),
(516,174,o),
(518,171,q),
(513,171,o),
(502,172,o),
(496,172,qs),
(487,172,o),
(457,172,o),
(446,166,q),
(433,175,o)
);
},
{
closed = 1;
nodes = (
(333,248,o),
(333,260,qs),
(333,267,o),
(319,292,o),
(301,292,qs),
(291,292,o),
(272,276,o),
(264,268,q),
(256,257,o),
(264,245,qs),
(270,238,o),
(283,230,o),
(293,231,qs),
(312,231,o)
);
},
{
closed = 1;
nodes = (
(288,256,q),
(287,261,o),
(288,262,q),
(292,269,o),
(298,269,qs),
(303,269,o),
(305,262,o),
(305,260,qs),
(305,253,o),
(295,253,q),
(292,252,o)
);
}
);
userData = {
assembly = "NPUSHW[ ]	/* 47 values pushed */
44 1 9 3 206 64 37 3 8 9 305 300 176 132 70 31 6 17 8 344 1 18 19 316 312 224 163 162 5 14 18 97 1 4 5 270 239 236 3 10 13 4 1 0 1 8 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
0 8 9 17 9 8 17 128 21 1 18 19 14 19 18 114 0 4 5 13 5 4 13 128 0 13 10 11 13 112 0 17 0 19 18 17 19 105 16 15 2 14 7 6 2 5 4 14 5 105 0 10 11 1 10 87 2 1 1 0 11 1 88 12 1 11 20 1 0 11 0 102 0 9 9 3 95 0 3 3 37 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 84 values pushed */
0 8 9 17 9 8 17 128 21 1 18 19 14 19 18 114 0 4 5 13 5 4 13 128 0 13 10 5 13 10 126 0 17 0 19 18 17 19 105 16 15 2 14 7 6 2 5 4 14 5 105 0 10 11 1 10 87 2 1 1 0 11 1 88 12 1 11 20 1 0 11 0 102 0 9 9 3 95 0 3 3 37 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 85 values pushed */
0 8 9 17 9 8 17 128 21 1 18 19 14 19 18 14 128 0 4 5 13 5 4 13 128 0 13 10 5 13 10 126 0 17 0 19 18 17 19 105 16 15 2 14 7 6 2 5 4 14 5 105 0 10 11 1 10 87 2 1 1 0 11 1 88 12 1 11 20 1 0 11 0 102 0 9 9 3 95 0 3 3 37 9 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 51 values pushed */
323 323 2 0 343 341 323 336 323 336 332 330 321 319 318 317 282 278 269 267 263 262 261 255 244 241 201 197 135 134 111 104 102 99 95 93 88 85 55 49 22 19 14 10 0 276 2 276 22 8 22 
CALL[ ]	/* CallFunction */";
};
width = 684;
}
);
note = at;
unicode = 64;
},
{
glyphname = ampersand;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(391,675,o),
(395,693,o),
(389,695,qs),
(385,697,o),
(362,698,o),
(340,699,o),
(335,699,qs),
(249,699,ls),
(227,699,o),
(197,700,o),
(168,700,qs),
(162,700,o),
(144,701,o),
(133,701,qs),
(117,701,o),
(89,695,o),
(89,686,qs),
(89,675,o),
(96,669,q),
(103,656,o),
(125,613,o),
(146,578,o),
(149,575,q),
(149,559,o),
(167,534,o),
(176,520,qs),
(185,506,o),
(198,484,o),
(206,476,qs),
(211,472,o),
(210,462,o),
(208,457,qs),
(199,438,o),
(181,401,o),
(170,384,qs),
(166,377,o),
(166,362,o),
(160,356,qs),
(148,344,o),
(136,314,o),
(128,300,qs),
(121,284,o),
(102,256,o),
(100,238,qs),
(100,231,o),
(93,220,o),
(88,215,qs),
(82,209,o),
(65,172,o),
(50,134,o),
(46,126,qs),
(40,116,o),
(29,84,o),
(25,73,qs),
(21,62,o),
(6,42,o),
(1,31,qs),
(0,28,o),
(1,19,o),
(1,14,qs),
(1,0,o),
(14,0,qs),
(207,2,ls),
(213,2,o),
(225,4,o),
(229,2,q),
(235,-3,o),
(257,-8,o),
(268,-8,qs),
(288,-8,o),
(302,6,q),
(310,1,o),
(326,-2,o),
(335,-2,qs),
(441,-2,l),
(448,-11,o),
(454,-24,qs),
(464,-44,o),
(477,-61,o),
(484,-75,qs),
(491,-88,o),
(511,-103,o),
(520,-114,qs),
(523,-118,o),
(538,-110,o),
(537,-105,qs),
(534,-93,o),
(513,-54,o),
(490,-15,o),
(482,-2,q),
(473,20,o),
(456,47,o),
(436,74,o),
(411,118,o),
(393,156,qs),
(387,169,o),
(378,198,o),
(371,211,qs),
(363,228,o),
(343,261,o),
(332,277,qs),
(324,291,o),
(316,319,o),
(308,332,qs),
(301,345,o),
(289,383,o),
(281,396,qs),
(264,430,o),
(228,495,o),
(201,544,o),
(197,552,qs),
(194,559,o),
(170,600,o),
(143,649,o),
(134,667,q),
(358,667,l),
(374,662,o)
);
},
{
closed = 1;
nodes = (
(259,29,o),
(255,29,qs),
(246,29,o),
(228,30,o),
(219,30,qs),
(53,28,ls),
(44,28,o),
(42,31,o),
(45,41,q),
(45,42,o),
(49,55,q),
(49,59,o),
(58,77,qs),
(75,111,o),
(118,203,o),
(162,297,o),
(178,330,qs),
(182,338,o),
(192,351,o),
(192,361,qs),
(192,364,o),
(197,372,o),
(199,375,q),
(210,386,o),
(210,399,qs),
(210,404,o),
(219,412,o),
(223,415,qs),
(225,416,o),
(233,415,o),
(234,414,q),
(239,405,o),
(262,363,o),
(284,322,o),
(287,312,qs),
(292,299,o),
(308,276,o),
(308,261,qs),
(308,256,o),
(316,243,o),
(320,238,qs),
(331,225,o),
(336,189,o),
(352,178,q),
(352,154,o),
(381,114,o),
(390,93,qs),
(395,78,o),
(423,44,o),
(427,37,qs),
(430,33,o),
(405,35,o),
(391,35,qs),
(382,35,o),
(376,32,qs),
(372,29,o),
(366,29,qs),
(356,29,o),
(317,36,o),
(300,36,qs),
(290,36,o),
(274,29,o),
(269,24,qs),
(265,20,o)
);
},
{
closed = 1;
nodes = (
(246,141,o),
(253,150,qs),
(259,158,o),
(259,166,qs),
(259,174,o),
(248,192,o),
(241,193,qs),
(231,195,o),
(199,192,o),
(199,178,qs),
(199,167,o),
(185,157,o),
(193,149,qs),
(207,135,ls),
(218,125,o)
);
},
{
closed = 1;
nodes = (
(214,161,o),
(218,163,o),
(218,167,qs),
(218,171,o),
(226,172,o),
(229,171,qs),
(234,169,o),
(234,163,qs),
(234,160,o),
(232,159,q),
(231,157,o),
(223,152,o),
(220,155,qs),
(216,159,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
136 93 2 9 0 201 1 5 9 56 45 2 1 6 3 76 0 9 0 5 0 9 5 128 0 0 0 4 95 0 4 4 37 77 7 1 5 5 1 95 3 1 1 1 38 77 8 1 6 6 1 95 3 1 1 1 38 77 0 2 2 44 2 78 205 203 178 174 128 126 123 122 121 119 112 101 55 50 48 46 43 41 16 10 8 23 
CALL[ ]	/* CallFunction */";
};
width = 537;
}
);
note = ampersand;
unicode = 38;
},
{
glyphname = paragraph;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(443,-132,o),
(447,-127,q),
(446,-108,o),
(453,-74,o),
(457,-40,o),
(450,-22,q),
(457,-8,o),
(453,22,o),
(449,36,q),
(456,51,o),
(453,80,o),
(448,94,q),
(449,147,o),
(449,232,o),
(450,284,qs),
(450,295,o),
(458,315,o),
(453,325,qs),
(446,342,o),
(455,362,o),
(455,375,qs),
(455,429,o),
(454,520,o),
(454,611,o),
(453,664,q),
(455,673,o),
(450,692,o),
(446,699,qs),
(440,709,o),
(431,710,q),
(430,706,o),
(420,687,o),
(421,659,qs),
(421,652,o),
(423,614,o),
(423,607,qs),
(423,569,o),
(424,507,o),
(424,446,o),
(424,407,qs),
(423,391,o),
(422,354,o),
(424,339,qs),
(427,319,o),
(414,291,o),
(421,271,q),
(421,257,o),
(415,235,o),
(416,220,qs),
(417,204,o),
(415,153,o),
(422,138,q),
(419,125,o),
(420,104,o),
(423,90,qs),
(425,84,o),
(425,62,o),
(424,52,qs),
(423,37,o),
(418,-7,o),
(416,-52,o),
(416,-67,q),
(421,-95,o),
(426,-120,o),
(430,-128,qs),
(435,-137,o)
);
},
{
closed = 1;
nodes = (
(345,-132,o),
(346,-127,qs),
(348,-120,o),
(351,-85,o),
(353,-51,o),
(353,-44,qs),
(353,-37,o),
(350,-24,o),
(345,-19,q),
(344,-17,o),
(346,-8,o),
(350,21,o),
(352,85,o),
(349,142,qs),
(349,148,o),
(354,157,o),
(346,161,q),
(346,165,o),
(345,171,o),
(344,202,o),
(345,241,qs),
(345,250,o),
(350,254,qs),
(356,260,o),
(349,268,qs),
(345,272,o),
(353,293,o),
(352,293,q),
(348,298,o),
(345,322,o),
(345,326,qs),
(345,445,o),
(345,586,o),
(345,656,o),
(345,681,o),
(344,684,qs),
(344,685,o),
(343,685,o),
(343,686,qs),
(341,698,o),
(300,707,o),
(255,704,o),
(245,698,qs),
(241,695,o),
(227,698,o),
(220,698,qs),
(166,698,o),
(104,698,o),
(74,698,o),
(62,697,o),
(59,697,qs),
(52,697,o),
(41,687,o),
(41,680,qs),
(41,660,o),
(41,646,o),
(41,632,o),
(40,612,qs),
(40,607,o),
(47,580,o),
(48,575,q),
(49,556,o),
(49,514,o),
(49,493,q),
(43,488,o),
(41,458,o),
(48,453,q),
(44,447,o),
(40,436,o),
(47,430,q),
(41,424,o),
(45,412,o),
(52,399,o),
(50,389,qs),
(49,383,o),
(62,373,o),
(69,373,qs),
(106,370,o),
(192,367,o),
(263,367,o),
(277,368,q),
(285,372,o),
(308,368,o),
(318,366,q),
(318,364,o),
(319,340,o),
(319,310,o),
(318,287,o),
(316,286,qs),
(310,282,o),
(318,274,o),
(316,270,q),
(311,265,o),
(317,258,qs),
(321,252,o),
(314,245,qs),
(308,239,o),
(314,232,qs),
(324,222,o),
(317,211,qs),
(309,196,o),
(312,180,o),
(311,168,qs),
(311,166,o),
(313,123,o),
(315,61,o),
(317,-6,o),
(318,-60,o),
(317,-73,q),
(319,-83,o),
(315,-98,o),
(315,-102,qs),
(315,-109,o),
(326,-122,o),
(330,-129,qs),
(333,-134,o)
);
},
{
closed = 1;
nodes = (
(260,397,o),
(202,400,o),
(145,402,o),
(100,403,o),
(91,403,q),
(83,405,o),
(83,411,qs),
(83,426,o),
(84,435,o),
(83,439,o),
(79,455,o),
(75,476,qs),
(73,490,o),
(78,496,o),
(82,500,o),
(77,509,q),
(85,515,o),
(82,542,o),
(83,549,qs),
(85,555,o),
(79,565,o),
(77,569,q),
(83,574,o),
(78,583,o),
(72,592,o),
(74,597,qs),
(76,602,o),
(75,628,o),
(75,657,qs),
(75,667,o),
(84,667,qs),
(152,667,o),
(237,667,o),
(241,668,q),
(252,667,o),
(258,667,qs),
(265,667,o),
(278,670,o),
(285,674,qs),
(290,677,o),
(297,666,o),
(303,671,qs),
(307,674,o),
(313,660,o),
(316,642,o),
(313,638,qs),
(308,633,o),
(313,628,qs),
(320,621,o),
(319,608,o),
(318,600,q),
(308,590,o),
(315,571,o),
(310,557,qs),
(308,550,o),
(320,541,o),
(314,533,qs),
(313,531,o),
(311,533,o),
(311,524,o),
(311,485,o),
(311,441,qs),
(312,426,o),
(313,404,o),
(314,396,q),
(305,396,o)
);
},
{
closed = 1;
nodes = (
(232,520,o),
(218,530,o),
(218,541,qs),
(218,556,o),
(187,559,o),
(176,557,qs),
(169,556,o),
(158,537,o),
(158,529,qs),
(158,521,o),
(164,513,qs),
(171,504,o),
(200,488,o),
(210,498,qs),
(224,512,ls)
);
},
{
closed = 1;
nodes = (
(187,520,o),
(185,522,q),
(183,523,o),
(183,526,qs),
(183,532,o),
(188,534,qs),
(191,535,o),
(199,534,o),
(199,530,qs),
(199,526,o),
(203,524,o),
(201,522,qs),
(197,518,ls),
(194,515,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 87 values pushed */
142 127 2 4 1 240 231 225 201 120 117 114 111 40 9 6 4 2 76 153 150 89 72 63 59 56 53 19 13 7 3 12 0 73 7 1 6 0 0 6 0 101 5 1 4 4 3 97 0 3 3 37 77 5 1 4 4 1 97 2 1 1 1 39 4 78 182 182 182 247 182 242 217 213 212 210 140 139 135 132 131 129 103 101 8 8 22 
CALL[ ]	/* CallFunction */";
};
width = 495;
}
);
note = paragraph;
unicode = 182;
},
{
glyphname = section;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(170,-73,o),
(196,-44,o),
(221,-15,o),
(228,-6,qs),
(235,2,o),
(247,16,o),
(253,23,q),
(253,34,o),
(272,39,o),
(272,49,q),
(280,54,o),
(290,69,o),
(294,77,qs),
(299,85,o),
(314,92,o),
(318,99,qs),
(322,105,o),
(329,118,o),
(336,120,qs),
(344,123,o),
(346,140,o),
(352,144,qs),
(362,149,o),
(388,175,o),
(410,205,o),
(415,216,qs),
(419,227,o),
(400,239,o),
(384,239,qs),
(373,239,o),
(366,233,qs),
(358,228,o),
(349,228,qs),
(345,228,o),
(325,236,o),
(323,236,q),
(326,238,o),
(331,242,o),
(332,245,q),
(337,251,o),
(343,264,o),
(350,266,qs),
(358,269,o),
(360,286,o),
(367,290,qs),
(381,298,o),
(418,337,o),
(429,362,q),
(432,367,o),
(420,384,o),
(415,384,qs),
(405,384,o),
(388,386,o),
(380,379,q),
(363,368,o),
(346,379,qs),
(339,383,o),
(311,386,o),
(302,386,q),
(281,381,o),
(247,383,o),
(214,388,o),
(192,385,q),
(173,385,ls),
(165,385,o),
(138,375,o),
(136,375,qs),
(128,375,o),
(116,386,o),
(105,386,qs),
(101,386,o),
(118,409,o),
(145,441,o),
(170,468,o),
(173,472,qs),
(179,479,o),
(195,509,o),
(203,512,q),
(215,519,o),
(233,538,o),
(238,552,q),
(255,572,o),
(289,611,o),
(306,630,q),
(315,634,o),
(327,653,o),
(327,660,qs),
(327,668,o),
(310,666,o),
(288,655,o),
(271,641,o),
(271,636,qs),
(270,629,o),
(250,603,o),
(229,581,o),
(224,576,qs),
(219,571,o),
(197,546,o),
(176,521,o),
(172,516,qs),
(165,507,o),
(149,490,o),
(141,481,qs),
(134,473,o),
(120,456,o),
(112,448,qs),
(105,440,o),
(87,423,o),
(82,412,qs),
(76,401,o),
(57,387,o),
(46,373,qs),
(42,367,o),
(53,349,o),
(66,349,qs),
(73,350,o),
(87,349,o),
(94,349,qs),
(139,349,l),
(137,347,o),
(121,328,o),
(103,308,o),
(98,303,qs),
(91,294,o),
(73,278,o),
(68,267,qs),
(64,257,o),
(38,236,o),
(32,227,qs),
(27,220,o),
(41,202,o),
(52,202,qs),
(59,203,o),
(73,202,o),
(80,202,qs),
(106,202,o),
(125,204,o),
(132,202,q),
(244,202,ls),
(249,202,o),
(259,200,o),
(262,202,q),
(269,209,o),
(285,207,o),
(292,207,qs),
(329,207,ls),
(346,207,o),
(374,207,o),
(374,205,q),
(364,195,o),
(345,173,o),
(341,160,q),
(334,159,o),
(324,147,o),
(319,142,qs),
(300,123,o),
(268,81,o),
(245,67,qs),
(235,61,o),
(234,54,qs),
(232,45,o),
(219,38,o),
(217,33,qs),
(215,27,o),
(198,5,o),
(181,-14,o),
(178,-18,qs),
(169,-28,o),
(162,-35,o),
(157,-43,o),
(149,-56,qs),
(147,-60,o),
(136,-66,o),
(131,-71,qs),
(118,-84,o),
(133,-101,o),
(149,-96,q),
(150,-95,o)
);
},
{
closed = 1;
nodes = (
(265,241,o),
(257,239,qs),
(253,238,o),
(243,239,o),
(238,234,q),
(237,231,o),
(213,240,o),
(207,234,qs),
(198,227,o),
(192,233,qs),
(187,239,o),
(178,239,qs),
(165,239,o),
(145,236,o),
(131,233,q),
(88,240,l),
(101,254,o),
(128,291,o),
(140,306,q),
(142,315,o),
(154,321,o),
(158,326,qs),
(163,331,o),
(169,344,o),
(173,349,q),
(177,349,o),
(189,349,o),
(224,349,o),
(259,349,qs),
(263,349,o),
(272,347,o),
(274,349,qs),
(280,354,o),
(292,357,o),
(299,357,qs),
(305,357,ls),
(343,357,o),
(368,346,o),
(368,337,qs),
(368,330,o),
(358,314,o),
(355,306,q),
(348,305,o),
(338,293,o),
(333,288,qs),
(320,275,o),
(295,244,o),
(281,231,q),
(275,229,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 112 values pushed */
210 1 11 3 211 1 10 11 28 1 1 0 3 76 170 167 2 1 73 0 5 4 12 4 5 114 0 10 11 0 11 10 0 128 0 0 1 11 0 1 126 0 12 3 4 12 89 9 8 7 6 4 4 13 1 3 11 4 3 105 14 1 11 10 1 11 89 14 1 11 11 1 97 2 1 1 11 1 81 215 213 200 194 192 189 149 147 145 143 126 125 119 118 117 116 114 112 111 109 108 106 63 57 46 41 39 35 32 30 15 8 22 
CALL[ ]	/* CallFunction */";
};
width = 460;
}
);
note = section;
unicode = 167;
},
{
glyphname = copyright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(550,4,o),
(564,13,o),
(569,17,qs),
(571,19,o),
(572,28,o),
(572,32,qs),
(572,85,o),
(572,163,o),
(573,235,o),
(573,320,o),
(573,380,qs),
(573,388,o),
(576,403,o),
(580,410,q),
(582,412,o),
(574,422,o),
(575,424,qs),
(577,429,o),
(581,437,o),
(581,443,qs),
(581,532,ls),
(581,542,o),
(576,548,qs),
(572,553,o),
(581,558,o),
(581,562,qs),
(581,597,ls),
(581,606,o),
(580,624,o),
(580,633,qs),
(580,638,o),
(571,647,o),
(566,649,qs),
(563,651,o),
(554,649,o),
(550,649,qs),
(78,649,ls),
(74,649,o),
(65,650,o),
(61,649,qs),
(57,649,o),
(45,635,o),
(45,630,qs),
(45,580,ls),
(45,573,o),
(46,558,o),
(45,551,q),
(37,545,o),
(45,535,o),
(45,529,qs),
(45,478,ls),
(45,474,o),
(39,466,o),
(40,464,q),
(44,460,o),
(45,450,o),
(45,445,qs),
(45,35,ls),
(45,13,o),
(66,13,qs),
(113,13,o),
(158,13,o),
(175,12,o),
(179,10,qs),
(187,5,o),
(198,13,o),
(205,13,qs),
(293,13,o),
(393,12,o),
(440,12,o),
(454,12,o),
(457,13,qs),
(465,15,o),
(476,3,o),
(483,13,q),
(497,4,o),
(512,4,qs),
(544,4,ls)
);
},
{
closed = 1;
nodes = (
(168,47,o),
(161,47,qs),
(78,47,ls),
(74,47,o),
(69,56,o),
(72,59,qs),
(77,65,o),
(79,76,o),
(79,83,qs),
(79,121,ls),
(79,127,o),
(77,139,o),
(72,144,q),
(70,149,o),
(74,155,qs),
(87,173,o),
(76,195,qs),
(73,203,o),
(73,215,o),
(78,221,q),
(80,222,o),
(79,228,o),
(78,229,qs),
(74,234,o),
(71,243,o),
(71,248,qs),
(71,265,o),
(72,282,o),
(78,288,q),
(81,294,o),
(76,299,qs),
(72,304,o),
(72,314,o),
(70,319,q),
(69,327,o),
(81,341,o),
(71,348,q),
(71,598,l),
(72,603,o),
(84,614,o),
(89,614,qs),
(531,614,ls),
(543,614,o),
(547,610,o),
(547,597,qs),
(547,491,ls),
(547,484,o),
(546,473,o),
(542,467,qs),
(533,455,o),
(542,439,qs),
(546,430,o),
(542,425,qs),
(541,424,o),
(538,416,o),
(539,414,q),
(544,408,o),
(547,398,o),
(542,391,qs),
(540,389,o),
(537,378,o),
(539,376,qs),
(542,372,o),
(546,353,o),
(547,299,o),
(547,242,qs),
(547,228,o),
(539,220,qs),
(538,219,o),
(540,214,o),
(539,212,qs),
(537,205,o),
(548,193,o),
(539,187,q),
(539,61,ls),
(539,49,o),
(534,40,q),
(523,40,o),
(500,39,o),
(488,39,qs),
(257,39,ls),
(250,39,o),
(236,39,o),
(229,44,qs),
(227,46,o),
(215,39,o),
(211,40,qs),
(207,42,o),
(199,46,o),
(194,40,q),
(188,37,o),
(186,39,qs),
(181,44,o)
);
},
{
closed = 1;
nodes = (
(348,174,o),
(350,176,qs),
(359,185,o),
(390,179,o),
(416,176,o),
(416,187,qs),
(416,192,o),
(413,202,qs),
(412,208,o),
(387,206,o),
(382,206,qs),
(349,207,o),
(335,206,o),
(338,205,qs),
(309,212,o),
(279,216,o),
(268,207,q),
(258,215,o),
(242,215,o),
(232,207,qs),
(225,201,o),
(210,223,o),
(210,228,qs),
(211,257,o),
(218,266,qs),
(223,272,o),
(214,287,o),
(213,294,qs),
(213,305,o),
(223,318,o),
(219,326,qs),
(216,333,o),
(211,353,o),
(217,360,qs),
(222,366,o),
(212,387,o),
(212,394,q),
(213,388,o),
(214,403,o),
(215,430,o),
(215,443,q),
(220,445,o),
(231,446,o),
(237,446,qs),
(271,446,ls),
(288,446,o),
(296,455,o),
(301,456,o),
(313,445,q),
(336,444,ls),
(344,444,o),
(348,454,o),
(356,459,o),
(370,449,q),
(374,447,o),
(383,443,o),
(387,443,qs),
(399,443,ls),
(405,443,o),
(419,454,o),
(420,459,qs),
(422,465,o),
(408,479,o),
(400,479,qs),
(208,483,ls),
(198,483,o),
(191,476,o),
(184,470,q),
(183,470,o),
(181,457,o),
(182,456,q),
(186,449,o),
(186,434,o),
(187,427,qs),
(188,419,o),
(188,369,o),
(188,304,o),
(188,241,o),
(188,198,o),
(188,195,qs),
(188,190,o),
(195,179,o),
(199,179,qs),
(205,178,o),
(216,179,o),
(222,178,q),
(266,177,o),
(309,178,o),
(325,178,o),
(328,176,o),
(331,173,q),
(333,172,o)
);
},
{
closed = 1;
nodes = (
(345,204,o),
(344,204,qs),
(340,205,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 150 values pushed */
34 1 5 3 51 30 27 3 8 5 191 1 9 8 239 234 188 144 133 114 6 12 9 248 96 2 7 13 164 161 2 6 7 71 2 2 1 4 7 76 57 1 9 245 1 13 78 1 4 3 75 0 13 12 7 12 13 7 128 14 1 0 1 1 0 113 0 3 0 5 8 3 5 103 0 8 11 10 2 9 12 8 9 105 0 12 0 7 6 12 7 105 0 6 4 1 6 87 0 4 1 1 4 87 0 4 4 1 98 2 1 1 4 1 82 1 0 253 250 244 243 220 216 213 211 205 203 198 196 178 174 168 166 129 128 93 87 41 39 18 15 10 5 0 77 1 76 15 8 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 621;
}
);
note = copyright;
unicode = 169;
},
{
glyphname = registered;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(211,350,o),
(218,349,qs),
(226,349,o),
(266,348,o),
(304,350,o),
(308,351,qs),
(315,353,o),
(327,342,o),
(334,352,q),
(348,342,o),
(376,346,o),
(393,346,qs),
(400,346,o),
(413,353,o),
(420,357,q),
(422,359,o),
(423,368,o),
(423,372,qs),
(423,729,ls),
(423,734,o),
(414,738,o),
(409,738,qs),
(375,738,o),
(281,740,o),
(177,740,o),
(79,740,o),
(40,738,q),
(40,370,l),
(42,349,o),
(61,349,qs),
(64,349,o),
(94,348,o),
(131,349,o),
(161,348,o),
(164,348,qs),
(172,348,o),
(187,348,o),
(192,345,qs),
(200,340,o)
);
},
{
closed = 1;
nodes = (
(248,374,o),
(241,379,qs),
(239,381,o),
(228,374,o),
(224,375,qs),
(220,377,o),
(212,381,o),
(207,376,qs),
(203,372,o),
(199,375,qs),
(196,377,o),
(165,379,o),
(122,379,o),
(85,379,o),
(76,379,qs),
(72,379,o),
(67,387,o),
(69,391,q),
(74,396,o),
(76,407,o),
(76,414,qs),
(76,430,o),
(73,478,o),
(73,494,qs),
(73,509,o),
(67,517,qs),
(63,521,o),
(68,528,qs),
(75,538,o),
(75,549,qs),
(75,554,o),
(73,564,o),
(71,568,qs),
(63,583,o),
(73,593,q),
(75,596,o),
(72,601,q),
(72,663,l),
(74,664,o),
(72,672,o),
(70,673,q),
(64,680,o),
(66,694,o),
(70,704,q),
(77,705,o),
(111,707,o),
(145,708,o),
(152,708,qs),
(160,708,o),
(174,709,o),
(181,701,q),
(192,699,o),
(204,710,o),
(210,701,q),
(214,701,o),
(254,703,o),
(305,706,o),
(345,707,o),
(348,707,qs),
(359,706,o),
(388,703,o),
(391,703,q),
(391,666,o),
(393,629,o),
(394,604,o),
(392,565,o),
(389,525,q),
(389,468,ls),
(389,459,o),
(389,419,o),
(387,384,o),
(385,380,q),
(347,379,o),
(281,374,o),
(269,374,qs),
(262,374,o)
);
},
{
closed = 1;
nodes = (
(185,454,o),
(183,477,qs),
(182,489,o),
(182,509,o),
(182,515,q),
(194,520,o),
(210,520,o),
(223,519,q),
(229,512,o),
(245,490,o),
(249,484,qs),
(265,462,ls),
(274,449,o),
(286,445,o),
(299,434,qs),
(301,432,o),
(311,439,o),
(310,441,qs),
(307,449,o),
(301,466,o),
(296,473,qs),
(292,479,o),
(285,483,qs),
(280,487,o),
(270,496,o),
(267,500,qs),
(255,518,l),
(263,518,o),
(278,518,o),
(282,519,q),
(287,519,o),
(300,532,o),
(300,537,qs),
(301,545,o),
(301,558,o),
(298,589,q),
(300,605,o),
(300,616,o),
(299,623,qs),
(299,628,o),
(286,641,o),
(281,641,qs),
(274,642,o),
(240,641,o),
(206,640,o),
(198,640,qs),
(185,640,o),
(162,643,o),
(149,636,o),
(150,620,qs),
(154,578,l),
(151,540,ls),
(150,525,o),
(155,467,o),
(161,434,q),
(166,435,o)
);
},
{
closed = 1;
nodes = (
(226,545,o),
(198,547,o),
(191,548,q),
(188,553,o),
(184,565,o),
(185,571,q),
(184,591,o),
(182,607,o),
(185,612,q),
(193,613,o),
(240,612,o),
(263,613,qs),
(268,613,o),
(269,598,o),
(268,590,qs),
(267,582,ls),
(266,578,o),
(270,576,o),
(273,570,qs),
(278,562,o),
(265,547,o),
(259,547,qs),
(254,546,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
52 1 9 6 120 1 12 9 187 177 134 119 79 77 6 13 12 118 47 2 10 13 165 152 96 93 4 5 10 29 20 10 3 0 4 6 76 184 1 12 1 75 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
52 1 9 6 120 1 12 9 187 177 134 119 79 77 6 13 12 118 47 2 10 13 165 152 96 93 4 4 10 29 20 10 3 0 4 6 76 184 1 12 1 75 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
52 1 9 6 120 1 12 9 187 177 134 119 79 77 6 13 12 118 47 2 10 13 165 152 96 93 4 5 10 29 20 10 3 0 4 6 76 184 1 12 1 75 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 13 12 10 12 13 10 128 11 1 10 5 12 10 112 0 1 7 1 6 9 1 6 105 0 9 0 12 13 9 12 105 0 5 4 0 5 89 8 14 2 4 0 0 4 89 8 14 2 4 4 0 98 3 2 2 0 4 0 82 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 13 12 10 12 13 10 128 11 1 10 4 12 10 112 0 1 7 1 6 9 1 6 105 0 9 0 12 13 9 12 105 8 5 14 3 4 0 0 4 89 8 5 14 3 4 4 0 98 3 2 2 0 4 0 82 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 13 12 10 12 13 10 128 11 1 10 4 12 10 4 126 0 1 7 1 6 9 1 6 105 0 9 0 12 13 9 12 105 8 5 14 3 4 0 0 4 89 8 5 14 3 4 4 0 98 3 2 2 0 4 0 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 13 12 10 12 13 10 128 11 1 10 5 12 10 5 126 0 1 7 1 6 9 1 6 105 0 9 0 12 13 9 12 105 0 5 4 0 5 89 8 14 2 4 0 0 4 89 8 14 2 4 4 0 98 3 2 2 0 4 0 82 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
40 39 193 192 183 180 164 163 142 141 127 123 103 98 69 65 59 55 42 41 39 114 40 113 55 41 82 114 15 8 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 463;
}
);
note = registered;
unicode = 174;
},
{
glyphname = trademark;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(743,405,o),
(743,412,qs),
(743,428,o),
(744,436,o),
(744,438,o),
(745,447,o),
(745,463,qs),
(745,468,o),
(735,476,o),
(742,483,qs),
(747,488,o),
(739,495,o),
(739,499,qs),
(739,583,l),
(744,589,o),
(746,604,o),
(740,610,q),
(745,629,o),
(748,644,o),
(741,650,q),
(746,657,o),
(746,661,qs),
(746,712,o),
(721,712,qs),
(716,712,o),
(699,704,o),
(689,690,qs),
(683,681,o),
(670,651,o),
(663,639,qs),
(657,629,o),
(643,609,o),
(640,598,qs),
(637,585,o),
(621,563,o),
(615,552,qs),
(596,517,o),
(565,460,o),
(558,454,q),
(533,490,o),
(518,530,o),
(515,546,o),
(507,546,qs),
(503,546,o),
(496,563,o),
(494,569,qs),
(486,605,o),
(452,653,o),
(445,663,qs),
(434,678,o),
(413,702,o),
(410,703,q),
(404,708,o),
(382,698,o),
(384,688,q),
(384,685,ls),
(384,678,o),
(379,660,o),
(379,653,qs),
(379,647,o),
(386,642,q),
(379,635,o),
(381,606,o),
(385,601,q),
(372,590,o),
(383,577,q),
(383,557,o),
(384,513,o),
(384,493,qs),
(384,489,o),
(373,482,o),
(377,477,q),
(385,470,o),
(377,463,o),
(377,458,qs),
(376,415,ls),
(376,409,o),
(386,398,o),
(392,398,qs),
(403,398,o),
(411,408,o),
(411,410,qs),
(410,414,o),
(405,435,o),
(406,438,q),
(406,446,ls),
(406,453,o),
(408,466,o),
(406,472,qs),
(402,481,o),
(416,493,o),
(408,501,q),
(411,512,o),
(419,552,o),
(409,561,q),
(415,570,o),
(408,580,qs),
(405,586,o),
(408,596,q),
(410,616,o),
(414,632,o),
(416,642,o),
(416,653,q),
(436,626,o),
(476,546,o),
(512,467,o),
(540,411,o),
(546,408,qs),
(557,404,o),
(567,408,o),
(575,408,q),
(706,667,ls),
(708,672,o),
(708,652,o),
(708,643,qs),
(708,639,o),
(714,614,o),
(719,590,o),
(715,586,q),
(709,577,o),
(715,567,q),
(706,560,o),
(708,537,o),
(706,525,qs),
(705,520,o),
(713,511,o),
(714,506,q),
(707,499,o),
(717,486,o),
(714,478,qs),
(711,472,o),
(714,459,o),
(714,452,qs),
(714,436,l),
(713,432,o),
(712,423,o),
(712,420,qs),
(712,402,o),
(723,395,o),
(725,395,qs),
(732,395,o)
);
},
{
closed = 1;
nodes = (
(205,436,o),
(207,456,qs),
(207,461,o),
(208,496,o),
(208,531,o),
(208,535,qs),
(209,552,o),
(209,603,o),
(209,616,qs),
(209,630,o),
(209,656,o),
(208,667,q),
(212,668,o),
(246,665,o),
(267,662,q),
(287,662,o),
(307,664,o),
(323,669,o),
(336,671,q),
(337,701,o),
(290,701,qs),
(279,701,o),
(269,701,o),
(252,700,o),
(232,700,qs),
(229,700,o),
(199,700,o),
(162,700,o),
(130,700,o),
(124,700,qs),
(40,700,l),
(42,679,o),
(81,669,o),
(94,669,qs),
(102,668,o),
(117,668,o),
(124,668,qs),
(143,667,o),
(168,667,o),
(177,667,q),
(177,653,o),
(176,622,o),
(176,602,qs),
(176,569,o),
(175,489,o),
(175,416,o),
(175,392,q),
(195,394,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
169 85 2 4 6 126 123 120 118 79 76 74 45 37 21 19 11 2 7 138 127 101 65 55 51 48 13 7 3 10 0 2 3 76 141 1 0 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
169 85 2 4 6 126 123 120 118 79 76 74 45 37 21 19 11 2 7 138 127 101 65 55 51 48 13 7 3 10 1 2 3 76 141 1 0 73 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
169 85 2 4 6 126 123 120 118 79 76 74 45 37 21 19 11 2 7 138 127 101 65 55 51 48 13 7 3 10 0 2 3 76 141 1 0 73 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 6 3 133 0 7 4 2 4 7 114 0 2 0 4 2 0 126 1 8 2 0 0 132 0 6 4 4 6 87 0 6 6 4 97 5 1 4 6 4 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 3 6 3 133 0 7 4 2 4 7 114 0 2 1 4 2 1 126 0 1 0 4 1 0 126 8 1 0 0 132 0 6 4 4 6 87 0 6 6 4 97 5 1 4 6 4 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 3 6 3 133 0 7 4 2 4 7 114 0 2 0 4 2 0 126 1 8 2 0 0 132 0 6 4 4 6 87 0 6 6 4 97 5 1 4 6 4 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
1 0 173 172 168 157 155 154 153 148 117 115 98 96 61 60 0 140 1 140 9 6 22 
CALL[ ]	/* CallFunction */";
};
width = 786;
}
);
note = trademark;
unicode = 8482;
},
{
glyphname = degree;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(96,408,o),
(119,408,qs),
(125,408,o),
(162,407,o),
(206,406,o),
(243,406,o),
(249,407,qs),
(254,407,o),
(267,420,o),
(267,425,qs),
(267,429,o),
(268,475,o),
(268,535,o),
(267,586,o),
(265,594,q),
(267,610,o),
(267,642,o),
(266,649,qs),
(266,654,o),
(253,667,o),
(248,667,qs),
(242,668,o),
(205,668,o),
(161,667,o),
(124,666,o),
(118,666,qs),
(76,666,o),
(39,669,o),
(40,646,qs),
(44,583,l),
(41,428,ls),
(41,417,o),
(66,399,o),
(67,400,qs),
(75,405,o)
);
},
{
closed = 1;
nodes = (
(188,434,o),
(157,437,o),
(155,438,qs),
(147,441,o),
(134,438,o),
(131,438,qs),
(113,436,o),
(98,435,o),
(89,436,o),
(81,436,q),
(78,441,o),
(74,453,o),
(75,459,qs),
(75,463,o),
(76,509,o),
(76,565,o),
(75,608,o),
(74,609,q),
(74,615,ls),
(74,628,o),
(80,638,q),
(88,639,o),
(117,638,o),
(145,638,o),
(152,638,qs),
(158,638,o),
(189,640,o),
(220,641,o),
(225,639,q),
(231,639,o),
(244,622,o),
(238,608,qs),
(235,602,o),
(235,595,qs),
(234,587,ls),
(234,585,o),
(234,548,o),
(236,500,o),
(239,461,o),
(240,458,q),
(245,450,o),
(232,435,o),
(226,435,qs),
(221,434,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 48 values pushed */
19 1 3 2 1 76 0 1 1 73 0 0 0 2 3 0 2 105 4 1 3 1 1 3 89 4 1 3 3 1 97 0 1 3 1 81 78 77 71 70 56 50 33 28 87 5 8 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 308;
}
);
note = degree;
unicode = 176;
},
{
glyphname = minute;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(73,637,o),
(68,617,qs),
(62,593,o),
(59,573,o),
(60,562,o),
(58,541,o),
(51,514,qs),
(45,491,o),
(41,479,o),
(40,475,q),
(39,452,o),
(47,448,o),
(51,447,qs),
(66,442,o),
(83,506,qs),
(110,610,ls),
(112,616,o),
(118,641,o),
(124,666,o),
(125,671,q),
(124,676,o),
(116,681,o),
(117,687,qs),
(119,694,o),
(104,700,o),
(100,692,qs),
(92,675,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
12 1 1 50 
CALL[ ]	/* CallFunction */";
};
width = 165;
}
);
note = minute;
unicode = 8242;
},
{
glyphname = second;
layers = (
{
layerId = m01;
shapes = (
{
ref = minute;
},
{
pos = (118,0);
ref = minute;
}
);
width = 283;
}
);
note = second;
unicode = 8243;
},
{
glyphname = bar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(67,-132,o),
(71,-127,q),
(70,-108,o),
(77,-74,o),
(81,-40,o),
(74,-22,q),
(81,-8,o),
(77,22,o),
(73,36,q),
(80,51,o),
(77,80,o),
(72,94,q),
(73,147,o),
(73,254,o),
(74,306,qs),
(74,317,o),
(82,337,o),
(77,347,qs),
(70,364,o),
(79,384,o),
(79,397,qs),
(79,451,o),
(78,542,o),
(78,633,o),
(77,686,q),
(79,695,o),
(74,714,o),
(70,721,qs),
(64,731,o),
(55,732,q),
(54,728,o),
(44,709,o),
(45,681,qs),
(45,674,o),
(47,636,o),
(47,629,qs),
(47,591,o),
(48,529,o),
(48,468,o),
(48,429,qs),
(47,413,o),
(46,376,o),
(48,361,qs),
(51,341,o),
(38,313,o),
(45,293,q),
(45,279,o),
(39,257,o),
(40,242,qs),
(41,232,o),
(40,190,o),
(42,148,o),
(46,138,q),
(43,125,o),
(44,104,o),
(47,90,qs),
(49,84,o),
(49,62,o),
(48,52,qs),
(47,37,o),
(42,-7,o),
(40,-52,o),
(40,-67,q),
(45,-95,o),
(50,-120,o),
(54,-128,qs),
(59,-137,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
66 36 1 50 
CALL[ ]	/* CallFunction */";
};
width = 119;
}
);
note = bar;
unicode = 124;
},
{
glyphname = brokenbar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(70,368,o),
(70,377,qs),
(70,385,o),
(80,389,o),
(81,395,qs),
(83,403,o),
(83,422,o),
(83,432,qs),
(83,442,o),
(82,464,o),
(82,474,qs),
(82,613,ls),
(82,653,o),
(74,719,o),
(66,719,qs),
(62,719,o),
(54,693,o),
(49,664,qs),
(48,660,o),
(49,653,o),
(49,649,qs),
(49,613,ls),
(49,578,o),
(46,550,o),
(43,536,o),
(40,512,o),
(40,480,qs),
(40,452,o),
(48,400,o),
(52,376,qs),
(54,366,o)
);
},
{
closed = 1;
nodes = (
(67,-122,o),
(82,-101,o),
(82,-80,qs),
(82,-72,ls),
(81,-56,o),
(79,11,o),
(76,92,o),
(73,167,o),
(69,215,o),
(66,215,qs),
(62,215,o),
(54,190,o),
(49,160,q),
(48,157,o),
(49,150,o),
(49,146,qs),
(49,109,ls),
(49,81,o),
(47,53,o),
(45,39,o),
(42,27,o),
(40,2,o),
(40,-23,qs),
(40,-51,o),
(52,-103,o),
(52,-128,q),
(52,-128,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
41 9 2 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
0 0 0 37 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
0 0 0 118 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
46 1 8 23 
CALL[ ]	/* CallFunction */";
};
width = 123;
}
);
note = brokenbar;
unicode = 166;
},
{
glyphname = dagger;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(146,308,o),
(146,317,qs),
(146,325,o),
(156,329,o),
(157,335,qs),
(159,343,o),
(159,362,o),
(159,372,qs),
(158,494,l),
(158,581,l),
(169,580,o),
(190,579,o),
(198,579,q),
(230,584,o),
(257,590,o),
(265,593,qs),
(275,598,o),
(270,606,o),
(264,611,q),
(236,608,o),
(186,621,o),
(158,616,q),
(158,633,ls),
(158,673,o),
(150,739,o),
(142,739,qs),
(138,739,o),
(130,713,o),
(125,684,qs),
(124,680,o),
(125,673,o),
(125,669,qs),
(125,619,l),
(115,619,o),
(94,615,o),
(84,613,q),
(28,620,o),
(3,595,o),
(24,587,q),
(31,589,o),
(56,589,o),
(66,588,qs),
(77,587,o),
(107,585,o),
(123,583,q),
(122,569,o),
(119,556,o),
(116,532,o),
(116,500,qs),
(116,442,o),
(120,373,o),
(126,332,o),
(128,316,qs),
(130,306,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
21 1 2 3 34 31 17 14 4 0 2 43 8 2 4 0 3 76 0 3 2 3 133 0 2 0 2 133 1 1 0 4 0 133 0 4 4 118 44 38 22 18 25 5 8 27 
CALL[ ]	/* CallFunction */";
};
width = 283;
}
);
note = dagger;
unicode = 8224;
},
{
glyphname = uni2113;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-6,23,o),
(-3,31,qs),
(11,69,ls),
(13,73,o),
(17,87,o),
(29,124,o),
(42,162,qs),
(47,174,o),
(56,194,o),
(62,206,q),
(62,192,o),
(62,184,o),
(62,183,qs),
(62,178,o),
(59,167,o),
(54,162,q),
(59,155,o),
(62,139,o),
(62,131,qs),
(62,125,o),
(62,94,o),
(61,57,o),
(61,25,o),
(61,19,qs),
(62,12,o),
(73,1,o),
(80,0,qs),
(84,0,o),
(119,19,o),
(169,51,o),
(221,89,o),
(242,106,qs),
(252,114,o),
(275,119,o),
(275,136,qs),
(275,145,o),
(285,149,o),
(280,156,qs),
(275,165,o),
(244,152,o),
(215,129,q),
(102,52,l),
(95,54,o),
(95,61,qs),
(95,283,l),
(106,309,o),
(119,343,qs),
(121,348,o),
(123,360,o),
(120,367,q),
(120,372,o),
(125,377,q),
(133,382,o),
(141,393,o),
(143,399,qs),
(165,452,o),
(181,502,o),
(181,503,q),
(183,506,o),
(185,507,o),
(190,517,o),
(204,546,o),
(217,577,qs),
(221,588,o),
(213,604,o),
(221,608,qs),
(232,613,o),
(235,622,o),
(233,635,qs),
(231,645,o),
(249,661,o),
(266,677,o),
(261,685,qs),
(255,692,o),
(251,695,qs),
(243,700,o),
(234,700,qs),
(202,700,o),
(181,701,o),
(178,701,o),
(171,699,qs),
(162,697,o),
(142,699,o),
(128,699,qs),
(119,699,o),
(100,701,o),
(91,701,q),
(73,704,o),
(61,683,o),
(61,665,qs),
(61,527,o),
(61,350,o),
(61,298,q),
(56,284,o),
(47,258,o),
(49,256,q),
(52,251,o),
(42,250,o),
(41,246,q),
(42,242,o),
(43,234,o),
(42,231,qs),
(32,208,o),
(26,193,o),
(24,188,o),
(19,174,o),
(2,134,o),
(-17,91,q),
(-22,74,o),
(-37,45,o),
(-42,26,o),
(-32,21,qs),
(-24,17,o)
);
},
{
closed = 1;
nodes = (
(99,658,o),
(100,665,q),
(113,664,o),
(130,667,o),
(137,667,qs),
(145,668,o),
(185,666,o),
(203,666,q),
(208,663,o),
(205,657,o),
(199,643,qs),
(197,638,o),
(200,618,o),
(195,614,q),
(192,613,o),
(189,603,o),
(187,599,qs),
(106,405,l),
(105,401,o),
(100,390,o),
(103,384,qs),
(104,381,o),
(99,378,o),
(95,373,q),
(95,643,ls),
(95,647,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
136 117 114 102 96 70 68 67 19 10 10 3 73 2 1 2 0 3 3 0 89 2 1 2 0 0 3 97 0 3 0 3 81 132 131 36 32 29 27 26 25 4 6 22 
CALL[ ]	/* CallFunction */";
};
width = 282;
}
);
note = uni2113;
unicode = 8467;
},
{
glyphname = daggerdbl;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(166,312,o),
(166,322,qs),
(166,330,o),
(176,335,o),
(177,342,qs),
(179,351,o),
(179,371,o),
(179,382,qs),
(179,423,l),
(207,416,o),
(259,430,o),
(287,427,q),
(293,432,o),
(298,440,o),
(288,444,qs),
(280,448,o),
(253,455,o),
(221,459,q),
(212,459,o),
(190,458,o),
(178,457,q),
(178,601,l),
(189,600,o),
(210,599,o),
(218,599,q),
(250,604,o),
(277,610,o),
(285,613,qs),
(295,618,o),
(290,626,o),
(284,631,q),
(256,628,o),
(206,641,o),
(178,636,q),
(177,676,o),
(169,739,o),
(162,739,qs),
(158,739,o),
(150,711,o),
(145,679,qs),
(144,675,o),
(145,667,o),
(145,663,qs),
(145,639,l),
(135,639,o),
(114,635,o),
(104,633,q),
(48,640,o),
(23,615,o),
(44,607,q),
(51,609,o),
(76,609,o),
(86,608,qs),
(145,603,l),
(145,575,o),
(142,552,o),
(138,537,o),
(136,510,o),
(136,478,qs),
(136,454,l),
(123,453,o),
(98,451,o),
(89,450,qs),
(79,449,o),
(54,449,o),
(47,451,q),
(26,444,o),
(51,418,o),
(107,425,q),
(115,424,o),
(130,420,o),
(137,419,q),
(139,385,o),
(145,341,o),
(148,321,qs),
(150,311,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
32 1 2 3 44 41 28 3 1 2 53 25 21 3 4 1 54 15 9 3 0 5 66 63 6 3 4 6 0 5 76 0 3 2 3 133 0 2 1 2 133 0 1 4 1 133 0 4 5 4 133 0 6 0 6 134 0 5 5 46 77 0 0 0 40 0 78 75 74 35 43 38 22 28 26 7 8 28 
CALL[ ]	/* CallFunction */";
};
width = 326;
}
);
note = daggerdbl;
unicode = 8225;
},
{
glyphname = estimated;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(725,5,o),
(735,16,o),
(736,22,q),
(736,22,l),
(736,22,l),
(736,22,o),
(736,23,o),
(736,23,q),
(736,23,l),
(736,40,o),
(735,56,o),
(735,73,o),
(735,90,qs),
(735,97,o),
(726,101,qs),
(723,103,o),
(716,105,o),
(711,106,q),
(710,105,o),
(700,98,o),
(701,89,q),
(702,87,o),
(703,74,o),
(703,72,qs),
(703,55,o),
(705,51,o),
(704,38,q),
(650,38,ls),
(645,38,o),
(637,34,qs),
(634,32,o),
(597,30,o),
(551,29,o),
(515,30,o),
(512,31,qs),
(509,32,o),
(471,35,o),
(422,37,o),
(383,39,o),
(380,39,qs),
(376,39,o),
(342,34,o),
(309,30,o),
(304,30,qs),
(291,30,o),
(281,32,o),
(260,36,o),
(206,38,o),
(149,38,qs),
(133,38,o),
(113,38,o),
(96,37,qs),
(86,37,o),
(78,42,q),
(77,58,o),
(75,107,o),
(79,123,qs),
(80,126,o),
(82,135,o),
(80,153,q),
(76,164,o),
(76,173,o),
(76,184,qs),
(76,190,o),
(85,200,o),
(80,205,q),
(75,213,o),
(80,222,o),
(83,227,qs),
(88,236,o),
(76,250,o),
(77,257,q),
(78,259,o),
(80,264,o),
(81,267,q),
(132,267,o),
(211,267,o),
(285,266,o),
(372,266,o),
(430,266,q),
(438,267,o),
(453,265,o),
(460,260,qs),
(462,259,o),
(472,267,o),
(474,265,q),
(479,264,o),
(487,258,o),
(493,258,qs),
(632,259,ls),
(642,259,o),
(648,264,qs),
(653,269,o),
(658,259,o),
(662,259,qs),
(697,260,l),
(733,260,ls),
(738,260,o),
(747,270,o),
(749,274,qs),
(751,277,o),
(749,286,o),
(749,290,qs),
(748,572,ls),
(748,577,o),
(749,585,o),
(748,589,q),
(748,594,o),
(734,605,o),
(729,605,qs),
(679,605,ls),
(672,605,o),
(657,604,o),
(650,605,q),
(644,613,o),
(634,605,o),
(628,605,qs),
(527,604,ls),
(523,604,o),
(515,611,o),
(513,609,qs),
(509,605,o),
(499,604,o),
(494,604,qs),
(75,604,ls),
(65,604,o),
(53,591,o),
(53,582,qs),
(53,535,o),
(53,490,o),
(52,473,o),
(50,469,qs),
(45,461,o),
(53,451,o),
(53,443,qs),
(54,424,o),
(52,406,o),
(54,401,qs),
(56,396,o),
(49,378,o),
(47,360,o),
(54,355,q),
(45,342,o),
(45,326,qs),
(45,294,ls),
(45,290,o),
(47,285,q),
(45,282,o),
(45,275,qs),
(46,55,ls),
(46,48,o),
(44,35,o),
(40,28,q),
(39,27,o),
(56,5,o),
(71,5,qs),
(719,5,ls)
);
},
{
closed = 1;
nodes = (
(275,296,o),
(270,300,q),
(269,302,o),
(264,299,o),
(262,300,qs),
(255,302,o),
(243,291,o),
(237,300,q),
(102,299,ls),
(97,299,o),
(86,301,o),
(81,305,q),
(81,316,o),
(80,339,o),
(80,351,qs),
(80,392,ls),
(80,399,o),
(80,413,o),
(85,419,qs),
(87,421,o),
(79,434,o),
(80,438,qs),
(82,443,o),
(86,450,o),
(80,455,q),
(77,461,o),
(79,463,qs),
(84,468,o),
(87,480,o),
(87,487,qs),
(87,570,ls),
(87,574,o),
(96,579,o),
(99,576,q),
(105,572,o),
(116,569,o),
(123,569,qs),
(170,569,ls),
(176,569,o),
(188,572,o),
(193,577,q),
(198,579,o),
(204,575,qs),
(222,562,o),
(244,573,qs),
(252,576,o),
(264,576,o),
(270,571,qs),
(271,570,o),
(277,570,o),
(278,571,qs),
(283,576,o),
(292,577,o),
(297,577,qs),
(314,578,o),
(331,577,o),
(337,571,q),
(343,568,o),
(348,573,qs),
(353,578,o),
(363,578,o),
(368,579,qs),
(376,581,o),
(390,568,o),
(397,578,q),
(697,579,l),
(702,578,o),
(713,566,o),
(713,561,qs),
(714,309,ls),
(714,297,o),
(710,294,o),
(697,294,qs),
(541,292,ls),
(534,292,o),
(523,293,o),
(517,297,qs),
(511,302,o),
(496,301,o),
(489,298,qs),
(480,294,o),
(475,298,q),
(474,300,o),
(466,303,o),
(464,301,qs),
(458,297,o),
(448,293,o),
(441,298,qs),
(439,300,o),
(428,302,o),
(426,300,qs),
(422,297,o),
(403,293,o),
(349,292,o),
(292,291,q),
(286,292,o)
);
},
{
closed = 1;
nodes = (
(430,415,o),
(436,422,qs),
(444,434,o),
(436,445,qs),
(429,453,o),
(410,468,o),
(399,468,qs),
(381,468,o),
(367,443,o),
(367,436,qs),
(367,424,o),
(388,407,o),
(407,407,qs),
(417,406,o)
);
},
{
closed = 1;
nodes = (
(395,437,qs),
(395,439,o),
(398,446,o),
(402,446,qs),
(409,446,o),
(412,439,q),
(414,438,o),
(412,433,q),
(408,429,o),
(405,430,q),
(395,430,o)
);
}
);
width = 790;
}
);
note = estimated;
unicode = 8494;
},
{
glyphname = uni2116;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(346,5,o),
(351,4,qs),
(354,4,o),
(361,5,o),
(363,3,qs),
(369,-1,o),
(388,0,o),
(416,1,qs),
(422,1,o),
(441,16,o),
(442,22,qs),
(442,27,o),
(440,29,qs),
(434,35,o),
(434,46,qs),
(434,63,o),
(434,111,o),
(434,158,o),
(435,191,o),
(436,192,qs),
(441,197,o),
(443,207,o),
(443,211,qs),
(443,375,ls),
(443,383,o),
(445,396,o),
(449,403,qs),
(458,417,o),
(446,431,q),
(445,433,o),
(445,438,o),
(445,441,qs),
(445,442,o),
(446,468,o),
(445,468,q),
(439,477,o),
(445,486,qs),
(450,492,o),
(446,498,q),
(444,503,o),
(443,515,o),
(443,520,qs),
(443,668,ls),
(443,675,o),
(443,688,o),
(442,694,qs),
(441,701,o),
(429,701,qs),
(425,701,o),
(418,698,o),
(418,693,qs),
(417,687,o),
(417,674,o),
(417,667,qs),
(417,663,o),
(417,649,o),
(418,644,q),
(418,636,o),
(410,618,o),
(408,610,q),
(408,603,o),
(419,587,o),
(417,580,q),
(416,568,o),
(418,558,o),
(418,546,qs),
(418,540,o),
(415,527,o),
(410,522,qs),
(406,518,o),
(411,515,q),
(418,506,o),
(417,498,q),
(417,411,l),
(410,406,o),
(419,386,o),
(415,378,q),
(408,374,o),
(418,365,o),
(413,360,qs),
(408,356,o),
(409,344,o),
(409,339,qs),
(409,268,o),
(408,195,o),
(406,168,o),
(403,164,qs),
(402,163,o),
(411,137,o),
(406,130,qs),
(402,123,o),
(408,83,o),
(408,66,qs),
(408,56,o),
(411,43,o),
(400,34,q),
(397,30,o),
(392,35,o),
(390,36,qs),
(386,38,o),
(379,36,o),
(375,34,q),
(370,30,o),
(357,26,o),
(352,30,q),
(348,32,o),
(338,31,o),
(332,31,qs),
(270,31,ls),
(258,31,o),
(258,43,qs),
(258,347,ls),
(258,352,o),
(262,360,o),
(264,364,q),
(266,366,o),
(259,375,o),
(264,379,qs),
(266,381,o),
(268,391,o),
(266,393,q),
(261,401,o),
(258,427,o),
(259,463,q),
(264,467,o),
(266,477,o),
(266,483,qs),
(266,529,o),
(266,621,o),
(267,667,qs),
(267,674,o),
(261,685,o),
(258,691,qs),
(255,699,o),
(247,699,q),
(238,701,o),
(213,699,o),
(207,699,qs),
(199,699,o),
(182,702,o),
(174,706,qs),
(171,708,o),
(162,706,o),
(158,704,q),
(145,700,o),
(119,699,o),
(106,704,qs),
(101,706,o),
(91,706,o),
(86,706,qs),
(76,706,o),
(58,701,o),
(49,696,qs),
(41,690,o),
(41,683,qs),
(41,681,o),
(40,623,o),
(40,528,o),
(40,411,o),
(40,349,qs),
(40,283,o),
(41,157,o),
(41,61,o),
(41,38,qs),
(41,32,o),
(41,13,o),
(42,7,qs),
(42,6,o),
(48,3,o),
(50,1,q),
(67,1,o),
(74,6,o),
(75,15,qs),
(75,21,o),
(67,32,o),
(69,36,qs),
(75,48,o),
(75,61,qs),
(74,76,o),
(73,80,o),
(73,79,o),
(74,91,o),
(74,113,q),
(76,119,o),
(69,129,o),
(67,133,q),
(66,138,o),
(73,149,o),
(74,154,q),
(76,156,o),
(68,166,o),
(68,170,qs),
(68,174,o),
(73,180,o),
(74,184,q),
(74,189,o),
(74,200,o),
(69,205,qs),
(61,214,o),
(70,226,qs),
(82,241,o),
(70,256,qs),
(62,268,o),
(69,278,q),
(78,287,o),
(70,294,qs),
(65,298,o),
(66,318,o),
(67,319,qs),
(74,326,o),
(74,345,o),
(74,350,qs),
(74,670,l),
(75,672,o),
(78,676,o),
(82,673,q),
(85,672,o),
(122,671,o),
(161,674,o),
(166,677,q),
(221,677,ls),
(233,677,o),
(233,666,qs),
(233,604,o),
(233,533,o),
(233,504,o),
(231,501,qs),
(230,499,o),
(230,494,qs),
(230,493,o),
(232,475,o),
(232,455,o),
(228,450,qs),
(226,447,o),
(229,444,q),
(234,436,o),
(234,421,o),
(228,412,qs),
(225,408,o),
(232,404,o),
(233,400,qs),
(234,395,o),
(224,388,o),
(230,381,qs),
(234,377,o),
(232,365,o),
(233,359,qs),
(233,358,o),
(234,353,o),
(233,351,q),
(228,346,o),
(224,333,o),
(224,326,qs),
(224,321,o),
(225,310,o),
(225,305,qs),
(225,206,o),
(225,94,o),
(225,44,o),
(225,30,o),
(225,28,q),
(227,22,o),
(232,10,o),
(236,4,qs),
(239,0,o),
(263,0,o),
(306,1,qs),
(312,1,o),
(326,2,o),
(330,-1,qs),
(337,-7,o)
);
},
{
closed = 1;
nodes = (
(683,349,o),
(690,348,qs),
(701,347,o),
(724,348,o),
(730,350,qs),
(737,352,o),
(749,341,o),
(756,351,q),
(770,341,o),
(798,345,o),
(815,345,qs),
(822,345,o),
(835,352,o),
(842,356,q),
(844,358,o),
(845,367,o),
(845,371,qs),
(845,688,ls),
(845,693,o),
(836,697,o),
(831,697,qs),
(764,698,o),
(609,700,o),
(532,697,q),
(532,369,l),
(534,348,o),
(553,348,qs),
(558,348,o),
(595,347,o),
(632,348,o),
(636,347,q),
(644,347,o),
(659,347,o),
(664,344,qs),
(672,339,o)
);
},
{
closed = 1;
nodes = (
(720,373,o),
(713,378,qs),
(711,380,o),
(700,373,o),
(696,374,qs),
(692,376,o),
(684,380,o),
(679,375,qs),
(675,371,o),
(671,374,qs),
(668,377,o),
(626,378,o),
(580,378,o),
(568,378,qs),
(564,378,o),
(559,386,o),
(561,390,q),
(566,395,o),
(568,406,o),
(568,413,qs),
(568,429,o),
(565,437,o),
(565,453,qs),
(565,468,o),
(559,476,qs),
(555,480,o),
(560,487,qs),
(567,497,o),
(567,508,qs),
(567,513,o),
(565,523,o),
(563,527,qs),
(555,542,o),
(565,552,q),
(567,555,o),
(564,560,q),
(564,622,l),
(566,623,o),
(564,631,o),
(562,632,q),
(556,639,o),
(558,653,o),
(562,663,q),
(573,665,o),
(613,667,o),
(624,667,qs),
(632,667,o),
(646,668,o),
(653,660,q),
(664,658,o),
(676,669,o),
(682,660,q),
(687,660,o),
(726,663,o),
(766,667,o),
(770,666,qs),
(781,665,o),
(810,662,o),
(813,662,q),
(813,625,o),
(815,588,o),
(816,563,o),
(814,524,o),
(811,484,qs),
(811,457,ls),
(811,460,o),
(811,440,o),
(810,408,o),
(809,382,o),
(807,379,q),
(782,379,o),
(759,376,o),
(749,373,o),
(741,373,qs),
(734,373,o)
);
},
{
closed = 1;
nodes = (
(727,512,o),
(713,522,o),
(713,533,qs),
(713,548,o),
(682,551,o),
(671,549,qs),
(664,548,o),
(653,529,o),
(653,521,qs),
(653,513,o),
(659,505,qs),
(666,496,o),
(695,480,o),
(705,490,qs),
(719,504,ls)
);
},
{
closed = 1;
nodes = (
(682,512,o),
(680,514,q),
(678,515,o),
(678,518,qs),
(678,524,o),
(683,526,qs),
(686,527,o),
(694,526,o),
(694,522,qs),
(694,518,o),
(698,516,o),
(696,514,qs),
(692,510,ls),
(689,507,o)
);
},
{
closed = 1;
nodes = (
(675,264,o),
(776,264,o),
(817,264,qs),
(834,264,o),
(843,273,q),
(849,276,o),
(852,283,o),
(853,288,q),
(851,289,o),
(835,300,o),
(814,298,qs),
(809,297,o),
(779,296,o),
(774,296,qs),
(745,296,o),
(666,296,o),
(587,295,o),
(557,295,qs),
(544,295,o),
(523,288,o),
(533,263,q),
(575,264,o)
);
}
);
width = 893;
}
);
note = uni2116;
unicode = 8470;
},
{
glyphname = uni20BF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(78,6,o),
(84,5,q),
(133,5,l),
(133,4,o),
(133,-1,qs),
(133,-18,o),
(133,-16,o),
(132,-1,o),
(132,2,o),
(132,-14,qs),
(132,-18,o),
(131,-42,o),
(130,-46,q),
(129,-61,o),
(139,-72,o),
(140,-74,q),
(145,-73,o),
(152,-71,o),
(155,-67,q),
(164,-60,o),
(164,-48,qs),
(164,-27,o),
(164,-17,o),
(164,-18,o),
(165,-12,o),
(165,5,q),
(226,5,ls),
(236,5,o),
(241,1,q),
(241,1,l),
(241,-1,ls),
(241,-18,o),
(241,-16,o),
(240,-1,o),
(240,2,o),
(240,-14,qs),
(240,-18,o),
(239,-42,o),
(238,-46,q),
(237,-61,o),
(247,-72,o),
(248,-74,q),
(253,-73,o),
(260,-72,o),
(264,-68,qs),
(267,-64,o),
(272,-53,o),
(272,-48,qs),
(272,-27,o),
(272,-17,o),
(272,-18,o),
(272,-12,o),
(273,4,q),
(288,4,o),
(327,7,o),
(363,7,o),
(373,1,q),
(374,0,o),
(398,3,o),
(406,1,qs),
(411,-1,o),
(432,7,o),
(438,12,qs),
(444,17,o),
(433,27,o),
(431,32,q),
(431,35,o),
(414,49,o),
(396,65,o),
(394,70,qs),
(391,78,o),
(377,83,o),
(373,90,qs),
(372,92,o),
(345,121,o),
(305,160,o),
(264,199,o),
(231,225,o),
(226,226,q),
(216,245,o),
(182,269,o),
(168,284,qs),
(164,289,o),
(154,298,o),
(149,303,q),
(151,312,o),
(132,313,o),
(132,320,qs),
(132,329,o),
(114,334,o),
(108,338,qs),
(102,342,o),
(99,352,o),
(100,353,qs),
(107,361,o),
(119,378,o),
(128,384,qs),
(141,391,o),
(194,444,o),
(260,518,o),
(325,593,o),
(375,652,o),
(386,662,qs),
(389,664,o),
(392,671,o),
(393,675,q),
(395,677,o),
(398,681,o),
(394,684,qs),
(392,686,o),
(387,690,o),
(385,690,q),
(346,698,l),
(288,698,o),
(273,692,q),
(272,707,o),
(272,713,o),
(272,712,o),
(272,722,o),
(272,743,qs),
(272,748,o),
(267,759,o),
(264,763,qs),
(260,767,o),
(253,768,o),
(248,769,q),
(247,768,o),
(237,756,o),
(238,741,q),
(239,737,o),
(240,712,o),
(240,708,qs),
(240,698,l),
(165,698,l),
(164,709,o),
(164,712,o),
(164,712,o),
(164,724,o),
(164,743,qs),
(164,755,o),
(155,762,q),
(152,767,o),
(145,768,o),
(140,769,q),
(139,768,o),
(129,756,o),
(130,741,q),
(131,737,o),
(132,712,o),
(132,708,qs),
(132,698,l),
(98,698,ls),
(88,698,o),
(72,690,o),
(61,690,q),
(52,692,o),
(41,680,o),
(41,673,qs),
(41,478,ls),
(41,473,o),
(43,462,o),
(47,457,q),
(41,429,l),
(41,422,o),
(43,410,o),
(47,404,qs),
(49,400,o),
(49,389,o),
(47,384,qs),
(44,372,o),
(45,341,o),
(49,318,o),
(48,317,qs),
(43,312,o),
(40,300,o),
(40,294,qs),
(41,272,o),
(42,201,o),
(42,120,o),
(41,47,o),
(41,23,qs),
(41,19,o),
(39,12,o),
(40,8,qs),
(41,4,o),
(58,-5,o),
(61,-2,q),
(66,1,o)
);
},
{
closed = 1;
nodes = (
(132,698,o),
(132,698,o),
(132,698,o)
);
},
{
closed = 1;
nodes = (
(240,698,o),
(240,698,o),
(240,698,o)
);
},
{
closed = 1;
nodes = (
(70,402,ls),
(70,403,o),
(71,421,o),
(73,433,qs),
(77,453,o),
(79,491,o),
(74,514,qs),
(71,527,o),
(69,568,o),
(70,613,qs),
(72,633,o),
(74,654,o),
(88,662,o),
(107,662,qs),
(311,662,ls),
(316,662,o),
(328,667,o),
(333,668,q),
(339,664,l),
(335,658,o),
(326,645,o),
(321,640,qs),
(317,636,o),
(297,607,o),
(272,573,o),
(249,546,o),
(242,544,q),
(238,538,o),
(231,521,o),
(221,519,qs),
(204,516,o),
(204,500,q),
(195,497,o),
(171,474,o),
(151,448,o),
(148,442,qs),
(147,439,o),
(120,415,o),
(89,390,o),
(81,383,q),
(74,386,l)
);
},
{
closed = 1;
nodes = (
(200,578,q),
(200,583,ls),
(200,587,o),
(199,587,q),
(194,593,o),
(183,602,o),
(178,608,q),
(172,612,o),
(153,611,o),
(148,606,qs),
(133,592,ls),
(127,586,o),
(128,577,o),
(136,569,qs),
(153,554,o),
(166,554,qs),
(187,554,o)
);
},
{
closed = 1;
nodes = (
(154,579,qs),
(150,583,o),
(153,586,qs),
(158,590,ls),
(164,594,o),
(168,591,q),
(170,587,o),
(174,585,q),
(174,581,l),
(171,574,o),
(164,574,qs),
(159,574,o)
);
},
{
closed = 1;
nodes = (
(74,40,o),
(74,47,qs),
(74,50,o),
(72,89,o),
(70,144,o),
(69,202,o),
(71,247,o),
(75,256,q),
(71,261,o),
(73,280,o),
(74,306,qs),
(74,309,o),
(75,314,o),
(76,317,q),
(76,319,o),
(85,319,o),
(87,318,qs),
(91,316,o),
(92,304,o),
(99,304,qs),
(107,304,o),
(108,288,o),
(118,289,q),
(123,286,o),
(132,278,o),
(137,275,qs),
(143,271,o),
(148,259,o),
(152,254,q),
(182,225,o),
(230,187,o),
(245,164,q),
(252,166,o),
(257,157,o),
(261,148,o),
(268,148,q),
(271,145,o),
(298,119,o),
(333,87,o),
(361,60,o),
(364,57,qs),
(369,53,o),
(373,45,q),
(373,41,o),
(367,38,o),
(354,38,qs),
(245,36,o),
(113,35,o),
(88,35,qs),
(79,35,o)
);
},
{
closed = 1;
nodes = (
(206,129,q),
(206,134,ls),
(206,138,o),
(205,138,q),
(198,145,o),
(188,154,o),
(183,160,q),
(176,163,o),
(156,163,o),
(151,158,qs),
(137,143,ls),
(130,136,o),
(130,128,o),
(139,119,qs),
(154,105,o),
(170,105,qs),
(190,105,o)
);
},
{
closed = 1;
nodes = (
(158,130,qs),
(154,134,o),
(157,137,qs),
(162,141,ls),
(168,145,o),
(172,142,q),
(174,138,o),
(178,136,q),
(178,132,l),
(175,125,o),
(168,125,qs),
(163,125,o)
);
}
);
userData = {
assembly = "NPUSHW[ ]	/* 53 values pushed */
72 1 0 1 216 29 2 7 0 224 1 9 7 260 254 250 3 10 9 202 99 93 25 4 13 8 14 1 12 13 305 11 2 15 12 339 333 329 3 16 15 8 76 185 182 174 156 148 145 139 7 4 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 79 values pushed */
0 9 7 10 10 9 114 0 13 8 12 8 13 12 128 0 12 15 8 12 15 126 0 15 16 16 15 112 18 1 10 17 1 8 13 10 8 106 21 1 16 20 1 14 11 16 14 106 0 0 0 39 77 0 7 7 1 97 3 2 2 1 1 39 77 19 1 11 11 4 97 6 5 2 4 4 38 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 9 7 10 10 9 114 0 13 8 12 8 13 12 128 0 12 15 8 12 15 126 0 15 16 8 15 16 126 18 1 10 17 1 8 13 10 8 106 21 1 16 20 1 14 11 16 14 106 0 0 0 39 77 0 7 7 1 97 3 2 2 1 1 39 77 19 1 11 11 4 97 6 5 2 4 4 38 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 79 values pushed */
0 9 7 10 10 9 114 0 13 8 12 8 13 12 128 0 12 15 8 12 15 126 0 15 16 16 15 112 18 1 10 17 1 8 13 10 8 106 21 1 16 20 1 14 11 16 14 106 0 0 0 39 77 0 7 7 1 97 3 2 2 1 1 39 77 19 1 11 11 4 97 6 5 2 4 4 38 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 81 values pushed */
0 9 7 10 7 9 10 128 0 13 8 12 8 13 12 128 0 12 15 8 12 15 126 0 15 16 8 15 16 126 18 1 10 17 1 8 13 10 8 106 21 1 16 20 1 14 11 16 14 106 0 0 0 39 77 0 7 7 1 97 3 2 2 1 1 39 77 19 1 11 11 4 97 6 5 2 4 4 38 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 57 values pushed */
332 331 315 314 268 264 253 252 236 235 331 342 332 342 322 321 314 330 315 330 298 297 294 292 264 313 268 313 252 263 253 263 243 242 235 251 236 251 221 218 161 159 134 133 132 131 74 73 54 53 36 34 33 32 22 8 22 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = uni20BF;
unicode = 8383;
},
{
glyphname = uni20B5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(93,-28,o),
(135,-10,o),
(170,6,o),
(175,10,qs),
(187,19,o),
(214,25,o),
(227,31,qs),
(237,36,o),
(246,40,q),
(245,22,o),
(243,-14,o),
(243,-26,q),
(248,-54,o),
(253,-79,o),
(257,-87,qs),
(262,-96,o),
(270,-91,o),
(274,-86,q),
(273,-67,o),
(280,-33,o),
(284,1,o),
(277,19,q),
(281,28,o),
(282,48,o),
(281,57,q),
(300,66,o),
(315,74,o),
(323,77,o),
(339,82,o),
(377,97,o),
(415,112,q),
(415,58,o),
(415,6,o),
(414,-13,o),
(414,-19,qs),
(414,-24,o),
(430,-33,o),
(437,-33,qs),
(445,-33,o),
(448,-25,o),
(449,-20,qs),
(450,-17,o),
(456,10,o),
(457,15,q),
(448,24,o),
(448,36,qs),
(448,62,o),
(448,83,o),
(448,95,o),
(448,116,o),
(448,142,qs),
(448,149,o),
(441,149,q),
(436,150,o),
(423,151,o),
(420,149,q),
(413,142,o),
(397,143,o),
(389,139,qs),
(381,135,o),
(342,115,o),
(297,95,o),
(280,90,q),
(283,102,o),
(279,124,o),
(275,135,q),
(276,188,o),
(276,295,o),
(277,347,qs),
(277,358,o),
(285,378,o),
(280,388,qs),
(273,405,o),
(282,425,o),
(282,438,qs),
(282,474,o),
(281,538,o),
(281,569,q),
(308,557,o),
(361,534,o),
(400,517,o),
(405,513,qs),
(415,506,o),
(448,513,o),
(449,526,qs),
(449,532,o),
(447,544,o),
(447,550,qs),
(447,559,o),
(456,575,o),
(456,583,qs),
(456,592,o),
(451,597,q),
(458,602,o),
(454,609,o),
(447,617,o),
(448,621,qs),
(450,627,o),
(449,649,o),
(449,681,qs),
(449,686,o),
(443,693,o),
(438,696,q),
(435,699,o),
(426,698,o),
(424,695,q),
(421,687,o),
(415,672,o),
(415,663,qs),
(415,657,o),
(415,625,o),
(415,588,o),
(415,559,o),
(415,556,qs),
(415,550,o),
(406,546,o),
(401,549,qs),
(392,554,o),
(352,573,o),
(303,596,o),
(281,606,q),
(281,634,o),
(280,694,o),
(280,727,q),
(282,736,o),
(277,755,o),
(273,762,qs),
(267,772,o),
(258,773,q),
(257,769,o),
(247,750,o),
(248,722,qs),
(248,715,o),
(250,677,o),
(250,670,qs),
(250,656,o),
(250,631,o),
(250,619,q),
(227,629,o),
(221,630,qs),
(214,632,o),
(169,654,o),
(116,680,o),
(72,700,o),
(64,700,qs),
(56,700,o),
(48,695,qs),
(41,689,o),
(50,668,o),
(61,646,o),
(55,638,qs),
(48,627,o),
(47,617,o),
(55,608,qs),
(60,601,o),
(47,589,o),
(47,578,qs),
(47,533,o),
(50,492,o),
(52,478,o),
(52,474,qs),
(52,473,o),
(47,420,o),
(47,363,qs),
(47,356,o),
(50,343,o),
(55,336,qs),
(59,330,o),
(55,324,q),
(50,320,o),
(47,308,o),
(47,302,qs),
(46,250,o),
(46,188,o),
(47,151,o),
(48,123,o),
(48,105,qs),
(45,66,o),
(41,27,o),
(40,13,o),
(40,8,qs),
(40,-21,ls),
(40,-40,o),
(61,-40,qs),
(62,-40,o)
);
},
{
closed = 1;
nodes = (
(74,108,o),
(74,122,o),
(74,128,o),
(75,144,o),
(75,169,qs),
(75,174,o),
(81,182,q),
(83,186,o),
(74,191,o),
(78,195,qs),
(80,197,o),
(83,219,o),
(83,247,o),
(82,270,o),
(80,271,q),
(73,277,o),
(84,285,o),
(83,290,qs),
(82,295,o),
(83,305,o),
(83,309,qs),
(83,323,o),
(75,330,o),
(78,333,qs),
(83,338,o),
(83,349,o),
(83,354,qs),
(83,586,ls),
(83,591,o),
(83,601,o),
(81,604,qs),
(75,612,o),
(75,624,qs),
(75,641,o),
(89,654,o),
(96,654,qs),
(106,654,o),
(132,639,o),
(158,623,o),
(168,622,qs),
(183,620,o),
(190,613,qs),
(194,609,o),
(227,593,o),
(250,583,q),
(251,556,o),
(251,503,o),
(251,470,qs),
(250,454,o),
(249,417,o),
(251,402,qs),
(254,382,o),
(241,354,o),
(248,334,q),
(248,320,o),
(242,298,o),
(243,283,qs),
(244,273,o),
(243,231,o),
(245,189,o),
(249,179,q),
(246,166,o),
(247,145,o),
(250,131,qs),
(252,125,o),
(252,103,o),
(251,93,qs),
(251,90,o),
(250,84,o),
(250,80,q),
(232,72,o),
(174,44,o),
(116,16,o),
(98,8,qs),
(92,6,o),
(77,12,o),
(75,17,q),
(74,64,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 93 values pushed */
241 238 217 208 205 201 106 96 93 91 63 46 12 13 3 5 185 175 172 162 153 140 121 118 7 9 4 2 2 76 60 1 1 74 166 1 0 73 0 5 1 3 1 5 3 128 0 2 3 4 3 2 4 128 6 1 0 4 0 134 0 3 0 4 0 3 4 105 0 1 1 37 1 78 1 0 226 225 147 145 130 128 127 126 40 38 0 184 1 184 7 8 22 
CALL[ ]	/* CallFunction */";
};
width = 477;
}
);
note = uni20B5;
unicode = 8373;
},
{
glyphname = cent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(240,58,o),
(240,79,qs),
(240,87,o),
(238,104,o),
(236,112,q),
(236,115,o),
(235,116,q),
(283,116,o),
(321,116,o),
(325,112,q),
(327,111,o),
(342,113,o),
(344,115,qs),
(353,124,o),
(378,119,o),
(398,116,o),
(398,127,qs),
(398,132,o),
(395,142,qs),
(394,148,o),
(380,146,o),
(375,146,qs),
(342,146,o),
(299,145,o),
(261,144,o),
(233,143,q),
(232,162,o),
(235,197,o),
(235,216,qs),
(237,236,o),
(235,286,o),
(235,306,qs),
(235,322,o),
(238,332,qs),
(243,350,o),
(246,388,o),
(247,407,qs),
(247,427,o),
(245,467,o),
(246,486,qs),
(246,494,o),
(247,513,o),
(247,523,q),
(265,523,ls),
(283,523,o),
(295,534,o),
(305,538,o),
(319,528,qs),
(327,523,o),
(336,523,qs),
(378,523,ls),
(384,523,o),
(397,534,o),
(398,539,qs),
(400,545,o),
(386,559,o),
(378,559,qs),
(248,559,l),
(249,600,o),
(245,683,o),
(235,705,q),
(228,702,l),
(215,686,o),
(203,633,o),
(203,604,q),
(208,594,o),
(209,571,o),
(208,559,q),
(66,559,ls),
(56,559,o),
(49,552,o),
(42,546,q),
(41,546,o),
(39,533,o),
(40,532,qs),
(45,525,o),
(46,510,o),
(46,503,qs),
(46,383,o),
(46,239,o),
(46,166,o),
(46,139,o),
(46,136,o),
(46,133,qs),
(46,128,o),
(59,115,o),
(63,115,qs),
(69,114,o),
(80,115,o),
(86,115,qs),
(121,115,o),
(178,115,o),
(200,116,q),
(200,110,o),
(199,115,o),
(198,103,qs),
(198,76,ls),
(198,52,o),
(206,21,o),
(207,3,qs),
(208,-4,o),
(224,-6,o),
(225,0,qs),
(230,19,o)
);
},
{
closed = 1;
nodes = (
(142,154,o),
(131,144,q),
(121,152,o),
(105,152,o),
(95,144,qs),
(88,138,o),
(73,159,o),
(73,164,qs),
(73,193,o),
(80,202,qs),
(85,209,o),
(76,223,o),
(74,230,q),
(74,241,o),
(84,255,o),
(80,263,qs),
(77,269,o),
(71,289,o),
(77,296,qs),
(82,303,o),
(72,323,o),
(72,330,qs),
(72,356,o),
(73,397,o),
(73,423,qs),
(73,432,o),
(77,439,qs),
(80,443,o),
(77,447,o),
(76,450,qs),
(71,469,o),
(74,500,o),
(74,519,q),
(79,522,o),
(90,523,o),
(96,523,qs),
(160,523,ls),
(174,523,o),
(198,531,o),
(208,532,q),
(208,527,ls),
(208,514,o),
(207,445,o),
(206,355,o),
(204,264,o),
(203,194,o),
(203,180,qs),
(203,170,o),
(202,152,o),
(201,143,q),
(196,142,o),
(185,142,o),
(180,143,q),
(167,150,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 87 values pushed */
116 28 2 3 1 149 144 135 74 4 9 3 2 76 155 1 5 1 75 42 38 2 1 74 7 1 0 73 0 9 3 5 5 9 114 2 1 1 8 4 2 3 9 1 3 105 7 1 5 0 0 5 89 7 1 5 5 0 98 6 1 0 5 0 82 154 153 123 119 106 104 96 94 81 77 60 58 54 51 46 45 35 33 120 10 8 23 
CALL[ ]	/* CallFunction */";
};
width = 408;
}
);
note = cent;
unicode = 162;
},
{
glyphname = colonmonetary;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(118,-28,o),
(138,-20,q),
(133,-33,o),
(125,-57,o),
(122,-66,q),
(118,-94,o),
(117,-120,o),
(118,-128,qs),
(120,-138,o),
(129,-136,o),
(135,-132,q),
(139,-114,o),
(155,-83,o),
(168,-51,o),
(167,-32,q),
(173,-25,o),
(179,-9,o),
(181,-1,q),
(197,7,o),
(201,10,qs),
(213,19,o),
(240,25,o),
(253,31,qs),
(290,49,o),
(326,67,o),
(341,74,o),
(349,77,o),
(365,82,o),
(403,97,o),
(441,112,q),
(441,58,o),
(441,6,o),
(440,-13,o),
(440,-19,qs),
(440,-24,o),
(456,-33,o),
(463,-33,qs),
(471,-33,o),
(474,-25,o),
(475,-20,qs),
(476,-17,o),
(482,10,o),
(483,15,q),
(474,24,o),
(474,36,qs),
(474,62,o),
(474,83,o),
(474,95,o),
(474,116,o),
(474,142,qs),
(474,149,o),
(467,149,q),
(462,150,o),
(449,151,o),
(446,149,q),
(439,142,o),
(423,143,o),
(415,139,qs),
(408,135,o),
(375,119,o),
(336,101,o),
(301,88,o),
(292,88,qs),
(291,88,o),
(262,74,o),
(217,52,o),
(194,41,q),
(197,50,o),
(199,69,o),
(199,79,q),
(215,130,o),
(245,232,o),
(261,282,qs),
(264,292,o),
(277,309,o),
(276,320,qs),
(274,339,o),
(288,355,o),
(292,368,qs),
(304,408,o),
(332,503,o),
(346,552,q),
(376,539,o),
(425,517,o),
(431,513,qs),
(441,506,o),
(474,513,o),
(475,526,qs),
(475,532,o),
(473,544,o),
(473,550,qs),
(473,559,o),
(482,575,o),
(482,583,qs),
(482,592,o),
(477,597,q),
(484,602,o),
(480,609,o),
(473,617,o),
(474,621,qs),
(476,627,o),
(475,649,o),
(475,681,qs),
(475,686,o),
(469,693,o),
(464,696,q),
(461,699,o),
(452,698,o),
(450,695,q),
(447,687,o),
(441,672,o),
(441,663,qs),
(441,657,o),
(441,625,o),
(441,588,o),
(441,559,o),
(441,556,qs),
(441,550,o),
(432,546,o),
(427,549,qs),
(418,554,o),
(378,572,o),
(355,583,q),
(366,621,o),
(387,691,o),
(396,722,q),
(400,730,o),
(401,750,o),
(399,757,qs),
(396,768,o),
(388,772,q),
(386,769,o),
(370,753,o),
(363,726,qs),
(362,719,o),
(352,682,o),
(350,676,qs),
(345,659,o),
(333,619,o),
(327,597,q),
(310,604,o),
(280,618,o),
(269,622,q),
(277,650,o),
(292,703,o),
(299,726,q),
(303,734,o),
(304,754,o),
(302,761,qs),
(299,772,o),
(291,776,q),
(289,773,o),
(273,757,o),
(266,730,qs),
(265,723,o),
(255,686,o),
(253,680,qs),
(247,660,o),
(239,633,q),
(227,638,o),
(183,660,o),
(135,683,o),
(97,700,o),
(90,700,qs),
(82,700,o),
(74,695,qs),
(67,689,o),
(76,668,o),
(87,646,o),
(81,638,qs),
(74,627,o),
(73,617,o),
(81,608,qs),
(86,601,o),
(73,589,o),
(73,578,qs),
(73,533,o),
(76,492,o),
(78,478,o),
(78,474,qs),
(78,473,o),
(73,420,o),
(73,363,qs),
(73,356,o),
(76,343,o),
(81,336,qs),
(85,330,o),
(81,324,q),
(76,320,o),
(73,308,o),
(73,302,qs),
(72,250,o),
(72,188,o),
(73,151,o),
(74,123,o),
(74,105,qs),
(73,90,o),
(71,67,o),
(70,58,q),
(69,56,o),
(68,52,o),
(67,50,qs),
(61,36,o),
(44,-6,o),
(29,-47,o),
(25,-62,q),
(21,-90,o),
(20,-116,o),
(21,-124,qs),
(23,-134,o),
(32,-132,o),
(38,-128,q),
(43,-102,o),
(69,-61,o),
(70,-33,q),
(76,-40,o),
(87,-40,qs),
(88,-40,o)
);
},
{
closed = 1;
nodes = (
(110,285,o),
(109,290,qs),
(108,295,o),
(109,305,o),
(109,309,qs),
(109,323,o),
(101,330,o),
(104,333,qs),
(109,338,o),
(109,349,o),
(109,354,qs),
(109,586,ls),
(109,591,o),
(109,601,o),
(107,604,qs),
(101,612,o),
(101,624,qs),
(101,641,o),
(115,654,o),
(122,654,qs),
(132,654,o),
(158,639,o),
(184,623,o),
(194,622,qs),
(209,620,o),
(216,613,qs),
(219,610,o),
(231,604,q),
(217,555,o),
(186,450,o),
(174,411,qs),
(169,395,o),
(157,361,o),
(155,346,qs),
(152,326,o),
(132,302,o),
(133,282,q),
(129,269,o),
(116,249,o),
(113,234,qs),
(112,229,o),
(108,218,q),
(109,234,o),
(108,269,o),
(106,271,qs),
(99,277,o)
);
},
{
closed = 1;
nodes = (
(100,57,q),
(103,68,o),
(102,83,q),
(118,134,o),
(148,236,o),
(164,286,qs),
(167,296,o),
(180,313,o),
(179,324,qs),
(177,343,o),
(191,359,o),
(195,372,qs),
(209,419,o),
(242,534,o),
(259,590,q),
(272,585,o),
(302,571,o),
(318,564,q),
(305,522,o),
(281,439,o),
(271,407,qs),
(266,391,o),
(254,357,o),
(252,342,qs),
(249,322,o),
(229,298,o),
(230,278,q),
(226,265,o),
(213,245,o),
(210,230,qs),
(208,220,o),
(195,180,o),
(185,140,o),
(186,129,q),
(175,109,o),
(174,83,qs),
(174,76,o),
(167,55,o),
(164,46,qs),
(159,35,o),
(154,22,q),
(135,13,o),
(124,8,qs),
(118,6,o),
(103,12,o),
(101,17,q),
(101,40,o)
);
}
);
width = 503;
}
);
note = colonmonetary;
unicode = 8353;
},
{
glyphname = dollar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(127,18,o),
(130,19,qs),
(143,24,o),
(178,19,o),
(188,18,q),
(188,3,o),
(188,-34,o),
(188,-54,qs),
(188,-67,o),
(206,-76,o),
(222,-67,o),
(219,-54,qs),
(217,-41,o),
(218,-1,o),
(218,18,q),
(231,18,o),
(261,18,o),
(277,18,q),
(278,-5,o),
(278,-51,o),
(278,-57,qs),
(280,-74,o),
(294,-74,o),
(306,-61,o),
(306,-61,q),
(312,-36,l),
(307,-31,o),
(306,-16,o),
(306,-9,qs),
(306,3,o),
(306,18,q),
(335,18,o),
(390,18,o),
(410,18,qs),
(418,18,o),
(435,18,o),
(440,25,q),
(442,30,o),
(452,42,o),
(442,49,q),
(440,63,o),
(439,96,o),
(443,109,q),
(449,114,o),
(448,127,o),
(448,133,qs),
(449,178,o),
(449,290,o),
(448,335,qs),
(448,347,o),
(428,364,o),
(414,364,qs),
(378,364,o),
(328,369,o),
(307,368,q),
(306,391,o),
(307,479,o),
(307,523,q),
(312,525,o),
(322,525,o),
(327,518,q),
(327,518,o),
(345,513,o),
(362,522,qs),
(370,527,o),
(396,516,o),
(411,517,qs),
(435,519,o),
(450,529,o),
(448,543,qs),
(447,548,o),
(451,578,o),
(456,586,qs),
(460,591,o),
(452,606,o),
(450,612,qs),
(449,615,o),
(456,620,o),
(453,624,q),
(448,634,o),
(457,657,o),
(453,664,qs),
(447,676,o),
(441,680,o),
(430,680,qs),
(426,680,ls),
(424,680,o),
(418,681,o),
(414,681,qs),
(383,681,o),
(329,681,o),
(305,681,q),
(306,682,ls),
(311,689,o),
(306,696,qs),
(303,701,o),
(305,722,o),
(309,743,o),
(309,747,qs),
(309,758,o),
(301,777,o),
(296,787,qs),
(293,794,o),
(281,777,o),
(279,771,q),
(279,769,o),
(278,720,o),
(278,681,q),
(260,681,o),
(229,681,o),
(215,681,qs),
(216,681,o),
(216,682,q),
(218,684,o),
(218,695,o),
(216,697,q),
(212,705,o),
(219,736,o),
(219,743,qs),
(219,754,o),
(211,786,o),
(206,787,qs),
(197,789,o),
(191,776,o),
(189,769,q),
(189,766,o),
(187,719,o),
(187,681,q),
(147,681,o),
(111,680,o),
(100,678,o),
(98,676,qs),
(95,674,o),
(86,682,o),
(81,676,q),
(66,682,o),
(60,679,q),
(51,672,o),
(37,660,o),
(42,648,qs),
(48,635,o),
(47,609,o),
(43,591,qs),
(42,586,o),
(40,573,o),
(44,567,qs),
(56,552,o),
(45,537,q),
(38,524,o),
(46,514,q),
(50,512,o),
(46,508,q),
(42,506,o),
(41,496,o),
(41,491,qs),
(41,384,ls),
(41,371,o),
(44,356,o),
(51,346,qs),
(56,339,o),
(85,344,o),
(94,338,qs),
(96,337,o),
(104,336,o),
(105,337,qs),
(112,342,o),
(131,344,o),
(141,336,q),
(149,344,o),
(163,338,o),
(170,335,qs),
(174,334,o),
(183,333,o),
(185,331,qs),
(187,329,o),
(188,322,o),
(188,318,qs),
(188,225,ls),
(188,205,o),
(178,195,qs),
(173,191,o),
(162,191,qs),
(159,191,o),
(146,196,q),
(143,194,o),
(134,189,o),
(131,192,qs),
(122,200,o),
(105,198,o),
(93,198,qs),
(82,198,o),
(54,197,o),
(47,190,qs),
(40,184,o),
(41,161,o),
(41,151,qs),
(41,148,o),
(41,117,o),
(41,79,o),
(41,49,o),
(42,47,q),
(43,41,o),
(56,31,o),
(54,24,q),
(54,18,o),
(63,18,qs),
(107,17,o)
);
},
{
closed = 1;
nodes = (
(222,364,o),
(214,364,q),
(213,372,o),
(213,429,o),
(216,504,o),
(217,579,o),
(215,634,o),
(211,640,q),
(211,643,o),
(210,649,o),
(210,651,q),
(218,651,o),
(235,651,o),
(241,653,q),
(252,651,o),
(278,649,q),
(278,592,o),
(278,445,o),
(278,363,q),
(275,362,o),
(271,361,qs),
(266,359,o),
(261,362,o),
(258,364,qs),
(255,366,o)
);
},
{
closed = 1;
nodes = (
(80,364,o),
(66,375,o),
(68,379,qs),
(73,387,o),
(76,405,o),
(76,413,qs),
(76,422,o),
(75,440,o),
(75,448,qs),
(75,459,o),
(69,458,o),
(69,468,qs),
(69,471,o),
(75,477,o),
(71,481,q),
(69,482,o),
(67,488,o),
(68,489,qs),
(75,496,o),
(76,533,o),
(76,570,o),
(82,576,qs),
(87,582,o),
(83,590,q),
(72,602,o),
(82,612,qs),
(84,614,o),
(85,624,o),
(83,625,q),
(78,630,o),
(82,639,o),
(81,643,qs),
(80,646,o),
(77,652,o),
(84,652,qs),
(186,652,l),
(185,594,o),
(183,442,o),
(183,364,q),
(87,364,ls)
);
},
{
closed = 1;
nodes = (
(312,549,o),
(307,549,q),
(307,585,o),
(305,639,o),
(301,644,q),
(301,648,l),
(335,647,o),
(403,646,o),
(411,646,qs),
(422,645,o),
(421,636,o),
(421,620,qs),
(421,616,o),
(422,611,o),
(423,585,o),
(422,549,q),
(418,545,o),
(373,544,o),
(345,545,qs),
(330,545,o)
);
},
{
closed = 1;
nodes = (
(209,86,o),
(216,96,qs),
(218,98,o),
(218,109,o),
(216,111,q),
(212,119,o),
(216,150,o),
(216,157,qs),
(216,166,o),
(217,195,o),
(215,201,qs),
(214,205,o),
(215,217,o),
(216,226,qs),
(216,228,o),
(214,234,o),
(214,237,qs),
(214,326,ls),
(214,335,o),
(227,335,qs),
(273,335,l),
(274,324,o),
(275,293,o),
(276,268,o),
(276,266,qs),
(274,193,o),
(275,118,o),
(275,90,o),
(272,85,qs),
(269,81,o),
(269,66,o),
(271,62,qs),
(274,57,o),
(275,39,q),
(256,39,o),
(224,41,o),
(215,43,q),
(214,50,o),
(211,54,q),
(210,67,o)
);
},
{
closed = 1;
nodes = (
(337,38,o),
(306,39,q),
(306,79,o),
(308,142,o),
(308,146,qs),
(308,153,o),
(310,165,o),
(315,169,qs),
(316,170,o),
(314,179,o),
(312,181,q),
(308,188,o),
(304,226,o),
(307,233,qs),
(311,243,o),
(313,258,o),
(308,267,q),
(316,277,o),
(314,292,qs),
(314,297,o),
(314,319,o),
(313,334,q),
(351,334,ls),
(365,334,o),
(399,335,o),
(413,330,q),
(414,316,o),
(414,271,o),
(415,234,o),
(416,231,qs),
(421,218,o),
(424,189,o),
(416,180,qs),
(414,177,o),
(414,167,o),
(414,164,qs),
(414,47,ls),
(414,39,o),
(404,39,qs),
(393,39,o)
);
},
{
closed = 1;
nodes = (
(135,48,o),
(99,46,o),
(94,45,qs),
(84,42,o),
(75,51,o),
(75,58,qs),
(75,151,ls),
(75,161,o),
(79,169,o),
(90,169,qs),
(158,169,ls),
(167,169,o),
(179,168,o),
(188,167,q),
(188,154,o),
(188,97,o),
(188,43,q),
(181,40,o),
(175,45,qs),
(171,48,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHW[ ]	/* 70 values pushed */
217 71 2 16 4 215 1 19 16 289 279 127 3 18 19 268 265 262 256 253 5 10 8 212 210 2 3 10 354 341 314 29 4 1 3 19 1 2 1 385 377 323 3 25 24 374 1 20 25 201 1 0 20 185 180 2 13 0 11 76 38 1 3 1 75 107 87 2 4 74 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHW[ ]	/* 67 values pushed */
217 71 2 16 4 289 279 215 127 4 18 16 268 265 262 256 253 5 10 8 212 210 2 3 10 354 341 314 29 4 1 3 19 1 2 1 385 377 323 3 25 24 374 1 20 25 201 1 0 20 185 180 2 13 0 10 76 38 1 3 1 75 107 87 2 4 74 
ELSE[ ]	/* Else */
NPUSHW[ ]	/* 70 values pushed */
217 71 2 16 4 215 1 19 16 289 279 127 3 18 19 268 265 262 256 253 5 10 8 212 210 2 3 10 354 341 314 29 4 1 3 19 1 2 1 385 377 323 3 25 24 374 1 20 25 201 1 0 20 185 180 2 13 0 11 76 38 1 3 1 75 107 87 2 4 74 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 100 values pushed */
0 9 18 8 19 9 114 0 2 1 24 1 2 114 0 25 24 20 24 25 20 128 0 13 0 13 134 28 1 18 0 8 10 18 8 105 27 17 15 11 4 10 23 21 2 3 1 10 3 105 0 1 0 24 25 1 24 105 0 16 16 4 97 7 6 5 3 4 4 39 77 0 19 19 4 97 7 6 5 3 4 4 39 77 29 22 2 20 20 0 95 14 12 26 3 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 89 values pushed */
0 9 18 8 18 9 8 128 0 2 1 24 1 2 114 0 25 24 20 24 25 20 128 0 13 0 13 134 28 1 18 0 8 10 18 8 105 27 17 15 11 4 10 23 21 2 3 1 10 3 105 0 1 0 24 25 1 24 105 19 1 16 16 4 97 7 6 5 3 4 4 39 77 29 22 2 20 20 0 95 14 12 26 3 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 87 values pushed */
0 9 18 8 18 9 8 128 0 2 1 24 1 2 114 0 25 24 20 24 25 20 128 0 13 0 13 134 7 6 5 3 4 19 1 16 18 4 16 103 28 1 18 0 8 10 18 8 105 27 17 15 11 4 10 23 21 2 3 1 10 3 105 0 1 0 24 25 1 24 105 29 22 2 20 20 0 95 14 12 26 3 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 94 values pushed */
0 9 18 8 18 9 8 128 0 2 1 24 1 2 114 0 25 24 20 24 25 20 128 0 13 0 13 134 7 6 5 3 4 19 1 16 18 4 16 103 28 1 18 0 8 10 18 8 105 27 17 15 11 4 10 23 21 2 3 1 10 3 105 0 1 0 24 25 1 24 105 29 22 2 20 0 0 20 89 29 22 2 20 20 0 95 14 12 26 3 0 20 0 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 99 values pushed */
0 9 18 8 18 9 8 128 0 2 1 24 1 2 114 0 25 24 20 24 25 20 128 0 13 0 13 134 0 16 19 4 16 87 7 6 5 3 4 0 19 18 4 19 103 28 1 18 0 8 10 18 8 105 27 17 15 11 4 10 23 21 2 3 1 10 3 105 0 1 0 24 25 1 24 105 29 22 2 20 0 0 20 89 29 22 2 20 20 0 95 14 12 26 3 0 20 0 79 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 71 values pushed */
333 332 274 272 232 232 1 0 391 390 382 379 349 346 332 371 333 369 312 310 297 295 285 282 272 291 274 291 232 271 232 270 236 235 231 229 191 188 184 183 175 170 155 153 152 151 147 146 140 139 122 119 117 113 98 96 78 76 43 41 25 23 17 14 0 206 1 206 30 8 22 
CALL[ ]	/* CallFunction */";
};
width = 497;
}
);
note = dollar;
unicode = 36;
},
{
glyphname = dong;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(432,8,o),
(432,10,qs),
(433,14,o),
(432,23,o),
(432,27,qs),
(429,583,l),
(448,582,o),
(477,585,q),
(481,584,o),
(498,585,o),
(499,585,qs),
(520,585,o),
(525,610,o),
(515,611,q),
(454,611,ls),
(446,611,o),
(434,610,o),
(429,610,q),
(429,665,ls),
(429,685,o),
(423,700,o),
(405,700,qs),
(403,700,o),
(399,680,o),
(398,657,o),
(398,654,qs),
(398,612,l),
(397,612,o),
(395,612,qs),
(363,612,ls),
(356,612,o),
(339,614,o),
(331,614,qs),
(327,614,o),
(319,613,o),
(315,612,qs),
(312,611,o),
(310,605,o),
(307,604,qs),
(303,603,o),
(303,581,o),
(307,580,qs),
(318,577,o),
(340,579,o),
(350,578,qs),
(358,578,o),
(368,580,q),
(376,584,o),
(391,585,o),
(398,585,q),
(399,496,ls),
(399,487,o),
(397,453,o),
(383,451,q),
(65,450,l),
(59,449,o),
(48,438,o),
(49,431,qs),
(49,419,o),
(42,392,o),
(42,381,qs),
(42,372,o),
(46,367,q),
(39,360,o),
(43,348,o),
(46,342,q),
(40,335,o),
(43,323,o),
(47,317,q),
(47,294,o),
(46,248,o),
(46,225,qs),
(46,221,o),
(39,212,o),
(43,207,qs),
(50,200,o),
(40,191,o),
(40,186,qs),
(40,163,o),
(41,102,o),
(41,42,o),
(41,19,qs),
(41,12,o),
(51,0,o),
(57,0,qs),
(63,-1,o),
(72,0,o),
(78,0,qs),
(317,1,ls),
(323,1,o),
(335,4,o),
(339,1,qs),
(345,-3,o),
(372,-4,o),
(399,-3,o),
(403,-3,qs),
(423,-3,o)
);
},
{
closed = 1;
nodes = (
(86,34,o),
(78,34,qs),
(70,34,o),
(70,44,qs),
(70,174,ls),
(70,181,o),
(72,196,o),
(70,203,qs),
(68,209,o),
(72,230,o),
(79,251,o),
(78,255,qs),
(76,267,o),
(79,291,o),
(70,299,q),
(76,310,o),
(70,320,qs),
(65,327,o),
(77,351,o),
(78,359,qs),
(79,363,o),
(78,382,o),
(78,407,qs),
(78,414,o),
(84,416,qs),
(91,417,o),
(104,416,o),
(110,416,qs),
(188,416,o),
(279,416,o),
(323,417,o),
(342,417,o),
(348,417,qs),
(383,417,o),
(397,397,o),
(397,379,qs),
(397,365,ls),
(397,334,o),
(397,248,o),
(397,158,o),
(397,82,o),
(395,35,o),
(394,36,qs),
(387,41,o),
(355,34,o),
(348,34,qs),
(109,33,ls),
(102,33,o)
);
},
{
closed = 1;
nodes = (
(262,211,o),
(262,218,qs),
(262,249,o),
(242,258,q),
(235,263,o),
(211,244,o),
(207,237,q),
(199,227,o),
(202,207,o),
(203,199,q),
(205,194,o),
(225,190,o),
(247,191,o),
(251,191,qs),
(257,191,o)
);
},
{
closed = 1;
nodes = (
(224,215,o),
(223,217,q),
(223,220,o),
(223,225,o),
(225,227,q),
(226,229,o),
(233,236,o),
(235,234,qs),
(239,231,o),
(239,223,qs),
(239,221,o),
(238,215,o),
(236,215,qs),
(235,215,o)
);
},
{
closed = 1;
nodes = (
(308,-87,o),
(319,-84,qs),
(322,-83,o),
(322,-70,o),
(319,-70,qs),
(315,-69,o),
(313,-63,o),
(310,-62,qs),
(307,-61,o),
(301,-60,o),
(296,-60,qs),
(289,-60,o),
(273,-61,o),
(265,-61,qs),
(235,-61,ls),
(222,-62,o),
(218,-63,o),
(213,-62,o),
(200,-61,qs),
(133,-61,l),
(133,-68,o),
(141,-80,o),
(158,-85,q),
(159,-86,o),
(174,-87,o),
(177,-87,qs),
(201,-88,o),
(223,-88,o),
(230,-87,qs),
(238,-85,o),
(253,-88,o),
(260,-91,qs),
(269,-94,o),
(277,-94,qs),
(288,-94,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
70 1 5 7 38 1 11 2 165 163 157 132 129 33 30 27 8 12 11 101 18 2 10 12 91 1 1 10 5 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
70 1 5 7 38 1 11 2 165 163 157 132 129 33 30 27 8 12 11 101 18 2 10 12 91 1 0 10 5 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
70 1 5 7 38 1 11 2 165 163 157 132 129 33 30 27 8 12 11 101 18 2 10 12 91 1 1 10 5 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
0 4 3 2 3 4 2 128 19 1 12 11 10 11 12 10 128 8 6 2 5 9 1 3 4 5 3 105 0 13 16 14 13 89 15 1 14 20 1 16 14 16 101 0 7 7 37 77 0 11 11 2 95 0 2 2 40 77 18 1 10 10 1 95 0 1 1 38 77 17 1 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
19 1 12 11 10 11 12 10 128 0 3 4 5 3 89 8 6 2 5 9 1 4 2 5 4 105 0 13 16 14 13 89 15 1 14 20 1 16 14 16 101 0 7 7 37 77 0 11 11 2 95 0 2 2 40 77 18 1 10 10 0 97 1 17 2 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 76 values pushed */
0 4 3 2 3 4 2 128 19 1 12 11 10 11 12 10 128 8 6 2 5 9 1 3 4 5 3 105 0 13 16 14 13 89 15 1 14 20 1 16 14 16 101 0 7 7 37 77 0 11 11 2 95 0 2 2 40 77 18 1 10 10 1 95 0 1 1 38 77 17 1 0 0 44 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 53 values pushed */
174 174 147 145 98 97 3 0 174 208 174 208 198 193 192 190 184 179 145 159 147 159 118 110 97 144 98 141 90 84 82 78 75 73 67 65 64 62 52 50 48 46 42 40 10 4 0 96 3 96 21 8 22 
CALL[ ]	/* CallFunction */";
};
width = 513;
}
);
note = dong;
unicode = 8363;
},
{
glyphname = Euro;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(123,-28,o),
(165,-10,o),
(200,6,o),
(205,10,qs),
(217,19,o),
(244,25,o),
(257,31,qs),
(294,49,o),
(330,67,o),
(345,74,o),
(353,77,o),
(369,82,o),
(407,97,o),
(445,112,q),
(445,58,o),
(445,6,o),
(444,-13,o),
(444,-19,qs),
(444,-24,o),
(460,-33,o),
(467,-33,qs),
(475,-33,o),
(478,-25,o),
(479,-20,qs),
(480,-17,o),
(486,10,o),
(487,15,q),
(478,24,o),
(478,36,qs),
(478,62,o),
(478,83,o),
(478,95,o),
(478,116,o),
(478,142,qs),
(478,149,o),
(471,149,q),
(466,150,o),
(453,151,o),
(450,149,q),
(443,142,o),
(427,143,o),
(419,139,qs),
(412,135,o),
(379,119,o),
(340,101,o),
(305,88,o),
(296,88,qs),
(295,88,o),
(256,69,o),
(200,42,o),
(145,16,o),
(128,8,qs),
(122,6,o),
(107,12,o),
(105,17,q),
(104,64,o),
(104,108,o),
(104,122,o),
(104,128,o),
(105,144,o),
(105,169,qs),
(105,174,o),
(111,182,q),
(113,186,o),
(104,191,o),
(108,195,qs),
(110,197,o),
(113,219,o),
(113,247,o),
(112,270,o),
(110,271,qs),
(103,276,o),
(109,282,q),
(126,282,ls),
(134,282,o),
(151,282,o),
(161,283,qs),
(166,284,o),
(178,284,o),
(184,284,qs),
(189,284,o),
(197,284,o),
(200,282,q),
(212,278,o),
(236,276,o),
(248,276,qs),
(269,276,o),
(292,284,o),
(313,283,qs),
(321,283,o),
(338,282,o),
(345,282,qs),
(350,282,o),
(358,284,o),
(363,284,qs),
(372,284,o),
(388,289,o),
(395,291,q),
(389,307,o),
(366,314,o),
(340,314,o),
(328,318,q),
(327,318,o),
(298,310,o),
(289,310,qs),
(274,310,l),
(232,311,ls),
(216,312,o),
(183,311,o),
(167,311,qs),
(134,311,ls),
(128,311,o),
(118,311,o),
(113,310,q),
(113,324,o),
(105,330,o),
(108,333,qs),
(113,338,o),
(113,349,o),
(113,354,qs),
(113,371,l),
(121,371,o),
(144,371,o),
(160,372,qs),
(271,371,ls),
(296,371,o),
(344,378,o),
(368,381,qs),
(376,382,o),
(376,394,o),
(368,395,qs),
(361,396,o),
(356,402,o),
(350,403,qs),
(342,404,o),
(325,405,o),
(316,405,qs),
(299,405,o),
(259,404,o),
(242,404,qs),
(171,404,ls),
(158,403,o),
(129,403,o),
(113,403,q),
(113,586,ls),
(113,591,o),
(113,601,o),
(111,604,qs),
(105,612,o),
(105,624,qs),
(105,641,o),
(119,654,o),
(126,654,qs),
(136,654,o),
(162,639,o),
(188,623,o),
(198,622,qs),
(213,620,o),
(220,613,qs),
(225,609,o),
(267,589,o),
(326,563,o),
(385,537,o),
(429,517,o),
(435,513,qs),
(445,506,o),
(478,513,o),
(479,526,qs),
(479,532,o),
(477,544,o),
(477,550,qs),
(477,559,o),
(486,575,o),
(486,583,qs),
(486,592,o),
(481,597,q),
(488,602,o),
(484,609,o),
(477,617,o),
(478,621,qs),
(480,627,o),
(479,649,o),
(479,681,qs),
(479,686,o),
(473,693,o),
(468,696,q),
(465,699,o),
(456,698,o),
(454,695,q),
(451,687,o),
(445,672,o),
(445,663,qs),
(445,657,o),
(445,625,o),
(445,588,o),
(445,559,o),
(445,556,qs),
(445,550,o),
(436,546,o),
(431,549,qs),
(419,555,o),
(367,580,o),
(306,608,o),
(258,629,o),
(251,630,qs),
(244,632,o),
(199,654,o),
(146,680,o),
(102,700,o),
(94,700,qs),
(86,700,o),
(78,695,qs),
(71,689,o),
(80,668,o),
(91,646,o),
(85,638,qs),
(78,627,o),
(77,617,o),
(85,608,qs),
(90,601,o),
(77,589,o),
(77,578,qs),
(77,533,o),
(80,492,o),
(82,478,o),
(82,474,qs),
(82,473,o),
(79,439,o),
(78,403,q),
(42,403,o),
(-22,404,o),
(-38,404,q),
(-38,397,o),
(-18,377,o),
(1,372,q),
(64,371,l),
(77,371,l),
(77,363,ls),
(77,356,o),
(80,343,o),
(85,336,qs),
(89,330,o),
(85,324,q),
(80,319,o),
(78,311,q),
(38,311,l),
(9,312,ls),
(-4,312,o),
(-23,304,o),
(-35,302,qs),
(-39,302,o),
(-40,288,o),
(-36,286,qs),
(-24,282,o),
(1,275,o),
(14,275,qs),
(25,275,o),
(35,278,qs),
(44,282,o),
(62,283,o),
(71,283,qs),
(77,283,l),
(76,238,o),
(76,183,o),
(77,149,o),
(78,122,o),
(78,105,qs),
(75,66,o),
(71,27,o),
(70,13,o),
(70,8,qs),
(70,-21,ls),
(70,-40,o),
(91,-40,qs),
(92,-40,o)
);
}
);
width = 497;
}
);
note = Euro;
unicode = 8364;
},
{
glyphname = uni20B2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(216,-1,l),
(216,-15,o),
(216,-24,q),
(221,-52,o),
(226,-77,o),
(230,-85,qs),
(235,-94,o),
(243,-89,o),
(247,-84,q),
(245,-62,o),
(256,-22,o),
(254,-1,q),
(368,0,ls),
(375,0,o),
(391,5,o),
(397,-1,q),
(399,-2,o),
(421,-2,o),
(443,0,o),
(444,1,qs),
(452,9,o),
(445,155,o),
(449,307,qs),
(449,312,o),
(445,328,o),
(431,328,qs),
(400,330,o),
(374,330,o),
(361,331,o),
(335,333,o),
(304,336,q),
(295,328,o),
(281,328,qs),
(270,328,o),
(257,329,o),
(250,329,q),
(250,339,o),
(250,349,qs),
(250,360,o),
(258,380,o),
(253,390,qs),
(246,407,o),
(255,427,o),
(255,440,qs),
(254,506,o),
(254,612,o),
(253,671,q),
(397,671,ls),
(407,671,o),
(407,661,qs),
(407,597,o),
(407,536,o),
(408,517,o),
(408,514,qs),
(409,508,o),
(416,498,o),
(416,491,qs),
(416,481,o),
(431,482,qs),
(441,482,o),
(441,492,qs),
(441,686,ls),
(441,696,o),
(431,696,qs),
(403,697,o),
(382,696,o),
(378,699,qs),
(375,701,o),
(307,702,o),
(253,703,q),
(253,716,o),
(253,729,q),
(255,738,o),
(250,757,o),
(246,764,qs),
(240,774,o),
(231,775,q),
(230,771,o),
(220,752,o),
(221,724,qs),
(221,721,o),
(221,709,o),
(222,703,q),
(195,703,o),
(134,702,o),
(101,702,q),
(95,697,o),
(87,702,q),
(83,706,o),
(76,704,qs),
(63,699,o),
(35,684,o),
(43,672,q),
(47,670,o),
(47,666,qs),
(44,622,o),
(42,575,o),
(45,554,o),
(48,548,q),
(48,531,o),
(49,473,o),
(48,456,qs),
(48,452,o),
(42,444,o),
(43,442,qs),
(47,437,o),
(43,428,q),
(37,419,o),
(43,409,qs),
(45,405,o),
(48,398,o),
(48,394,qs),
(48,388,o),
(48,350,o),
(47,304,o),
(46,270,o),
(45,268,qs),
(40,256,o),
(40,248,qs),
(40,223,o),
(40,143,o),
(41,62,o),
(40,37,qs),
(39,30,o),
(50,1,o),
(59,1,qs),
(66,1,o),
(93,0,o),
(118,0,o),
(120,-2,qs),
(125,-6,o),
(136,-1,o),
(141,-1,qs),
(152,-1,l)
);
},
{
closed = 1;
nodes = (
(74,306,o),
(73,315,o),
(75,318,qs),
(83,329,o),
(83,343,qs),
(83,527,ls),
(83,535,o),
(79,549,o),
(74,555,q),
(74,569,o),
(81,579,o),
(81,586,q),
(77,592,o),
(73,619,o),
(74,650,qs),
(74,671,o),
(97,671,qs),
(223,671,l),
(223,634,o),
(224,572,o),
(224,511,o),
(224,472,qs),
(223,456,o),
(222,419,o),
(224,404,qs),
(227,384,o),
(214,356,o),
(221,336,q),
(221,322,o),
(215,300,o),
(216,285,qs),
(217,275,o),
(216,233,o),
(218,191,o),
(222,181,q),
(219,168,o),
(220,147,o),
(223,133,qs),
(225,127,o),
(225,105,o),
(224,95,qs),
(223,83,o),
(220,49,o),
(218,31,q),
(199,31,o),
(175,32,o),
(173,33,qs),
(166,37,o),
(154,35,o),
(148,33,qs),
(143,32,o),
(136,34,qs),
(123,36,o),
(98,39,o),
(86,30,q),
(82,28,o),
(74,33,o),
(74,37,qs),
(74,302,ls)
);
},
{
closed = 1;
nodes = (
(377,199,o),
(337,233,o),
(297,267,o),
(269,294,o),
(267,299,q),
(286,301,l),
(294,303,o),
(315,305,o),
(322,300,q),
(359,298,o),
(396,297,o),
(412,296,o),
(415,292,q),
(418,291,o),
(418,255,o),
(416,209,o),
(416,192,qs),
(416,165,o),
(411,170,qs),
(407,174,o)
);
},
{
closed = 1;
nodes = (
(253,123,o),
(248,137,q),
(248,172,o),
(249,241,o),
(249,275,q),
(269,255,o),
(308,213,o),
(333,197,qs),
(341,193,o),
(374,161,o),
(408,129,o),
(414,122,q),
(414,35,l),
(411,35,o),
(360,33,o),
(288,32,o),
(254,32,q),
(256,43,o),
(252,67,o),
(249,79,q),
(256,94,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 126 values pushed */
183 180 76 38 34 5 4 5 164 102 28 3 6 4 207 1 13 6 231 228 221 161 157 134 16 14 8 11 13 4 76 61 1 1 74 130 124 2 0 73 0 4 5 6 5 4 6 128 7 1 6 0 13 11 6 13 105 0 3 3 39 77 12 1 5 5 1 97 2 1 1 1 37 77 14 1 11 11 0 97 15 10 9 8 4 0 0 38 0 78 0 0 219 216 203 200 176 174 148 147 0 133 0 132 121 119 116 115 108 105 101 97 86 84 75 73 70 67 65 63 50 47 53 16 8 23 
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = uni20B2;
unicode = 8370;
},
{
glyphname = uni20B4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(162,429,o),
(170,430,qs),
(190,434,o),
(225,435,o),
(244,435,qs),
(282,434,o),
(334,433,o),
(386,434,o),
(423,435,qs),
(429,435,o),
(452,435,o),
(472,435,o),
(474,435,qs),
(507,435,o),
(533,448,o),
(527,461,o),
(511,461,qs),
(422,461,l),
(428,475,o),
(441,528,o),
(453,587,o),
(463,631,o),
(466,635,qs),
(471,643,o),
(479,671,o),
(479,694,o),
(470,694,qs),
(463,694,o),
(409,694,o),
(332,694,o),
(248,693,o),
(172,691,o),
(119,689,o),
(112,687,qs),
(106,686,o),
(101,678,o),
(101,676,qs),
(101,669,o),
(102,630,o),
(103,614,qs),
(103,609,o),
(121,600,o),
(140,609,o),
(139,628,qs),
(139,635,o),
(136,646,o),
(135,662,q),
(162,664,o),
(238,666,o),
(317,667,o),
(387,665,o),
(432,661,o),
(434,657,q),
(435,656,o),
(428,623,o),
(417,576,o),
(405,530,o),
(397,499,o),
(397,499,q),
(397,481,o),
(393,469,o),
(388,465,o),
(387,461,q),
(369,461,ls),
(337,461,o),
(301,460,o),
(265,461,o),
(233,462,qs),
(159,462,ls),
(141,462,o),
(101,464,o),
(84,464,qs),
(74,464,o),
(55,463,o),
(47,462,qs),
(40,461,o),
(36,455,o),
(28,454,qs),
(20,453,o),
(20,431,o),
(28,430,qs),
(53,427,o),
(103,429,o),
(128,428,qs),
(139,428,o)
);
},
{
closed = 1;
nodes = (
(157,2,o),
(234,2,o),
(318,3,o),
(394,5,o),
(447,7,o),
(454,9,qs),
(460,11,o),
(465,18,o),
(465,20,qs),
(465,28,o),
(464,66,o),
(463,82,qs),
(463,88,o),
(445,96,o),
(427,88,o),
(427,68,qs),
(427,61,o),
(430,50,o),
(431,34,q),
(404,32,o),
(326,30,o),
(243,30,o),
(172,33,o),
(130,37,o),
(132,41,qs),
(133,43,o),
(146,78,o),
(165,129,o),
(184,180,o),
(196,214,o),
(196,214,q),
(196,233,o),
(201,244,o),
(203,247,q),
(227,247,o),
(274,248,o),
(307,249,qs),
(327,249,o),
(362,248,o),
(381,244,qs),
(390,243,o),
(412,242,o),
(422,242,qs),
(447,243,o),
(497,241,o),
(522,244,qs),
(530,245,o),
(530,267,o),
(522,268,qs),
(515,269,o),
(511,275,o),
(504,276,qs),
(494,277,o),
(477,278,o),
(466,278,qs),
(450,278,o),
(410,276,o),
(393,276,qs),
(319,276,ls),
(287,275,o),
(251,274,o),
(216,275,o),
(183,275,qs),
(44,275,ls),
(28,275,o),
(22,262,o),
(48,249,o),
(80,249,qs),
(82,249,o),
(102,249,o),
(125,249,o),
(130,249,qs),
(153,248,o),
(170,248,q),
(162,231,o),
(141,173,o),
(119,111,o),
(103,65,o),
(100,61,q),
(96,53,o),
(87,25,o),
(88,2,o),
(96,2,qs),
(103,2,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 104 values pushed */
37 25 2 1 2 149 137 2 11 9 2 76 12 1 0 5 8 5 0 114 0 9 7 11 7 9 114 0 8 10 1 7 9 8 7 103 0 2 2 3 97 0 3 3 39 77 0 5 5 1 95 4 1 1 1 40 77 0 11 11 6 97 13 1 6 6 38 6 78 86 85 2 0 148 145 134 129 127 123 115 103 101 94 85 168 86 163 81 70 68 66 58 51 36 33 21 10 0 84 2 83 14 8 22 
CALL[ ]	/* CallFunction */";
};
width = 550;
}
);
note = uni20B4;
unicode = 8372;
},
{
glyphname = uni20AD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(80,329,o),
(77,314,o),
(74,311,q),
(73,311,o),
(76,304,o),
(77,303,qs),
(84,293,o),
(77,286,qs),
(70,278,o),
(76,272,qs),
(81,268,o),
(81,259,qs),
(81,208,o),
(81,159,o),
(80,143,o),
(80,139,q),
(72,135,o),
(82,125,o),
(77,120,qs),
(72,115,o),
(84,109,o),
(81,104,q),
(76,99,o),
(73,86,o),
(73,79,qs),
(73,72,o),
(78,43,o),
(84,14,o),
(85,7,q),
(87,2,o),
(101,0,o),
(104,5,qs),
(108,12,o),
(119,25,o),
(119,32,qs),
(119,39,o),
(111,47,q),
(106,67,o),
(110,110,o),
(118,142,o),
(118,146,qs),
(118,154,o),
(117,157,o),
(116,159,o),
(115,167,q),
(118,184,o),
(120,214,o),
(112,229,qs),
(105,240,o),
(115,250,qs),
(122,257,o),
(115,263,qs),
(108,270,o),
(112,276,q),
(119,283,o),
(113,288,q),
(111,292,o),
(119,300,o),
(113,304,qs),
(111,306,o),
(110,312,o),
(110,314,qs),
(110,326,o),
(119,319,qs),
(162,282,o),
(197,253,o),
(205,242,qs),
(211,235,o),
(240,207,o),
(269,181,o),
(274,175,q),
(283,173,o),
(307,154,o),
(328,134,o),
(329,131,qs),
(336,116,o),
(363,98,o),
(373,86,q),
(390,81,o),
(421,45,o),
(460,10,qs),
(469,3,o),
(491,0,o),
(491,11,qs),
(491,32,o),
(483,46,o),
(470,50,o),
(456,60,o),
(449,77,q),
(444,77,o),
(417,99,o),
(385,128,o),
(372,139,qs),
(357,152,o),
(343,156,o),
(334,163,o),
(326,181,q),
(324,189,o),
(306,190,o),
(304,199,q),
(304,202,o),
(293,212,o),
(261,238,o),
(199,291,o),
(148,336,q),
(163,336,o),
(195,337,o),
(215,338,qs),
(225,338,o),
(262,337,o),
(296,336,o),
(301,336,qs),
(320,336,o),
(357,343,o),
(376,346,q),
(382,348,o),
(382,360,o),
(376,360,qs),
(370,361,o),
(367,367,o),
(362,368,qs),
(355,369,o),
(343,370,o),
(335,370,qs),
(322,370,o),
(292,369,o),
(278,369,qs),
(223,369,ls),
(201,368,o),
(177,368,o),
(154,368,o),
(136,369,q),
(142,374,o),
(154,385,o),
(163,387,qs),
(169,389,o),
(181,401,o),
(183,408,q),
(184,409,o),
(222,444,o),
(283,497,o),
(353,559,o),
(420,618,o),
(444,639,qs),
(456,648,o),
(484,664,o),
(498,680,o),
(487,689,qs),
(484,691,o),
(478,697,o),
(476,699,qs),
(473,702,o),
(446,690,o),
(441,685,qs),
(424,668,o),
(385,633,o),
(370,613,q),
(368,609,o),
(336,579,o),
(295,543,o),
(261,515,o),
(256,513,qs),
(245,510,o),
(242,492,o),
(232,489,qs),
(228,488,o),
(218,483,o),
(215,479,q),
(211,476,o),
(206,466,o),
(201,462,qs),
(126,395,ls),
(122,391,o),
(118,399,q),
(118,458,o),
(118,512,o),
(117,530,o),
(115,533,qs),
(109,541,o),
(121,550,o),
(119,557,qs),
(114,571,o),
(121,590,o),
(111,600,q),
(110,608,o),
(109,621,o),
(116,628,qs),
(121,633,o),
(116,638,qs),
(112,643,o),
(119,665,o),
(119,669,qs),
(119,677,o),
(111,691,o),
(106,698,qs),
(103,703,o),
(84,691,o),
(82,686,qs),
(81,684,o),
(81,673,o),
(81,642,o),
(81,575,o),
(81,459,o),
(81,369,q),
(0,369,l),
(0,362,o),
(15,343,o),
(30,338,q),
(32,338,o),
(52,337,o),
(75,336,o),
(79,336,qs),
(81,336,l)
);
},
{
closed = 1;
nodes = (
(486,342,o),
(486,349,qs),
(486,361,o),
(465,378,o),
(446,378,q),
(436,380,o),
(423,372,o),
(417,364,qs),
(409,353,o),
(417,341,q),
(425,334,o),
(444,317,o),
(454,317,qs),
(472,317,o)
);
},
{
closed = 1;
nodes = (
(441,346,qs),
(440,348,o),
(441,352,q),
(445,356,o),
(448,355,q),
(458,355,o),
(458,348,qs),
(458,347,o),
(456,339,o),
(451,339,qs),
(445,339,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
234 232 224 3 6 1 150 1 3 4 2 76 8 1 1 1 75 38 1 5 74 196 190 171 167 4 3 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 5 1 6 5 112 0 3 4 3 134 8 1 6 0 4 6 89 0 1 2 1 0 4 1 0 105 8 1 6 6 4 98 7 1 4 6 4 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 5 1 5 133 0 3 4 3 134 8 1 6 0 4 6 89 0 1 2 1 0 4 1 0 105 8 1 6 6 4 98 7 1 4 6 4 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
228 227 214 213 227 237 228 237 222 221 213 226 214 226 114 113 107 99 90 80 33 9 8 23 
CALL[ ]	/* CallFunction */";
};
width = 493;
}
);
note = uni20AD;
unicode = 8365;
},
{
glyphname = uni20BE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(26,42,o),
(11,37,qs),
(6,36,o),
(7,20,o),
(12,19,qs),
(26,18,o),
(48,8,o),
(64,8,qs),
(72,8,o),
(94,9,o),
(98,9,qs),
(106,9,o),
(127,4,o),
(134,9,qs),
(136,11,o),
(155,3,o),
(163,9,qs),
(164,10,o),
(186,11,o),
(211,11,o),
(215,9,qs),
(217,8,o),
(243,9,o),
(253,9,qs),
(457,9,ls),
(468,9,o),
(503,1,o),
(504,1,q),
(517,6,o),
(549,6,o),
(578,14,o),
(585,31,q),
(576,33,o),
(557,39,o),
(545,39,qs),
(539,39,o),
(529,44,o),
(524,41,qs),
(520,38,o),
(496,40,o),
(488,40,qs),
(471,40,o),
(418,44,o),
(366,49,o),
(349,49,qs),
(336,49,o),
(307,47,o),
(293,42,qs),
(288,40,o),
(280,40,q),
(276,50,o),
(263,75,o),
(259,90,q),
(240,133,o),
(223,173,o),
(218,187,o),
(216,192,o),
(210,207,o),
(200,230,qs),
(199,233,o),
(200,241,o),
(201,245,q),
(200,249,o),
(190,250,o),
(193,255,q),
(195,257,o),
(188,279,o),
(177,305,o),
(167,325,o),
(165,326,qs),
(156,329,o),
(164,340,o),
(161,344,qs),
(158,349,o),
(155,358,o),
(153,362,qs),
(148,375,o),
(138,379,o),
(139,383,q),
(142,389,o),
(138,400,o),
(136,404,qs),
(55,598,l),
(54,602,o),
(50,612,o),
(47,613,q),
(37,620,o),
(33,630,qs),
(27,644,o),
(34,662,o),
(41,666,q),
(55,671,o),
(106,666,o),
(120,670,qs),
(125,672,o),
(139,672,o),
(143,670,qs),
(148,668,o),
(202,666,o),
(241,666,q),
(240,646,o),
(239,597,o),
(238,556,o),
(237,549,qs),
(237,543,o),
(236,531,o),
(235,523,qs),
(235,517,o),
(234,504,o),
(233,497,qs),
(233,486,ls),
(233,476,o),
(242,462,o),
(243,454,q),
(244,451,o),
(260,451,o),
(261,454,q),
(266,462,o),
(275,479,o),
(275,488,qs),
(275,495,o),
(272,502,qs),
(266,514,o),
(269,554,o),
(270,564,qs),
(271,574,o),
(269,594,o),
(269,603,q),
(270,607,o),
(271,612,o),
(272,615,q),
(277,623,o),
(280,640,o),
(280,647,qs),
(280,652,o),
(280,662,o),
(280,666,q),
(298,666,o),
(336,667,o),
(354,667,q),
(355,663,o),
(357,661,q),
(354,651,o),
(356,634,o),
(360,623,q),
(363,619,o),
(363,601,o),
(363,594,qs),
(361,577,o),
(356,520,o),
(357,502,q),
(364,481,o),
(372,462,o),
(376,456,qs),
(382,449,o),
(390,453,o),
(395,457,q),
(392,471,o),
(400,498,o),
(403,524,o),
(394,538,q),
(402,549,o),
(397,571,o),
(392,581,q),
(399,594,o),
(396,616,o),
(389,627,q),
(389,638,o),
(388,658,o),
(387,667,q),
(430,668,o),
(494,668,o),
(500,667,qs),
(504,666,o),
(508,667,q),
(509,663,o),
(510,657,o),
(510,654,qs),
(511,649,o),
(509,619,o),
(509,608,qs),
(509,599,o),
(515,584,o),
(518,576,q),
(520,573,o),
(529,572,o),
(532,575,q),
(537,578,o),
(543,585,o),
(543,590,qs),
(543,612,o),
(544,625,o),
(544,627,o),
(542,631,qs),
(540,638,o),
(542,651,o),
(542,660,qs),
(542,666,o),
(544,678,o),
(544,684,qs),
(543,695,o),
(534,698,q),
(535,697,o),
(535,697,o),
(534,698,q),
(532,698,o),
(531,699,q),
(522,700,o),
(488,697,o),
(483,698,qs),
(474,699,o),
(421,699,o),
(386,700,q),
(386,714,o),
(385,743,o),
(385,758,qs),
(385,779,o),
(365,785,o),
(347,771,o),
(351,762,qs),
(354,755,o),
(353,719,o),
(352,700,q),
(314,700,o),
(281,700,q),
(282,721,o),
(279,770,o),
(268,782,q),
(261,781,l),
(235,764,o),
(236,732,q),
(241,728,o),
(242,717,o),
(242,712,qs),
(242,709,o),
(241,703,o),
(241,700,q),
(211,700,o),
(170,698,o),
(166,697,qs),
(159,696,o),
(109,698,o),
(49,699,o),
(1,698,o),
(-6,695,qs),
(-12,693,o),
(-19,684,q),
(-23,676,o),
(-7,660,o),
(12,644,o),
(9,634,qs),
(7,621,o),
(10,612,o),
(21,607,qs),
(29,603,o),
(21,587,o),
(25,576,qs),
(38,545,o),
(52,516,o),
(57,506,o),
(60,505,o),
(61,502,qs),
(61,501,o),
(77,451,o),
(99,398,qs),
(101,392,o),
(110,381,o),
(117,376,qs),
(122,371,o),
(122,366,q),
(119,359,o),
(121,347,o),
(123,342,qs),
(142,294,o),
(166,237,o),
(181,203,o),
(193,177,o),
(200,161,qs),
(213,123,o),
(225,86,o),
(230,72,o),
(231,68,qs),
(240,44,l),
(231,47,o),
(205,42,o),
(205,42,q),
(189,48,o),
(154,41,o),
(139,41,qs),
(128,41,o),
(106,42,o),
(97,46,q),
(82,50,o),
(71,50,qs),
(55,50,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHW[ ]	/* 37 values pushed */
94 1 10 2 215 184 152 146 143 137 133 130 127 104 100 11 0 7 8 1 1 0 262 1 14 1 4 76 65 63 2 2 74 266 1 14 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHW[ ]	/* 37 values pushed */
94 1 7 2 215 184 152 146 143 137 133 130 127 104 100 11 0 7 8 1 1 0 262 1 14 1 4 76 65 63 2 2 74 266 1 14 73 
ELSE[ ]	/* Else */
NPUSHW[ ]	/* 37 values pushed */
94 1 10 2 215 184 152 146 143 137 133 130 127 104 100 11 0 7 8 1 1 0 262 1 14 1 4 76 65 63 2 2 74 266 1 14 73 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 10 10 2 97 6 5 4 3 4 2 2 39 77 9 8 2 7 7 2 97 6 5 4 3 4 2 2 39 77 11 18 2 0 0 14 97 17 16 15 3 14 14 38 77 13 12 2 1 1 14 97 17 16 15 3 14 14 38 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
10 9 8 3 7 7 2 97 6 5 4 3 4 2 2 39 77 11 18 2 0 0 14 97 17 16 15 3 14 14 38 77 13 12 2 1 1 14 97 17 16 15 3 14 14 38 14 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 10 10 2 97 6 5 4 3 4 2 2 39 77 9 8 2 7 7 2 97 6 5 4 3 4 2 2 39 77 11 18 2 0 0 14 97 17 16 15 3 14 14 38 77 13 12 2 1 1 14 97 17 16 15 3 14 14 38 14 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 43 values pushed */
1 0 287 282 276 274 272 268 265 264 260 258 255 252 250 247 199 198 196 194 157 154 124 122 86 84 83 81 71 69 57 55 53 50 6 3 0 294 1 294 19 8 22 
CALL[ ]	/* CallFunction */";
};
width = 585;
}
);
note = uni20BE;
unicode = 8382;
},
{
glyphname = uni20BA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(209,12,o),
(251,30,o),
(286,46,o),
(291,50,qs),
(303,59,o),
(330,65,o),
(343,71,qs),
(380,89,o),
(416,107,o),
(431,114,o),
(439,117,o),
(455,122,o),
(493,137,o),
(531,152,q),
(564,169,l),
(564,171,o),
(559,189,o),
(557,189,qs),
(552,190,o),
(539,191,o),
(536,189,q),
(529,182,o),
(513,183,o),
(505,179,qs),
(498,175,o),
(465,159,o),
(426,141,o),
(391,128,o),
(382,128,qs),
(381,128,o),
(342,109,o),
(286,82,o),
(231,56,o),
(214,48,qs),
(208,46,o),
(193,52,o),
(191,57,q),
(191,75,o),
(192,130,o),
(193,183,o),
(196,221,o),
(197,222,q),
(199,226,o),
(190,231,o),
(194,235,q),
(199,238,o),
(199,268,o),
(196,271,qs),
(189,277,o),
(200,285,o),
(199,290,qs),
(198,295,o),
(199,305,o),
(199,309,qs),
(199,318,o),
(197,322,q),
(202,325,ls),
(213,330,o),
(236,336,o),
(240,345,qs),
(241,347,o),
(261,352,o),
(279,361,o),
(277,366,q),
(277,366,o),
(295,379,o),
(301,380,qs),
(309,382,o),
(322,389,o),
(329,392,qs),
(337,397,o),
(350,404,o),
(357,407,qs),
(376,417,o),
(387,430,o),
(402,443,qs),
(405,446,o),
(399,461,o),
(394,460,qs),
(384,459,o),
(362,456,o),
(351,450,qs),
(342,446,o),
(336,438,qs),
(331,431,o),
(313,425,o),
(311,419,qs),
(309,414,o),
(283,406,o),
(272,400,qs),
(265,397,o),
(250,388,o),
(242,383,qs),
(238,380,o),
(229,374,o),
(224,372,qs),
(217,369,o),
(211,367,q),
(206,367,o),
(199,365,q),
(199,483,l),
(201,484,o),
(207,485,o),
(209,486,qs),
(214,488,o),
(219,491,o),
(223,491,q),
(234,493,o),
(254,500,o),
(262,504,qs),
(279,513,o),
(300,535,o),
(316,543,qs),
(321,545,o),
(336,556,o),
(340,554,q),
(345,553,o),
(349,562,o),
(353,564,qs),
(361,568,o),
(370,579,o),
(375,584,q),
(362,597,o),
(340,594,o),
(320,583,o),
(309,583,qs),
(308,583,o),
(289,564,o),
(281,560,q),
(280,559,o),
(273,556,o),
(271,554,q),
(232,534,ls),
(223,529,o),
(207,520,o),
(199,516,q),
(199,586,ls),
(199,591,o),
(199,601,o),
(197,604,qs),
(191,612,o),
(191,624,qs),
(191,662,o),
(196,693,o),
(193,700,o),
(180,700,qs),
(172,700,o),
(164,695,qs),
(157,689,o),
(166,668,o),
(177,646,o),
(171,638,qs),
(164,627,o),
(163,617,o),
(171,608,qs),
(176,601,o),
(163,589,o),
(163,578,qs),
(163,547,o),
(164,510,o),
(165,499,q),
(158,496,o),
(157,494,q),
(155,492,o),
(139,483,o),
(124,476,o),
(123,476,q),
(116,479,o),
(107,466,o),
(105,466,q),
(98,468,o),
(87,457,o),
(82,454,q),
(78,453,o),
(64,446,o),
(59,443,qs),
(49,438,o),
(39,422,o),
(31,416,qs),
(28,414,o),
(34,399,o),
(38,399,qs),
(51,401,o),
(73,404,o),
(83,409,q),
(90,411,o),
(98,421,qs),
(103,428,o),
(116,436,o),
(123,440,qs),
(133,445,o),
(159,451,o),
(166,462,q),
(167,462,l),
(166,450,o),
(163,401,o),
(163,363,qs),
(163,355,o),
(164,350,q),
(143,339,o),
(95,309,o),
(56,282,o),
(46,274,q),
(48,272,o),
(56,260,o),
(84,262,o),
(115,279,qs),
(133,290,o),
(144,295,qs),
(163,305,l),
(163,302,ls),
(162,253,o),
(162,202,o),
(164,169,o),
(164,145,qs),
(161,106,o),
(157,67,o),
(156,53,o),
(156,48,qs),
(156,19,ls),
(156,0,o),
(177,0,qs),
(178,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 88 values pushed */
100 1 2 1 168 143 122 121 86 55 52 40 28 25 11 11 5 2 7 1 3 4 185 1 0 3 4 76 0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 0 4 3 1 4 3 126 0 3 0 1 3 0 126 0 1 1 37 77 6 1 0 0 38 0 78 1 0 203 201 200 199 194 192 97 95 77 75 0 222 1 222 7 8 22 
CALL[ ]	/* CallFunction */";
};
width = 564;
}
);
note = uni20BA;
unicode = 8378;
},
{
glyphname = uni20BC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(268,233,o),
(267,244,qs),
(263,269,o),
(262,314,o),
(262,339,qs),
(264,387,o),
(265,454,o),
(264,521,o),
(262,568,qs),
(262,570,l),
(410,570,ls),
(421,570,o),
(426,566,o),
(426,557,qs),
(426,263,ls),
(426,248,o),
(426,194,o),
(425,146,o),
(425,140,qs),
(425,123,o),
(433,111,q),
(429,105,o),
(426,93,o),
(426,86,qs),
(426,50,o),
(427,31,o),
(428,27,qs),
(430,22,o),
(443,14,o),
(446,22,q),
(452,32,o),
(461,51,o),
(461,62,qs),
(461,114,ls),
(461,127,o),
(453,138,qs),
(451,140,o),
(452,150,o),
(452,154,qs),
(452,189,ls),
(452,196,o),
(453,210,o),
(458,217,qs),
(462,222,o),
(460,233,q),
(460,239,o),
(460,261,o),
(454,270,q),
(451,277,o),
(457,285,o),
(464,292,o),
(461,298,qs),
(457,310,o),
(460,334,o),
(461,340,qs),
(461,346,o),
(459,358,o),
(454,364,qs),
(450,368,o),
(455,375,qs),
(468,392,o),
(458,415,qs),
(454,424,o),
(452,440,o),
(452,448,qs),
(452,493,ls),
(452,501,o),
(453,515,o),
(459,521,qs),
(461,523,o),
(458,531,o),
(457,532,q),
(450,546,o),
(457,553,qs),
(461,558,o),
(461,564,qs),
(461,572,o),
(452,585,o),
(450,592,q),
(450,595,o),
(443,595,qs),
(441,595,o),
(431,596,o),
(398,596,o),
(326,596,o),
(262,596,q),
(262,609,o),
(262,631,o),
(262,634,qs),
(262,676,o),
(249,708,o),
(237,701,o),
(236,681,qs),
(236,596,l),
(200,596,o),
(109,596,o),
(53,596,qs),
(40,596,o),
(40,583,qs),
(40,386,ls),
(40,374,o),
(45,366,qs),
(47,363,o),
(48,354,o),
(48,350,qs),
(49,330,o),
(49,289,o),
(49,268,qs),
(49,262,o),
(47,250,o),
(42,244,qs),
(41,243,o),
(42,235,o),
(43,233,q),
(46,230,o),
(49,189,o),
(50,133,o),
(49,75,o),
(48,34,o),
(49,29,q),
(49,17,o),
(63,16,o),
(70,26,q),
(74,30,o),
(74,37,qs),
(74,321,ls),
(74,362,o),
(73,400,o),
(74,412,o),
(74,414,qs),
(75,420,o),
(70,466,o),
(66,525,o),
(66,550,qs),
(66,570,o),
(88,570,qs),
(236,570,l),
(236,500,ls),
(236,469,o),
(237,428,o),
(237,395,o),
(236,355,o),
(235,324,qs),
(235,229,ls),
(235,214,o),
(234,161,o),
(233,109,o),
(233,94,qs),
(233,81,o),
(234,57,o),
(235,46,qs),
(237,37,o),
(242,31,o),
(243,22,qs),
(244,11,o),
(266,11,o),
(267,22,qs),
(269,43,o),
(269,106,o),
(269,170,o),
(269,190,qs),
(269,204,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
140 137 122 96 56 36 6 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
4 3 2 2 5 1 1 0 2 1 103 0 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 0 1 0 134 4 3 2 2 1 1 2 89 4 3 2 2 2 1 95 5 1 1 2 1 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
151 149 81 79 78 75 67 63 26 24 21 6 8 23 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = uni20BC;
unicode = 8380;
},
{
glyphname = uni20A6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(76,357,q),
(76,349,ls),
(76,283,o),
(77,157,o),
(77,61,o),
(77,38,qs),
(77,32,o),
(77,13,o),
(78,7,qs),
(78,6,o),
(84,3,o),
(86,1,q),
(103,1,o),
(110,6,o),
(111,15,qs),
(111,21,o),
(103,32,o),
(105,36,qs),
(111,48,o),
(111,61,qs),
(110,76,o),
(109,80,o),
(109,79,o),
(110,91,o),
(110,113,q),
(112,119,o),
(105,129,o),
(103,133,q),
(102,138,o),
(109,149,o),
(110,154,q),
(112,156,o),
(104,166,o),
(104,170,qs),
(104,174,o),
(109,180,o),
(110,184,q),
(110,189,o),
(110,200,o),
(105,205,qs),
(97,214,o),
(106,226,qs),
(118,241,o),
(106,256,qs),
(98,268,o),
(105,278,q),
(114,287,o),
(106,294,qs),
(101,298,o),
(102,318,o),
(103,319,qs),
(110,326,o),
(110,345,o),
(110,350,qs),
(110,358,l),
(148,358,o),
(229,358,o),
(269,358,q),
(270,352,o),
(269,351,qs),
(264,346,o),
(260,333,o),
(260,326,qs),
(260,321,o),
(261,310,o),
(261,305,qs),
(261,206,o),
(261,94,o),
(261,44,o),
(261,30,o),
(261,28,q),
(263,22,o),
(268,10,o),
(272,4,qs),
(275,0,o),
(299,0,o),
(342,1,qs),
(348,1,o),
(362,2,o),
(366,-1,qs),
(373,-7,o),
(382,5,o),
(387,4,qs),
(390,4,o),
(397,5,o),
(399,3,qs),
(405,-1,o),
(424,0,o),
(452,1,qs),
(458,1,o),
(477,16,o),
(478,22,qs),
(478,27,o),
(476,29,qs),
(470,35,o),
(470,46,qs),
(470,63,o),
(470,111,o),
(470,158,o),
(471,191,o),
(472,192,qs),
(477,197,o),
(479,207,o),
(479,211,qs),
(479,358,l),
(508,358,ls),
(520,358,o),
(546,363,o),
(553,367,q),
(563,370,o),
(569,377,o),
(570,382,q),
(566,383,o),
(539,394,o),
(501,392,qs),
(495,392,o),
(480,391,q),
(482,397,o),
(485,403,qs),
(494,417,o),
(482,431,q),
(481,433,o),
(481,438,o),
(481,441,qs),
(481,442,o),
(482,468,o),
(481,468,q),
(475,477,o),
(481,486,qs),
(486,492,o),
(482,498,q),
(480,503,o),
(479,515,o),
(479,520,qs),
(479,668,ls),
(479,675,o),
(479,688,o),
(478,694,qs),
(477,701,o),
(465,701,qs),
(461,701,o),
(454,698,o),
(454,693,qs),
(453,687,o),
(453,674,o),
(453,667,qs),
(453,663,o),
(453,649,o),
(454,644,q),
(454,636,o),
(446,618,o),
(444,610,q),
(444,603,o),
(455,587,o),
(453,580,q),
(452,568,o),
(454,558,o),
(454,546,qs),
(454,540,o),
(451,527,o),
(446,522,qs),
(442,518,o),
(447,515,q),
(454,506,o),
(453,498,q),
(453,411,l),
(448,408,o),
(450,396,o),
(451,390,q),
(437,390,o),
(431,390,qs),
(404,390,o),
(338,390,o),
(303,390,q),
(303,392,o),
(302,393,qs),
(297,401,o),
(294,427,o),
(295,463,q),
(300,467,o),
(302,477,o),
(302,483,qs),
(302,529,o),
(302,621,o),
(303,667,qs),
(303,674,o),
(297,685,o),
(294,691,qs),
(291,699,o),
(283,699,q),
(274,701,o),
(249,699,o),
(243,699,qs),
(235,699,o),
(218,702,o),
(210,706,qs),
(207,708,o),
(198,706,o),
(194,704,q),
(181,700,o),
(155,699,o),
(142,704,qs),
(137,706,o),
(127,706,o),
(122,706,qs),
(112,706,o),
(94,701,o),
(85,696,qs),
(77,690,o),
(77,683,qs),
(77,681,o),
(76,598,o),
(76,465,o),
(76,389,q),
(62,389,o),
(50,389,qs),
(35,389,o),
(7,387,o),
(-4,374,o),
(7,357,q),
(39,357,o)
);
},
{
closed = 1;
nodes = (
(114,676,o),
(118,673,q),
(121,672,o),
(158,671,o),
(197,674,o),
(202,677,q),
(257,677,ls),
(269,677,o),
(269,666,qs),
(269,604,o),
(269,533,o),
(269,504,o),
(267,501,qs),
(266,499,o),
(266,494,qs),
(266,493,o),
(268,475,o),
(268,455,o),
(264,450,qs),
(262,447,o),
(265,444,q),
(270,436,o),
(270,421,o),
(264,412,qs),
(261,408,o),
(268,404,o),
(269,400,qs),
(269,397,o),
(266,392,o),
(264,390,q),
(225,389,o),
(145,389,o),
(110,389,q),
(110,670,l),
(111,672,o)
);
},
{
closed = 1;
nodes = (
(374,31,o),
(368,31,qs),
(306,31,ls),
(294,31,o),
(294,43,qs),
(294,347,ls),
(294,352,o),
(297,358,q),
(336,358,o),
(412,358,o),
(447,358,q),
(443,355,o),
(445,344,o),
(445,339,qs),
(445,268,o),
(444,195,o),
(442,168,o),
(439,164,qs),
(438,163,o),
(447,137,o),
(442,130,qs),
(438,123,o),
(444,83,o),
(444,66,qs),
(444,56,o),
(447,43,o),
(436,34,q),
(433,30,o),
(428,35,o),
(426,36,qs),
(422,38,o),
(415,36,o),
(411,34,q),
(406,30,o),
(393,26,o),
(388,30,q),
(384,32,o)
);
}
);
width = 570;
}
);
note = uni20A6;
unicode = 8358;
},
{
glyphname = uni20B1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(111,14,o),
(111,21,qs),
(111,25,o),
(108,40,o),
(109,50,q),
(108,82,o),
(115,140,o),
(115,146,qs),
(114,158,o),
(117,196,o),
(109,211,qs),
(102,222,o),
(112,232,qs),
(119,239,o),
(112,245,qs),
(105,252,o),
(109,258,q),
(116,265,o),
(110,270,q),
(108,274,o),
(116,282,o),
(110,286,qs),
(106,288,o),
(107,302,o),
(108,306,q),
(119,308,o),
(142,312,o),
(149,308,q),
(157,307,o),
(211,307,o),
(285,307,o),
(365,308,o),
(435,311,o),
(457,313,qs),
(465,313,o),
(478,323,o),
(476,329,qs),
(474,339,o),
(481,352,o),
(486,364,o),
(479,370,q),
(486,376,o),
(482,387,o),
(478,393,q),
(486,398,o),
(483,428,o),
(477,433,q),
(477,443,l),
(496,444,o),
(536,450,o),
(558,448,q),
(564,453,o),
(570,460,o),
(559,465,qs),
(549,469,o),
(517,475,o),
(482,480,qs),
(480,480,o),
(477,480,q),
(477,500,o),
(478,515,qs),
(478,518,o),
(482,530,o),
(483,536,q),
(508,537,o),
(553,544,o),
(566,551,q),
(564,558,l),
(538,583,o),
(485,582,q),
(485,606,o),
(485,657,o),
(485,680,qs),
(485,687,o),
(474,697,o),
(467,697,qs),
(464,697,o),
(449,698,o),
(401,698,o),
(298,698,o),
(206,698,qs),
(199,698,o),
(185,695,o),
(181,698,qs),
(171,704,o),
(126,707,o),
(86,698,o),
(83,686,qs),
(83,685,o),
(82,685,o),
(82,684,q),
(81,682,o),
(81,665,o),
(81,622,o),
(81,580,q),
(70,580,ls),
(53,580,o),
(30,571,o),
(17,570,qs),
(12,569,o),
(11,554,o),
(15,552,qs),
(29,547,o),
(58,538,o),
(73,538,qs),
(77,538,o),
(81,538,q),
(81,525,o),
(81,495,o),
(81,478,q),
(67,478,o),
(45,479,o),
(39,480,qs),
(28,482,o),
(4,467,o),
(15,451,q),
(32,451,o),
(65,451,o),
(81,451,q),
(81,424,o),
(81,362,o),
(81,326,qs),
(81,322,o),
(79,298,o),
(74,293,q),
(73,293,o),
(81,272,o),
(77,268,qs),
(70,260,o),
(76,254,qs),
(81,250,o),
(81,241,qs),
(82,202,o),
(81,160,o),
(80,143,o),
(80,139,q),
(72,135,o),
(82,125,o),
(77,120,qs),
(72,115,o),
(84,109,o),
(81,104,q),
(76,99,o),
(73,86,o),
(73,79,qs),
(73,72,o),
(75,38,o),
(79,3,o),
(80,-4,q),
(82,-9,o),
(93,-11,o),
(96,-6,qs),
(100,1,o)
);
},
{
closed = 1;
nodes = (
(367,576,o),
(302,576,o),
(236,576,o),
(185,577,o),
(175,577,qs),
(165,577,o),
(144,578,o),
(133,579,qs),
(128,579,o),
(119,579,o),
(114,579,q),
(115,585,o),
(113,595,o),
(108,600,q),
(107,608,o),
(106,621,o),
(113,628,qs),
(118,633,o),
(113,638,qs),
(110,642,o),
(113,660,o),
(120,674,o),
(123,671,qs),
(129,666,o),
(137,677,o),
(141,674,qs),
(148,670,o),
(161,667,o),
(168,667,qs),
(173,667,o),
(184,668,o),
(189,668,qs),
(227,668,o),
(301,667,o),
(387,667,o),
(442,667,qs),
(451,667,o),
(451,657,qs),
(451,628,o),
(451,589,o),
(451,576,q),
(448,576,l),
(426,576,ls),
(417,576,o)
);
},
{
closed = 1;
nodes = (
(383,538,o),
(397,537,qs),
(407,537,o),
(436,536,o),
(452,536,q),
(455,531,o),
(448,522,o),
(444,514,o),
(449,509,q),
(448,505,o),
(442,495,o),
(443,489,qs),
(443,483,o),
(443,480,q),
(414,479,o),
(348,475,o),
(327,473,qs),
(316,473,o),
(286,473,o),
(278,475,qs),
(261,478,o),
(232,479,o),
(215,477,q),
(204,481,o),
(146,480,o),
(115,479,q),
(115,507,o),
(114,530,o),
(112,533,qs),
(108,538,o),
(112,545,q),
(133,548,o),
(185,545,o),
(201,545,qs),
(216,544,o),
(252,546,o),
(266,546,qs),
(272,546,o),
(282,546,o),
(286,544,q),
(299,540,o),
(327,536,o),
(340,536,qs),
(354,536,o)
);
},
{
closed = 1;
nodes = (
(114,366,o),
(115,381,qs),
(115,402,o),
(115,437,o),
(115,451,q),
(154,451,o),
(231,450,o),
(273,450,q),
(291,445,o),
(328,442,o),
(348,448,q),
(366,444,o),
(403,440,o),
(422,447,q),
(434,443,o),
(446,442,q),
(444,436,o),
(454,433,o),
(451,416,qs),
(447,395,o),
(443,379,o),
(442,375,o),
(443,366,o),
(443,351,qs),
(443,345,o),
(435,343,q),
(426,343,o),
(361,342,o),
(274,340,o),
(186,337,o),
(121,336,o),
(112,336,q),
(113,344,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHW[ ]	/* 43 values pushed */
173 170 2 11 5 85 1 13 3 228 93 2 1 2 217 1 16 1 262 259 101 3 8 0 111 108 105 3 19 8 115 1 9 19 7 76 147 24 16 10 4 9 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHW[ ]	/* 43 values pushed */
173 170 2 11 5 85 1 13 3 228 93 2 1 2 217 1 0 1 262 259 101 3 8 0 111 108 105 3 19 8 115 1 9 19 7 76 147 24 16 10 4 9 73 
ELSE[ ]	/* Else */
NPUSHW[ ]	/* 43 values pushed */
173 170 2 11 5 85 1 13 3 228 93 2 1 2 217 1 16 1 262 259 101 3 8 0 111 108 105 3 19 8 115 1 9 19 7 76 147 24 16 10 4 9 73 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 8 0 19 2 8 114 0 13 2 3 13 89 21 10 6 3 3 18 22 12 7 4 2 1 3 2 105 0 19 0 9 19 9 102 0 4 4 37 77 0 11 11 5 95 0 5 5 39 77 17 1 16 16 46 77 20 1 0 0 1 97 15 14 2 1 1 46 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 8 0 19 2 8 114 0 13 2 3 13 89 21 10 6 3 3 18 22 12 7 4 2 1 3 2 105 0 19 0 9 19 9 102 0 4 4 37 77 0 11 11 5 95 0 5 5 39 77 20 1 0 0 1 97 17 16 15 14 4 1 1 46 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 8 0 19 0 8 19 128 0 13 2 3 13 89 21 10 6 3 3 18 22 12 7 4 2 1 3 2 105 0 19 0 9 19 9 102 0 4 4 37 77 0 11 11 5 95 0 5 5 39 77 20 1 0 0 1 97 17 16 15 14 4 1 1 46 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 8 0 19 0 8 19 128 0 13 2 3 13 89 21 10 6 3 3 18 22 12 7 4 2 1 3 2 105 17 16 15 14 4 1 20 1 0 8 1 0 103 0 19 0 9 19 9 102 0 4 4 37 77 0 11 11 5 95 0 5 5 39 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 72 values pushed */
17 1 16 1 0 1 16 0 128 0 8 0 19 0 8 19 128 0 13 2 3 13 89 21 10 6 3 3 18 22 12 7 4 2 1 3 2 105 15 14 2 1 20 1 0 8 1 0 103 0 19 0 9 19 9 102 0 4 4 37 77 0 11 11 5 95 0 5 5 39 11 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 53 values pushed */
198 197 154 153 268 265 247 241 238 236 226 224 223 221 219 218 216 214 208 202 197 240 198 239 168 159 153 196 154 186 123 117 104 103 88 87 83 82 77 68 67 66 57 55 48 45 42 41 36 33 23 8 22 
CALL[ ]	/* CallFunction */";
};
width = 567;
}
);
note = uni20B1;
unicode = 8369;
},
{
glyphname = uni20BD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(115,14,o),
(115,21,qs),
(115,25,o),
(112,40,o),
(113,50,q),
(112,69,o),
(115,106,o),
(116,120,q),
(129,120,o),
(154,120,o),
(168,120,q),
(179,115,o),
(203,112,o),
(216,118,q),
(228,114,o),
(252,110,o),
(264,117,q),
(279,110,o),
(306,113,o),
(335,120,o),
(351,118,q),
(355,123,o),
(359,130,o),
(352,135,qs),
(345,139,o),
(325,145,o),
(302,150,q),
(283,151,o),
(222,145,o),
(203,143,qs),
(196,143,o),
(176,143,o),
(171,145,qs),
(150,151,o),
(131,147,q),
(127,149,o),
(119,150,q),
(118,159,o),
(121,196,o),
(113,211,qs),
(106,222,o),
(116,232,qs),
(123,239,o),
(116,245,qs),
(109,252,o),
(113,258,q),
(120,265,o),
(114,270,q),
(112,274,o),
(120,282,o),
(114,286,qs),
(110,288,o),
(111,302,o),
(112,306,q),
(123,308,o),
(146,312,o),
(153,308,q),
(161,307,o),
(215,307,o),
(289,307,o),
(369,308,o),
(439,311,o),
(461,313,qs),
(469,313,o),
(482,323,o),
(480,329,qs),
(478,339,o),
(485,352,o),
(490,364,o),
(483,370,q),
(490,376,o),
(486,387,o),
(482,393,q),
(490,398,o),
(487,428,o),
(481,433,q),
(481,454,o),
(481,496,o),
(482,515,q),
(483,520,o),
(490,547,o),
(490,552,qs),
(489,582,o),
(489,649,o),
(489,680,qs),
(489,687,o),
(478,697,o),
(471,697,qs),
(468,697,o),
(453,698,o),
(405,698,o),
(302,698,o),
(210,698,qs),
(203,698,o),
(189,695,o),
(185,698,qs),
(175,704,o),
(130,707,o),
(90,698,o),
(87,686,qs),
(87,685,o),
(86,685,o),
(86,684,qs),
(85,681,o),
(85,657,o),
(85,589,o),
(85,453,o),
(85,337,q),
(68,337,ls),
(51,337,o),
(28,328,o),
(15,327,qs),
(10,326,o),
(9,311,o),
(13,309,qs),
(27,304,o),
(56,306,o),
(71,306,qs),
(74,306,o),
(80,305,o),
(83,305,q),
(81,296,o),
(78,293,q),
(77,293,o),
(85,272,o),
(81,268,qs),
(74,260,o),
(80,254,qs),
(85,250,o),
(85,241,qs),
(86,200,o),
(85,159,o),
(85,150,q),
(64,149,o),
(25,147,o),
(18,150,qs),
(11,152,o),
(-4,137,o),
(3,121,q),
(24,121,o),
(62,121,o),
(82,121,q),
(81,120,o),
(81,120,q),
(76,115,o),
(88,109,o),
(85,104,q),
(80,99,o),
(77,86,o),
(77,79,qs),
(77,72,o),
(79,38,o),
(83,3,o),
(84,-4,q),
(86,-9,o),
(97,-11,o),
(100,-6,qs),
(104,1,o)
);
},
{
closed = 1;
nodes = (
(119,503,o),
(118,530,o),
(116,533,qs),
(110,541,o),
(122,550,o),
(120,557,qs),
(115,571,o),
(122,590,o),
(112,600,q),
(111,608,o),
(110,621,o),
(117,628,qs),
(122,633,o),
(117,638,qs),
(114,642,o),
(117,660,o),
(124,674,o),
(127,671,qs),
(133,666,o),
(141,677,o),
(145,674,qs),
(152,670,o),
(165,667,o),
(172,667,qs),
(177,667,o),
(188,668,o),
(193,668,qs),
(231,668,o),
(305,667,o),
(391,667,o),
(446,667,qs),
(455,667,o),
(455,657,qs),
(455,608,o),
(454,559,o),
(455,541,o),
(456,537,q),
(459,532,o),
(452,523,o),
(448,514,o),
(453,509,q),
(452,505,o),
(446,495,o),
(447,489,qs),
(449,482,o),
(445,455,o),
(453,449,q),
(448,440,o),
(452,436,o),
(458,430,o),
(455,416,qs),
(451,395,o),
(447,379,o),
(446,375,o),
(447,366,o),
(447,351,qs),
(447,345,o),
(439,343,q),
(431,343,o),
(372,342,o),
(291,340,o),
(208,338,o),
(140,336,o),
(124,336,qs),
(120,336,o),
(116,336,q),
(117,344,o),
(118,366,o),
(119,381,qs),
(119,440,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
209 206 2 10 5 183 180 87 84 81 75 6 3 10 91 1 6 3 31 1 1 2 4 76 36 1 2 1 75 152 143 140 136 10 5 0 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
209 206 2 10 5 183 180 87 84 81 75 6 3 10 91 1 2 3 31 1 1 2 4 76 36 1 2 1 75 152 143 140 136 10 5 0 73 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
209 206 2 10 5 183 180 87 84 81 75 6 3 10 91 1 6 3 31 1 1 2 4 76 36 1 2 1 75 152 143 140 136 10 5 0 73 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 6 2 3 6 89 9 1 3 0 2 1 3 2 105 7 1 1 8 1 0 1 0 99 0 4 4 37 77 0 10 10 5 95 0 5 5 39 10 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
9 1 3 6 1 2 1 3 2 105 7 1 1 8 1 0 1 0 99 0 4 4 37 77 0 10 10 5 95 0 5 5 39 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 6 2 3 6 89 9 1 3 0 2 1 3 2 105 7 1 1 8 1 0 1 0 99 0 4 4 37 77 0 10 10 5 95 0 5 5 39 10 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
204 195 168 161 149 146 130 129 99 93 145 26 38 62 36 93 11 8 28 
CALL[ ]	/* CallFunction */";
};
width = 530;
}
);
note = uni20BD;
unicode = 8381;
},
{
glyphname = uni20A8;
layers = (
{
layerId = m01;
shapes = (
{
ref = R;
},
{
pos = (493,0);
ref = s;
}
);
width = 921;
}
);
note = uni20A8;
unicode = 8360;
},
{
glyphname = uni20B9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(242,127,o),
(210,161,o),
(182,187,o),
(176,190,q),
(171,206,o),
(151,223,o),
(138,229,q),
(111,259,o),
(70,307,o),
(47,334,q),
(58,334,o),
(64,328,qs),
(66,326,o),
(82,324,o),
(83,325,qs),
(90,330,o),
(209,328,o),
(312,328,qs),
(318,328,o),
(329,327,o),
(335,328,qs),
(340,328,o),
(352,341,o),
(352,346,qs),
(352,349,o),
(352,350,o),
(352,367,o),
(352,420,o),
(352,475,q),
(377,475,ls),
(398,475,o),
(414,482,o),
(433,486,qs),
(438,487,o),
(439,503,o),
(434,504,q),
(425,508,o),
(404,516,o),
(392,516,qs),
(382,516,o),
(373,512,qs),
(368,510,o),
(357,510,o),
(352,510,q),
(352,532,o),
(352,585,o),
(352,616,qs),
(352,623,o),
(354,638,o),
(358,645,q),
(359,646,o),
(358,650,q),
(364,650,o),
(369,650,qs),
(374,650,o),
(393,652,o),
(395,649,q),
(399,646,o),
(407,651,o),
(411,651,qs),
(419,651,o),
(433,657,o),
(440,659,q),
(435,677,o),
(414,684,o),
(391,684,o),
(381,689,q),
(380,689,o),
(354,681,o),
(346,681,qs),
(197,681,ls),
(190,681,o),
(171,683,o),
(169,681,q),
(166,680,o),
(148,679,o),
(132,681,o),
(131,681,q),
(125,687,o),
(112,680,o),
(110,681,q),
(105,686,o),
(90,681,o),
(84,681,qs),
(80,681,o),
(64,682,o),
(59,682,qs),
(47,682,o),
(32,673,o),
(21,671,qs),
(17,670,o),
(16,655,o),
(20,653,qs),
(31,649,o),
(53,640,o),
(64,640,qs),
(72,640,o),
(83,644,q),
(90,648,o),
(106,649,o),
(114,649,qs),
(125,649,o),
(151,642,o),
(162,648,q),
(162,648,o),
(188,642,o),
(192,649,qs),
(195,654,o),
(207,650,o),
(211,650,qs),
(222,650,o),
(226,648,qs),
(237,644,o),
(257,641,o),
(267,641,qs),
(277,641,o),
(308,645,o),
(324,647,q),
(314,613,o),
(314,585,o),
(318,579,q),
(322,575,o),
(323,530,o),
(322,509,qs),
(322,506,l),
(316,507,o),
(304,509,o),
(298,509,qs),
(291,509,o),
(273,508,o),
(264,507,qs),
(259,507,o),
(248,506,o),
(243,506,qs),
(237,506,o),
(229,508,q),
(217,514,o),
(158,514,o),
(89,509,o),
(29,501,o),
(16,498,q),
(17,495,o),
(23,484,o),
(53,475,o),
(89,475,qs),
(201,475,ls),
(213,475,o),
(237,469,o),
(244,475,q),
(246,476,o),
(266,472,o),
(286,471,o),
(287,476,q),
(287,476,o),
(308,479,o),
(314,477,qs),
(318,476,l),
(318,476,l),
(314,468,o),
(324,454,o),
(324,443,qs),
(323,436,o),
(313,422,o),
(318,415,qs),
(325,406,o),
(325,377,qs),
(325,372,o),
(311,351,o),
(303,357,qs),
(293,365,o),
(278,365,o),
(267,357,q),
(256,367,o),
(232,363,o),
(218,356,q),
(212,354,o),
(198,356,o),
(191,356,qs),
(172,356,o),
(90,359,o),
(33,359,qs),
(31,359,o),
(27,360,o),
(25,360,q),
(24,361,l),
(23,360,l),
(14,361,o),
(13,355,qs),
(10,345,o),
(10,340,qs),
(10,336,o),
(12,334,q),
(11,333,l),
(20,323,o),
(30,302,o),
(40,293,qs),
(51,283,o),
(76,246,o),
(90,241,q),
(97,230,o),
(112,216,o),
(122,209,q),
(127,207,o),
(142,190,o),
(147,184,qs),
(153,175,o),
(188,133,o),
(230,83,o),
(266,42,o),
(273,34,q),
(294,18,o),
(314,5,o),
(321,3,qs),
(331,1,o),
(333,10,o),
(333,17,q),
(320,28,o),
(303,56,o),
(285,82,o),
(268,89,q),
(266,97,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
157 1 7 9 102 1 6 7 62 1 2 4 34 1 0 1 4 76 48 1 0 1 75 139 1 9 74 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
157 1 12 9 102 1 6 7 62 1 2 4 34 1 0 1 4 76 139 1 9 48 1 0 2 75 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
157 1 7 9 102 1 6 7 62 1 2 4 34 1 0 1 4 76 48 1 0 1 75 139 1 9 74 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 79 values pushed */
5 1 4 14 2 0 4 114 0 1 2 0 0 1 114 0 19 0 17 17 19 114 0 18 17 17 18 113 13 12 2 7 6 9 7 89 11 10 2 9 8 1 6 3 9 6 105 15 1 3 14 2 3 89 0 14 16 1 2 1 14 2 106 0 0 19 17 0 88 0 0 0 17 98 0 17 0 17 82 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 88 values pushed */
13 1 7 12 6 12 7 6 128 5 1 4 14 2 14 4 2 128 0 1 2 0 0 1 114 0 19 0 17 17 19 114 0 18 17 17 18 113 0 11 0 12 7 11 12 105 10 1 9 8 1 6 3 9 6 105 15 1 3 14 2 3 89 0 14 16 1 2 1 14 2 106 0 0 19 17 0 88 0 0 0 17 98 0 17 0 17 82 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 1 2 0 0 1 114 0 19 0 17 17 19 114 13 12 2 7 6 9 7 89 11 10 2 9 8 1 6 3 9 6 105 15 1 3 4 2 3 89 14 5 2 4 16 1 2 1 4 2 106 0 0 19 17 0 88 0 0 0 17 98 18 1 17 0 17 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 80 values pushed */
5 1 4 14 2 14 4 2 128 0 1 2 0 0 1 114 0 19 0 17 17 19 114 0 18 17 17 18 113 13 12 2 7 6 9 7 89 11 10 2 9 8 1 6 3 9 6 105 15 1 3 14 2 3 89 0 14 16 1 2 1 14 2 106 0 0 19 17 0 88 0 0 0 17 98 0 17 0 17 82 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 43 values pushed */
210 209 207 205 204 201 191 189 182 180 178 176 167 165 161 159 155 154 150 144 137 132 125 123 121 118 106 104 93 90 87 85 83 82 76 73 50 49 42 38 20 6 22 
CALL[ ]	/* CallFunction */";
};
width = 450;
}
);
note = uni20B9;
unicode = 8377;
},
{
glyphname = uni20AA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(353,297,ls),
(353,302,o),
(357,310,o),
(359,314,qs),
(360,316,o),
(357,324,o),
(356,351,o),
(359,379,q),
(360,382,o),
(363,391,o),
(361,393,q),
(356,401,o),
(353,427,o),
(354,463,q),
(359,467,o),
(361,477,o),
(361,483,qs),
(361,529,o),
(361,621,o),
(362,667,qs),
(362,674,o),
(356,685,o),
(353,691,qs),
(350,699,o),
(342,699,qs),
(336,700,o),
(317,700,o),
(276,699,o),
(237,699,qs),
(233,699,o),
(240,700,o),
(243,701,o),
(224,704,o),
(194,706,qs),
(191,706,o),
(182,706,o),
(178,704,q),
(165,700,o),
(139,699,o),
(126,704,qs),
(121,706,o),
(91,706,o),
(86,706,qs),
(76,706,o),
(58,701,o),
(49,696,qs),
(41,690,o),
(41,683,qs),
(41,681,o),
(40,619,o),
(40,519,o),
(40,395,o),
(40,266,o),
(40,149,o),
(41,59,o),
(41,38,qs),
(41,32,o),
(41,13,o),
(42,7,qs),
(42,6,o),
(48,3,o),
(50,1,q),
(67,1,o),
(74,6,o),
(75,15,qs),
(75,21,o),
(67,32,o),
(69,36,qs),
(75,48,o),
(75,61,qs),
(74,76,o),
(73,80,o),
(73,79,o),
(74,91,o),
(74,113,q),
(76,119,o),
(69,129,o),
(67,133,q),
(66,138,o),
(73,149,o),
(74,154,q),
(76,156,o),
(68,166,o),
(68,170,qs),
(68,174,o),
(73,180,o),
(74,184,q),
(74,189,o),
(74,200,o),
(69,205,qs),
(61,214,o),
(70,226,qs),
(82,241,o),
(70,256,qs),
(62,268,o),
(69,278,q),
(78,287,o),
(70,294,qs),
(65,298,o),
(66,318,o),
(67,319,qs),
(74,326,o),
(74,345,o),
(74,350,qs),
(74,670,l),
(75,672,o),
(78,676,o),
(82,673,qs),
(84,672,o),
(113,671,o),
(151,672,o),
(182,674,o),
(186,677,q),
(316,677,ls),
(328,677,o),
(328,666,qs),
(328,604,o),
(328,533,o),
(328,504,o),
(326,501,qs),
(325,499,o),
(325,494,qs),
(325,493,o),
(327,475,o),
(327,455,o),
(323,450,qs),
(321,447,o),
(324,444,q),
(329,436,o),
(329,421,o),
(323,412,qs),
(320,408,o),
(327,404,o),
(328,400,qs),
(329,395,o),
(324,389,o),
(325,381,qs),
(329,340,o),
(327,315,o),
(328,309,qs),
(328,308,o),
(329,303,o),
(328,301,q),
(323,296,o),
(319,283,o),
(319,276,qs),
(319,271,o),
(320,260,o),
(320,255,qs),
(320,234,o),
(314,178,o),
(316,135,o),
(328,131,q),
(351,132,l)
);
},
{
closed = 1;
nodes = (
(185,584,o),
(181,561,o),
(185,539,qs),
(186,533,o),
(181,520,o),
(185,518,qs),
(189,516,o),
(184,496,o),
(185,491,qs),
(186,488,o),
(186,454,o),
(186,411,o),
(185,377,o),
(185,373,qs),
(185,315,o),
(185,195,o),
(185,93,o),
(185,30,o),
(185,28,q),
(187,22,o),
(192,10,o),
(196,4,qs),
(199,0,o),
(223,0,o),
(266,1,qs),
(269,1,o),
(295,1,o),
(328,2,o),
(353,1,o),
(355,-1,qs),
(362,-7,o),
(371,5,o),
(376,4,qs),
(379,4,o),
(386,5,o),
(388,3,qs),
(394,-1,o),
(443,0,o),
(471,1,qs),
(477,1,o),
(496,16,o),
(497,22,qs),
(497,27,o),
(495,29,qs),
(489,35,o),
(489,46,qs),
(489,63,o),
(489,111,o),
(489,158,o),
(490,191,o),
(491,192,qs),
(496,197,o),
(498,207,o),
(498,211,qs),
(498,375,ls),
(498,383,o),
(500,396,o),
(504,403,qs),
(513,417,o),
(501,431,q),
(500,433,o),
(500,438,o),
(500,441,qs),
(500,442,o),
(501,468,o),
(500,468,q),
(494,477,o),
(500,486,qs),
(505,492,o),
(501,498,q),
(499,503,o),
(498,515,o),
(498,520,qs),
(498,668,ls),
(498,675,o),
(498,688,o),
(497,694,qs),
(496,701,o),
(484,701,qs),
(480,701,o),
(473,698,o),
(473,693,qs),
(472,687,o),
(472,674,o),
(472,667,qs),
(472,663,o),
(472,649,o),
(473,644,q),
(473,636,o),
(465,618,o),
(463,610,q),
(463,603,o),
(474,587,o),
(472,580,q),
(471,568,o),
(473,558,o),
(473,546,qs),
(473,540,o),
(470,527,o),
(465,522,qs),
(461,518,o),
(466,515,q),
(473,506,o),
(472,498,q),
(472,411,l),
(465,406,o),
(474,386,o),
(470,378,q),
(463,374,o),
(473,365,o),
(468,360,qs),
(463,356,o),
(464,344,o),
(464,339,qs),
(464,268,o),
(463,195,o),
(461,168,o),
(458,164,qs),
(457,163,o),
(466,137,o),
(461,130,qs),
(457,123,o),
(463,83,o),
(463,66,qs),
(463,56,o),
(466,43,o),
(455,34,q),
(452,30,o),
(440,35,o),
(415,36,qs),
(410,36,o),
(404,36,o),
(400,34,q),
(395,30,o),
(382,26,o),
(377,30,q),
(373,32,o),
(363,31,o),
(357,31,qs),
(230,31,ls),
(220,31,o),
(219,36,q),
(218,37,o),
(218,70,o),
(218,98,qs),
(218,137,ls),
(218,173,o),
(217,257,o),
(217,297,qs),
(217,303,o),
(219,320,o),
(217,322,qs),
(211,328,o),
(217,348,o),
(217,356,qs),
(217,440,o),
(216,535,o),
(215,574,o),
(214,574,q),
(197,585,l)
);
}
);
width = 547;
}
);
note = uni20AA;
unicode = 8362;
},
{
glyphname = sterling;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(300,5,o),
(310,4,qs),
(325,4,o),
(371,3,o),
(415,9,o),
(427,17,q),
(426,23,l),
(408,46,o),
(370,44,q),
(363,40,o),
(352,39,o),
(345,39,qs),
(330,39,ls),
(322,39,o),
(275,39,o),
(218,39,o),
(168,40,o),
(157,40,q),
(156,100,o),
(155,227,o),
(153,275,q),
(210,275,ls),
(215,275,o),
(226,273,o),
(232,277,q),
(238,277,o),
(252,280,o),
(259,280,qs),
(288,280,o),
(306,278,o),
(311,275,qs),
(316,273,o),
(323,275,o),
(326,275,qs),
(337,275,o),
(356,285,o),
(366,285,qs),
(367,285,o),
(368,295,o),
(367,297,qs),
(360,308,o),
(347,308,qs),
(152,308,l),
(150,339,o),
(146,351,q),
(146,366,o),
(144,400,o),
(146,413,qs),
(150,438,o),
(148,518,o),
(144,604,o),
(144,639,qs),
(144,644,o),
(146,654,o),
(146,658,q),
(153,663,o),
(163,663,qs),
(283,663,ls),
(284,663,o),
(298,652,o),
(298,652,q),
(330,624,o),
(381,578,o),
(414,549,qs),
(419,545,o),
(427,537,o),
(433,535,q),
(434,528,o),
(447,530,q),
(456,530,o),
(456,540,qs),
(456,678,ls),
(456,689,o),
(447,689,qs),
(418,689,l),
(412,690,o),
(399,686,o),
(394,689,qs),
(386,694,o),
(370,696,o),
(362,696,qs),
(239,696,ls),
(234,696,o),
(222,695,o),
(217,693,qs),
(215,692,o),
(211,692,qs),
(205,692,o),
(194,698,o),
(188,698,qs),
(185,698,o),
(183,697,qs),
(179,695,o),
(170,696,o),
(167,694,qs),
(161,689,o),
(153,694,q),
(149,698,o),
(142,696,q),
(126,689,o),
(114,683,o),
(114,678,qs),
(114,677,o),
(117,671,o),
(117,668,qs),
(117,667,o),
(115,662,o),
(114,660,qs),
(109,650,o),
(111,622,o),
(111,612,qs),
(113,509,o),
(113,361,o),
(114,308,q),
(37,308,l),
(21,296,ls),
(13,289,o),
(23,279,o),
(29,275,q),
(114,275,l),
(115,249,o),
(118,208,o),
(121,192,q),
(125,181,o),
(122,166,o),
(120,155,qs),
(118,149,o),
(118,109,o),
(120,61,o),
(122,41,q),
(114,41,o),
(76,39,o),
(33,35,o),
(2,32,o),
(1,30,qs),
(0,27,o),
(1,26,q),
(1,18,o),
(4,18,q),
(13,13,o),
(33,5,o),
(43,5,qs),
(46,5,o),
(72,6,o),
(98,8,o),
(100,9,qs),
(114,14,o),
(160,11,o),
(173,11,qs),
(219,12,ls),
(228,12,o),
(232,11,qs),
(242,7,o),
(260,4,o),
(270,4,qs),
(280,4,o)
);
},
{
closed = 1;
nodes = (
(413,663,ls),
(423,663,o),
(423,653,qs),
(423,584,l),
(332,663,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
156 1 10 11 110 1 5 10 115 1 13 5 148 18 2 1 3 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 10 11 5 11 10 5 128 0 13 5 15 4 13 114 0 15 4 4 15 112 0 18 4 3 4 18 3 128 12 1 5 16 14 2 4 18 5 4 105 0 6 6 39 77 20 1 11 11 7 97 9 8 2 7 7 39 77 17 1 3 3 1 97 0 1 1 38 77 19 2 21 3 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 10 11 5 11 10 5 128 0 13 5 4 4 13 114 12 1 5 16 15 14 3 4 3 5 4 105 0 6 6 39 77 20 1 11 11 7 97 9 8 2 7 7 39 77 18 17 2 3 3 1 97 0 1 1 38 77 19 2 21 3 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 10 11 5 11 10 5 128 0 13 5 4 4 13 114 12 1 5 16 15 14 3 4 3 5 4 105 18 17 2 3 0 1 0 3 1 105 0 6 6 39 77 20 1 11 11 7 97 9 8 2 7 7 39 77 19 2 21 3 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 76 values pushed */
0 10 11 5 11 10 5 128 0 13 5 15 4 13 114 0 15 4 4 15 112 0 18 4 3 4 18 3 128 12 1 5 16 14 2 4 18 5 4 105 17 1 3 0 1 0 3 1 105 0 6 6 39 77 20 1 11 11 7 97 9 8 2 7 7 39 77 19 2 21 3 0 0 38 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 49 values pushed */
1 0 160 158 153 151 147 146 145 137 134 132 127 126 121 120 119 117 114 112 99 96 86 85 82 77 74 72 69 67 66 64 41 40 36 35 24 23 14 11 8 5 0 155 1 154 22 8 22 
CALL[ ]	/* CallFunction */";
};
width = 466;
}
);
note = sterling;
unicode = 163;
},
{
glyphname = uni20B8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(143,655,o),
(150,656,qs),
(167,660,o),
(199,661,o),
(216,661,qs),
(249,660,o),
(295,659,o),
(342,660,o),
(375,661,q),
(383,660,o),
(417,661,o),
(420,661,qs),
(449,661,o),
(472,674,o),
(467,687,o),
(453,687,qs),
(327,687,ls),
(299,687,o),
(267,686,o),
(235,687,o),
(206,688,qs),
(140,688,ls),
(124,688,o),
(89,690,o),
(74,690,qs),
(64,690,o),
(49,689,o),
(41,688,qs),
(35,687,o),
(31,681,o),
(24,680,qs),
(17,679,o),
(17,657,o),
(24,656,qs),
(46,653,o),
(91,655,o),
(113,654,qs),
(122,654,o)
);
},
{
closed = 1;
nodes = (
(360,-3,o),
(364,-2,qs),
(373,1,o),
(382,7,q),
(387,12,o),
(373,30,o),
(363,30,qs),
(287,30,ls),
(271,30,o),
(259,41,o),
(259,56,qs),
(259,499,ls),
(259,509,o),
(271,520,o),
(277,525,qs),
(282,530,o),
(286,521,o),
(290,521,qs),
(416,521,ls),
(420,521,o),
(427,527,o),
(431,528,qs),
(436,530,o),
(440,514,o),
(440,509,qs),
(440,383,ls),
(440,379,o),
(439,370,o),
(441,367,qs),
(443,363,o),
(451,356,o),
(455,354,q),
(460,353,o),
(464,360,o),
(465,364,q),
(473,375,o),
(473,391,qs),
(473,533,ls),
(473,536,o),
(475,543,o),
(473,546,q),
(469,557,o),
(463,559,o),
(454,557,qs),
(449,556,o),
(438,554,o),
(433,554,qs),
(271,554,o),
(86,554,o),
(43,555,qs),
(19,555,o),
(19,532,qs),
(19,467,o),
(19,407,o),
(16,388,o),
(13,383,qs),
(9,376,o),
(15,360,o),
(23,355,q),
(29,353,o),
(35,357,qs),
(39,360,o),
(45,367,o),
(45,373,qs),
(45,378,o),
(45,397,o),
(45,450,o),
(45,507,qs),
(45,524,o),
(62,530,o),
(90,527,o),
(106,529,qs),
(110,530,o),
(132,530,o),
(154,528,o),
(156,526,qs),
(161,522,o),
(173,521,o),
(179,521,qs),
(221,521,ls),
(229,521,o),
(233,517,o),
(234,509,qs),
(234,504,o),
(234,466,o),
(233,429,o),
(233,424,qs),
(233,402,o),
(237,368,o),
(227,348,q),
(230,345,o),
(235,336,o),
(233,333,q),
(226,326,o),
(223,296,o),
(228,265,o),
(231,255,q),
(227,252,o),
(228,225,o),
(230,194,o),
(225,183,qs),
(220,174,o),
(226,166,qs),
(231,159,o),
(234,145,o),
(226,137,q),
(225,135,o),
(226,124,o),
(228,121,qs),
(233,115,o),
(233,86,o),
(229,53,o),
(226,42,qs),
(225,35,o),
(220,32,o),
(213,30,qs),
(205,27,o),
(184,24,o),
(165,24,qs),
(158,24,o),
(142,28,o),
(132,33,q),
(124,28,o),
(106,21,o),
(101,13,q),
(100,10,o),
(103,0,o),
(107,0,qs),
(115,-1,o),
(132,-1,o),
(140,-1,qs),
(317,2,ls),
(323,2,o),
(341,4,o),
(348,-3,q),
(350,-4,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
132 1 7 8 148 80 51 3 10 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
11 1 0 2 8 2 0 114 0 7 8 6 6 7 114 0 5 10 4 10 5 114 0 8 9 1 6 10 8 6 105 3 1 2 2 1 95 0 1 1 39 77 0 10 10 4 95 0 4 4 38 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
11 1 0 2 8 2 0 114 0 7 8 6 6 7 114 0 5 10 4 10 5 114 0 1 3 1 2 0 1 2 105 0 8 9 1 6 10 8 6 105 0 10 10 4 95 0 4 4 38 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
2 0 167 164 155 153 126 122 100 99 96 93 55 53 44 40 34 28 27 24 22 10 0 37 2 37 12 8 22 
CALL[ ]	/* CallFunction */";
};
width = 484;
}
);
note = uni20B8;
unicode = 8376;
},
{
glyphname = uni20AE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(360,-3,o),
(364,-2,qs),
(373,1,o),
(382,7,q),
(387,12,o),
(373,30,o),
(363,30,qs),
(287,30,ls),
(271,30,o),
(259,41,o),
(259,56,qs),
(259,246,l),
(271,252,o),
(285,258,q),
(298,259,o),
(319,266,o),
(326,276,q),
(338,278,o),
(361,285,o),
(366,295,q),
(383,296,o),
(404,308,o),
(424,324,o),
(438,328,q),
(439,334,o),
(439,342,o),
(428,343,qs),
(421,344,o),
(400,329,o),
(377,324,q),
(361,317,o),
(314,298,o),
(299,288,qs),
(293,285,o),
(277,277,o),
(271,277,qs),
(264,276,o),
(259,274,q),
(259,353,l),
(262,354,o),
(265,355,qs),
(289,363,o),
(321,374,o),
(352,387,o),
(373,396,qs),
(378,398,o),
(400,407,o),
(403,408,qs),
(422,416,o),
(426,433,o),
(412,442,o),
(402,438,qs),
(391,435,o),
(356,421,o),
(324,408,o),
(318,406,qs),
(295,396,o),
(275,387,o),
(259,381,q),
(259,639,ls),
(259,649,o),
(271,660,o),
(277,665,qs),
(282,670,o),
(286,661,o),
(290,661,qs),
(416,661,ls),
(420,661,o),
(427,667,o),
(431,668,qs),
(436,670,o),
(440,654,o),
(440,649,qs),
(440,523,ls),
(440,519,o),
(439,510,o),
(441,507,qs),
(443,503,o),
(451,496,o),
(455,494,q),
(460,493,o),
(464,500,o),
(465,504,q),
(473,515,o),
(473,531,qs),
(473,673,ls),
(473,676,o),
(475,683,o),
(473,686,q),
(469,697,o),
(463,699,o),
(454,697,qs),
(449,696,o),
(438,694,o),
(433,694,qs),
(271,694,o),
(86,694,o),
(43,695,qs),
(19,695,o),
(19,672,qs),
(19,607,o),
(19,547,o),
(16,528,o),
(13,523,qs),
(9,516,o),
(15,500,o),
(23,495,q),
(29,493,o),
(35,497,qs),
(39,500,o),
(45,507,o),
(45,513,qs),
(45,518,o),
(45,537,o),
(45,590,o),
(45,647,qs),
(45,664,o),
(62,670,o),
(90,667,o),
(106,669,qs),
(110,670,o),
(132,670,o),
(154,668,o),
(156,666,qs),
(161,662,o),
(173,661,o),
(179,661,qs),
(221,661,ls),
(229,661,o),
(233,657,o),
(234,649,qs),
(234,644,o),
(234,607,o),
(233,569,o),
(233,564,qs),
(233,542,o),
(237,508,o),
(227,488,q),
(230,485,o),
(235,476,o),
(233,473,q),
(226,466,o),
(223,436,o),
(228,405,o),
(231,395,q),
(227,392,o),
(228,371,q),
(218,367,o),
(202,361,o),
(195,358,qs),
(184,354,o),
(158,346,o),
(150,341,q),
(143,340,o),
(134,334,o),
(129,332,q),
(125,329,o),
(129,323,o),
(124,321,q),
(120,318,o),
(133,303,o),
(139,304,qs),
(157,308,o),
(184,321,o),
(200,326,qs),
(206,328,o),
(217,335,o),
(223,337,q),
(225,340,o),
(229,341,q),
(229,327,o),
(229,287,o),
(228,261,q),
(213,258,o),
(171,236,o),
(162,232,qs),
(151,228,o),
(133,215,o),
(134,210,q),
(140,203,o),
(174,210,o),
(228,232,q),
(227,209,o),
(225,183,qs),
(225,179,o),
(224,169,o),
(226,166,qs),
(231,159,o),
(234,145,o),
(226,137,q),
(225,135,o),
(226,124,o),
(228,121,qs),
(233,115,o),
(233,86,o),
(229,53,o),
(226,42,qs),
(225,35,o),
(220,32,o),
(213,30,qs),
(205,27,o),
(184,24,o),
(165,24,qs),
(158,24,o),
(142,28,o),
(132,33,q),
(124,28,o),
(106,21,o),
(101,13,q),
(100,10,o),
(103,0,o),
(107,0,qs),
(115,-1,o),
(132,-1,o),
(140,-1,qs),
(317,2,ls),
(323,2,o),
(341,4,o),
(348,-3,q),
(350,-4,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 85 values pushed */
130 1 3 4 160 146 78 72 57 49 6 6 2 207 181 46 40 37 13 6 7 6 3 76 0 3 4 2 2 3 114 0 6 2 7 2 6 7 128 0 1 7 0 7 1 114 5 1 2 2 4 96 0 4 4 39 77 0 7 7 0 95 0 0 0 38 0 78 213 210 199 198 153 151 124 120 98 97 94 91 41 66 8 8 24 
CALL[ ]	/* CallFunction */";
};
width = 484;
}
);
note = uni20AE;
unicode = 8366;
},
{
glyphname = uni20A9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(89,357,q),
(89,28,ls),
(89,15,o),
(107,-1,o),
(116,9,q),
(117,11,o),
(120,13,o),
(121,15,qs),
(125,21,o),
(141,51,o),
(159,80,o),
(165,84,q),
(169,91,o),
(196,139,o),
(233,202,o),
(270,267,o),
(298,318,o),
(303,328,q),
(311,334,o),
(322,350,o),
(326,358,q),
(361,358,o),
(431,358,o),
(465,358,q),
(470,350,o),
(480,333,o),
(484,325,q),
(487,321,o),
(507,284,o),
(534,234,o),
(562,184,o),
(583,148,o),
(586,144,qs),
(594,133,o),
(602,108,o),
(609,97,qs),
(620,78,o),
(638,44,o),
(647,24,qs),
(650,17,o),
(663,11,o),
(667,6,qs),
(674,-2,o),
(684,6,o),
(691,25,o),
(694,32,q),
(686,51,l),
(686,124,ls),
(686,141,o),
(694,166,o),
(694,183,qs),
(694,205,l),
(684,212,o),
(696,223,o),
(694,228,qs),
(692,235,o),
(685,251,o),
(690,255,q),
(699,266,o),
(692,276,qs),
(685,284,o),
(687,303,o),
(687,312,q),
(695,320,o),
(695,330,qs),
(695,338,o),
(695,358,q),
(700,358,ls),
(717,358,o),
(753,363,o),
(763,367,q),
(777,370,o),
(784,377,o),
(786,382,q),
(780,383,o),
(744,393,o),
(695,392,q),
(695,421,o),
(694,488,o),
(694,547,o),
(694,565,qs),
(694,570,o),
(694,579,o),
(695,583,q),
(695,588,o),
(689,597,o),
(688,600,q),
(688,605,o),
(693,612,o),
(688,616,qs),
(685,619,o),
(694,632,o),
(694,636,qs),
(695,642,o),
(695,676,o),
(694,681,qs),
(693,685,o),
(676,691,o),
(660,686,o),
(660,673,qs),
(660,457,ls),
(660,443,o),
(667,433,q),
(662,428,o),
(659,416,o),
(659,410,qs),
(659,405,o),
(660,396,o),
(660,391,q),
(642,391,o),
(602,390,o),
(594,390,qs),
(569,390,o),
(512,390,o),
(482,390,q),
(468,416,o),
(436,473,o),
(419,504,q),
(416,508,o),
(411,517,o),
(414,521,qs),
(421,529,o),
(422,551,o),
(432,557,q),
(434,559,o),
(439,565,o),
(438,566,q),
(437,574,o),
(447,584,o),
(451,590,qs),
(456,597,o),
(468,614,o),
(469,622,q),
(474,637,o),
(493,660,o),
(502,672,qs),
(503,674,o),
(506,685,o),
(504,686,qs),
(497,688,o),
(485,696,o),
(477,696,qs),
(445,696,ls),
(425,696,o),
(412,691,o),
(403,687,o),
(387,688,qs),
(386,688,o),
(357,689,o),
(326,693,o),
(321,696,q),
(314,696,o),
(299,696,o),
(291,695,qs),
(289,695,o),
(284,683,o),
(285,679,q),
(290,671,o),
(297,653,o),
(304,647,qs),
(314,639,o),
(318,619,o),
(325,611,qs),
(338,598,o),
(351,567,o),
(362,553,q),
(359,540,o),
(373,530,qs),
(385,520,o),
(375,507,q),
(373,503,o),
(351,465,o),
(322,414,o),
(307,389,q),
(259,389,o),
(166,389,o),
(125,389,q),
(126,399,o),
(121,410,qs),
(117,418,o),
(115,432,o),
(115,440,qs),
(115,523,ls),
(115,527,o),
(114,534,o),
(115,538,qs),
(117,543,o),
(126,551,o),
(120,557,qs),
(114,563,o),
(124,572,o),
(123,577,q),
(123,669,ls),
(123,671,o),
(124,675,o),
(122,676,q),
(109,688,o),
(94,686,o),
(89,674,o),
(89,670,qs),
(89,389,l),
(78,389,o),
(68,389,qs),
(48,389,o),
(9,387,o),
(-5,374,o),
(10,357,q),
(47,357,o)
);
},
{
closed = 1;
nodes = (
(350,625,o),
(337,647,q),
(335,655,o),
(344,657,o),
(359,658,o),
(364,663,qs),
(365,664,o),
(388,658,o),
(390,659,qs),
(404,668,o),
(434,664,o),
(451,664,qs),
(454,664,o),
(455,655,q),
(442,631,o),
(415,583,o),
(401,560,qs),
(397,553,o),
(391,554,o),
(389,556,q),
(376,579,o)
);
},
{
closed = 1;
nodes = (
(372,451,o),
(384,465,o),
(391,480,q),
(391,482,o),
(399,482,o),
(401,481,q),
(416,456,o),
(440,411,o),
(450,390,q),
(424,390,o),
(370,390,o),
(343,390,q),
(346,398,o),
(353,414,o),
(362,420,q),
(365,437,o)
);
},
{
closed = 1;
nodes = (
(614,149,o),
(551,263,o),
(499,358,q),
(542,358,o),
(623,358,o),
(661,358,q),
(660,293,o),
(660,162,o),
(660,97,qs),
(660,83,o),
(651,84,o),
(644,94,qs),
(642,96,o)
);
},
{
closed = 1;
nodes = (
(115,218,o),
(114,226,o),
(117,229,q),
(116,289,ls),
(116,290,o),
(124,296,o),
(123,303,q),
(113,313,o),
(123,321,q),
(123,325,o),
(122,349,o),
(119,357,q),
(160,358,o),
(245,358,o),
(289,358,q),
(281,345,o),
(271,326,o),
(269,324,qs),
(263,317,o),
(253,302,o),
(252,295,qs),
(252,290,o),
(240,266,o),
(226,243,o),
(222,238,qs),
(218,234,o),
(208,221,o),
(208,213,qs),
(208,206,o),
(201,199,qs),
(198,196,o),
(176,162,o),
(150,119,o),
(128,83,o),
(124,78,q),
(122,74,o),
(115,77,o),
(115,81,qs),
(115,214,ls)
);
},
{
closed = 1;
nodes = (
(428,181,o),
(428,193,qs),
(428,200,o),
(414,225,o),
(396,225,qs),
(386,225,o),
(367,209,o),
(359,201,q),
(351,190,o),
(359,178,qs),
(365,171,o),
(378,163,o),
(388,164,qs),
(407,164,o)
);
},
{
closed = 1;
nodes = (
(383,189,q),
(382,194,o),
(383,195,q),
(387,202,o),
(393,202,qs),
(398,202,o),
(400,195,o),
(400,193,qs),
(400,186,o),
(390,186,q),
(387,185,o)
);
}
);
userData = {
assembly = "NPUSHW[ ]	/* 43 values pushed */
68 50 11 7 4 10 3 219 1 11 10 104 86 80 25 24 15 6 0 11 293 289 152 144 4 15 7 155 1 17 15 318 1 16 17 6 76 258 161 160 3 16 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 11 10 0 10 11 0 128 19 1 16 17 17 16 113 12 6 5 1 4 0 14 13 18 9 8 5 7 15 0 7 103 0 15 0 17 16 15 17 105 0 3 3 39 77 0 10 10 2 97 4 1 2 2 39 10 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 11 10 0 10 11 0 128 19 1 16 17 16 134 12 6 5 1 4 0 14 13 18 9 8 5 7 15 0 7 103 0 15 0 17 16 15 17 105 0 3 3 39 77 0 10 10 2 97 4 1 2 2 39 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
0 3 2 10 2 3 10 128 0 11 10 0 10 11 0 128 19 1 16 17 16 134 12 6 5 1 4 0 14 13 18 9 8 5 7 15 0 7 103 0 15 0 17 16 15 17 105 0 10 10 2 97 4 1 2 2 39 10 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHW[ ]	/* 46 values pushed */
297 297 0 0 317 315 297 310 297 310 306 304 284 281 254 251 235 232 224 223 217 215 0 207 0 206 186 183 139 138 131 130 98 92 65 63 61 58 55 54 33 30 66 20 8 23 
CALL[ ]	/* CallFunction */";
};
width = 786;
}
);
note = uni20A9;
unicode = 8361;
},
{
glyphname = yen;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(234,23,o),
(234,32,qs),
(234,39,o),
(232,53,o),
(232,56,qs),
(232,184,l),
(237,183,o),
(249,180,o),
(256,178,qs),
(274,175,o),
(290,175,qs),
(313,175,o),
(356,183,o),
(376,187,qs),
(384,189,o),
(383,205,o),
(375,205,qs),
(369,205,o),
(365,214,o),
(360,215,qs),
(356,216,o),
(329,216,o),
(301,216,o),
(295,216,qs),
(232,216,l),
(232,264,l),
(237,263,o),
(249,260,o),
(256,258,qs),
(274,255,o),
(290,255,qs),
(313,255,o),
(356,263,o),
(376,267,qs),
(384,269,o),
(383,285,o),
(375,285,qs),
(369,285,o),
(365,294,o),
(360,295,qs),
(356,296,o),
(329,296,o),
(301,296,o),
(295,296,qs),
(232,296,l),
(232,301,o),
(231,321,o),
(234,322,q),
(243,327,o),
(276,342,o),
(280,351,qs),
(285,362,o),
(301,376,o),
(309,384,qs),
(342,420,o),
(378,453,qs),
(389,463,o),
(404,489,o),
(414,499,qs),
(416,501,o),
(418,510,o),
(418,514,qs),
(418,684,ls),
(418,697,o),
(403,695,qs),
(385,691,o),
(385,675,qs),
(385,556,ls),
(385,551,o),
(388,541,o),
(392,536,qs),
(394,534,o),
(392,529,qs),
(386,513,o),
(372,499,o),
(359,486,q),
(354,479,o),
(346,465,o),
(340,459,qs),
(314,431,o),
(259,378,o),
(232,351,qs),
(224,343,o),
(214,351,q),
(171,392,o),
(91,477,o),
(43,513,qs),
(39,516,o),
(36,526,o),
(36,531,qs),
(36,659,ls),
(36,664,o),
(37,675,o),
(41,679,qs),
(42,680,o),
(42,684,o),
(40,685,q),
(37,689,o),
(29,696,o),
(25,700,q),
(23,700,o),
(18,695,qs),
(10,689,o),
(10,679,qs),
(10,524,ls),
(10,516,o),
(11,502,o),
(15,498,q),
(26,490,o),
(43,468,o),
(56,463,q),
(61,462,o),
(68,453,o),
(70,448,qs),
(77,435,o),
(98,414,o),
(110,406,qs),
(121,399,o),
(139,382,o),
(146,372,qs),
(148,370,o),
(151,364,o),
(153,363,qs),
(167,357,o),
(187,333,o),
(198,324,q),
(198,305,o),
(199,293,o),
(189,294,qs),
(180,295,o),
(137,296,o),
(121,296,qs),
(88,296,o),
(34,288,o),
(34,281,qs),
(34,272,o),
(79,264,qs),
(82,263,o),
(96,264,o),
(121,264,qs),
(135,264,o),
(165,267,o),
(176,267,qs),
(198,267,o),
(198,258,qs),
(198,216,l),
(121,216,ls),
(88,216,o),
(34,208,o),
(34,201,qs),
(34,192,o),
(79,184,qs),
(82,183,o),
(96,184,o),
(121,184,qs),
(138,184,o),
(166,188,o),
(176,188,qs),
(187,188,o),
(198,179,o),
(198,164,qs),
(198,31,ls),
(198,27,o),
(197,21,o),
(198,17,qs),
(203,3,o),
(211,3,qs),
(219,3,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 109 values pushed */
32 1 4 8 17 1 1 11 162 2 2 0 12 3 76 105 77 41 3 6 74 0 8 6 4 6 8 4 128 0 11 3 1 3 11 1 128 5 1 4 9 6 4 89 7 1 6 0 9 3 6 9 105 2 1 1 12 3 1 89 10 1 3 0 12 0 3 12 105 13 1 0 0 38 0 78 1 0 157 155 151 149 146 142 137 135 131 129 126 123 37 34 28 26 25 23 21 19 13 11 10 8 0 167 1 167 14 8 22 
CALL[ ]	/* CallFunction */";
};
width = 428;
}
);
note = yen;
unicode = 165;
},
{
glyphname = uni2144;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(57,11,o),
(60,15,q),
(62,16,o),
(62,20,o),
(61,21,qs),
(57,26,o),
(56,36,o),
(56,41,qs),
(56,175,ls),
(56,180,o),
(59,190,o),
(63,193,qs),
(111,229,o),
(191,315,o),
(234,355,qs),
(244,363,o),
(252,355,qs),
(279,328,o),
(334,265,o),
(360,237,qs),
(366,231,o),
(374,217,o),
(379,210,q),
(392,197,o),
(406,184,o),
(412,167,qs),
(414,162,o),
(412,160,qs),
(408,156,o),
(405,145,o),
(405,140,qs),
(405,21,ls),
(405,5,o),
(423,1,qs),
(438,-1,o),
(438,12,qs),
(438,182,ls),
(438,186,o),
(436,195,o),
(434,197,qs),
(424,208,o),
(409,233,o),
(398,243,qs),
(380,260,o),
(346,304,o),
(329,322,qs),
(321,330,o),
(305,344,o),
(300,355,qs),
(296,364,o),
(263,380,o),
(254,384,q),
(253,385,o),
(251,426,o),
(250,455,qs),
(250,466,o),
(259,491,o),
(249,493,qs),
(245,494,o),
(250,514,o),
(259,536,o),
(259,540,qs),
(259,544,o),
(255,572,o),
(253,601,o),
(255,606,qs),
(259,614,o),
(254,647,o),
(252,650,q),
(251,653,o),
(254,667,o),
(254,674,qs),
(254,683,o),
(239,703,o),
(231,703,qs),
(223,703,o),
(218,689,qs),
(217,685,o),
(218,679,o),
(218,675,qs),
(218,580,l),
(215,577,o),
(213,539,o),
(214,486,o),
(216,432,o),
(218,389,o),
(218,382,q),
(207,373,o),
(187,349,o),
(173,343,qs),
(171,342,o),
(168,336,o),
(166,334,qs),
(159,324,o),
(141,307,o),
(130,300,qs),
(118,293,o),
(97,272,o),
(90,258,qs),
(88,254,o),
(81,245,o),
(76,243,qs),
(63,238,o),
(46,216,o),
(35,208,q),
(31,204,o),
(30,190,o),
(30,182,qs),
(30,21,ls),
(30,11,o),
(38,5,qs),
(43,0,o),
(45,0,q),
(49,4,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
108 82 47 41 33 26 6 0 73 0 0 0 118 39 37 1 6 22 
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = uni2144;
unicode = 8516;
},
{
glyphname = plus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(258,86,o),
(260,106,qs),
(260,114,o),
(261,128,o),
(261,135,qs),
(262,152,o),
(262,203,o),
(262,216,qs),
(262,230,o),
(262,256,o),
(261,267,q),
(265,268,o),
(272,268,o),
(276,268,qs),
(293,268,o),
(324,270,o),
(339,262,qs),
(348,258,o),
(366,259,o),
(374,259,qs),
(404,259,o),
(449,267,o),
(469,271,q),
(470,301,o),
(423,301,qs),
(415,301,o),
(387,306,o),
(384,302,qs),
(379,296,o),
(356,297,o),
(349,300,qs),
(339,305,o),
(310,297,o),
(285,300,qs),
(278,301,o),
(267,299,o),
(261,299,q),
(261,308,ls),
(261,325,o),
(263,354,o),
(266,370,qs),
(268,380,o),
(270,398,o),
(270,406,qs),
(270,429,o),
(262,491,o),
(257,511,q),
(257,516,o),
(248,516,qs),
(242,516,o),
(230,508,o),
(230,498,qs),
(231,473,o),
(232,411,o),
(231,367,o),
(230,365,qs),
(224,353,o),
(229,330,o),
(229,317,qs),
(229,299,l),
(216,299,o),
(177,296,o),
(170,300,qs),
(160,306,o),
(136,299,o),
(124,300,qs),
(110,302,o),
(54,300,o),
(30,300,q),
(32,283,o),
(65,272,o),
(82,270,q),
(85,269,o),
(91,271,o),
(94,269,qs),
(102,264,o),
(117,268,o),
(124,268,qs),
(143,267,o),
(175,266,o),
(191,266,qs),
(202,266,o),
(221,267,o),
(230,267,q),
(230,253,o),
(229,222,o),
(229,202,qs),
(228,153,o),
(228,77,o),
(228,42,q),
(248,44,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
46 34 2 2 4 53 1 5 2 67 1 0 5 3 76 0 1 7 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
46 34 2 2 4 67 53 2 0 2 2 76 0 1 7 73 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
46 34 2 2 4 53 1 5 2 67 1 0 5 3 76 0 1 7 73 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 2 4 133 0 5 0 7 5 89 6 3 2 2 8 1 2 0 7 2 0 105 0 5 5 7 98 0 7 5 7 82 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 4 2 4 133 6 5 3 3 2 8 1 2 0 7 2 0 105 6 5 3 3 2 2 7 97 0 7 2 7 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 4 2 4 133 0 5 0 7 5 89 6 3 2 2 8 1 2 0 7 2 0 105 0 5 5 7 98 0 7 5 7 82 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
78 74 72 69 66 62 61 60 42 22 36 35 102 9 8 27 
CALL[ ]	/* CallFunction */";
};
width = 499;
}
);
note = plus;
unicode = 43;
},
{
glyphname = minus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(167,239,o),
(185,246,o),
(203,246,qs),
(243,246,o),
(279,244,o),
(297,245,o),
(309,248,qs),
(314,250,o),
(327,250,o),
(331,245,qs),
(334,242,o),
(351,247,o),
(358,248,qs),
(376,250,o),
(389,239,o),
(398,242,qs),
(402,243,o),
(435,247,o),
(480,252,o),
(522,257,o),
(534,259,qs),
(542,261,o),
(542,276,o),
(534,277,qs),
(527,278,o),
(522,286,o),
(516,287,qs),
(508,288,o),
(491,289,o),
(482,289,qs),
(473,289,o),
(434,289,o),
(387,288,o),
(346,288,o),
(337,288,qs),
(306,287,o),
(247,292,o),
(208,295,o),
(207,288,qs),
(207,287,o),
(168,286,o),
(113,287,o),
(61,288,o),
(48,288,q),
(48,279,o),
(68,255,o),
(87,249,q),
(89,249,o),
(115,248,o),
(139,247,o),
(139,247,q),
(153,239,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 5 0 0 5 113 2 1 1 0 0 1 89 2 1 1 1 0 97 4 3 2 0 1 0 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 4 0 5 0 4 114 0 5 0 5 111 2 1 1 0 0 1 89 2 1 1 1 0 97 3 1 0 1 0 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 5 0 0 5 113 2 1 1 0 0 1 89 2 1 1 1 0 97 4 3 2 0 1 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
51 50 49 45 43 42 132 68 48 6 6 25 
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = minus;
unicode = 8722;
},
{
glyphname = multiply;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(400,135,qs),
(397,139,o),
(380,153,o),
(367,165,o),
(368,166,qs),
(371,171,o),
(361,174,o),
(356,179,qs),
(353,182,o),
(345,204,o),
(337,204,qs),
(333,204,o),
(321,213,o),
(317,216,q),
(304,230,o),
(285,251,o),
(277,258,qs),
(272,263,o),
(264,271,o),
(259,275,q),
(266,281,ls),
(279,292,o),
(301,312,o),
(314,321,qs),
(322,326,o),
(343,343,o),
(343,343,q),
(350,343,o),
(374,368,o),
(401,403,o),
(423,436,o),
(429,445,q),
(433,449,o),
(426,455,q),
(422,460,o),
(408,462,o),
(401,455,qs),
(388,441,o),
(351,407,o),
(314,373,o),
(288,348,o),
(285,343,qs),
(280,333,o),
(259,319,o),
(250,310,qs),
(237,298,l),
(221,314,o),
(197,341,qs),
(192,347,o),
(167,372,o),
(142,398,o),
(136,403,q),
(120,420,o),
(88,454,o),
(71,471,q),
(59,458,o),
(75,427,o),
(85,413,qs),
(87,410,o),
(88,405,o),
(93,403,qs),
(100,401,o),
(108,386,o),
(113,381,qs),
(121,372,o),
(150,340,o),
(180,310,o),
(187,302,qs),
(195,295,o),
(208,282,o),
(215,275,q),
(205,265,o),
(181,245,o),
(167,231,qs),
(115,182,o),
(56,126,o),
(30,101,q),
(45,88,o),
(83,110,o),
(99,123,qs),
(104,128,o),
(122,137,o),
(120,142,qs),
(119,144,o),
(138,165,o),
(167,191,o),
(193,213,o),
(200,216,qs),
(214,222,o),
(229,244,o),
(236,253,q),
(239,251,o),
(247,245,o),
(247,243,qs),
(248,235,o),
(266,223,o),
(288,210,o),
(293,200,q),
(297,195,o),
(314,173,o),
(332,152,o),
(336,148,qs),
(357,126,o),
(394,93,o),
(411,81,q),
(433,100,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
85 59 50 34 4 0 74 28 1 0 73 0 0 0 118 95 93 1 8 22 
CALL[ ]	/* CallFunction */";
};
width = 460;
}
);
note = multiply;
unicode = 215;
},
{
glyphname = divide;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(281,338,qs),
(287,346,o),
(298,356,o),
(304,361,qs),
(317,372,ls),
(322,377,o),
(331,385,o),
(337,390,qs),
(339,392,o),
(364,415,o),
(370,419,q),
(375,425,o),
(395,448,o),
(393,455,qs),
(392,462,o),
(381,459,o),
(376,459,q),
(370,455,o),
(360,457,qs),
(350,458,ls),
(321,461,o),
(263,455,o),
(234,458,qs),
(228,458,o),
(217,454,o),
(211,455,qs),
(207,455,o),
(197,458,o),
(193,459,qs),
(189,460,o),
(183,461,o),
(179,460,qs),
(177,459,o),
(169,453,o),
(168,448,qs),
(168,447,o),
(189,422,o),
(222,386,o),
(255,349,o),
(267,336,qs),
(274,327,o)
);
},
{
closed = 1;
nodes = (
(264,382,o),
(262,383,q),
(248,385,o),
(245,402,q),
(244,404,o),
(237,412,o),
(223,424,qs),
(221,426,o),
(222,430,q),
(234,429,o),
(276,431,o),
(316,432,o),
(338,428,o),
(331,422,qs),
(284,379,ls),
(280,375,o),
(276,374,o),
(270,378,qs),
(268,379,o)
);
},
{
closed = 1;
nodes = (
(315,242,o),
(339,242,o),
(351,243,qs),
(360,243,o),
(375,244,o),
(382,244,qs),
(392,244,o),
(409,243,o),
(418,242,q),
(456,242,ls),
(472,242,o),
(488,245,o),
(505,250,o),
(520,253,qs),
(525,254,o),
(526,270,o),
(521,271,qs),
(510,275,o),
(485,283,o),
(472,283,qs),
(461,283,o),
(450,279,qs),
(441,276,o),
(423,274,o),
(414,274,qs),
(404,275,o),
(379,276,o),
(365,276,qs),
(355,276,o),
(335,275,o),
(324,274,qs),
(319,274,o),
(306,273,o),
(300,273,qs),
(293,273,o),
(285,275,q),
(274,280,o),
(223,282,o),
(158,279,o),
(93,274,o),
(42,267,o),
(30,265,q),
(31,262,o),
(38,251,o),
(73,242,o),
(113,242,qs),
(302,242,ls)
);
},
{
closed = 1;
nodes = (
(203,61,o),
(207,62,q),
(213,62,o),
(224,58,o),
(230,59,qs),
(259,61,o),
(317,55,o),
(346,58,qs),
(356,59,ls),
(366,61,o),
(372,57,q),
(377,57,o),
(389,54,o),
(394,60,q),
(392,68,o),
(371,91,o),
(366,97,q),
(360,102,o),
(335,124,o),
(333,126,qs),
(327,131,o),
(318,141,o),
(313,145,qs),
(300,155,ls),
(294,160,o),
(283,170,o),
(277,178,qs),
(270,188,o),
(263,181,qs),
(251,168,o),
(218,130,o),
(186,95,o),
(165,70,o),
(165,68,qs),
(165,64,o),
(173,57,o),
(175,57,qs),
(179,56,o),
(185,56,o),
(189,56,q),
(193,58,o)
);
},
{
closed = 1;
nodes = (
(219,92,qs),
(233,104,o),
(240,112,o),
(240,114,q),
(245,131,o),
(258,134,q),
(260,134,o),
(264,137,o),
(266,138,qs),
(272,142,o),
(276,142,o),
(280,137,q),
(327,94,ls),
(334,88,o),
(312,84,o),
(272,85,o),
(230,87,o),
(218,86,q),
(217,90,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
50 1 0 74 0 0 2 0 133 6 1 2 3 1 2 89 5 4 2 3 8 7 11 3 1 10 3 1 105 0 10 9 9 10 89 0 10 10 9 97 0 9 10 9 81 61 60 151 149 142 141 103 98 97 95 87 85 82 81 80 74 73 71 69 67 60 106 61 104 49 47 12 8 22 
CALL[ ]	/* CallFunction */";
};
width = 555;
}
);
note = divide;
unicode = 247;
},
{
glyphname = equal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(107,350,qs),
(115,354,o),
(133,355,o),
(143,355,qs),
(154,355,o),
(184,348,o),
(197,354,q),
(197,354,o),
(226,348,o),
(231,355,qs),
(234,360,o),
(248,356,o),
(254,356,qs),
(266,356,o),
(270,354,qs),
(282,350,o),
(306,347,o),
(317,347,qs),
(331,347,o),
(375,352,o),
(419,357,o),
(433,356,qs),
(440,356,o),
(461,358,o),
(464,355,qs),
(468,352,o),
(477,357,o),
(482,357,qs),
(492,357,o),
(508,363,o),
(515,365,q),
(509,383,o),
(485,390,o),
(459,390,o),
(448,395,q),
(447,395,o),
(418,387,o),
(408,387,qs),
(238,387,ls),
(229,387,o),
(207,389,o),
(205,387,q),
(202,386,o),
(181,385,o),
(163,387,o),
(162,387,q),
(155,393,o),
(140,386,o),
(138,387,q),
(132,392,o),
(115,387,o),
(108,387,qs),
(104,387,o),
(86,388,o),
(79,388,qs),
(66,388,o),
(49,379,o),
(37,377,qs),
(32,376,o),
(31,361,o),
(35,359,q),
(49,355,o),
(72,346,o),
(85,346,qs),
(96,346,o)
);
},
{
closed = 1;
nodes = (
(256,141,o),
(281,135,o),
(291,141,qs),
(293,142,o),
(316,138,o),
(339,137,o),
(341,142,q),
(341,142,o),
(364,145,o),
(371,143,qs),
(380,141,o),
(398,142,o),
(406,141,q),
(444,141,ls),
(460,141,o),
(476,144,o),
(493,149,o),
(507,152,qs),
(512,153,o),
(514,169,o),
(509,170,q),
(499,174,o),
(474,182,o),
(460,182,qs),
(449,182,o),
(437,178,qs),
(428,175,o),
(408,178,o),
(403,173,qs),
(399,169,o),
(367,175,o),
(353,175,qs),
(344,175,o),
(324,174,o),
(313,173,qs),
(308,173,o),
(295,172,o),
(290,172,qs),
(280,172,o),
(274,174,qs),
(261,180,o),
(193,180,o),
(114,175,o),
(45,167,o),
(30,164,q),
(31,161,o),
(39,150,o),
(74,141,o),
(114,141,qs),
(243,141,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
33 1 4 1 1 76 15 1 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
7 5 2 4 0 1 4 89 3 2 2 1 6 14 2 0 11 1 0 105 0 11 9 8 11 89 10 1 9 8 8 9 89 10 1 9 9 8 97 13 12 15 3 8 9 8 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
7 5 2 4 0 1 4 89 3 2 2 1 6 14 2 0 9 1 0 105 11 10 2 9 8 8 9 89 11 10 2 9 9 8 97 13 12 15 3 8 9 8 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
7 5 2 4 0 1 4 89 3 2 2 1 6 14 2 0 11 1 0 105 0 11 9 8 11 89 10 1 9 8 8 9 89 10 1 9 9 8 97 13 12 15 3 8 9 8 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 39 values pushed */
66 65 1 0 103 102 101 99 91 89 83 76 73 71 65 114 66 113 62 59 47 45 43 41 36 35 31 30 27 20 13 8 0 64 1 64 16 8 22 
CALL[ ]	/* CallFunction */";
};
width = 545;
}
);
note = equal;
unicode = 61;
},
{
glyphname = notequal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(163,103,o),
(182,137,qs),
(187,146,l),
(292,146,ls),
(305,146,o),
(329,146,o),
(341,147,qs),
(350,147,o),
(365,148,o),
(372,148,qs),
(382,148,o),
(399,146,o),
(408,146,qs),
(446,146,ls),
(462,146,o),
(478,149,o),
(495,154,o),
(510,157,qs),
(515,158,o),
(516,174,o),
(511,175,qs),
(500,179,o),
(475,187,o),
(462,187,qs),
(451,187,o),
(440,183,qs),
(431,180,o),
(413,178,o),
(404,178,qs),
(394,179,o),
(369,180,o),
(355,180,qs),
(345,180,o),
(325,179,o),
(314,178,qs),
(309,178,o),
(296,177,o),
(290,177,qs),
(283,177,o),
(275,179,qs),
(267,182,o),
(234,185,o),
(214,185,q),
(216,188,o),
(221,195,o),
(224,198,qs),
(238,216,o),
(259,239,o),
(288,271,o),
(312,299,q),
(317,310,o),
(335,338,o),
(346,354,q),
(368,356,o),
(417,362,o),
(433,361,qs),
(441,361,o),
(458,360,o),
(465,360,qs),
(470,360,o),
(478,362,o),
(483,362,qs),
(492,362,o),
(508,368,o),
(515,370,q),
(509,388,o),
(486,395,o),
(460,395,o),
(448,400,q),
(447,400,o),
(418,392,o),
(409,392,qs),
(373,392,l),
(399,415,o),
(425,451,o),
(445,489,o),
(460,513,q),
(450,517,o),
(438,509,o),
(436,508,qs),
(415,494,o),
(374,443,o),
(353,427,qs),
(352,426,o),
(347,420,o),
(346,418,qs),
(342,405,o),
(333,392,q),
(204,392,ls),
(193,392,o),
(175,391,o),
(167,391,qs),
(160,391,o),
(145,392,o),
(137,392,qs),
(108,392,l),
(79,393,ls),
(66,394,o),
(47,384,o),
(35,382,qs),
(31,381,o),
(30,366,o),
(34,364,qs),
(46,360,o),
(71,351,o),
(84,351,qs),
(96,351,o),
(105,355,qs),
(114,359,o),
(132,360,o),
(141,360,qs),
(153,360,o),
(180,359,o),
(196,359,qs),
(204,359,o),
(221,359,o),
(231,360,qs),
(236,361,o),
(248,361,o),
(254,361,qs),
(259,361,o),
(267,361,o),
(270,359,q),
(285,354,o),
(303,352,q),
(292,338,ls),
(278,320,o),
(267,306,o),
(262,299,o),
(251,286,o),
(237,268,qs),
(207,230,o),
(186,203,o),
(192,210,qs),
(172,184,l),
(129,182,o),
(47,172,o),
(30,169,q),
(31,166,o),
(38,155,o),
(73,146,o),
(113,146,qs),
(142,146,l),
(138,140,o),
(129,129,o),
(124,124,qs),
(105,102,o),
(89,65,o),
(75,45,qs),
(70,38,o),
(81,27,o),
(88,32,q),
(113,55,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
87 1 2 5 27 1 4 2 18 1 13 4 3 76 75 1 5 74 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
87 1 2 5 27 1 4 2 18 1 13 4 3 76 75 1 7 74 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
87 1 2 5 27 1 4 2 18 1 1 4 3 76 75 1 5 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
87 1 2 5 27 1 4 2 18 1 13 4 3 76 75 1 5 74 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 4 2 13 2 4 114 0 13 1 10 13 112 7 6 2 5 9 8 3 3 2 4 5 2 105 0 1 10 0 1 89 12 11 2 10 0 0 10 89 12 11 2 10 10 0 98 16 15 14 3 0 10 0 82 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 4 2 13 2 4 114 0 13 1 10 13 112 0 7 5 2 7 89 6 1 5 9 8 3 3 2 4 5 2 105 0 1 10 0 1 89 12 11 2 10 0 0 10 89 12 11 2 10 10 0 98 16 15 14 3 0 10 0 82 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 4 2 1 2 4 114 7 6 2 5 9 8 3 3 2 4 5 2 105 13 1 1 10 0 1 89 12 11 2 10 0 0 10 89 12 11 2 10 10 0 98 16 15 14 3 0 10 0 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 4 2 13 2 4 114 0 13 1 10 13 112 7 6 2 5 9 8 3 3 2 4 5 2 105 0 1 10 0 1 89 12 11 2 10 0 0 10 89 12 11 2 10 10 0 98 16 15 14 3 0 10 0 82 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
149 146 145 141 140 137 129 127 124 123 122 116 115 113 97 92 20 19 47 152 34 114 62 21 41 17 6 31 
CALL[ ]	/* CallFunction */";
};
width = 545;
}
);
note = notequal;
unicode = 8800;
},
{
glyphname = greater;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(104,87,o),
(140,99,o),
(155,113,q),
(174,113,o),
(200,132,o),
(213,142,q),
(231,143,o),
(259,159,o),
(270,171,q),
(314,191,o),
(401,233,o),
(444,252,q),
(457,265,o),
(454,283,o),
(422,302,qs),
(412,307,o),
(398,322,o),
(386,323,qs),
(368,324,o),
(354,342,o),
(343,346,q),
(295,371,o),
(211,410,o),
(128,449,o),
(80,473,qs),
(61,483,o),
(45,482,qs),
(29,482,o),
(31,467,o),
(54,448,o),
(69,441,qs),
(117,420,ls),
(169,398,o),
(248,360,o),
(300,334,qs),
(314,326,o),
(347,308,o),
(361,303,qs),
(376,298,o),
(393,280,o),
(405,274,q),
(397,269,o),
(353,249,o),
(310,227,o),
(302,218,q),
(289,215,o),
(266,203,o),
(255,194,qs),
(250,189,o),
(227,178,o),
(217,175,qs),
(202,170,o),
(155,150,o),
(109,129,o),
(94,121,q),
(69,102,o),
(46,92,o),
(40,84,qs),
(33,74,o),
(42,69,o),
(49,67,q),
(67,78,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 2 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 1 0 2 0 1 2 128 0 2 3 0 2 3 126 0 3 3 132 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
0 0 1 0 133 0 1 2 1 133 0 2 3 2 133 0 3 3 118 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
58 57 55 54 43 42 35 33 4 8 22 
CALL[ ]	/* CallFunction */";
};
width = 486;
}
);
note = greater;
unicode = 62;
},
{
glyphname = less;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(455,83,o),
(433,102,o),
(417,109,qs),
(369,130,ls),
(317,153,o),
(238,190,o),
(186,216,qs),
(172,224,o),
(139,242,o),
(125,247,qs),
(110,252,o),
(93,270,o),
(81,276,q),
(82,276,o),
(91,280,o),
(94,281,q),
(105,288,o),
(127,306,o),
(141,311,qs),
(152,316,o),
(176,326,o),
(190,332,qs),
(218,346,o),
(235,355,o),
(241,357,qs),
(246,359,o),
(252,361,o),
(256,362,q),
(269,363,o),
(291,370,o),
(301,374,qs),
(314,380,o),
(351,402,o),
(387,423,o),
(400,429,qs),
(429,441,ls),
(436,443,o),
(462,462,o),
(469,468,q),
(456,481,o),
(432,478,o),
(409,468,o),
(397,467,qs),
(396,467,o),
(373,449,o),
(365,445,qs),
(363,444,o),
(353,439,o),
(315,423,o),
(271,403,qs),
(256,396,o),
(227,383,o),
(213,377,qs),
(181,363,o),
(159,352,o),
(151,348,qs),
(138,342,o),
(124,338,q),
(98,325,ls),
(88,320,o),
(53,303,o),
(42,298,q),
(29,285,o),
(33,267,o),
(64,248,q),
(74,244,o),
(88,228,o),
(100,227,qs),
(118,226,o),
(133,209,o),
(143,204,qs),
(192,180,o),
(275,140,o),
(359,101,o),
(406,77,qs),
(425,67,o),
(441,68,qs),
(457,68,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 1 0 1 133 2 1 0 0 118 1 0 9 8 0 77 1 77 3 8 22 
CALL[ ]	/* CallFunction */";
};
width = 499;
}
);
note = less;
unicode = 60;
},
{
glyphname = greaterequal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(165,137,o),
(200,149,o),
(215,163,q),
(234,163,o),
(260,182,o),
(273,192,q),
(291,193,o),
(319,209,o),
(330,221,q),
(374,241,o),
(461,283,o),
(504,302,q),
(517,315,o),
(514,333,o),
(482,352,qs),
(472,357,o),
(458,372,o),
(446,373,qs),
(428,374,o),
(414,392,o),
(403,396,q),
(355,421,o),
(271,460,o),
(188,499,o),
(140,523,qs),
(121,533,o),
(105,532,qs),
(89,532,o),
(91,517,o),
(114,498,o),
(129,491,qs),
(177,470,ls),
(229,448,o),
(308,410,o),
(360,384,qs),
(374,376,o),
(407,358,o),
(421,353,qs),
(436,348,o),
(453,330,o),
(465,324,q),
(457,319,o),
(413,299,o),
(370,277,o),
(362,268,q),
(349,265,o),
(326,253,o),
(315,244,qs),
(310,239,o),
(287,228,o),
(277,225,qs),
(262,220,o),
(215,200,o),
(169,179,o),
(154,171,q),
(129,152,o),
(106,142,o),
(100,134,qs),
(93,124,o),
(102,119,o),
(109,117,q),
(127,128,o)
);
},
{
closed = 1;
nodes = (
(518,45,o),
(542,49,qs),
(551,51,o),
(549,66,o),
(540,67,qs),
(533,68,o),
(529,76,o),
(523,77,qs),
(515,79,o),
(497,79,o),
(487,79,qs),
(477,79,o),
(457,79,o),
(446,78,q),
(336,78,ls),
(319,77,o),
(289,77,o),
(273,77,qs),
(257,77,o),
(222,77,o),
(199,78,qs),
(33,78,l),
(35,69,o),
(46,53,o),
(76,50,qs),
(81,50,o),
(91,49,o),
(95,48,qs),
(99,47,o),
(106,47,o),
(109,47,qs),
(118,46,o),
(136,46,o),
(145,46,qs),
(167,45,o),
(208,44,o),
(227,44,qs),
(255,44,o),
(303,45,o),
(325,46,qs),
(345,46,o),
(381,44,o),
(400,40,qs),
(421,37,o),
(440,37,qs),
(468,37,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 77 values pushed */
20 1 2 1 1 76 0 0 1 0 133 0 1 2 1 133 0 2 3 2 133 0 3 7 3 133 9 1 4 5 5 4 113 8 1 7 5 5 7 89 8 1 7 7 5 97 6 1 5 7 5 81 63 62 98 94 93 85 78 76 75 65 62 107 63 107 58 57 55 54 43 42 35 33 10 6 22 
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = greaterequal;
unicode = 8805;
},
{
glyphname = lessequal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(487,124,o),
(480,134,qs),
(474,142,o),
(452,152,o),
(426,171,q),
(411,179,o),
(365,200,o),
(319,220,o),
(303,225,qs),
(293,228,o),
(270,239,o),
(265,244,qs),
(254,253,o),
(232,265,o),
(218,268,q),
(210,277,o),
(167,299,o),
(124,319,o),
(115,324,q),
(127,330,o),
(144,348,o),
(159,353,qs),
(173,358,o),
(206,376,o),
(220,384,qs),
(272,410,o),
(351,448,o),
(403,470,qs),
(451,491,ls),
(467,498,o),
(489,517,o),
(491,532,o),
(475,532,qs),
(459,533,o),
(440,523,qs),
(393,499,o),
(309,460,o),
(226,421,o),
(177,396,q),
(167,392,o),
(152,374,o),
(134,373,qs),
(122,372,o),
(108,357,o),
(98,352,qs),
(67,333,o),
(63,315,o),
(76,302,q),
(120,283,o),
(206,241,o),
(250,221,q),
(261,209,o),
(289,193,o),
(307,192,q),
(320,182,o),
(346,163,o),
(365,163,q),
(380,149,o),
(415,137,o),
(453,128,o),
(471,117,q),
(478,119,o)
);
},
{
closed = 1;
nodes = (
(180,40,qs),
(199,44,o),
(236,46,o),
(255,46,qs),
(277,45,o),
(325,44,o),
(353,44,qs),
(372,44,o),
(413,45,o),
(435,46,qs),
(444,46,o),
(462,46,o),
(471,47,qs),
(474,47,o),
(481,47,o),
(485,48,qs),
(490,49,o),
(499,50,o),
(504,50,qs),
(534,53,o),
(545,69,o),
(547,78,q),
(381,78,ls),
(359,77,o),
(324,77,o),
(307,77,qs),
(291,77,o),
(261,77,o),
(244,78,qs),
(134,78,l),
(124,79,o),
(103,79,o),
(93,79,qs),
(83,79,o),
(65,79,o),
(57,77,qs),
(51,76,o),
(47,68,o),
(40,67,qs),
(31,66,o),
(29,51,o),
(38,49,qs),
(62,45,o),
(112,37,o),
(140,37,qs),
(159,37,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 77 values pushed */
42 1 1 2 0 1 5 0 2 76 0 3 2 3 133 0 2 1 2 133 0 1 0 1 133 0 0 5 0 133 9 1 4 7 7 4 113 6 1 5 7 7 5 89 6 1 5 5 7 97 8 1 7 5 7 81 63 62 105 95 94 92 85 77 76 72 62 107 63 107 39 27 18 20 10 6 26 
CALL[ ]	/* CallFunction */";
};
width = 577;
}
);
note = lessequal;
unicode = 8804;
},
{
glyphname = plusminus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(298,262,o),
(300,282,qs),
(300,287,o),
(301,320,o),
(301,356,o),
(301,363,q),
(305,364,o),
(312,364,o),
(316,364,qs),
(333,364,o),
(363,362,o),
(379,358,q),
(388,357,o),
(425,355,o),
(433,355,qs),
(479,355,o),
(529,363,o),
(549,367,qs),
(561,369,o),
(545,391,o),
(533,395,qs),
(526,397,o),
(491,397,o),
(483,397,qs),
(475,397,o),
(447,397,o),
(438,396,q),
(325,396,l),
(318,395,o),
(307,395,o),
(301,395,q),
(301,404,ls),
(301,424,o),
(304,442,o),
(307,451,o),
(310,463,o),
(310,477,qs),
(310,500,o),
(302,527,o),
(297,547,qs),
(296,552,o),
(288,552,qs),
(282,552,o),
(270,544,o),
(270,534,qs),
(270,521,ls),
(270,511,o),
(269,473,o),
(269,461,qs),
(269,395,l),
(256,395,o),
(228,395,o),
(210,396,qs),
(30,396,l),
(32,379,o),
(65,368,o),
(82,366,qs),
(84,366,o),
(103,365,o),
(122,365,o),
(124,365,qs),
(132,364,o),
(157,364,o),
(164,364,qs),
(182,363,o),
(215,362,o),
(230,362,qs),
(241,362,o),
(261,363,o),
(270,363,q),
(270,354,o),
(269,302,o),
(268,242,o),
(268,218,q),
(288,220,o)
);
},
{
closed = 1;
nodes = (
(520,119,o),
(544,123,qs),
(553,125,o),
(551,140,o),
(542,141,qs),
(535,142,o),
(531,150,o),
(525,151,qs),
(517,153,o),
(499,153,o),
(489,153,qs),
(479,153,o),
(459,153,o),
(448,152,q),
(338,152,ls),
(321,151,o),
(291,151,o),
(275,151,qs),
(259,151,o),
(224,151,o),
(201,152,qs),
(35,152,l),
(37,143,o),
(48,127,o),
(78,124,qs),
(83,124,o),
(93,123,o),
(97,122,qs),
(101,121,o),
(108,121,o),
(111,121,qs),
(120,120,o),
(138,120,o),
(147,120,qs),
(169,119,o),
(210,118,o),
(229,118,qs),
(257,118,o),
(305,119,o),
(327,120,qs),
(347,120,o),
(383,118,o),
(402,114,qs),
(423,111,o),
(442,111,qs),
(470,111,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
0 1 11 6 1 76 0 3 2 3 133 0 6 0 11 0 6 114 13 1 8 9 9 8 113 5 4 2 2 7 1 2 0 6 2 0 105 12 1 11 9 9 11 89 12 1 11 11 9 97 10 1 9 11 9 81 76 75 111 107 106 98 91 89 88 78 75 120 76 120 66 54 65 74 39 68 49 132 14 8 30 
CALL[ ]	/* CallFunction */";
};
width = 586;
}
);
note = plusminus;
unicode = 177;
},
{
glyphname = approxequal;
layers = (
{
layerId = m01;
shapes = (
{
pos = (10,-330);
ref = tildecomb;
},
{
pos = (20,-200);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHW[ ]	/* 1 value pushed */
-330 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-200 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 477;
}
);
note = approxequal;
unicode = 8776;
},
{
glyphname = asciitilde;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-20,-406);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHW[ ]	/* 1 value pushed */
-406 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 230;
}
);
note = asciitilde;
unicode = 126;
},
{
glyphname = logicalnot;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(338,143,o),
(340,163,qs),
(340,167,o),
(340,197,o),
(341,236,o),
(341,268,o),
(341,274,q),
(345,282,o),
(337,306,o),
(328,306,qs),
(301,306,o),
(268,306,o),
(250,307,qs),
(0,307,l),
(2,290,o),
(35,276,o),
(52,274,qs),
(54,274,o),
(73,273,o),
(92,273,o),
(94,273,qs),
(98,273,o),
(129,272,o),
(169,272,o),
(200,272,o),
(204,272,qs),
(222,271,o),
(255,270,o),
(270,270,qs),
(281,270,o),
(296,271,o),
(305,271,q),
(305,264,o),
(306,222,o),
(307,169,o),
(308,117,o),
(308,99,q),
(328,101,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
30 1 0 1 1 76 0 1 0 73 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 84 214 2 8 24 
CALL[ ]	/* CallFunction */";
};
width = 413;
}
);
note = logicalnot;
unicode = 172;
},
{
glyphname = asciicircum;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(43,405,o),
(62,428,o),
(70,443,qs),
(85,472,o),
(98,499,o),
(105,512,qs),
(114,528,o),
(131,559,o),
(136,572,qs),
(141,588,o),
(159,605,o),
(165,617,q),
(170,609,o),
(190,565,o),
(213,522,o),
(222,514,q),
(224,501,o),
(237,478,o),
(245,467,q),
(250,462,o),
(262,439,o),
(264,429,q),
(270,414,o),
(291,407,o),
(304,417,o),
(297,425,q),
(297,443,o),
(280,471,o),
(269,482,q),
(249,526,o),
(207,613,o),
(187,656,q),
(174,668,o),
(156,666,o),
(137,634,q),
(133,624,o),
(117,610,o),
(116,598,qs),
(115,580,o),
(99,565,o),
(93,554,qs),
(78,528,o),
(65,504,o),
(59,495,o),
(56,489,o),
(49,474,o),
(39,455,qs),
(35,446,o),
(29,427,o),
(30,419,qs),
(30,403,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
50 17 1 50 
CALL[ ]	/* CallFunction */";
};
width = 330;
}
);
note = asciicircum;
unicode = 94;
},
{
glyphname = infinity;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(124,174,o),
(174,203,o),
(213,226,o),
(219,229,qs),
(234,237,o),
(262,255,o),
(276,264,qs),
(283,269,o),
(320,289,o),
(360,308,o),
(368,312,q),
(373,316,o),
(383,321,o),
(388,321,qs),
(398,321,o),
(403,313,q),
(411,314,o),
(420,307,o),
(425,304,qs),
(432,300,o),
(449,292,o),
(456,287,qs),
(462,284,o),
(487,272,o),
(512,259,o),
(516,255,qs),
(527,244,o),
(553,236,o),
(564,228,qs),
(578,218,o),
(611,203,o),
(624,189,qs),
(632,180,o),
(646,181,o),
(662,171,qs),
(679,158,o),
(698,148,q),
(702,147,o),
(712,147,o),
(716,147,qs),
(722,147,o),
(732,158,o),
(732,165,qs),
(732,223,ls),
(732,227,o),
(724,232,o),
(727,237,qs),
(732,245,o),
(732,268,o),
(725,275,q),
(724,277,o),
(726,285,o),
(727,286,qs),
(731,291,o),
(728,329,o),
(726,336,q),
(732,342,o),
(732,356,o),
(732,363,qs),
(731,442,l),
(725,448,o),
(732,458,o),
(732,463,qs),
(732,465,o),
(724,481,o),
(727,485,qs),
(731,490,o),
(732,502,o),
(732,508,qs),
(732,522,o),
(729,530,o),
(715,530,q),
(708,529,o),
(697,525,o),
(690,523,q),
(675,516,o),
(648,496,o),
(634,487,qs),
(620,478,o),
(587,462,o),
(572,454,qs),
(570,453,o),
(566,449,qs),
(558,439,o),
(534,430,o),
(526,421,q),
(525,422,ls),
(519,429,o),
(503,420,o),
(487,405,o),
(480,400,q),
(467,394,o),
(443,379,o),
(431,375,q),
(424,371,o),
(408,366,o),
(403,359,qs),
(400,355,o),
(390,357,o),
(385,359,qs),
(370,367,o),
(339,382,o),
(325,392,q),
(319,395,o),
(306,394,o),
(301,400,qs),
(291,411,o),
(266,423,o),
(254,429,qs),
(241,437,o),
(216,454,o),
(202,455,qs),
(197,456,o),
(186,463,o),
(183,467,qs),
(174,478,o),
(127,500,o),
(109,508,qs),
(99,512,o),
(83,524,o),
(74,529,qs),
(70,531,o),
(63,530,o),
(59,530,qs),
(47,530,o),
(47,519,qs),
(46,381,ls),
(46,376,o),
(50,364,o),
(47,361,q),
(41,351,o),
(40,329,o),
(41,321,qs),
(41,314,o),
(42,299,o),
(47,294,q),
(40,280,o),
(40,263,qs),
(41,155,ls),
(41,147,o),
(54,138,o),
(61,141,qs),
(76,148,o)
);
},
{
closed = 1;
nodes = (
(656,207,o),
(627,221,o),
(621,221,qs),
(620,221,o),
(582,243,o),
(531,273,o),
(486,300,o),
(478,304,qs),
(468,310,o),
(445,323,o),
(433,330,q),
(425,332,o),
(430,338,qs),
(438,346,o),
(454,350,o),
(461,358,q),
(472,364,o),
(495,375,o),
(506,382,qs),
(517,388,o),
(541,397,o),
(552,404,qs),
(566,411,o),
(588,430,o),
(600,437,qs),
(614,443,o),
(641,456,o),
(652,467,qs),
(660,477,o),
(668,477,q),
(687,480,o),
(697,492,qs),
(704,499,o),
(707,478,o),
(708,473,q),
(697,462,o),
(706,455,qs),
(711,451,o),
(700,442,o),
(704,438,qs),
(708,433,o),
(705,428,qs),
(698,419,o),
(703,408,q),
(716,386,o),
(704,358,q),
(696,346,o),
(705,339,qs),
(710,335,o),
(701,324,o),
(708,318,q),
(710,314,o),
(711,284,o),
(703,276,q),
(708,270,o),
(702,258,o),
(702,252,qs),
(701,222,ls),
(701,218,o),
(708,212,o),
(710,209,q),
(713,196,o),
(696,175,o),
(688,183,q),
(684,189,o)
);
},
{
closed = 1;
nodes = (
(70,189,o),
(70,191,qs),
(70,211,ls),
(70,216,o),
(68,224,qs),
(66,230,o),
(66,233,qs),
(66,238,o),
(70,249,o),
(70,254,qs),
(70,257,ls),
(70,260,o),
(69,266,o),
(68,269,q),
(69,289,o),
(70,300,o),
(70,304,q),
(72,314,o),
(65,323,qs),
(62,328,o),
(69,332,o),
(69,336,qs),
(69,342,o),
(70,362,o),
(71,420,o),
(71,481,q),
(70,489,o),
(73,491,o),
(82,488,qs),
(84,487,o),
(106,481,o),
(112,476,q),
(153,454,o),
(237,406,o),
(278,383,qs),
(284,379,o),
(297,370,o),
(305,370,qs),
(311,370,o),
(326,356,o),
(337,354,qs),
(341,353,o),
(354,344,o),
(357,340,q),
(358,340,o),
(338,325,o),
(313,309,o),
(304,305,qs),
(294,301,o),
(274,286,o),
(261,286,qs),
(257,286,o),
(246,279,o),
(241,275,qs),
(230,266,o),
(209,261,o),
(192,247,q),
(171,247,o),
(145,220,o),
(126,211,qs),
(116,206,o),
(84,194,o),
(76,182,q),
(76,180,o),
(73,180,qs),
(72,180,o)
);
}
);
width = 772;
}
);
note = infinity;
unicode = 8734;
},
{
glyphname = emptyset;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(66,24,o),
(70,46,q),
(83,53,o),
(93,73,o),
(96,83,q),
(105,88,o),
(111,95,q),
(124,84,o),
(145,61,o),
(155,48,qs),
(160,42,o),
(170,30,o),
(171,23,q),
(177,13,ls),
(185,-1,o),
(217,-10,o),
(226,3,qs),
(233,13,o),
(258,44,o),
(265,51,q),
(268,53,o),
(268,61,o),
(271,64,qs),
(274,68,o),
(286,74,o),
(285,81,q),
(302,102,o),
(320,120,o),
(320,128,q),
(333,138,o),
(347,161,o),
(358,171,qs),
(375,186,o),
(397,224,o),
(412,240,qs),
(417,246,o),
(411,253,qs),
(398,267,o),
(378,296,o),
(361,308,qs),
(357,311,o),
(351,318,o),
(351,322,qs),
(350,330,o),
(341,340,o),
(337,345,qs),
(334,349,o),
(321,366,o),
(313,376,q),
(331,400,o),
(364,445,o),
(388,480,q),
(394,486,o),
(398,500,o),
(398,505,qs),
(398,514,o),
(390,518,q),
(388,516,o),
(369,507,o),
(357,489,qs),
(354,484,o),
(338,458,o),
(334,454,q),
(320,435,o),
(303,410,o),
(295,399,q),
(293,402,o),
(292,403,q),
(288,411,o),
(275,425,o),
(272,433,qs),
(268,443,o),
(254,459,o),
(247,467,q),
(237,484,o),
(223,499,o),
(210,506,qs),
(204,510,o),
(195,505,qs),
(188,501,o),
(181,489,o),
(178,484,q),
(177,481,o),
(176,476,o),
(172,474,qs),
(163,469,o),
(155,455,o),
(150,448,q),
(143,441,o),
(132,427,o),
(124,420,qs),
(117,415,o),
(118,402,o),
(109,398,q),
(108,394,o),
(84,365,o),
(51,326,o),
(19,288,o),
(11,276,qs),
(3,265,o),
(0,253,q),
(0,249,o),
(18,217,o),
(41,184,o),
(47,176,qs),
(54,169,o),
(69,153,o),
(69,143,q),
(92,115,l),
(89,112,o),
(84,106,o),
(82,103,q),
(69,89,o),
(30,42,o),
(19,27,q),
(10,8,o),
(3,-11,o),
(3,-17,qs),
(3,-24,o),
(12,-23,o),
(19,-22,q),
(30,-3,o)
);
},
{
closed = 1;
nodes = (
(67,207,qs),
(63,213,o),
(51,225,o),
(51,232,qs),
(51,236,o),
(35,247,o),
(34,251,qs),
(33,256,o),
(42,264,o),
(44,268,qs),
(57,291,o),
(96,331,o),
(109,353,q),
(120,358,o),
(127,372,o),
(131,379,qs),
(135,385,o),
(157,414,o),
(183,443,o),
(191,447,q),
(197,455,o),
(203,464,o),
(209,467,q),
(217,457,o),
(248,413,o),
(258,404,qs),
(265,398,o),
(280,379,q),
(272,368,o),
(258,348,qs),
(250,338,o),
(232,315,o),
(227,304,qs),
(220,290,o),
(195,275,o),
(193,260,q),
(186,251,o),
(169,240,o),
(164,229,qs),
(160,222,o),
(139,195,o),
(121,168,o),
(120,159,q),
(113,154,o),
(109,148,q),
(108,149,o),
(108,150,o),
(108,150,q),
(88,173,o)
);
},
{
closed = 1;
nodes = (
(153,90,o),
(137,110,qs),
(134,113,o),
(129,121,o),
(126,125,q),
(149,156,o),
(198,225,o),
(224,259,qs),
(229,266,o),
(245,276,o),
(246,285,qs),
(248,299,o),
(265,308,o),
(271,317,qs),
(279,328,o),
(292,347,o),
(298,355,q),
(309,340,o),
(327,315,o),
(328,312,qs),
(330,306,o),
(341,296,o),
(342,289,qs),
(342,287,o),
(348,282,o),
(350,280,qs),
(379,248,l),
(375,242,o),
(362,228,o),
(354,212,qs),
(348,199,o),
(334,179,o),
(323,171,qs),
(317,166,o),
(313,152,o),
(304,148,q),
(303,141,o),
(285,131,o),
(283,124,qs),
(282,120,o),
(267,101,o),
(251,82,o),
(247,78,qs),
(241,72,o),
(240,58,o),
(229,53,qs),
(222,49,o),
(223,35,o),
(215,30,qs),
(208,26,o),
(203,24,o),
(198,30,qs),
(183,50,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
206 172 147 125 64 2 3 50 
CALL[ ]	/* CallFunction */";
};
width = 414;
}
);
note = emptyset;
unicode = 8709;
},
{
glyphname = integral;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(75,-135,o),
(77,-134,qs),
(86,-131,o),
(103,-132,o),
(112,-133,q),
(130,-129,l),
(132,-129,o),
(133,-128,q),
(144,-126,l),
(144,-119,o),
(141,-115,q),
(146,-90,o),
(167,-47,o),
(162,-20,q),
(171,-7,o),
(173,22,o),
(172,37,q),
(181,51,o),
(184,79,o),
(181,94,q),
(192,147,o),
(211,251,o),
(222,302,qs),
(224,313,o),
(235,331,o),
(232,342,qs),
(228,361,o),
(241,378,o),
(243,391,qs),
(253,444,o),
(269,533,o),
(285,623,o),
(294,675,q),
(297,684,o),
(297,693,q),
(305,694,o),
(317,695,o),
(346,695,q),
(363,698,o),
(394,695,o),
(424,697,q),
(426,702,o),
(419,720,o),
(417,721,q),
(416,724,o),
(393,728,o),
(390,729,qs),
(377,731,o),
(367,728,o),
(355,728,qs),
(348,727,o),
(327,725,o),
(320,729,qs),
(309,736,o),
(292,730,o),
(280,725,q),
(279,724,o),
(264,696,o),
(262,676,qs),
(261,669,o),
(256,632,o),
(254,625,qs),
(247,588,o),
(237,527,o),
(226,466,o),
(219,428,qs),
(215,412,o),
(207,376,o),
(206,361,qs),
(205,341,o),
(188,315,o),
(191,295,q),
(188,281,o),
(178,261,o),
(177,246,qs),
(176,236,o),
(167,194,o),
(161,153,o),
(164,142,q),
(155,120,o),
(156,95,qs),
(157,88,o),
(152,67,o),
(150,57,qs),
(146,43,o),
(133,0,o),
(123,-43,o),
(120,-58,q),
(119,-73,o),
(108,-102,o),
(106,-102,qs),
(100,-102,o),
(60,-101,o),
(21,-101,o),
(15,-102,qs),
(11,-102,o),
(0,-114,o),
(0,-119,qs),
(0,-126,o),
(14,-131,o),
(30,-130,o),
(33,-130,q),
(40,-128,o),
(52,-131,o),
(59,-132,qs),
(66,-132,o),
(68,-135,qs),
(71,-138,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
93 90 72 35 32 28 19 7 1 3 98 96 2 0 1 2 76 102 1 0 73 0 2 3 2 133 0 3 1 3 133 0 1 0 0 1 89 0 1 1 0 97 4 1 0 1 0 81 104 103 70 69 58 56 38 37 5 6 24 
CALL[ ]	/* CallFunction */";
};
width = 424;
}
);
note = integral;
unicode = 8747;
},
{
glyphname = uni2126;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(446,-1,o),
(512,0,o),
(567,3,o),
(577,6,qs),
(583,8,o),
(588,15,o),
(588,17,qs),
(588,22,o),
(587,58,o),
(587,99,o),
(586,109,qs),
(586,115,o),
(568,123,o),
(550,115,o),
(550,95,qs),
(550,88,o),
(553,69,o),
(554,31,q),
(486,27,o),
(410,29,o),
(415,38,qs),
(416,40,o),
(424,71,o),
(436,116,o),
(447,161,o),
(454,191,o),
(454,191,q),
(454,212,o),
(459,223,o),
(465,226,o),
(465,234,qs),
(466,248,o),
(481,319,o),
(505,414,o),
(531,515,o),
(557,605,o),
(576,666,o),
(580,673,qs),
(587,686,o),
(575,712,o),
(565,712,qs),
(328,713,l),
(255,705,o),
(170,704,o),
(125,708,o),
(105,710,o),
(97,705,qs),
(95,704,o),
(74,708,o),
(54,714,o),
(51,714,q),
(35,711,o),
(28,680,o),
(35,638,o),
(49,598,o),
(55,586,qs),
(60,577,o),
(76,523,o),
(95,454,o),
(112,390,o),
(123,347,o),
(123,347,q),
(116,331,o),
(133,308,o),
(137,294,qs),
(140,284,o),
(134,265,o),
(148,252,q),
(148,252,o),
(157,219,o),
(170,168,o),
(185,112,o),
(198,65,o),
(202,53,q),
(210,43,o),
(183,36,o),
(136,37,o),
(85,38,o),
(68,35,q),
(67,52,o),
(67,95,o),
(66,105,qs),
(66,111,o),
(48,119,o),
(30,111,o),
(30,91,qs),
(30,84,o),
(34,75,o),
(36,66,q),
(34,29,l),
(36,16,o),
(42,1,o),
(55,2,qs),
(90,2,o),
(115,1,o),
(122,3,qs),
(127,5,o),
(163,1,o),
(208,-1,o),
(228,2,qs),
(239,4,o),
(236,54,o),
(218,137,o),
(190,242,o),
(174,299,qs),
(172,307,o),
(171,328,o),
(164,333,qs),
(157,339,o),
(156,361,o),
(153,370,qs),
(134,435,o),
(102,551,o),
(82,635,o),
(80,650,qs),
(79,663,o),
(96,673,o),
(149,674,o),
(253,673,o),
(337,675,qs),
(520,677,l),
(526,676,o),
(533,660,o),
(530,654,qs),
(526,644,o),
(505,579,o),
(492,526,qs),
(491,523,o),
(491,509,o),
(490,506,qs),
(489,502,o),
(491,491,o),
(486,488,qs),
(481,485,o),
(481,467,o),
(479,459,qs),
(478,454,o),
(480,443,o),
(474,439,qs),
(471,437,o),
(456,381,o),
(436,296,o),
(416,202,o),
(398,117,o),
(385,61,o),
(383,58,qs),
(379,51,o),
(370,22,o),
(371,-1,o),
(379,-1,qs),
(390,-1,o)
);
},
{
closed = 1;
nodes = (
(336,413,q),
(340,422,o),
(331,431,q),
(327,437,o),
(305,448,o),
(284,453,o),
(278,447,q),
(274,441,o),
(267,428,o),
(265,420,q),
(265,416,o),
(274,404,o),
(275,398,qs),
(278,384,o),
(310,383,o),
(328,396,q),
(334,402,o)
);
},
{
closed = 1;
nodes = (
(296,409,o),
(295,413,qs),
(294,415,o),
(292,418,o),
(292,419,qs),
(292,421,o),
(294,425,o),
(295,426,qs),
(297,428,o),
(309,424,o),
(310,422,q),
(312,420,o),
(311,417,q),
(311,414,o),
(309,412,qs),
(305,409,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 92 values pushed */
123 61 2 3 8 71 1 6 3 2 76 60 1 6 1 75 99 1 5 74 0 5 4 4 5 112 0 8 0 3 0 8 3 128 0 4 0 0 8 4 0 104 0 3 6 1 3 89 0 6 1 1 6 89 0 6 6 1 97 9 7 2 3 1 6 1 81 0 0 153 152 0 150 0 147 132 130 110 108 107 106 74 72 57 55 52 51 33 28 10 6 22 
CALL[ ]	/* CallFunction */";
};
width = 618;
}
);
note = uni2126;
unicode = 8486;
},
{
glyphname = uni2206;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(126,17,o),
(228,11,o),
(344,9,o),
(454,15,o),
(539,33,o),
(580,66,o),
(569,91,q),
(546,132,o),
(500,221,o),
(462,299,o),
(439,347,o),
(439,347,q),
(428,351,o),
(418,384,o),
(412,416,o),
(407,418,qs),
(391,427,o),
(376,469,o),
(368,509,o),
(361,514,qs),
(353,519,o),
(353,529,o),
(350,534,qs),
(347,539,o),
(347,551,o),
(338,554,qs),
(334,556,o),
(328,568,o),
(326,574,qs),
(321,596,o),
(286,661,o),
(258,687,qs),
(249,697,o),
(236,687,o),
(234,681,qs),
(217,604,o),
(165,427,o),
(134,341,qs),
(128,325,o),
(109,278,o),
(95,247,q),
(95,247,o),
(90,228,o),
(81,204,o),
(73,197,q),
(69,192,o),
(53,154,o),
(36,104,o),
(23,61,o),
(21,52,qs),
(18,37,o),
(30,32,o),
(47,27,qs),
(56,25,o)
);
},
{
closed = 1;
nodes = (
(57,58,o),
(60,71,qs),
(69,121,o),
(92,185,o),
(117,232,o),
(144,282,o),
(157,318,qs),
(183,392,o),
(228,543,o),
(242,609,q),
(244,614,o),
(256,623,o),
(263,615,q),
(287,593,o),
(317,537,o),
(321,518,q),
(342,488,o),
(354,447,o),
(361,422,o),
(375,414,q),
(378,413,o),
(401,367,o),
(435,294,o),
(475,211,o),
(513,132,o),
(529,104,q),
(539,82,o),
(503,54,o),
(431,39,o),
(336,34,o),
(238,36,o),
(150,41,o),
(90,47,o),
(82,49,qs),
(67,54,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 59 56 52 49 2 6 22 
CALL[ ]	/* CallFunction */";
};
width = 593;
}
);
note = uni2206;
unicode = 8710;
},
{
glyphname = product;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(392,-109,qs),
(401,-95,o),
(401,-77,qs),
(401,-27,o),
(400,58,o),
(401,142,o),
(401,192,qs),
(401,204,o),
(392,222,o),
(399,238,qs),
(404,248,o),
(396,267,o),
(396,277,qs),
(395,326,o),
(395,425,o),
(394,474,q),
(399,487,o),
(402,514,o),
(395,528,q),
(399,541,o),
(403,568,o),
(396,581,q),
(404,602,o),
(395,640,o),
(393,659,q),
(417,660,o),
(463,667,o),
(486,671,qs),
(494,673,o),
(494,688,o),
(486,689,qs),
(479,690,o),
(474,698,o),
(468,699,qs),
(460,700,o),
(443,701,o),
(434,701,qs),
(417,701,o),
(377,700,o),
(360,700,qs),
(289,700,ls),
(258,699,o),
(224,698,o),
(190,699,o),
(159,700,qs),
(0,700,l),
(0,691,o),
(20,667,o),
(39,661,qs),
(41,660,o),
(71,660,o),
(84,659,q),
(84,642,ls),
(84,635,o),
(86,600,o),
(86,594,qs),
(86,559,o),
(87,501,o),
(87,444,o),
(87,408,qs),
(86,392,o),
(85,359,o),
(87,345,qs),
(90,326,o),
(77,299,o),
(84,281,q),
(84,268,o),
(78,248,o),
(79,234,qs),
(80,224,o),
(79,185,o),
(81,147,o),
(85,137,q),
(82,125,o),
(83,105,o),
(86,93,qs),
(88,87,o),
(88,66,o),
(87,57,qs),
(85,36,o),
(78,-32,o),
(79,-53,q),
(84,-80,o),
(89,-103,o),
(93,-110,qs),
(98,-118,o),
(106,-114,o),
(110,-109,q),
(109,-92,o),
(116,-60,o),
(120,-28,o),
(113,-11,q),
(120,2,o),
(116,29,o),
(112,42,q),
(119,56,o),
(116,83,o),
(111,96,q),
(112,146,o),
(112,244,o),
(113,293,qs),
(113,303,o),
(121,322,o),
(116,332,qs),
(109,348,o),
(118,366,o),
(118,378,qs),
(118,480,o),
(117,594,o),
(117,644,o),
(116,657,o),
(116,658,q),
(148,657,o),
(197,657,o),
(245,660,o),
(278,661,qs),
(291,661,o),
(340,660,o),
(360,660,q),
(360,644,o),
(364,584,o),
(369,527,o),
(370,513,qs),
(371,504,o),
(372,483,o),
(370,477,qs),
(363,454,o),
(368,433,q),
(364,424,o),
(362,385,o),
(362,346,o),
(361,336,qs),
(360,322,o),
(367,302,o),
(367,289,q),
(360,271,o),
(373,245,o),
(370,225,qs),
(368,212,o),
(369,178,o),
(369,162,qs),
(370,127,o),
(369,69,o),
(369,12,o),
(369,-24,qs),
(369,-30,o),
(367,-65,o),
(367,-72,qs),
(366,-97,o),
(376,-116,o),
(377,-119,q),
(387,-118,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
135 132 129 99 85 78 69 63 59 56 53 25 23 16 0 15 0 73 0 2 0 0 2 87 0 2 2 0 97 3 1 2 0 2 0 81 126 125 116 105 101 100 39 32 4 6 22 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = product;
unicode = 8719;
},
{
glyphname = summation;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(409,-89,o),
(422,-76,o),
(421,-71,qs),
(420,-66,o),
(408,-56,o),
(403,-56,qs),
(93,-56,l),
(89,-55,o),
(83,-51,q),
(85,-49,o),
(87,-46,o),
(88,-45,q),
(108,-34,o),
(121,-20,qs),
(126,-14,o),
(137,-4,o),
(142,1,qs),
(163,22,o),
(206,64,o),
(226,86,qs),
(236,96,o),
(251,118,o),
(260,128,qs),
(395,263,ls),
(407,274,o),
(416,284,qs),
(422,290,o),
(422,302,qs),
(422,313,o),
(416,319,qs),
(401,335,o),
(371,368,o),
(353,381,qs),
(337,392,o),
(311,419,o),
(296,430,qs),
(283,441,o),
(265,470,o),
(253,482,qs),
(148,587,ls),
(144,591,o),
(136,599,o),
(134,603,qs),
(132,610,o),
(124,623,o),
(116,624,qs),
(107,626,o),
(104,645,o),
(93,644,qs),
(91,644,o),
(89,646,q),
(88,649,o),
(85,654,o),
(84,656,q),
(88,658,o),
(91,658,qs),
(139,659,o),
(235,659,o),
(282,659,qs),
(295,659,ls),
(300,659,o),
(310,661,o),
(314,665,q),
(322,667,o),
(338,669,o),
(345,669,qs),
(356,669,o),
(368,664,q),
(376,659,o),
(385,659,qs),
(396,659,o),
(416,669,o),
(427,670,qs),
(428,670,o),
(429,679,o),
(427,681,q),
(420,693,o),
(407,693,qs),
(63,693,ls),
(58,693,o),
(47,692,o),
(42,691,qs),
(37,690,o),
(29,675,o),
(32,671,qs),
(37,664,o),
(45,646,o),
(52,640,qs),
(63,630,o),
(85,609,o),
(95,598,qs),
(102,591,o),
(117,578,o),
(121,570,qs),
(126,559,o),
(142,543,o),
(150,535,qs),
(381,304,ls),
(386,299,o),
(386,296,o),
(381,291,qs),
(330,240,ls),
(323,233,o),
(310,220,o),
(303,212,qs),
(279,188,ls),
(272,182,o),
(258,168,o),
(251,161,qs),
(245,155,o),
(231,144,o),
(229,137,qs),
(226,127,o),
(207,121,o),
(206,110,qs),
(206,108,o),
(195,104,o),
(193,101,q),
(192,96,o),
(187,86,o),
(182,84,q),
(171,83,o),
(161,64,o),
(152,59,qs),
(142,55,o),
(125,38,o),
(122,25,q),
(116,22,o),
(105,14,o),
(103,6,q),
(82,-4,o),
(54,-39,o),
(37,-53,qs),
(32,-57,o),
(30,-69,o),
(30,-76,qs),
(30,-90,o),
(45,-90,qs),
(401,-90,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
53 1 3 1 89 84 2 5 2 2 1 0 5 3 76 0 3 1 2 2 3 114 0 1 4 1 2 5 1 2 105 0 5 0 0 5 87 0 5 5 0 95 6 1 0 5 0 79 1 0 132 130 82 77 72 71 69 67 61 58 0 138 1 138 7 6 22 
CALL[ ]	/* CallFunction */";
};
width = 458;
}
);
note = summation;
unicode = 8721;
},
{
glyphname = radical;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(225,-158,o),
(234,-156,q),
(234,-149,o),
(231,-145,q),
(236,-120,o),
(257,-77,o),
(252,-50,q),
(261,-37,o),
(263,-8,o),
(262,7,q),
(271,21,o),
(274,49,o),
(271,64,q),
(282,117,o),
(301,221,o),
(312,272,qs),
(314,283,o),
(325,301,o),
(322,312,qs),
(318,331,o),
(331,348,o),
(333,361,qs),
(343,414,o),
(359,503,o),
(375,593,o),
(384,645,q),
(387,654,o),
(387,663,q),
(395,664,o),
(407,665,o),
(436,665,q),
(453,668,o),
(484,665,o),
(514,667,q),
(516,672,o),
(509,690,o),
(507,691,q),
(506,694,o),
(483,698,o),
(480,699,qs),
(467,701,o),
(457,698,o),
(445,698,qs),
(438,697,o),
(417,695,o),
(410,699,qs),
(399,706,o),
(382,700,o),
(370,695,q),
(369,694,o),
(354,666,o),
(352,646,qs),
(351,639,o),
(346,602,o),
(344,595,qs),
(337,558,o),
(326,497,o),
(316,436,o),
(309,398,qs),
(305,382,o),
(297,346,o),
(296,331,qs),
(295,311,o),
(278,285,o),
(281,265,q),
(278,251,o),
(268,231,o),
(267,216,qs),
(266,206,o),
(257,164,o),
(251,123,o),
(254,112,q),
(245,90,o),
(246,65,qs),
(247,58,o),
(242,37,o),
(240,27,qs),
(236,12,o),
(223,-30,o),
(213,-73,o),
(210,-88,q),
(210,-94,o),
(208,-106,o),
(206,-111,q),
(201,-100,o),
(192,-92,qs),
(185,-87,o),
(177,-73,o),
(173,-66,qs),
(168,-57,o),
(158,-35,o),
(151,-22,qs),
(148,-16,o),
(141,-2,o),
(136,5,qs),
(134,9,o),
(128,18,o),
(126,23,qs),
(121,32,o),
(122,36,q),
(119,58,o),
(108,77,q),
(103,89,o),
(81,121,o),
(59,154,o),
(53,165,qs),
(41,190,l),
(40,194,o),
(34,200,o),
(32,204,qs),
(28,211,o),
(17,221,o),
(12,226,q),
(-1,213,o),
(1,191,o),
(12,170,o),
(12,159,q),
(13,158,o),
(32,139,o),
(36,131,qs),
(37,129,o),
(40,122,o),
(41,120,qs),
(79,47,ls),
(86,34,o),
(99,8,o),
(105,-5,qs),
(119,-31,ls),
(124,-40,o),
(131,-53,o),
(135,-60,qs),
(138,-66,o),
(142,-77,o),
(146,-84,qs),
(149,-90,o),
(155,-102,o),
(158,-107,qs),
(169,-131,ls),
(174,-141,o),
(190,-152,o),
(196,-161,q),
(207,-167,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
139 137 134 131 113 76 73 69 57 9 1 73 0 0 1 0 133 0 1 1 118 111 110 99 97 2 6 22 
CALL[ ]	/* CallFunction */";
};
width = 514;
}
);
note = radical;
unicode = 8730;
},
{
glyphname = partialdiff;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(379,0,o),
(417,0,q),
(422,1,o),
(432,12,o),
(433,16,qs),
(436,37,o),
(423,91,o),
(416,102,q),
(414,107,o),
(393,161,o),
(363,236,o),
(333,311,o),
(310,364,o),
(305,368,q),
(301,389,o),
(287,407,qs),
(283,412,o),
(275,431,o),
(272,440,qs),
(239,526,o),
(208,613,o),
(200,632,qs),
(185,668,o),
(169,691,o),
(164,696,qs),
(156,702,o),
(151,694,o),
(148,688,q),
(157,674,o),
(164,632,o),
(174,593,o),
(186,580,q),
(186,573,o),
(200,533,o),
(220,486,o),
(239,449,o),
(243,444,q),
(243,428,o),
(255,405,o),
(265,395,q),
(272,379,o),
(297,316,o),
(328,237,o),
(361,155,o),
(389,82,o),
(399,57,q),
(389,58,o),
(381,61,o),
(377,65,qs),
(366,76,o),
(341,95,o),
(334,109,q),
(332,115,o),
(317,128,o),
(310,130,qs),
(300,133,o),
(291,144,o),
(284,151,qs),
(235,198,o),
(136,289,o),
(88,335,qs),
(60,359,o),
(43,360,o),
(40,349,qs),
(40,348,o),
(41,294,o),
(41,211,o),
(41,165,qs),
(41,131,o),
(40,65,o),
(40,39,qs),
(40,30,o),
(51,18,o),
(55,11,qs),
(57,6,o),
(91,1,o),
(173,0,o),
(246,0,qs),
(260,-1,o),
(285,-1,o),
(298,-1,qs),
(324,-1,o)
);
},
{
closed = 1;
nodes = (
(274,31,o),
(269,31,qs),
(85,31,ls),
(78,31,o),
(75,48,o),
(75,55,qs),
(75,115,o),
(74,236,o),
(74,298,qs),
(74,300,o),
(76,305,o),
(77,305,qs),
(79,305,o),
(96,291,o),
(97,287,qs),
(99,280,o),
(109,271,o),
(113,266,q),
(145,235,o),
(210,174,o),
(243,144,qs),
(255,133,o),
(285,114,o),
(298,100,qs),
(309,87,o),
(336,63,o),
(349,52,qs),
(350,51,o),
(363,42,o),
(370,32,o),
(361,31,qs),
(359,31,o),
(328,29,o),
(323,24,q),
(290,24,l),
(286,29,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
111 35 2 4 2 1 76 44 1 2 74 0 2 4 2 133 5 1 4 3 0 4 89 0 3 0 0 3 87 0 3 3 0 98 1 6 2 0 3 0 82 2 0 115 113 85 84 83 82 19 18 5 3 0 81 2 78 7 6 22 
CALL[ ]	/* CallFunction */";
};
width = 434;
}
);
note = partialdiff;
unicode = 8706;
},
{
glyphname = uni00B5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(491,-50,o),
(485,-35,o),
(474,-35,qs),
(467,-35,o),
(450,-37,o),
(439,-26,o),
(440,-8,qs),
(440,-4,o),
(441,12,o),
(441,18,q),
(441,18,o),
(441,19,qs),
(441,21,o),
(441,69,o),
(441,138,o),
(441,208,o),
(441,261,o),
(441,268,qs),
(441,292,o),
(446,306,o),
(451,316,o),
(451,330,qs),
(451,340,o),
(440,362,o),
(450,375,q),
(443,393,o),
(447,406,o),
(455,421,o),
(455,440,qs),
(455,452,o),
(440,455,o),
(423,447,o),
(418,441,qs),
(414,435,o),
(414,425,o),
(414,420,qs),
(413,361,o),
(413,229,o),
(413,170,qs),
(413,163,o),
(416,148,o),
(413,143,qs),
(406,129,o),
(402,101,o),
(412,89,q),
(403,78,o),
(404,63,o),
(412,52,qs),
(415,48,o),
(411,39,o),
(407,36,qs),
(389,26,o),
(360,31,o),
(352,36,qs),
(348,39,o),
(326,36,o),
(304,30,o),
(300,30,qs),
(294,30,o),
(283,38,o),
(276,38,qs),
(269,38,o),
(254,26,o),
(245,33,qs),
(239,38,o),
(208,30,o),
(177,30,qs),
(167,30,o),
(159,36,o),
(145,32,qs),
(138,30,o),
(97,29,o),
(87,30,q),
(81,42,o),
(81,54,qs),
(81,84,o),
(82,116,o),
(82,122,qs),
(82,133,o),
(79,153,o),
(73,163,q),
(73,173,o),
(74,197,o),
(82,206,q),
(82,284,l),
(83,292,o),
(76,303,o),
(74,310,qs),
(72,317,o),
(72,334,o),
(77,341,qs),
(79,344,o),
(82,363,o),
(82,367,qs),
(82,432,ls),
(82,446,o),
(64,454,o),
(45,445,o),
(45,431,qs),
(45,32,l),
(44,21,o),
(48,-10,o),
(49,-26,qs),
(49,-30,o),
(50,-36,o),
(50,-39,qs),
(50,-47,o),
(48,-49,q),
(40,-62,o),
(40,-78,qs),
(40,-91,o),
(47,-111,o),
(46,-125,qs),
(46,-128,o),
(49,-145,o),
(47,-148,qs),
(44,-155,o),
(48,-175,o),
(48,-178,qs),
(48,-183,o),
(51,-199,o),
(56,-198,qs),
(82,-193,o),
(87,-170,o),
(87,-158,qs),
(87,-157,o),
(79,-139,o),
(79,-133,qs),
(79,-125,l),
(80,-70,ls),
(80,-59,o),
(81,-40,o),
(81,-30,qs),
(81,-25,o),
(83,-12,o),
(81,-11,q),
(79,-8,o),
(80,-2,q),
(91,2,o),
(103,2,qs),
(109,2,o),
(163,1,o),
(240,1,o),
(322,0,o),
(391,0,o),
(410,0,q),
(410,-10,o),
(410,-22,o),
(410,-25,qs),
(412,-53,o),
(453,-66,o),
(479,-65,qs),
(486,-65,o)
);
},
{
closed = 1;
nodes = (
(266,198,o),
(273,207,qs),
(279,215,o),
(279,223,qs),
(279,231,o),
(268,250,o),
(261,251,qs),
(251,253,o),
(219,250,o),
(219,235,qs),
(219,224,o),
(205,214,o),
(213,206,qs),
(227,192,ls),
(238,182,o)
);
},
{
closed = 1;
nodes = (
(234,218,o),
(238,220,o),
(238,224,qs),
(238,228,o),
(246,229,o),
(249,228,qs),
(254,226,o),
(254,220,qs),
(254,217,o),
(252,216,q),
(251,214,o),
(243,209,o),
(240,212,qs),
(236,216,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
173 110 107 71 68 5 4 7 52 1 2 4 16 14 3 3 6 1 46 1 0 6 4 76 127 67 58 3 7 74 36 30 2 0 73 0 7 4 7 133 0 4 2 2 4 112 0 6 8 1 0 6 0 101 5 3 2 2 2 1 96 0 1 1 38 1 78 1 0 177 175 150 148 95 93 92 90 86 84 81 80 13 6 0 152 1 152 9 8 22 
CALL[ ]	/* CallFunction */";
};
width = 499;
}
);
note = uni00B5;
unicode = 181;
},
{
glyphname = percent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(149,91,o),
(158,129,qs),
(163,147,o),
(176,181,o),
(184,198,qs),
(193,219,o),
(209,245,o),
(229,281,o),
(243,315,qs),
(251,334,o),
(268,373,o),
(275,386,q),
(291,409,o),
(305,433,o),
(313,453,o),
(324,480,o),
(336,505,q),
(341,530,o),
(358,588,o),
(376,633,o),
(380,637,qs),
(383,640,l),
(388,654,o),
(396,684,o),
(400,699,q),
(390,701,o),
(380,690,o),
(378,689,q),
(367,676,o),
(344,628,o),
(328,588,o),
(328,587,qs),
(327,573,o),
(322,563,o),
(314,553,o),
(307,538,qs),
(298,517,o),
(291,501,o),
(287,493,o),
(280,478,o),
(271,457,qs),
(252,412,o),
(211,324,o),
(192,280,qs),
(183,259,o),
(173,240,o),
(166,230,o),
(158,217,o),
(150,202,qs),
(138,174,o),
(117,125,o),
(106,102,qs),
(93,77,o),
(86,36,o),
(78,13,q),
(74,5,o),
(88,-3,o),
(93,4,qs),
(112,32,o)
);
},
{
closed = 1;
nodes = (
(96,469,o),
(119,469,qs),
(127,469,o),
(164,468,o),
(202,467,o),
(209,468,qs),
(214,468,o),
(227,481,o),
(227,486,qs),
(228,491,o),
(228,526,o),
(227,565,o),
(225,575,q),
(227,591,o),
(227,623,o),
(226,630,qs),
(226,635,o),
(213,648,o),
(208,648,qs),
(201,649,o),
(163,648,o),
(126,647,o),
(118,647,qs),
(76,647,o),
(39,650,o),
(40,627,qs),
(44,564,l),
(41,489,ls),
(40,478,o),
(66,460,o),
(67,461,qs),
(75,466,o)
);
},
{
closed = 1;
nodes = (
(158,498,o),
(155,499,qs),
(147,502,o),
(134,499,o),
(131,499,qs),
(113,497,o),
(98,496,o),
(89,497,o),
(81,497,q),
(78,502,o),
(74,514,o),
(75,520,qs),
(76,526,o),
(76,558,o),
(75,589,o),
(74,590,q),
(74,596,ls),
(74,609,o),
(80,619,q),
(87,619,o),
(123,619,o),
(137,619,qs),
(141,619,o),
(152,619,qs),
(156,619,o),
(146,619,o),
(137,619,qs),
(131,620,o),
(152,621,o),
(180,621,o),
(185,620,qs),
(191,620,o),
(204,603,o),
(198,589,qs),
(195,583,o),
(195,576,qs),
(194,568,ls),
(194,566,o),
(195,545,o),
(198,523,o),
(200,519,qs),
(205,511,o),
(192,496,o),
(186,496,q),
(178,494,o)
);
},
{
closed = 1;
nodes = (
(344,0,o),
(372,3,qs),
(381,3,l),
(392,5,o),
(398,1,q),
(416,1,o),
(417,15,o),
(401,35,o),
(391,44,qs),
(386,49,o),
(377,64,o),
(372,69,qs),
(361,83,o),
(354,97,o),
(351,100,qs),
(339,116,o),
(330,135,o),
(322,153,o),
(311,165,qs),
(301,177,o),
(282,173,o),
(280,172,q),
(173,16,l),
(173,14,o),
(173,8,o),
(175,6,q),
(177,5,o),
(192,-2,o),
(214,4,qs),
(219,5,o),
(230,0,o),
(235,1,q),
(265,3,o)
);
},
{
closed = 1;
nodes = (
(244,66,o),
(267,101,o),
(272,106,qs),
(278,112,o),
(286,125,o),
(293,125,qs),
(298,125,o),
(309,111,o),
(320,93,qs),
(331,77,o),
(350,49,o),
(360,38,q),
(358,37,o),
(323,35,o),
(276,35,o),
(235,36,o),
(226,36,q),
(226,36,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
77 1 3 2 62 1 1 3 59 1 8 1 3 76 0 8 1 7 1 8 7 128 0 0 0 2 3 0 2 105 0 3 0 1 8 3 1 105 10 1 7 7 4 97 9 6 5 3 4 4 38 4 78 173 169 136 136 181 179 169 186 173 186 136 168 136 167 166 165 163 162 129 128 115 110 89 85 70 66 11 8 22 
CALL[ ]	/* CallFunction */";
};
width = 456;
}
);
note = percent;
unicode = 37;
},
{
glyphname = perthousand;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(143,75,o),
(162,109,qs),
(171,126,o),
(192,155,o),
(204,170,qs),
(225,196,o),
(280,263,o),
(314,308,qs),
(325,324,o),
(352,358,o),
(362,368,qs),
(383,386,o),
(403,407,o),
(416,424,o),
(433,448,o),
(451,469,q),
(459,486,o),
(493,536,o),
(532,587,o),
(561,624,o),
(564,627,qs),
(567,630,l),
(575,643,o),
(591,670,o),
(599,683,q),
(589,687,o),
(577,679,o),
(575,678,qs),
(554,664,o),
(513,613,o),
(492,597,qs),
(491,596,o),
(486,590,o),
(485,588,qs),
(478,567,o),
(446,528,o),
(431,508,qs),
(417,490,o),
(406,476,o),
(401,469,o),
(390,456,o),
(376,438,qs),
(346,400,o),
(284,324,o),
(255,286,qs),
(229,251,o),
(194,207,o),
(172,182,qs),
(153,158,o),
(121,116,o),
(104,96,qs),
(85,74,o),
(69,37,o),
(55,17,qs),
(50,10,o),
(61,-1,o),
(68,4,q),
(93,27,o)
);
},
{
closed = 1;
nodes = (
(348,640,o),
(344,643,q),
(343,645,o),
(327,652,o),
(302,646,qs),
(297,645,o),
(285,650,o),
(279,649,qs),
(263,648,o),
(212,648,o),
(156,648,o),
(105,647,o),
(90,645,qs),
(81,645,ls),
(71,644,o),
(64,648,q),
(60,649,o),
(41,647,o),
(40,646,q),
(40,638,o),
(61,619,o),
(68,606,q),
(74,602,o),
(83,590,o),
(89,585,q),
(92,581,o),
(99,575,qs),
(114,560,o),
(139,513,o),
(158,495,qs),
(170,483,o),
(187,470,o),
(188,471,qs),
(346,633,l)
);
},
{
closed = 1;
nodes = (
(175,527,o),
(158,546,qs),
(150,556,o),
(121,589,o),
(99,617,o),
(98,617,q),
(100,618,o),
(136,619,o),
(189,620,o),
(245,620,o),
(287,619,o),
(294,619,q),
(294,619,o),
(274,597,o),
(246,566,o),
(222,540,o),
(218,536,qs),
(205,523,o),
(194,517,qs),
(187,513,o)
);
},
{
closed = 1;
nodes = (
(451,0,o),
(487,1,o),
(518,2,o),
(524,2,qs),
(566,2,o),
(604,-1,o),
(602,22,qs),
(598,85,l),
(601,190,ls),
(601,201,o),
(576,219,o),
(575,218,q),
(568,214,o),
(546,210,o),
(523,210,qs),
(517,210,o),
(486,211,o),
(450,212,o),
(419,212,o),
(413,211,qs),
(408,211,o),
(395,199,o),
(395,194,qs),
(395,190,o),
(394,159,o),
(394,118,o),
(396,83,o),
(397,75,q),
(395,59,o),
(395,27,o),
(396,20,qs),
(396,15,o),
(409,1,o),
(414,1,qs),
(420,0,o)
);
},
{
closed = 1;
nodes = (
(713,-2,o),
(749,-1,o),
(780,0,o),
(786,0,qs),
(828,0,o),
(866,-3,o),
(864,20,qs),
(860,83,l),
(863,188,ls),
(863,199,o),
(838,217,o),
(837,216,q),
(830,212,o),
(808,208,o),
(785,208,qs),
(779,208,o),
(748,209,o),
(712,210,o),
(681,210,o),
(675,209,qs),
(670,209,o),
(657,197,o),
(657,192,qs),
(657,188,o),
(656,157,o),
(656,116,o),
(658,81,o),
(659,73,q),
(657,57,o),
(657,25,o),
(658,18,qs),
(658,13,o),
(671,-1,o),
(676,-1,qs),
(682,-2,o)
);
},
{
closed = 1;
nodes = (
(418,46,o),
(424,60,qs),
(427,66,o),
(427,73,qs),
(428,81,l),
(429,84,o),
(427,119,o),
(424,156,o),
(422,160,qs),
(417,168,o),
(430,183,o),
(436,183,q),
(442,185,o),
(464,184,o),
(485,181,o),
(487,180,qs),
(495,177,o),
(508,180,o),
(511,180,qs),
(529,182,o),
(544,183,o),
(553,183,o),
(561,182,q),
(564,177,o),
(568,165,o),
(567,159,qs),
(567,155,o),
(566,124,o),
(566,88,o),
(567,60,o),
(568,59,q),
(568,53,ls),
(568,41,o),
(562,30,q),
(555,30,o),
(517,30,o),
(503,30,qs),
(501,30,o),
(490,30,qs),
(486,30,o),
(495,30,o),
(503,30,q),
(507,29,o),
(491,28,o),
(464,28,o),
(441,28,o),
(437,29,q),
(431,29,o)
);
},
{
closed = 1;
nodes = (
(680,44,o),
(686,58,qs),
(689,64,o),
(689,71,qs),
(690,79,l),
(691,82,o),
(689,117,o),
(686,154,o),
(684,158,qs),
(679,166,o),
(692,181,o),
(698,181,q),
(704,183,o),
(726,182,o),
(747,179,o),
(749,178,qs),
(757,175,o),
(770,178,o),
(773,178,qs),
(791,180,o),
(806,181,o),
(815,181,o),
(823,180,q),
(826,175,o),
(830,163,o),
(829,157,qs),
(829,153,o),
(828,122,o),
(828,86,o),
(829,58,o),
(830,57,q),
(830,51,ls),
(830,39,o),
(824,28,q),
(817,28,o),
(779,28,o),
(765,28,qs),
(763,28,o),
(752,28,qs),
(748,28,o),
(757,28,o),
(765,28,q),
(769,27,o),
(753,26,o),
(726,26,o),
(703,26,o),
(699,27,q),
(693,27,o)
);
}
);
width = 904;
}
);
note = perthousand;
unicode = 8240;
},
{
glyphname = arrowup;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(241,60,o),
(246,165,o),
(246,230,qs),
(246,251,o),
(246,332,o),
(246,425,o),
(248,510,o),
(250,536,qs),
(251,548,o),
(249,596,o),
(250,606,q),
(252,605,o),
(275,575,o),
(307,532,o),
(339,489,o),
(362,459,o),
(363,457,q),
(389,427,o),
(417,410,o),
(424,422,o),
(414,450,o),
(402,465,qs),
(391,479,o),
(361,513,o),
(354,529,qs),
(352,534,o),
(323,566,o),
(288,612,o),
(276,637,q),
(275,641,o),
(272,647,o),
(270,651,qs),
(265,661,o),
(254,680,o),
(239,687,o),
(226,677,qs),
(216,669,o),
(198,643,o),
(190,629,qs),
(185,619,o),
(157,597,o),
(152,587,q),
(111,535,o),
(59,477,o),
(31,452,o),
(20,445,o),
(21,443,q),
(17,423,o),
(36,414,o),
(60,430,q),
(70,439,o),
(111,485,o),
(156,538,o),
(191,579,o),
(194,583,qs),
(198,588,o),
(214,603,o),
(219,606,q),
(218,566,o),
(212,454,o),
(216,380,q),
(213,347,o),
(213,259,o),
(213,170,o),
(210,132,qs),
(205,75,o),
(203,20,o),
(211,2,o),
(222,0,qs),
(230,-1,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
69 34 1 50 
CALL[ ]	/* CallFunction */";
};
width = 442;
}
);
note = arrowup;
unicode = 8593;
},
{
glyphname = uni2197;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(82,164,o),
(166,227,o),
(216,268,qs),
(233,282,o),
(294,334,o),
(366,393,o),
(432,446,o),
(454,461,qs),
(463,468,o),
(499,500,o),
(508,506,q),
(508,504,o),
(499,467,o),
(487,415,o),
(475,363,o),
(466,326,o),
(465,324,q),
(459,284,o),
(464,252,o),
(477,254,o),
(493,280,o),
(497,299,qs),
(500,317,o),
(507,362,o),
(515,377,qs),
(517,382,o),
(523,424,o),
(536,480,o),
(548,506,q),
(550,509,o),
(553,516,o),
(555,519,q),
(559,530,o),
(567,551,o),
(562,567,o),
(547,570,qs),
(534,572,o),
(503,570,o),
(487,567,qs),
(476,565,o),
(441,572,o),
(430,569,q),
(364,567,o),
(286,570,o),
(249,576,o),
(237,579,o),
(236,578,q),
(218,567,o),
(223,547,o),
(251,539,q),
(264,537,o),
(325,535,o),
(395,534,o),
(449,534,o),
(454,534,qs),
(460,534,o),
(482,532,o),
(488,530,q),
(456,504,o),
(366,438,o),
(312,387,q),
(285,368,o),
(217,313,o),
(148,255,o),
(118,233,qs),
(71,201,o),
(27,167,o),
(18,149,o),
(24,139,q),
(29,133,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 8 values pushed */
22 1 1 74 11 1 0 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 8 values pushed */
22 1 2 74 11 1 0 73 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 8 values pushed */
22 1 1 74 11 1 0 73 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 2 1 2 133 0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
20 39 93 3 6 25 
CALL[ ]	/* CallFunction */";
};
width = 586;
}
);
note = uni2197;
unicode = 8599;
},
{
glyphname = arrowright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(60,337,o),
(115,338,o),
(173,341,qs),
(210,342,o),
(300,339,o),
(387,337,o),
(421,339,q),
(495,332,o),
(606,335,o),
(647,335,q),
(643,329,o),
(627,314,o),
(623,310,qs),
(619,307,o),
(577,274,o),
(522,231,o),
(475,191,o),
(466,181,qs),
(448,158,o),
(457,139,o),
(477,142,q),
(479,141,o),
(486,151,o),
(513,179,o),
(572,229,o),
(626,268,q),
(635,272,o),
(659,300,o),
(669,305,qs),
(683,313,o),
(709,330,o),
(718,339,q),
(728,352,o),
(722,367,o),
(703,378,o),
(693,384,qs),
(690,386,o),
(683,389,o),
(679,391,qs),
(654,403,o),
(610,440,o),
(579,469,o),
(574,472,qs),
(558,479,o),
(525,510,o),
(512,522,qs),
(497,534,o),
(469,545,o),
(457,539,o),
(473,510,o),
(502,483,q),
(504,482,o),
(534,458,o),
(575,425,o),
(617,391,o),
(646,367,o),
(648,366,q),
(637,365,o),
(590,368,o),
(578,368,qs),
(552,366,o),
(467,367,o),
(373,370,o),
(293,373,o),
(272,374,qs),
(207,376,o),
(102,374,o),
(40,365,o),
(41,357,qs),
(42,346,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
12 1 1 1 75 0 1 3 2 1 89 0 0 0 3 2 0 3 103 0 1 1 2 97 0 2 1 2 81 68 62 61 59 33 98 4 6 24 
CALL[ ]	/* CallFunction */";
};
width = 745;
}
);
note = arrowright;
unicode = 8594;
},
{
glyphname = uni2198;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(27,473,o),
(71,439,o),
(118,407,qs),
(148,385,o),
(217,327,o),
(285,272,o),
(312,253,q),
(366,202,o),
(456,136,o),
(488,110,q),
(482,108,o),
(460,106,o),
(454,106,qs),
(449,106,o),
(395,106,o),
(325,105,o),
(264,103,o),
(251,101,q),
(223,93,o),
(218,73,o),
(236,62,q),
(237,61,o),
(249,64,o),
(286,70,o),
(364,73,o),
(430,71,q),
(441,68,o),
(476,75,o),
(487,73,qs),
(503,70,o),
(534,68,o),
(547,70,qs),
(562,73,o),
(567,89,o),
(559,110,o),
(555,121,q),
(553,124,o),
(550,131,o),
(548,134,q),
(536,160,o),
(523,216,o),
(517,258,o),
(515,263,qs),
(507,278,o),
(500,323,o),
(497,341,qs),
(493,360,o),
(477,386,o),
(464,388,o),
(459,356,o),
(465,316,q),
(466,314,o),
(475,277,o),
(487,225,o),
(499,173,o),
(508,136,o),
(508,134,q),
(499,140,o),
(463,172,o),
(454,179,qs),
(432,194,o),
(366,247,o),
(294,306,o),
(233,358,o),
(216,372,qs),
(166,413,o),
(82,476,o),
(29,507,o),
(24,501,q),
(18,491,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
12 1 2 74 0 2 0 0 2 89 0 2 2 0 97 1 1 0 2 0 81 57 52 45 43 39 38 3 6 22 
CALL[ ]	/* CallFunction */";
};
width = 586;
}
);
note = uni2198;
unicode = 8600;
},
{
glyphname = arrowdown;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(203,673,o),
(205,618,o),
(210,561,qs),
(213,524,o),
(213,434,o),
(213,347,o),
(216,313,q),
(212,239,o),
(218,128,o),
(219,87,q),
(214,90,o),
(198,106,o),
(194,110,qs),
(191,114,o),
(156,155,o),
(111,208,o),
(70,254,o),
(60,263,q),
(36,280,o),
(17,270,o),
(21,250,q),
(20,248,o),
(31,241,o),
(59,216,o),
(111,159,o),
(152,106,q),
(157,96,o),
(185,74,o),
(190,64,qs),
(198,50,o),
(216,24,o),
(226,16,qs),
(239,6,o),
(254,13,o),
(265,33,o),
(270,42,qs),
(272,46,o),
(275,52,o),
(276,56,q),
(288,82,o),
(323,127,o),
(352,159,o),
(354,164,qs),
(361,180,o),
(391,214,o),
(402,228,qs),
(414,243,o),
(424,271,o),
(417,283,o),
(389,266,o),
(363,236,q),
(362,234,o),
(339,204,o),
(307,161,o),
(275,118,o),
(252,89,o),
(250,87,q),
(249,98,o),
(251,145,o),
(250,157,qs),
(248,183,o),
(246,268,o),
(246,361,o),
(246,442,o),
(246,463,qs),
(246,528,o),
(241,633,o),
(230,694,o),
(222,693,qs),
(211,692,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
36 1 1 50 
CALL[ ]	/* CallFunction */";
};
width = 442;
}
);
note = arrowdown;
unicode = 8595;
},
{
glyphname = uni2199;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(445,476,o),
(361,413,o),
(311,372,qs),
(294,358,o),
(233,306,o),
(161,247,o),
(95,194,o),
(73,179,qs),
(64,172,o),
(28,140,o),
(19,134,q),
(19,136,o),
(28,173,o),
(40,225,o),
(52,277,o),
(61,314,o),
(62,316,q),
(68,356,o),
(63,388,o),
(50,386,o),
(34,360,o),
(30,341,qs),
(27,323,o),
(20,278,o),
(12,263,qs),
(10,258,o),
(4,216,o),
(-9,160,o),
(-21,134,q),
(-23,131,o),
(-26,124,o),
(-28,121,q),
(-32,110,o),
(-40,89,o),
(-35,73,o),
(-20,70,qs),
(-7,68,o),
(24,70,o),
(40,73,qs),
(51,75,o),
(86,68,o),
(97,71,q),
(163,73,o),
(241,70,o),
(278,64,o),
(290,61,o),
(291,62,q),
(309,73,o),
(304,93,o),
(276,101,q),
(263,103,o),
(202,105,o),
(132,106,o),
(78,106,o),
(73,106,qs),
(67,106,o),
(45,108,o),
(39,110,q),
(71,136,o),
(161,202,o),
(215,253,q),
(242,272,o),
(310,327,o),
(379,385,o),
(409,407,qs),
(456,439,o),
(500,473,o),
(509,491,o),
(503,501,q),
(498,507,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
11 1 0 74 22 1 1 73 0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 20 39 93 3 6 25 
CALL[ ]	/* CallFunction */";
};
width = 527;
}
);
note = uni2199;
unicode = 8601;
},
{
glyphname = arrowleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(643,374,o),
(538,376,o),
(473,374,qs),
(452,373,o),
(372,370,o),
(278,367,o),
(193,366,o),
(167,368,qs),
(155,368,o),
(108,365,o),
(97,366,q),
(99,367,o),
(128,391,o),
(170,425,o),
(211,458,o),
(241,482,o),
(243,483,q),
(272,510,o),
(288,539,o),
(276,545,o),
(248,534,o),
(233,522,qs),
(220,510,o),
(187,479,o),
(171,472,qs),
(166,469,o),
(135,440,o),
(91,403,o),
(66,391,qs),
(62,389,o),
(55,386,o),
(52,384,qs),
(42,378,o),
(23,367,o),
(17,352,o),
(27,339,q),
(36,330,o),
(62,313,o),
(76,305,qs),
(86,300,o),
(110,272,o),
(119,268,q),
(173,229,o),
(232,179,o),
(259,151,o),
(266,141,o),
(268,142,q),
(288,139,o),
(297,158,o),
(279,181,qs),
(270,191,o),
(223,231,o),
(168,274,o),
(126,307,o),
(122,310,qs),
(118,314,o),
(102,329,o),
(98,335,q),
(139,335,o),
(250,332,o),
(324,339,q),
(358,337,o),
(445,339,o),
(535,342,o),
(572,341,qs),
(630,338,o),
(685,337,o),
(703,346,o),
(704,357,qs),
(705,365,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
0 2 0 1 2 89 0 3 0 0 1 3 0 103 0 2 2 1 97 0 1 2 1 81 68 62 61 59 33 98 4 6 24 
CALL[ ]	/* CallFunction */";
};
width = 724;
}
);
note = arrowleft;
unicode = 8592;
},
{
glyphname = uni2196;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(559,167,o),
(515,201,o),
(468,233,qs),
(438,255,o),
(369,313,o),
(301,368,o),
(274,387,q),
(220,438,o),
(130,504,o),
(98,530,q),
(104,532,o),
(126,534,o),
(132,534,qs),
(137,534,o),
(191,534,o),
(261,535,o),
(322,537,o),
(335,539,q),
(363,547,o),
(368,567,o),
(350,578,q),
(349,579,o),
(337,576,o),
(300,570,o),
(222,567,o),
(156,569,q),
(145,572,o),
(110,565,o),
(99,567,qs),
(83,570,o),
(52,572,o),
(39,570,qs),
(24,567,o),
(19,551,o),
(27,530,o),
(31,519,q),
(33,516,o),
(36,509,o),
(38,506,q),
(50,480,o),
(63,424,o),
(69,382,o),
(71,377,qs),
(79,362,o),
(86,317,o),
(89,299,qs),
(93,280,o),
(109,254,o),
(122,252,o),
(127,284,o),
(121,324,q),
(120,326,o),
(111,363,o),
(99,415,o),
(87,467,o),
(78,504,o),
(78,506,q),
(87,500,o),
(123,468,o),
(132,461,qs),
(154,446,o),
(220,393,o),
(292,334,o),
(353,282,o),
(370,268,qs),
(420,227,o),
(504,164,o),
(557,133,o),
(562,139,q),
(568,149,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
12 1 2 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
1 1 0 2 2 0 89 1 1 0 0 2 97 0 2 0 2 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 0 133 0 1 2 2 1 89 0 1 1 2 97 0 2 1 2 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
1 1 0 2 2 0 89 1 1 0 0 2 97 0 2 0 2 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
57 52 45 43 39 38 3 6 22 
CALL[ ]	/* CallFunction */";
};
width = 586;
}
);
note = uni2196;
unicode = 8598;
},
{
glyphname = arrowboth;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(91,340,o),
(146,341,o),
(204,344,qs),
(241,345,o),
(331,342,o),
(418,340,o),
(452,342,q),
(526,335,o),
(637,338,o),
(678,338,q),
(674,332,o),
(658,317,o),
(654,313,qs),
(650,310,o),
(608,277,o),
(553,234,o),
(506,194,o),
(497,184,qs),
(479,161,o),
(488,142,o),
(508,145,q),
(510,144,o),
(517,154,o),
(544,182,o),
(603,232,o),
(657,271,q),
(666,275,o),
(690,303,o),
(700,308,qs),
(714,316,o),
(740,333,o),
(749,342,q),
(759,355,o),
(753,370,o),
(734,381,o),
(724,387,qs),
(721,389,o),
(714,392,o),
(710,394,qs),
(685,406,o),
(641,443,o),
(610,472,o),
(605,475,qs),
(589,482,o),
(556,513,o),
(543,525,qs),
(528,537,o),
(500,548,o),
(488,542,o),
(504,513,o),
(533,486,q),
(535,485,o),
(565,461,o),
(606,428,o),
(648,394,o),
(677,370,o),
(679,369,q),
(668,368,o),
(621,371,o),
(609,371,qs),
(583,369,o),
(498,370,o),
(404,373,o),
(324,376,o),
(303,377,qs),
(238,379,o),
(133,377,o),
(71,368,o),
(72,360,qs),
(73,349,o)
);
},
{
closed = 1;
nodes = (
(643,374,o),
(538,376,o),
(473,374,qs),
(452,373,o),
(372,370,o),
(278,367,o),
(193,366,o),
(167,368,qs),
(155,368,o),
(108,365,o),
(97,366,q),
(99,367,o),
(128,391,o),
(170,425,o),
(211,458,o),
(241,482,o),
(243,483,q),
(272,510,o),
(288,539,o),
(276,545,o),
(248,534,o),
(233,522,qs),
(220,510,o),
(187,479,o),
(171,472,qs),
(166,469,o),
(135,440,o),
(91,403,o),
(66,391,qs),
(62,389,o),
(55,386,o),
(52,384,qs),
(42,378,o),
(23,367,o),
(17,352,o),
(27,339,q),
(36,330,o),
(62,313,o),
(76,305,qs),
(86,300,o),
(110,272,o),
(119,268,q),
(173,229,o),
(232,179,o),
(259,151,o),
(266,141,o),
(268,142,q),
(288,139,o),
(297,158,o),
(279,181,qs),
(270,191,o),
(223,231,o),
(168,274,o),
(126,307,o),
(122,310,qs),
(118,314,o),
(102,329,o),
(98,335,q),
(139,335,o),
(250,332,o),
(324,339,q),
(358,337,o),
(445,339,o),
(535,342,o),
(572,341,qs),
(630,338,o),
(685,337,o),
(703,346,o),
(704,357,qs),
(705,365,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
12 1 1 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 0 1 1 0 112 5 4 2 2 3 3 2 113 7 6 2 1 3 3 1 89 7 6 2 1 1 3 96 0 3 1 3 80 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 0 1 1 0 112 0 6 1 3 1 6 114 0 4 3 2 3 4 114 0 2 5 3 2 5 126 0 5 3 5 111 7 1 1 6 3 1 89 7 1 1 1 3 96 0 3 1 3 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 0 1 1 0 112 5 4 2 2 3 3 2 113 7 6 2 1 3 3 1 89 7 6 2 1 1 3 96 0 3 1 3 80 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
138 132 131 129 81 79 78 72 68 62 61 59 33 98 8 6 24 
CALL[ ]	/* CallFunction */";
};
width = 776;
}
);
note = arrowboth;
unicode = 8596;
},
{
glyphname = arrowupdn;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(203,106,o),
(226,134,o),
(242,153,qs),
(245,157,o),
(271,186,o),
(305,227,o),
(337,266,o),
(359,293,o),
(358,294,q),
(360,315,o),
(341,312,o),
(318,294,qs),
(308,285,o),
(279,253,o),
(250,218,o),
(228,191,o),
(225,188,q),
(220,179,o),
(212,174,q),
(214,189,o),
(213,224,o),
(213,245,qs),
(213,269,o),
(213,353,o),
(212,402,qs),
(213,450,o),
(210,533,o),
(210,557,qs),
(210,575,o),
(211,611,o),
(208,633,q),
(213,629,o),
(221,622,o),
(225,616,qs),
(239,595,o),
(275,548,o),
(311,506,o),
(324,494,qs),
(347,476,o),
(359,477,o),
(357,498,q),
(358,499,o),
(335,528,o),
(301,570,o),
(266,614,o),
(241,646,o),
(239,650,qs),
(232,665,o),
(215,691,o),
(206,700,qs),
(194,711,o),
(180,705,o),
(169,687,o),
(163,678,q),
(160,671,o),
(156,664,qs),
(137,627,o),
(92,589,o),
(88,581,qs),
(80,566,o),
(55,537,o),
(43,523,qs),
(31,509,o),
(18,483,o),
(23,473,o),
(50,490,o),
(78,519,qs),
(80,521,o),
(110,556,o),
(146,599,o),
(176,633,o),
(178,634,q),
(172,609,o),
(176,520,o),
(176,449,qs),
(176,369,o),
(169,224,o),
(172,169,q),
(161,189,o),
(120,233,o),
(86,267,o),
(83,269,q),
(55,298,o),
(32,309,o),
(32,291,o),
(49,259,o),
(61,245,qs),
(73,232,o),
(88,225,o),
(96,210,qs),
(99,205,o),
(124,185,o),
(156,153,o),
(169,128,qs),
(182,106,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
75 63 22 16 4 0 74 0 0 0 118 94 93 1 6 22 
CALL[ ]	/* CallFunction */";
};
width = 378;
}
);
note = arrowupdn;
unicode = 8597;
},
{
glyphname = uni25CF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(156,604,o),
(144,585,o),
(137,580,qs),
(132,576,o),
(126,563,o),
(117,563,qs),
(107,563,o),
(98,543,o),
(92,536,qs),
(86,528,o),
(75,511,o),
(70,502,qs),
(44,453,o),
(37,340,o),
(68,225,o),
(99,172,qs),
(161,66,o),
(365,-24,o),
(509,4,q),
(572,22,o),
(674,95,o),
(738,191,o),
(744,241,q),
(744,241,o),
(739,277,o),
(758,304,qs),
(769,320,o),
(761,337,qs),
(758,345,o),
(764,360,o),
(762,367,qs),
(754,393,o),
(753,425,o),
(754,450,o),
(750,466,qs),
(735,528,o),
(668,633,o),
(565,701,o),
(430,717,o),
(347,691,q),
(298,679,o),
(215,616,o),
(157,528,o),
(132,428,o),
(139,377,qs),
(143,353,o),
(144,303,o),
(154,258,o),
(170,241,qs),
(181,230,o),
(200,219,o),
(195,199,q),
(195,199,o),
(211,177,o),
(215,175,qs),
(236,166,o),
(262,145,o),
(289,125,o),
(311,119,q),
(371,108,o),
(476,149,o),
(555,232,o),
(575,281,qs),
(593,326,o),
(596,417,o),
(551,495,o),
(496,519,qs),
(456,538,o),
(386,528,o),
(334,490,o),
(321,466,qs),
(293,420,o),
(295,333,o),
(327,308,qs),
(345,295,o),
(391,296,o),
(426,316,o),
(426,331,q),
(428,343,o),
(414,343,o),
(390,339,o),
(377,344,qs),
(361,350,o),
(357,388,o),
(373,431,o),
(404,461,o),
(423,460,qs),
(470,457,o),
(516,412,o),
(524,346,o),
(512,311,qs),
(502,280,o),
(457,224,o),
(394,192,o),
(357,195,q),
(313,204,o),
(260,270,o),
(242,364,o),
(248,414,qs),
(250,428,o),
(249,463,o),
(256,490,o),
(269,490,qs),
(277,490,o),
(278,510,o),
(282,517,qs),
(284,522,o),
(294,530,o),
(293,535,qs),
(292,552,o),
(309,554,o),
(314,560,qs),
(346,595,o),
(393,609,qs),
(444,621,o),
(538,598,o),
(613,539,o),
(660,454,o),
(664,404,qs),
(669,350,o),
(643,236,o),
(582,136,o),
(532,103,q),
(455,64,o),
(318,69,o),
(209,138,o),
(172,192,qs),
(141,238,o),
(107,346,o),
(106,459,o),
(142,566,o),
(182,609,q),
(171,616,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
23 1 1 5 54 1 4 3 2 76 0 5 1 5 133 0 1 2 1 133 0 2 3 2 133 0 3 4 3 133 0 4 0 4 133 0 0 0 118 127 125 57 56 53 52 46 44 30 28 23 6 6 23 
CALL[ ]	/* CallFunction */";
};
width = 804;
}
);
note = uni25CF;
unicode = 9679;
},
{
glyphname = circle;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(424,673,o),
(457,678,q),
(445,686,o),
(381,688,o),
(303,680,o),
(231,661,o),
(211,647,q),
(153,617,o),
(75,521,o),
(38,405,o),
(43,282,o),
(91,168,o),
(138,124,qs),
(189,76,o),
(325,21,o),
(469,19,o),
(601,80,o),
(647,148,qs),
(716,241,o),
(717,449,o),
(649,543,q),
(615,581,o),
(515,627,o),
(401,641,o),
(292,618,o),
(207,557,o),
(187,504,q),
(186,493,o),
(193,497,o),
(203,511,o),
(206,513,q),
(254,566,o),
(386,610,o),
(525,593,o),
(583,555,q),
(628,521,o),
(673,429,o),
(680,326,o),
(653,224,o),
(598,136,o),
(560,105,qs),
(528,75,o),
(436,57,o),
(341,64,o),
(303,73,qs),
(227,92,o),
(129,186,o),
(83,313,o),
(89,449,o),
(146,570,o),
(253,654,o),
(331,664,qs),
(372,671,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
50 1 2 1 1 76 0 0 2 0 134 0 1 2 2 1 89 0 1 1 2 97 0 2 1 2 81 52 51 49 48 37 36 3 6 22 
CALL[ ]	/* CallFunction */";
};
width = 757;
}
);
note = circle;
unicode = 9675;
},
{
glyphname = uni25CC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(268,402,o),
(268,418,qs),
(268,420,ls),
(268,426,o),
(266,427,qs),
(262,429,o),
(254,433,o),
(249,434,q),
(245,436,o),
(240,430,q),
(235,426,o),
(235,419,qs),
(235,414,o),
(236,410,qs),
(237,407,o),
(247,402,o),
(251,402,qs),
(253,402,ls)
);
},
{
closed = 1;
nodes = (
(180,389,o),
(185,390,qs),
(189,390,o),
(191,396,qs),
(193,402,o),
(190,409,qs),
(189,411,o),
(188,414,o),
(186,417,qs),
(185,419,o),
(174,420,o),
(169,419,q),
(169,418,l),
(154,412,o),
(159,398,q),
(159,398,o),
(160,396,o),
(161,395,q),
(161,389,o),
(166,389,q),
(170,390,o)
);
},
{
closed = 1;
nodes = (
(350,392,q),
(350,392,o),
(351,392,o),
(352,393,q),
(354,398,o),
(353,400,qs),
(348,408,o),
(341,414,q),
(337,419,o),
(331,414,q),
(324,414,o),
(322,407,qs),
(321,405,o),
(319,401,o),
(318,398,q),
(318,390,o),
(329,384,q),
(330,384,o),
(330,383,o),
(330,383,q),
(345,377,o)
);
},
{
closed = 1;
nodes = (
(128,355,o),
(132,357,qs),
(136,358,o),
(136,365,q),
(135,370,o),
(130,377,qs),
(129,379,o),
(124,383,qs),
(122,385,o),
(111,381,o),
(107,379,q),
(107,378,l),
(95,367,o),
(106,356,q),
(106,356,o),
(107,355,o),
(108,354,q),
(108,353,o),
(112,349,o),
(114,350,qs),
(118,352,o)
);
},
{
closed = 1;
nodes = (
(407,341,q),
(407,341,o),
(408,341,o),
(409,342,q),
(413,344,o),
(413,348,q),
(411,358,o),
(407,365,q),
(406,371,o),
(398,369,q),
(391,372,o),
(387,366,qs),
(386,365,o),
(382,362,o),
(380,359,qs),
(379,357,o),
(381,346,o),
(384,342,q),
(385,342,o),
(385,341,o),
(385,341,q),
(396,330,o)
);
},
{
closed = 1;
nodes = (
(87,297,o),
(90,301,qs),
(93,304,o),
(91,310,qs),
(88,316,o),
(81,319,qs),
(77,321,o),
(73,322,qs),
(70,323,o),
(61,316,o),
(59,312,q),
(59,311,l),
(53,297,o),
(66,290,q),
(66,290,o),
(68,289,o),
(69,289,q),
(70,288,o),
(75,287,o),
(76,288,qs),
(79,291,o)
);
},
{
closed = 1;
nodes = (
(444,281,o),
(446,285,q),
(447,294,o),
(446,304,q),
(447,310,o),
(439,310,q),
(433,316,o),
(427,311,qs),
(426,310,o),
(421,309,o),
(418,307,q),
(414,300,o),
(417,290,q),
(418,289,o),
(417,288,o),
(417,288,q),
(424,274,o),
(438,281,q),
(440,281,ls)
);
},
{
closed = 1;
nodes = (
(454,210,o),
(455,212,qs),
(461,221,o),
(462,230,q),
(464,235,o),
(458,238,q),
(454,243,o),
(447,243,qs),
(442,243,o),
(438,242,qs),
(435,241,o),
(430,232,o),
(430,227,qs),
(430,225,ls),
(430,210,o),
(446,210,qs),
(448,210,ls)
);
},
{
closed = 1;
nodes = (
(60,203,o),
(64,204,o),
(65,206,qs),
(70,215,o),
(73,223,qs),
(74,227,o),
(69,232,qs),
(64,236,o),
(57,236,qs),
(52,236,o),
(48,235,qs),
(45,234,o),
(40,225,o),
(40,220,qs),
(40,218,ls),
(40,203,o),
(56,203,qs),
(58,203,ls)
);
},
{
closed = 1;
nodes = (
(80,137,o),
(84,140,o),
(83,141,q),
(85,145,o),
(85,155,o),
(85,159,q),
(84,162,o),
(80,165,o),
(78,166,qs),
(72,169,o),
(64,166,q),
(63,165,o),
(59,164,o),
(57,162,q),
(54,161,o),
(54,150,o),
(55,145,qs),
(55,143,l),
(61,131,o),
(76,136,q),
(78,136,l)
);
},
{
closed = 1;
nodes = (
(443,138,q),
(449,142,o),
(444,147,q),
(443,154,o),
(436,156,q),
(435,157,o),
(431,159,o),
(428,159,qs),
(424,160,o),
(416,153,o),
(414,149,q),
(414,148,o),
(413,147,o),
(413,147,q),
(406,134,o),
(421,127,q),
(421,127,o),
(422,126,o),
(423,126,q),
(425,125,o),
(429,124,o),
(430,125,qs),
(438,130,o)
);
},
{
closed = 1;
nodes = (
(116,81,q),
(116,81,o),
(118,81,o),
(119,82,qs),
(120,84,o),
(123,87,o),
(122,88,q),
(122,93,o),
(119,102,o),
(117,106,qs),
(114,110,o),
(108,110,qs),
(102,111,o),
(95,106,qs),
(94,105,o),
(91,102,o),
(89,100,q),
(88,97,o),
(91,86,o),
(93,83,qs),
(94,82,o),
(95,81,o),
(95,81,q),
(105,71,o)
);
},
{
closed = 1;
nodes = (
(392,69,o),
(396,71,q),
(403,72,o),
(400,79,q),
(402,87,o),
(396,91,qs),
(395,92,o),
(393,95,o),
(390,96,q),
(387,98,o),
(377,95,o),
(373,92,qs),
(372,91,ls),
(360,82,o),
(371,69,q),
(371,69,o),
(372,68,o),
(373,68,q),
(376,62,o),
(379,64,q),
(384,65,o)
);
},
{
closed = 1;
nodes = (
(181,40,q),
(181,40,o),
(182,41,o),
(183,42,q),
(183,44,o),
(185,48,o),
(183,49,q),
(180,57,o),
(172,63,qs),
(169,66,o),
(162,64,qs),
(155,62,o),
(152,55,qs),
(150,51,o),
(149,47,qs),
(148,44,o),
(155,35,o),
(159,33,q),
(160,33,o),
(161,32,o),
(161,32,q),
(174,27,o)
);
},
{
closed = 1;
nodes = (
(335,31,q),
(342,30,o),
(342,37,q),
(346,43,o),
(342,49,qs),
(341,51,o),
(340,55,o),
(338,57,qs),
(336,60,o),
(326,60,o),
(321,59,q),
(320,58,o),
(319,58,o),
(319,58,q),
(306,53,o),
(311,38,qs),
(312,36,ls),
(313,35,o),
(316,29,o),
(317,30,q),
(327,28,o)
);
},
{
closed = 1;
nodes = (
(268,12,o),
(268,28,qs),
(268,30,ls),
(268,36,o),
(266,37,qs),
(257,42,o),
(249,45,qs),
(245,46,o),
(240,41,qs),
(235,36,o),
(235,29,qs),
(235,24,o),
(236,20,qs),
(237,17,o),
(247,12,o),
(251,12,qs),
(253,12,ls)
);
}
);
width = 503;
}
);
note = uni25CC;
unicode = 9676;
},
{
glyphname = openbullet;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(295,291,o),
(291,275,o),
(286,256,o),
(284,252,qs),
(273,223,o),
(225,190,o),
(166,185,o),
(111,209,o),
(93,237,qs),
(72,269,o),
(85,336,o),
(132,387,o),
(196,406,o),
(226,390,qs),
(258,376,o),
(296,323,o),
(304,293,q),
(315,310,o),
(302,352,o),
(273,390,o),
(259,401,qs),
(227,426,o),
(155,430,o),
(90,398,o),
(46,342,o),
(35,272,o),
(53,235,qs),
(68,198,o),
(125,162,o),
(193,159,o),
(255,185,o),
(296,239,o),
(298,277,qs),
(298,291,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
16 0 2 0 1 1 76 0 1 0 1 133 0 0 0 118 22 19 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 350;
}
);
note = openbullet;
unicode = 9702;
},
{
glyphname = uni25C6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(713,335,o),
(716,348,o),
(716,353,q),
(717,355,o),
(712,361,o),
(710,362,q),
(682,390,o),
(638,433,o),
(598,474,o),
(552,522,o),
(520,554,q),
(509,563,o),
(508,573,qs),
(508,575,o),
(498,577,o),
(497,578,q),
(496,581,o),
(494,588,o),
(490,591,q),
(416,665,ls),
(410,671,o),
(405,671,qs),
(400,672,o),
(402,680,o),
(400,681,q),
(382,700,ls),
(377,705,o),
(367,714,o),
(362,719,qs),
(360,721,o),
(350,721,o),
(346,720,qs),
(343,719,o),
(339,713,o),
(337,711,qs),
(10,385,ls),
(8,383,o),
(3,378,o),
(1,375,qs),
(-1,373,o),
(1,360,o),
(3,357,q),
(30,330,ls),
(34,326,o),
(42,319,o),
(45,315,q),
(44,307,o),
(53,307,o),
(57,303,qs),
(110,249,l),
(113,247,o),
(115,239,o),
(116,239,qs),
(120,239,o),
(126,234,o),
(129,231,qs),
(352,8,ls),
(364,-4,o),
(375,7,qs),
(400,33,o),
(424,57,o),
(434,65,o),
(437,66,qs),
(444,68,o),
(445,78,o),
(449,82,qs),
(466,99,o),
(518,150,o),
(575,206,o),
(625,257,o),
(658,290,o),
(659,291,q),
(661,296,o),
(674,295,o),
(672,304,q),
(683,307,o),
(693,315,q),
(710,332,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
52 2 2 0 73 0 0 0 118 47 46 1 6 22 
CALL[ ]	/* CallFunction */";
};
width = 716;
}
);
note = uni25C6;
unicode = 9670;
},
{
glyphname = uni25C7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(713,335,o),
(716,348,o),
(716,353,q),
(717,355,o),
(712,361,o),
(710,362,q),
(682,390,o),
(638,433,o),
(598,474,o),
(552,522,o),
(520,554,q),
(509,563,o),
(508,573,qs),
(508,575,o),
(498,577,o),
(497,578,q),
(496,581,o),
(494,588,o),
(490,591,q),
(416,665,ls),
(410,671,o),
(405,671,qs),
(400,672,o),
(402,680,o),
(400,681,q),
(382,700,ls),
(377,705,o),
(367,714,o),
(362,719,qs),
(360,721,o),
(350,721,o),
(346,720,qs),
(343,719,o),
(339,713,o),
(337,711,qs),
(10,385,ls),
(8,383,o),
(3,378,o),
(1,375,qs),
(-1,373,o),
(1,360,o),
(3,357,q),
(30,330,ls),
(34,326,o),
(42,319,o),
(45,315,q),
(44,307,o),
(53,307,o),
(57,303,qs),
(110,249,l),
(113,247,o),
(115,239,o),
(116,239,qs),
(120,239,o),
(126,234,o),
(129,231,qs),
(352,8,ls),
(364,-4,o),
(375,7,qs),
(400,33,o),
(424,57,o),
(434,65,o),
(437,66,qs),
(444,68,o),
(445,78,o),
(449,82,qs),
(466,99,o),
(518,150,o),
(575,206,o),
(625,257,o),
(658,290,o),
(659,291,q),
(661,296,o),
(674,295,o),
(672,304,q),
(683,307,o),
(693,315,q),
(710,332,ls)
);
},
{
closed = 1;
nodes = (
(409,92,o),
(405,89,q),
(363,46,l),
(361,45,o),
(354,46,o),
(354,49,qs),
(353,55,o),
(348,62,o),
(346,66,q),
(322,89,ls),
(318,92,o),
(311,97,o),
(306,98,qs),
(303,98,o),
(301,104,qs),
(298,120,o),
(282,126,qs),
(270,131,o),
(269,139,q),
(270,141,o),
(265,144,q),
(261,144,o),
(255,148,o),
(252,150,q),
(244,158,o),
(236,168,o),
(236,175,q),
(233,178,o),
(229,178,qs),
(224,178,o),
(219,184,o),
(216,186,qs),
(212,189,o),
(210,202,o),
(201,201,q),
(48,354,ls),
(45,357,o),
(46,369,o),
(49,371,q),
(347,669,ls),
(352,674,o),
(356,674,o),
(363,668,qs),
(442,588,l),
(452,581,o),
(453,573,qs),
(454,563,o),
(466,559,qs),
(474,556,o),
(474,552,qs),
(474,551,o),
(476,545,o),
(477,545,qs),
(483,544,o),
(490,541,o),
(491,535,qs),
(491,532,o),
(496,525,o),
(498,525,qs),
(501,525,o),
(512,517,o),
(541,490,o),
(569,461,q),
(577,455,o),
(577,445,qs),
(577,444,o),
(581,443,o),
(581,442,q),
(583,438,o),
(595,437,o),
(593,429,q),
(663,360,ls),
(665,358,o),
(670,351,o),
(671,347,q),
(665,341,o),
(654,328,o),
(648,323,qs),
(458,133,l),
(456,130,o),
(448,123,o),
(442,121,q),
(440,121,o),
(437,112,o),
(434,111,qs),
(432,110,o),
(425,108,o),
(426,102,q),
(425,101,o),
(423,98,o),
(422,98,qs),
(417,98,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
94 52 2 3 1 0 1 76 0 0 1 0 133 0 1 2 1 133 0 2 2 118 166 164 141 139 47 46 3 6 22 
CALL[ ]	/* CallFunction */";
};
width = 716;
}
);
note = uni25C7;
unicode = 9671;
},
{
glyphname = lozenge;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(234,12,o),
(245,35,o),
(250,46,qs),
(256,63,ls),
(267,94,o),
(302,146,o),
(332,183,o),
(334,189,qs),
(341,208,o),
(371,248,o),
(382,264,qs),
(385,268,o),
(398,285,o),
(399,318,o),
(382,344,qs),
(371,361,o),
(341,400,o),
(334,418,qs),
(332,424,o),
(302,461,o),
(267,515,o),
(256,545,qs),
(250,561,ls),
(245,572,o),
(234,595,o),
(219,604,o),
(206,592,qs),
(196,582,o),
(178,552,o),
(170,535,qs),
(165,524,o),
(137,497,o),
(132,486,q),
(91,425,o),
(42,360,o),
(16,332,o),
(5,324,o),
(1,318,q),
(-2,306,o),
(5,292,o),
(32,261,o),
(87,190,o),
(132,121,q),
(137,110,o),
(165,83,o),
(170,72,qs),
(178,56,o),
(196,26,o),
(206,16,qs),
(219,4,o)
);
},
{
closed = 1;
nodes = (
(178,121,o),
(174,126,qs),
(171,130,o),
(148,162,o),
(115,208,o),
(80,256,o),
(50,295,o),
(41,304,q),
(50,313,o),
(80,352,o),
(115,400,o),
(148,446,o),
(171,478,o),
(174,482,qs),
(178,487,o),
(194,505,o),
(199,509,qs),
(210,517,o),
(223,527,o),
(230,509,q),
(232,507,o),
(255,472,o),
(287,422,o),
(319,372,o),
(342,336,o),
(343,334,qs),
(358,314,o),
(368,303,q),
(363,299,o),
(350,284,o),
(343,273,qs),
(342,271,o),
(319,236,o),
(287,186,o),
(255,136,o),
(232,101,o),
(230,99,q),
(223,85,o),
(214,79,o),
(203,92,qs),
(199,97,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
71 51 49 23 2 50 
CALL[ ]	/* CallFunction */";
};
width = 398;
}
);
note = lozenge;
unicode = 9674;
},
{
glyphname = filledbox;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(622,-6,o),
(636,3,o),
(641,7,qs),
(643,9,o),
(644,18,o),
(644,22,qs),
(644,75,o),
(644,156,o),
(645,232,o),
(645,319,o),
(645,379,qs),
(645,387,o),
(648,402,o),
(652,409,q),
(654,411,o),
(646,421,o),
(647,423,qs),
(649,428,o),
(653,436,o),
(653,442,qs),
(653,581,ls),
(653,591,o),
(648,597,qs),
(644,602,o),
(653,607,o),
(653,611,qs),
(653,646,ls),
(653,655,o),
(652,673,o),
(652,682,qs),
(652,687,o),
(643,696,o),
(638,698,qs),
(635,700,o),
(626,698,o),
(622,698,qs),
(78,698,ls),
(74,698,o),
(65,699,o),
(61,698,qs),
(57,698,o),
(45,684,o),
(45,679,qs),
(45,629,ls),
(45,622,o),
(46,607,o),
(45,600,q),
(37,594,o),
(45,584,o),
(45,578,qs),
(45,477,ls),
(45,473,o),
(39,465,o),
(40,463,q),
(44,459,o),
(45,449,o),
(45,444,qs),
(45,25,ls),
(45,3,o),
(66,3,qs),
(113,3,o),
(158,3,o),
(175,2,o),
(179,0,qs),
(187,-5,o),
(198,3,o),
(205,3,qs),
(297,3,o),
(416,2,o),
(484,2,o),
(516,2,o),
(527,2,o),
(529,3,q),
(537,5,o),
(548,-7,o),
(555,3,q),
(569,-6,o),
(584,-6,qs),
(616,-6,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
72 58 52 35 31 28 2 7 1 3 1 76 0 3 1 3 133 2 1 1 0 1 133 4 1 0 0 118 1 0 42 40 19 16 11 7 0 78 1 77 5 6 22 
CALL[ ]	/* CallFunction */";
};
width = 693;
}
);
note = filledbox;
unicode = 9632;
},
{
glyphname = uni25A1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(622,-6,o),
(636,3,o),
(641,7,qs),
(643,9,o),
(644,18,o),
(644,22,qs),
(644,75,o),
(644,156,o),
(645,232,o),
(645,319,o),
(645,379,qs),
(645,387,o),
(648,402,o),
(652,409,q),
(654,411,o),
(646,421,o),
(647,423,qs),
(649,428,o),
(653,436,o),
(653,442,qs),
(653,581,ls),
(653,591,o),
(648,597,qs),
(644,602,o),
(653,607,o),
(653,611,qs),
(653,646,ls),
(653,655,o),
(652,673,o),
(652,682,qs),
(652,687,o),
(643,696,o),
(638,698,qs),
(635,700,o),
(626,698,o),
(622,698,qs),
(78,698,ls),
(74,698,o),
(65,699,o),
(61,698,qs),
(57,698,o),
(45,684,o),
(45,679,qs),
(45,629,ls),
(45,622,o),
(46,607,o),
(45,600,q),
(37,594,o),
(45,584,o),
(45,578,qs),
(45,477,ls),
(45,473,o),
(39,465,o),
(40,463,q),
(42,461,o),
(44,436,o),
(45,406,o),
(45,381,o),
(45,379,qs),
(45,25,ls),
(45,3,o),
(66,3,qs),
(113,3,o),
(158,3,o),
(175,2,o),
(179,0,qs),
(187,-5,o),
(198,3,o),
(205,3,qs),
(297,3,o),
(416,2,o),
(484,2,o),
(516,2,o),
(527,2,o),
(529,3,q),
(537,5,o),
(548,-7,o),
(555,3,q),
(569,-6,o),
(584,-6,qs),
(616,-6,ls)
);
},
{
closed = 1;
nodes = (
(534,38,q),
(527,28,o),
(517,40,o),
(510,38,qs),
(508,37,o),
(473,34,o),
(427,32,o),
(391,33,o),
(387,35,qs),
(384,36,o),
(368,37,o),
(314,38,o),
(198,38,o),
(94,38,qs),
(75,38,o),
(75,57,qs),
(75,194,ls),
(75,198,o),
(74,207,o),
(71,211,qs),
(70,213,o),
(75,220,o),
(75,224,qs),
(75,514,ls),
(75,520,o),
(68,529,o),
(75,534,q),
(76,540,o),
(75,553,o),
(75,560,qs),
(75,645,ls),
(75,650,o),
(86,662,o),
(90,662,q),
(93,663,o),
(101,662,o),
(105,662,qs),
(594,662,ls),
(597,662,o),
(606,664,o),
(608,662,q),
(613,660,o),
(621,652,o),
(621,648,qs),
(621,640,o),
(622,623,o),
(622,615,qs),
(622,432,ls),
(622,427,o),
(618,419,o),
(616,415,qs),
(615,413,o),
(623,404,o),
(621,402,qs),
(617,396,o),
(615,382,o),
(615,376,qs),
(615,322,o),
(615,243,o),
(614,175,o),
(614,102,o),
(614,55,qs),
(614,51,o),
(613,43,o),
(611,41,qs),
(607,37,o),
(594,30,o),
(588,30,qs),
(560,30,ls),
(545,30,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
37 1 5 3 149 127 96 93 60 54 33 30 8 6 5 74 2 2 1 4 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 6 5 4 4 6 114 0 3 0 5 6 3 5 103 7 9 2 4 2 1 1 0 4 1 106 7 9 2 4 4 0 98 8 1 0 4 0 82 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 6 5 7 7 6 114 0 3 0 5 6 3 5 103 9 1 4 1 0 4 89 0 7 2 1 1 0 7 1 106 9 1 4 4 0 97 8 1 0 4 0 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 6 5 4 4 6 114 0 3 0 5 6 3 5 103 7 9 2 4 2 1 1 0 4 1 106 7 9 2 4 4 0 98 8 1 0 4 0 82 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
82 81 1 0 144 142 140 135 113 111 81 150 82 150 44 42 19 16 11 7 0 80 1 79 10 6 22 
CALL[ ]	/* CallFunction */";
};
width = 693;
}
);
note = uni25A1;
unicode = 9633;
},
{
glyphname = uni25AA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(272,220,o),
(310,221,q),
(312,225,o),
(314,249,o),
(314,275,o),
(314,279,qs),
(314,336,l),
(317,376,o),
(319,414,o),
(318,436,o),
(316,464,o),
(316,494,q),
(313,494,o),
(284,497,o),
(273,498,qs),
(270,498,o),
(239,497,o),
(200,494,o),
(169,492,o),
(165,492,q),
(159,501,o),
(147,490,o),
(136,492,q),
(129,500,o),
(115,499,o),
(107,499,qs),
(96,499,o),
(56,497,o),
(45,495,q),
(41,485,o),
(39,471,o),
(45,464,q),
(47,463,o),
(49,455,o),
(47,454,q),
(47,412,l),
(50,407,o),
(48,404,q),
(38,394,o),
(46,379,qs),
(48,375,o),
(50,365,o),
(50,360,qs),
(50,349,o),
(43,339,qs),
(38,332,o),
(42,328,qs),
(48,320,o),
(48,305,qs),
(48,289,o),
(51,271,o),
(51,255,qs),
(51,248,o),
(49,237,o),
(44,232,q),
(42,228,o),
(47,220,o),
(51,220,qs),
(63,220,o),
(109,220,o),
(151,219,o),
(154,216,qs),
(158,213,o),
(162,217,qs),
(167,222,o),
(175,218,o),
(179,216,qs),
(183,215,o),
(194,222,o),
(196,220,qs),
(203,215,o),
(217,215,o),
(224,215,qs),
(236,215,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
66 37 35 30 26 5 1 3 11 1 0 1 2 76 3 1 1 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
4 1 2 3 2 133 0 3 1 3 133 0 1 0 1 133 5 1 0 0 118 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 2 3 2 133 4 1 3 1 3 133 0 1 0 1 133 5 1 0 0 118 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
4 1 2 3 2 133 0 3 1 3 133 0 1 0 1 133 5 1 0 0 118 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
2 0 57 56 55 53 49 45 15 13 0 73 2 73 6 6 22 
CALL[ ]	/* CallFunction */";
};
width = 359;
}
);
note = uni25AA;
unicode = 9642;
},
{
glyphname = uni25AB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(177,209,o),
(204,211,o),
(208,212,qs),
(215,214,o),
(227,203,o),
(234,213,q),
(248,203,o),
(276,207,o),
(293,207,qs),
(300,207,o),
(313,214,o),
(320,218,q),
(322,220,o),
(323,229,o),
(323,233,qs),
(323,480,ls),
(323,485,o),
(314,489,o),
(309,489,qs),
(242,490,o),
(117,492,o),
(40,489,q),
(40,231,l),
(42,210,o),
(61,210,qs),
(66,210,o),
(103,209,o),
(140,210,o),
(144,209,q),
(149,209,o)
);
},
{
closed = 1;
nodes = (
(203,240,o),
(137,240,o),
(85,240,o),
(76,240,qs),
(72,240,o),
(67,248,o),
(69,252,qs),
(72,256,o),
(73,285,o),
(70,315,o),
(67,318,qs),
(63,322,o),
(68,329,qs),
(75,339,o),
(75,350,qs),
(75,355,o),
(73,365,o),
(71,369,qs),
(63,384,o),
(73,394,q),
(75,397,o),
(72,402,q),
(72,414,l),
(74,415,o),
(72,423,o),
(70,424,q),
(64,431,o),
(66,445,o),
(70,455,q),
(81,457,o),
(121,459,o),
(132,459,qs),
(140,459,o),
(154,460,o),
(161,452,q),
(172,450,o),
(184,461,o),
(190,452,q),
(195,452,o),
(219,455,o),
(244,459,o),
(248,458,qs),
(259,457,o),
(288,454,o),
(291,454,q),
(291,436,o),
(293,420,o),
(294,403,o),
(292,366,o),
(289,326,qs),
(289,289,ls),
(289,282,o),
(288,246,o),
(285,241,q),
(266,241,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
64 62 39 34 4 5 4 23 14 6 3 0 5 2 76 42 1 4 1 75 0 1 0 4 5 1 4 105 6 1 5 0 0 5 87 6 1 5 5 0 97 3 2 2 0 5 0 81 30 30 30 84 30 79 54 51 23 41 50 65 7 6 26 
CALL[ ]	/* CallFunction */";
};
width = 363;
}
);
note = uni25AB;
unicode = 9643;
},
{
glyphname = triagup;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,49,o),
(208,43,o),
(324,42,o),
(434,47,o),
(519,63,o),
(560,91,o),
(549,114,q),
(526,150,o),
(480,229,o),
(442,297,o),
(419,340,o),
(419,340,q),
(408,344,o),
(398,373,o),
(392,401,o),
(387,403,qs),
(371,411,o),
(356,448,o),
(348,483,o),
(341,487,qs),
(333,492,o),
(333,501,o),
(330,505,qs),
(327,510,o),
(327,521,o),
(318,523,q),
(314,525,o),
(308,536,o),
(306,540,q),
(301,560,o),
(266,617,o),
(238,641,qs),
(229,649,o),
(216,641,o),
(214,635,qs),
(197,567,o),
(145,411,o),
(114,335,qs),
(108,320,o),
(89,279,o),
(75,252,q),
(75,252,o),
(64,217,o),
(53,207,qs),
(49,203,o),
(33,169,o),
(16,126,o),
(3,88,o),
(1,80,qs),
(-2,67,o),
(10,62,o),
(27,57,qs),
(36,55,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
0 0 0 118 51 48 1 6 22 
CALL[ ]	/* CallFunction */";
};
width = 553;
}
);
note = triagup;
unicode = 9650;
},
{
glyphname = uni25B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(47,559,o),
(41,457,o),
(40,341,o),
(45,231,o),
(61,146,o),
(89,105,o),
(112,116,q),
(148,139,o),
(227,185,o),
(295,223,o),
(338,246,o),
(338,246,q),
(342,257,o),
(371,267,o),
(399,273,o),
(401,278,qs),
(409,295,o),
(446,309,o),
(481,317,o),
(485,324,qs),
(490,332,o),
(499,332,o),
(503,335,qs),
(508,338,o),
(519,338,o),
(521,347,qs),
(523,352,o),
(534,358,o),
(538,359,qs),
(558,364,o),
(615,399,o),
(639,427,qs),
(647,436,o),
(639,450,o),
(633,451,qs),
(565,468,o),
(409,520,o),
(333,551,qs),
(318,557,o),
(277,576,o),
(250,590,q),
(250,590,o),
(215,601,o),
(205,612,qs),
(201,617,o),
(167,632,o),
(124,649,o),
(86,662,o),
(78,664,qs),
(65,667,o),
(60,655,o),
(55,638,qs),
(53,629,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 1 0 133 0 1 1 118 31 30 28 27 2 6 22 
CALL[ ]	/* CallFunction */";
};
width = 644;
}
);
note = uni25B6;
unicode = 9654;
},
{
glyphname = triagdn;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(447,687,o),
(345,693,o),
(229,694,o),
(119,689,o),
(34,673,o),
(-7,645,o),
(4,622,q),
(27,586,o),
(73,507,o),
(111,439,o),
(134,396,o),
(134,396,q),
(145,393,o),
(155,363,o),
(161,335,o),
(166,333,qs),
(183,326,o),
(197,289,o),
(205,254,o),
(212,249,qs),
(220,244,o),
(220,236,o),
(223,231,qs),
(226,227,o),
(226,215,o),
(235,213,qs),
(240,212,o),
(246,201,o),
(247,196,qs),
(252,177,o),
(287,119,o),
(315,95,qs),
(324,87,o),
(338,95,o),
(339,101,qs),
(356,169,o),
(408,325,o),
(439,401,qs),
(445,416,o),
(464,457,o),
(478,484,q),
(478,484,o),
(489,519,o),
(500,529,qs),
(505,533,o),
(520,567,o),
(537,610,o),
(550,648,o),
(552,656,qs),
(555,670,o),
(543,674,o),
(526,679,qs),
(517,681,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
0 0 0 118 51 48 1 6 22 
CALL[ ]	/* CallFunction */";
};
width = 553;
}
);
note = triagdn;
unicode = 9660;
},
{
glyphname = uni25C0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(580,667,o),
(566,664,qs),
(558,662,o),
(520,649,o),
(477,632,o),
(443,617,o),
(439,612,qs),
(429,601,o),
(394,590,o),
(394,590,q),
(367,576,o),
(326,557,o),
(311,551,qs),
(235,520,o),
(79,468,o),
(11,451,qs),
(5,450,o),
(-3,436,o),
(5,427,qs),
(29,399,o),
(87,364,o),
(106,359,qs),
(111,358,o),
(122,352,o),
(123,347,qs),
(125,338,o),
(137,338,o),
(141,335,qs),
(146,332,o),
(154,332,o),
(159,324,qs),
(164,317,o),
(199,309,o),
(236,295,o),
(243,278,qs),
(245,273,o),
(273,267,o),
(303,257,o),
(306,246,q),
(306,246,o),
(349,223,o),
(417,185,o),
(496,139,o),
(532,116,q),
(555,105,o),
(583,146,o),
(599,231,o),
(604,341,o),
(603,457,o),
(597,559,o),
(591,629,o),
(589,638,qs),
(584,655,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
51 7 1 50 
CALL[ ]	/* CallFunction */";
};
width = 644;
}
);
note = uni25C0;
unicode = 9664;
},
{
glyphname = uni25B3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(36,57,o),
(100,46,o),
(175,39,o),
(210,38,qs),
(221,37,o),
(241,46,o),
(257,37,q),
(257,37,o),
(299,36,o),
(315,37,qs),
(376,39,o),
(488,52,o),
(563,76,o),
(580,110,o),
(546,134,q),
(504,175,o),
(447,287,o),
(400,409,o),
(346,526,o),
(272,623,o),
(216,652,q),
(208,622,o),
(191,553,o),
(181,515,qs),
(179,505,o),
(178,479,o),
(170,473,qs),
(161,466,o),
(161,441,o),
(158,430,qs),
(156,423,o),
(143,412,o),
(149,400,q),
(149,400,o),
(139,371,o),
(125,333,o),
(120,320,q),
(120,316,o),
(93,268,o),
(53,202,o),
(16,136,o),
(-4,90,o),
(2,88,qs),
(8,87,o),
(41,131,o),
(86,206,o),
(133,297,o),
(152,343,qs),
(157,353,o),
(170,380,o),
(168,381,q),
(162,387,o),
(175,409,o),
(182,416,qs),
(188,422,o),
(182,434,o),
(182,444,o),
(194,447,q),
(194,447,o),
(197,455,o),
(199,462,qs),
(202,472,o),
(199,479,o),
(204,480,qs),
(214,482,o),
(214,502,o),
(209,503,qs),
(205,504,o),
(218,509,o),
(216,518,qs),
(213,537,o),
(223,569,o),
(234,596,o),
(234,604,q),
(264,583,o),
(319,507,o),
(368,413,o),
(409,315,o),
(425,272,qs),
(433,253,o),
(467,190,o),
(503,130,o),
(514,114,qs),
(524,100,o),
(492,89,o),
(467,84,q),
(433,72,o),
(404,66,o),
(392,69,o),
(378,71,o),
(358,65,qs),
(340,60,o),
(329,62,o),
(326,66,o),
(319,62,qs),
(311,57,o),
(289,68,o),
(283,60,qs),
(278,53,o),
(244,58,o),
(230,58,qs),
(171,58,o),
(68,71,o),
(3,83,o),
(0,81,q),
(-2,72,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
84 31 0 3 0 74 0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 102 101 97 94 35 3 6 23 
CALL[ ]	/* CallFunction */";
};
width = 572;
}
);
note = uni25B3;
unicode = 9651;
},
{
glyphname = uni25B7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(74,137,o),
(61,240,o),
(61,299,qs),
(61,313,o),
(56,347,o),
(63,352,qs),
(71,358,o),
(60,380,o),
(65,388,qs),
(69,395,o),
(65,398,o),
(63,409,o),
(68,427,qs),
(74,447,o),
(72,461,o),
(69,473,o),
(75,502,o),
(87,536,q),
(92,561,o),
(103,593,o),
(117,583,qs),
(133,572,o),
(193,536,o),
(256,502,o),
(275,494,qs),
(318,478,o),
(416,437,o),
(510,388,o),
(586,333,o),
(607,303,q),
(599,303,o),
(572,292,o),
(540,282,o),
(521,285,qs),
(512,287,o),
(507,274,o),
(506,278,qs),
(505,283,o),
(485,283,o),
(483,273,qs),
(482,268,o),
(475,271,o),
(465,268,qs),
(458,266,o),
(450,263,o),
(450,263,q),
(447,251,o),
(437,251,o),
(425,257,o),
(419,251,qs),
(412,244,o),
(390,231,o),
(384,237,q),
(383,239,o),
(356,226,o),
(346,221,qs),
(300,202,o),
(209,155,o),
(134,110,o),
(90,77,o),
(91,71,qs),
(93,65,o),
(139,85,o),
(205,122,o),
(271,162,o),
(319,189,o),
(323,189,q),
(336,194,o),
(374,208,o),
(403,218,o),
(403,218,q),
(415,212,o),
(426,225,o),
(433,227,qs),
(444,230,o),
(469,230,o),
(476,239,qs),
(482,247,o),
(508,248,o),
(518,250,qs),
(556,260,o),
(625,277,o),
(655,285,q),
(626,341,o),
(529,415,o),
(412,469,o),
(290,516,o),
(178,573,o),
(137,615,q),
(113,649,o),
(79,632,o),
(55,557,o),
(42,445,o),
(40,384,qs),
(39,368,o),
(40,326,o),
(40,326,q),
(49,310,o),
(40,290,o),
(41,279,qs),
(42,244,o),
(49,169,o),
(60,105,o),
(75,67,o),
(84,69,q),
(86,72,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
5 1 2 3 1 76 96 22 8 3 3 74 0 2 0 1 2 89 0 3 0 0 1 3 0 105 0 2 2 1 97 0 1 2 1 81 67 66 58 57 30 29 27 26 4 6 22 
CALL[ ]	/* CallFunction */";
};
width = 655;
}
);
note = uni25B7;
unicode = 9655;
},
{
glyphname = uni25BD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(536,627,o),
(472,638,o),
(397,645,o),
(362,646,qs),
(351,647,o),
(332,638,o),
(315,647,q),
(315,647,o),
(273,648,o),
(257,647,qs),
(196,645,o),
(84,632,o),
(9,608,o),
(-8,574,o),
(26,550,q),
(68,509,o),
(125,397,o),
(172,275,o),
(226,158,o),
(300,61,o),
(356,32,q),
(364,62,o),
(381,132,o),
(391,169,qs),
(393,180,o),
(394,205,o),
(402,211,qs),
(411,218,o),
(411,244,o),
(414,254,qs),
(416,262,o),
(429,272,o),
(423,284,q),
(423,284,o),
(433,313,o),
(447,351,o),
(452,364,q),
(452,368,o),
(479,416,o),
(519,482,o),
(556,548,o),
(576,594,o),
(570,596,qs),
(564,598,o),
(531,553,o),
(486,478,o),
(440,387,o),
(420,341,qs),
(416,331,o),
(403,305,o),
(404,303,q),
(410,297,o),
(397,275,o),
(390,268,qs),
(385,263,o),
(390,250,o),
(391,240,o),
(378,237,q),
(378,237,o),
(375,229,o),
(373,222,qs),
(370,212,o),
(373,205,o),
(368,204,qs),
(358,203,o),
(358,182,o),
(363,181,qs),
(367,180,o),
(355,175,o),
(356,166,qs),
(359,148,o),
(350,115,o),
(338,89,o),
(338,80,q),
(308,101,o),
(253,177,o),
(204,271,o),
(163,369,o),
(147,412,qs),
(139,432,o),
(105,494,o),
(69,554,o),
(58,570,qs),
(48,584,o),
(80,596,o),
(105,600,q),
(139,612,o),
(168,618,o),
(180,615,o),
(195,613,o),
(214,619,qs),
(233,625,o),
(244,622,o),
(247,618,o),
(253,622,qs),
(261,627,o),
(283,617,o),
(289,624,qs),
(294,631,o),
(329,626,o),
(342,626,qs),
(402,626,o),
(505,613,o),
(570,602,o),
(572,603,q),
(574,612,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
84 31 0 3 0 73 2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 102 101 97 94 35 3 6 23 
CALL[ ]	/* CallFunction */";
};
width = 572;
}
);
note = uni25BD;
unicode = 9661;
},
{
glyphname = uni25C1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(595,105,o),
(606,169,o),
(613,244,o),
(614,279,qs),
(615,290,o),
(606,310,o),
(615,326,q),
(615,326,o),
(616,368,o),
(615,384,qs),
(613,445,o),
(600,557,o),
(576,632,o),
(542,649,o),
(518,615,q),
(477,573,o),
(365,516,o),
(243,469,o),
(126,415,o),
(29,341,o),
(0,285,q),
(30,277,o),
(100,260,o),
(137,250,qs),
(148,248,o),
(173,247,o),
(179,239,qs),
(186,230,o),
(212,230,o),
(222,227,qs),
(230,225,o),
(240,212,o),
(252,218,q),
(252,218,o),
(281,208,o),
(319,194,o),
(332,189,q),
(336,189,o),
(384,162,o),
(450,122,o),
(516,85,o),
(562,65,o),
(564,71,qs),
(566,77,o),
(521,110,o),
(446,155,o),
(355,202,o),
(309,221,qs),
(299,226,o),
(273,239,o),
(271,237,qs),
(265,231,o),
(243,244,o),
(236,251,qs),
(231,257,o),
(218,251,o),
(208,251,o),
(205,263,q),
(205,263,o),
(197,266,o),
(190,268,qs),
(180,271,o),
(173,268,o),
(172,273,qs),
(171,283,o),
(150,283,o),
(149,278,qs),
(148,274,o),
(143,287,o),
(134,285,qs),
(116,282,o),
(83,292,o),
(57,303,o),
(48,303,q),
(69,333,o),
(145,388,o),
(239,437,o),
(337,478,o),
(380,494,qs),
(400,502,o),
(462,536,o),
(522,572,o),
(538,583,qs),
(552,593,o),
(564,561,o),
(568,536,q),
(580,502,o),
(586,473,o),
(583,461,o),
(581,447,o),
(587,427,qs),
(593,409,o),
(590,398,o),
(586,395,o),
(590,388,qs),
(595,380,o),
(585,358,o),
(592,352,qs),
(599,347,o),
(594,313,o),
(594,299,qs),
(594,240,o),
(581,137,o),
(570,72,o),
(571,69,q),
(580,67,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
84 1 1 0 101 1 2 1 2 76 0 1 3 73 0 0 1 0 133 0 2 4 3 2 89 0 1 0 4 3 1 4 105 0 2 2 3 97 0 3 2 3 81 80 79 77 76 49 48 40 39 32 31 5 6 22 
CALL[ ]	/* CallFunction */";
};
width = 655;
}
);
note = uni25C1;
unicode = 9665;
},
{
glyphname = uni25B4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(274,201,o),
(264,225,o),
(256,228,q),
(227,254,o),
(181,333,o),
(161,373,qs),
(148,404,o),
(134,416,o),
(133,395,o),
(143,359,o),
(154,341,q),
(151,329,o),
(167,290,o),
(192,248,o),
(215,215,o),
(219,209,q),
(215,199,o),
(182,196,o),
(142,200,o),
(111,200,o),
(108,192,q),
(89,194,o),
(71,204,o),
(48,200,qs),
(45,199,o),
(58,230,o),
(80,280,o),
(104,335,o),
(123,382,o),
(126,393,q),
(96,358,o),
(38,253,o),
(5,196,q),
(1,191,o),
(-1,177,o),
(0,172,q),
(37,161,o),
(131,155,o),
(225,163,o),
(262,172,q),
(273,177,o)
);
},
{
closed = 1;
nodes = (
(126,238,o),
(140,267,o),
(154,290,q),
(154,290,o),
(146,305,o),
(135,312,o),
(130,300,qs),
(124,287,o),
(110,253,o),
(96,228,q),
(111,226,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
19 4 2 0 1 1 76 29 24 10 3 1 74 0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 21 20 18 2 6 23 
CALL[ ]	/* CallFunction */";
};
width = 274;
}
);
note = uni25B4;
unicode = 9652;
},
{
glyphname = uni25B8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(210,263,o),
(240,288,q),
(246,288,o),
(271,290,o),
(287,298,o),
(278,306,q),
(277,313,o),
(251,311,o),
(228,311,q),
(197,343,o),
(143,399,o),
(104,436,qs),
(98,442,o),
(89,438,q),
(80,419,o),
(80,371,o),
(84,322,o),
(79,301,q),
(63,294,o),
(36,281,o),
(26,273,o),
(47,270,o),
(78,271,q),
(77,257,o),
(77,212,o),
(82,167,o),
(94,140,o),
(114,148,o),
(129,178,q),
(152,209,o)
);
},
{
closed = 1;
nodes = (
(116,370,o),
(113,398,qs),
(113,400,o),
(136,380,o),
(171,349,o),
(206,320,o),
(218,311,q),
(190,310,o),
(138,313,o),
(112,311,q),
(114,336,o)
);
},
{
closed = 1;
nodes = (
(172,267,o),
(193,272,q),
(180,262,o),
(150,232,o),
(123,201,o),
(105,179,o),
(105,178,qs),
(101,205,o),
(105,252,o),
(108,275,q),
(130,276,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
49 1 0 3 1 76 44 1 0 73 2 1 1 3 1 133 4 1 3 0 3 133 0 0 0 118 41 41 41 51 41 51 42 29 22 5 6 25 
CALL[ ]	/* CallFunction */";
};
width = 282;
}
);
note = uni25B8;
unicode = 9656;
},
{
glyphname = uni25BE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(180,180,o),
(185,195,o),
(182,199,q),
(178,201,o),
(173,208,o),
(171,211,q),
(182,207,o),
(198,210,q),
(189,195,o),
(194,194,o),
(210,209,o),
(229,227,o),
(233,231,q),
(235,236,o),
(267,265,o),
(308,302,o),
(342,340,o),
(351,368,o),
(335,373,q),
(322,370,o),
(257,372,o),
(174,377,o),
(91,380,o),
(24,374,o),
(-7,354,o),
(5,334,q),
(54,309,o),
(129,228,o),
(163,186,qs),
(170,176,o)
);
},
{
closed = 1;
nodes = (
(62,328,o),
(42,345,q),
(42,345,o),
(89,341,o),
(120,339,q),
(108,329,o),
(102,300,o),
(106,286,q),
(92,301,o)
);
},
{
closed = 1;
nodes = (
(228,323,o),
(213,334,q),
(244,333,o),
(281,337,o),
(308,339,q),
(308,339,o),
(271,297,o),
(246,269,q),
(245,288,o)
);
},
{
closed = 1;
nodes = (
(154,264,o),
(135,294,o),
(134,325,o),
(156,342,o),
(182,336,q),
(184,334,o),
(183,328,o),
(185,326,q),
(198,320,o),
(218,293,o),
(218,264,o),
(201,255,qs),
(184,248,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
10 1 1 0 1 76 39 23 21 3 2 73 0 2 1 1 2 113 0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 45 44 34 33 54 3 6 23 
CALL[ ]	/* CallFunction */";
};
width = 347;
}
);
note = uni25BE;
unicode = 9662;
},
{
glyphname = uni25C2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(145,163,o),
(174,141,o),
(190,151,o),
(196,206,o),
(195,263,q),
(206,266,o),
(207,288,o),
(196,293,q),
(196,301,o),
(198,339,o),
(197,384,o),
(190,421,o),
(173,438,o),
(157,429,q),
(142,406,o),
(105,367,o),
(82,349,q),
(71,354,o),
(76,345,q),
(75,344,o),
(73,343,o),
(73,343,q),
(72,357,o),
(66,344,o),
(64,336,q),
(60,331,o),
(30,312,o),
(2,293,o),
(-3,280,o),
(19,280,q),
(25,288,o),
(44,298,o),
(63,311,q),
(63,296,o),
(61,266,o),
(58,251,q),
(48,260,o),
(17,274,o),
(15,273,q),
(15,266,o),
(47,247,o),
(54,238,q),
(49,231,o),
(62,221,o),
(68,225,q),
(100,203,o)
);
},
{
closed = 1;
nodes = (
(123,330,o),
(104,340,q),
(130,360,o),
(169,391,o),
(169,391,q),
(164,372,o),
(160,332,o),
(160,309,q),
(147,317,o)
);
},
{
closed = 1;
nodes = (
(79,301,o),
(76,320,q),
(80,322,o),
(87,328,o),
(91,331,q),
(105,324,o),
(143,303,o),
(160,291,q),
(160,278,l),
(149,275,o),
(113,267,o),
(81,256,o),
(75,246,q),
(83,263,o)
);
},
{
closed = 1;
nodes = (
(105,216,o),
(84,232,q),
(101,240,o),
(140,249,o),
(158,254,q),
(158,237,o),
(166,196,o),
(174,167,o),
(174,167,q),
(145,187,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
63 60 52 49 46 23 12 7 0 74 76 73 59 40 9 3 6 0 73 0 0 0 118 31 1 6 23 
CALL[ ]	/* CallFunction */";
};
width = 236;
}
);
note = uni25C2;
unicode = 9666;
},
{
glyphname = uni25B5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(143,68,o),
(463,70,qs),
(510,70,o),
(598,66,o),
(643,63,q),
(590,169,o),
(492,381,o),
(390,589,o),
(330,688,q),
(300,643,o),
(266,585,o),
(242,538,o),
(213,484,o),
(188,443,q),
(188,439,o),
(159,390,o),
(116,317,o),
(68,237,o),
(30,165,o),
(12,116,o),
(20,111,q),
(28,118,o),
(67,178,o),
(123,269,o),
(185,373,o),
(246,476,o),
(297,561,o),
(328,612,o),
(330,612,q),
(374,530,o),
(457,349,o),
(536,176,o),
(574,107,q),
(574,107,o),
(505,105,o),
(391,101,o),
(256,98,o),
(122,95,o),
(67,95,qs),
(-54,92,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
30 10 2 0 74 2 1 0 1 1 0 89 2 1 0 0 1 95 0 1 0 1 79 5 0 38 34 0 39 5 39 3 6 22 
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = uni25B5;
unicode = 9653;
},
{
glyphname = uni25B9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(75,328,o),
(78,463,o),
(82,577,o),
(84,646,o),
(84,646,q),
(153,608,o),
(326,529,o),
(507,446,o),
(589,402,q),
(589,400,o),
(538,369,o),
(453,318,o),
(350,257,o),
(246,195,o),
(155,139,o),
(95,100,o),
(88,92,q),
(93,84,o),
(142,102,o),
(214,140,o),
(294,188,o),
(367,231,o),
(416,260,o),
(420,260,q),
(461,285,o),
(515,314,o),
(562,338,o),
(620,372,o),
(665,402,q),
(566,462,o),
(358,564,o),
(146,662,o),
(40,715,q),
(43,670,o),
(47,582,o),
(47,535,qs),
(45,215,o),
(69,18,o),
(72,139,qs),
(72,194,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
6 1 1 50 
CALL[ ]	/* CallFunction */";
};
width = 665;
}
);
note = uni25B9;
unicode = 9657;
},
{
glyphname = uni25BF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(256,655,o),
(391,652,o),
(505,648,o),
(574,646,o),
(574,646,q),
(536,577,o),
(457,404,o),
(374,223,o),
(330,141,q),
(328,141,o),
(297,192,o),
(246,277,o),
(185,380,o),
(123,484,o),
(67,575,o),
(28,635,o),
(20,642,q),
(12,638,o),
(30,588,o),
(68,516,o),
(116,436,o),
(159,363,o),
(188,314,o),
(188,310,q),
(213,269,o),
(242,215,o),
(266,168,o),
(300,110,o),
(330,65,q),
(390,164,o),
(492,372,o),
(590,584,o),
(643,690,q),
(598,687,o),
(510,683,o),
(463,683,qs),
(143,685,o),
(-54,661,o),
(67,658,qs),
(122,658,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
10 1 0 73 0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 1 0 6 2 0 39 1 34 3 6 22 
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = uni25BF;
unicode = 9663;
},
{
glyphname = uni25C3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(620,215,o),
(618,535,qs),
(618,582,o),
(622,670,o),
(625,715,q),
(519,662,o),
(307,564,o),
(99,462,o),
(0,402,q),
(45,372,o),
(103,338,o),
(150,314,o),
(204,285,o),
(245,260,q),
(249,260,o),
(298,231,o),
(371,188,o),
(451,140,o),
(523,102,o),
(573,84,o),
(577,92,q),
(570,100,o),
(510,139,o),
(419,195,o),
(315,257,o),
(212,318,o),
(127,369,o),
(76,400,o),
(76,402,q),
(158,446,o),
(339,529,o),
(512,608,o),
(581,646,q),
(581,646,o),
(583,577,o),
(587,463,o),
(590,328,o),
(593,194,o),
(593,139,qs),
(596,18,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
39 34 1 50 
CALL[ ]	/* CallFunction */";
};
width = 665;
}
);
note = uni25C3;
unicode = 9667;
},
{
glyphname = uni03060301;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0306;
},
{
pos = (42,184);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
184 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni03060301;
},
{
glyphname = uni03060300;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(93,654,qs),
(99,654,o),
(136,653,o),
(180,652,o),
(217,652,o),
(223,653,qs),
(228,653,o),
(241,666,o),
(241,671,qs),
(242,679,o),
(242,715,o),
(237,750,o),
(230,753,qs),
(218,760,o),
(209,740,o),
(209,733,q),
(214,704,l),
(219,696,o),
(206,681,o),
(200,681,q),
(192,679,o),
(175,682,o),
(167,682,qs),
(159,682,o),
(156,685,qs),
(152,688,o),
(148,685,o),
(145,684,qs),
(133,681,o),
(87,681,o),
(75,682,q),
(72,687,o),
(68,699,o),
(69,705,qs),
(70,713,o),
(70,736,o),
(70,739,qs),
(70,745,o),
(60,759,o),
(40,753,q),
(35,674,ls),
(34,663,o),
(60,645,o),
(61,646,q),
(74,654,o)
);
},
{
closed = 1;
nodes = (
(162,833,o),
(151,843,qs),
(130,861,o),
(118,877,q),
(110,884,o),
(96,897,o),
(89,905,qs),
(85,910,o),
(76,920,o),
(69,921,q),
(67,923,o),
(61,918,o),
(59,919,qs),
(56,921,o),
(45,910,o),
(46,907,qs),
(51,895,o),
(61,872,o),
(77,867,qs),
(83,865,o),
(94,857,o),
(98,852,qs),
(106,843,o),
(127,821,o),
(143,807,qs),
(161,794,o),
(189,799,o),
(193,803,q),
(183,813,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
3 1 2 0 1 76 57 28 4 3 0 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 2 2 0 97 1 1 0 0 39 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
1 1 0 2 2 0 89 1 1 0 0 2 97 0 2 0 2 81 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
44 39 37 30 3 8 24 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni03060300;
},
{
glyphname = uni03060309;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0306;
},
{
pos = (31,199);
ref = hookabovecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
199 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni03060309;
},
{
glyphname = uni03060303;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0306;
},
{
pos = (12,136);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
136 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni03060303;
},
{
glyphname = uni03020301;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0302;
},
{
pos = (46,145);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
145 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni03020301;
},
{
glyphname = uni03020300;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(225,622,q),
(227,622,o),
(233,628,o),
(235,629,qs),
(236,630,o),
(216,653,o),
(186,688,o),
(155,722,o),
(144,734,q),
(142,738,o),
(134,737,o),
(132,733,qs),
(128,722,o),
(112,708,o),
(104,701,qs),
(97,695,o),
(90,686,o),
(82,679,q),
(76,676,o),
(64,661,o),
(59,658,q),
(55,651,o),
(43,638,o),
(37,632,q),
(33,623,o),
(45,622,o),
(53,623,qs),
(58,623,o),
(81,639,o),
(108,662,o),
(130,683,o),
(134,687,q),
(139,689,o),
(143,689,o),
(149,686,qs),
(151,685,o),
(158,674,o),
(160,671,q),
(162,670,o),
(175,652,o),
(177,650,qs),
(180,646,o),
(199,630,o),
(213,622,q),
(220,620,o)
);
},
{
closed = 1;
nodes = (
(166,794,o),
(155,804,qs),
(134,822,o),
(122,838,q),
(114,845,o),
(100,858,o),
(93,866,qs),
(89,871,o),
(80,881,o),
(73,882,q),
(71,884,o),
(65,879,o),
(63,880,qs),
(60,882,o),
(49,871,o),
(50,868,qs),
(55,856,o),
(65,833,o),
(81,828,qs),
(87,826,o),
(98,818,o),
(102,813,qs),
(110,804,o),
(131,782,o),
(147,768,qs),
(165,755,o),
(193,760,o),
(197,764,q),
(187,774,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
62 47 44 34 2 50 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni03020300;
},
{
glyphname = uni03020309;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0302;
},
{
pos = (35,160);
ref = hookabovecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
160 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni03020309;
},
{
glyphname = uni03020303;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0302;
},
{
pos = (16,97);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
97 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni03020303;
},
{
glyphname = uni1DCA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(55,-239,o),
(62,-226,q),
(59,-220,o),
(65,-210,o),
(64,-205,qs),
(60,-176,o),
(66,-130,o),
(64,-120,qs),
(63,-115,o),
(64,-92,o),
(64,-87,qs),
(63,-70,o),
(84,-58,o),
(113,-57,o),
(139,-58,o),
(145,-53,q),
(151,-53,o),
(151,-27,o),
(139,-27,q),
(136,-28,o),
(117,-25,o),
(113,-27,qs),
(106,-31,o),
(105,-26,o),
(95,-27,qs),
(70,-28,o),
(37,-42,o),
(35,-70,qs),
(35,-102,ls),
(35,-107,o),
(35,-137,o),
(34,-141,qs),
(29,-184,o),
(33,-214,o),
(40,-226,qs),
(45,-236,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 31 values pushed */
33 30 7 3 4 2 73 1 1 0 2 2 0 89 1 1 0 0 2 97 0 2 0 2 81 35 67 25 3 8 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni1DCA;
unicode = 7626;
},
{
glyphname = uni0308;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(41,688,o),
(40,674,qs),
(40,663,o),
(52,654,qs),
(59,650,o),
(69,643,o),
(75,644,qs),
(84,645,o),
(99,642,o),
(108,648,qs),
(122,656,o),
(127,686,o),
(125,691,qs),
(121,702,o),
(98,711,o),
(84,711,qs),
(65,711,o)
);
},
{
closed = 1;
nodes = (
(262,659,o),
(269,672,qs),
(276,684,o),
(264,691,qs),
(258,695,o),
(244,701,o),
(239,705,qs),
(232,710,o),
(212,703,o),
(202,698,qs),
(189,691,o),
(186,662,o),
(187,655,q),
(196,636,o),
(227,636,qs),
(246,636,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 34 values pushed */
19 14 3 3 1 0 1 76 2 1 0 1 0 133 3 1 1 1 118 18 17 1 0 17 32 18 32 0 16 1 16 4 8 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0308;
unicode = 776;
},
{
glyphname = uni0307;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,661,o),
(113,674,qs),
(119,685,o),
(107,694,q),
(101,697,o),
(87,704,o),
(82,708,qs),
(75,713,o),
(55,706,o),
(46,699,q),
(32,692,o),
(28,663,o),
(30,657,qs),
(33,649,o),
(56,637,o),
(70,637,qs),
(89,637,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 18 values pushed */
3 1 0 74 1 1 0 0 118 1 0 0 16 1 16 2 8 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0307;
unicode = 775;
},
{
glyphname = gravecomb;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,644,o),
(146,654,qs),
(125,672,o),
(113,688,q),
(105,695,o),
(91,708,o),
(84,716,qs),
(80,721,o),
(71,731,o),
(64,732,q),
(62,734,o),
(56,729,o),
(54,730,qs),
(51,732,o),
(40,721,o),
(41,718,qs),
(46,706,o),
(56,683,o),
(72,678,qs),
(78,676,o),
(89,668,o),
(93,663,qs),
(101,654,o),
(122,632,o),
(138,618,qs),
(156,605,o),
(184,610,o),
(188,614,q),
(178,624,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
17 2 1 50 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = gravecomb;
unicode = 768;
},
{
glyphname = uni03000304;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,644,o),
(146,654,qs),
(125,672,o),
(113,688,q),
(105,695,o),
(91,708,o),
(84,716,qs),
(80,721,o),
(71,731,o),
(64,732,q),
(62,734,o),
(56,729,o),
(54,730,qs),
(51,732,o),
(40,721,o),
(41,718,qs),
(46,706,o),
(56,683,o),
(72,678,qs),
(78,676,o),
(89,668,o),
(93,663,qs),
(101,654,o),
(122,632,o),
(138,618,qs),
(156,605,o),
(184,610,o),
(188,614,q),
(178,624,o)
);
},
{
closed = 1;
nodes = (
(217,812,o),
(228,815,qs),
(231,816,o),
(231,829,o),
(228,829,qs),
(224,830,o),
(222,836,o),
(219,837,qs),
(216,838,o),
(210,839,o),
(205,839,qs),
(198,839,o),
(182,838,o),
(174,838,qs),
(144,838,ls),
(131,837,o),
(127,836,o),
(122,837,o),
(109,838,qs),
(42,838,l),
(42,831,o),
(50,819,o),
(67,814,q),
(68,813,o),
(83,812,o),
(86,812,qs),
(110,811,o),
(132,811,o),
(139,812,qs),
(147,814,o),
(162,811,o),
(169,808,qs),
(178,805,o),
(186,805,qs),
(197,805,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
12 1 3 73 2 1 1 0 0 3 1 0 105 2 1 1 1 3 97 4 1 3 1 3 81 29 29 29 63 29 63 53 48 47 45 39 34 5 8 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni03000304;
},
{
glyphname = acutecomb;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(66,605,o),
(84,618,qs),
(101,632,o),
(122,654,o),
(129,663,qs),
(134,668,o),
(144,676,o),
(150,678,qs),
(166,683,o),
(177,706,o),
(181,718,q),
(183,721,o),
(171,732,o),
(168,730,qs),
(166,729,o),
(160,734,o),
(158,732,q),
(151,731,o),
(142,721,o),
(138,716,qs),
(131,708,o),
(117,695,o),
(109,688,q),
(97,672,o),
(76,654,qs),
(65,644,o),
(45,624,o),
(34,614,q),
(39,610,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
27 12 1 50 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = acutecomb;
unicode = 769;
},
{
glyphname = uni03010304;
layers = (
{
layerId = m01;
shapes = (
{
ref = acutecomb;
},
{
pos = (-75,539);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
539 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni03010304;
},
{
glyphname = uni030B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(178,649,o),
(194,665,qs),
(210,679,o),
(228,704,o),
(235,713,qs),
(240,718,o),
(249,727,o),
(256,730,qs),
(270,735,o),
(279,760,o),
(283,773,qs),
(284,776,o),
(271,786,o),
(269,784,q),
(267,783,o),
(260,786,o),
(257,784,q),
(253,783,o),
(244,772,o),
(239,766,qs),
(234,759,o),
(221,744,o),
(214,735,qs),
(207,726,o),
(194,711,o),
(183,700,qs),
(173,690,o),
(155,666,o),
(145,655,q),
(150,652,o)
);
},
{
closed = 1;
nodes = (
(68,648,o),
(84,664,qs),
(100,678,o),
(118,703,o),
(125,712,qs),
(130,717,o),
(139,726,o),
(146,729,qs),
(160,734,o),
(168,759,o),
(172,772,q),
(174,775,o),
(161,785,o),
(159,783,q),
(157,782,o),
(150,785,o),
(147,784,qs),
(143,782,o),
(134,771,o),
(129,765,qs),
(124,758,o),
(111,743,o),
(103,735,q),
(97,725,o),
(84,710,o),
(73,699,qs),
(63,689,o),
(45,665,o),
(35,654,q),
(40,651,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
58 43 28 13 2 50 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni030B;
unicode = 779;
},
{
glyphname = uni030C.alt;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(65,562,o),
(68,569,qs),
(71,576,o),
(76,592,o),
(78,602,q),
(80,607,o),
(88,636,o),
(96,672,o),
(100,700,o),
(96,703,qs),
(93,705,o),
(75,704,o),
(61,680,qs),
(60,678,o),
(48,646,o),
(36,597,o),
(35,568,qs),
(34,558,o),
(51,548,o),
(53,556,qs),
(55,564,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
3 1 0 73 0 0 0 37 0 78 24 1 8 23 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni030C.alt;
},
{
glyphname = uni0302;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(225,622,q),
(227,622,o),
(233,628,o),
(235,629,qs),
(236,630,o),
(216,653,o),
(186,688,o),
(155,722,o),
(144,734,q),
(142,738,o),
(134,737,o),
(132,733,qs),
(128,722,o),
(112,708,o),
(104,701,qs),
(97,695,o),
(90,686,o),
(82,679,q),
(76,676,o),
(64,661,o),
(59,658,q),
(55,651,o),
(43,638,o),
(37,632,q),
(33,623,o),
(45,622,o),
(53,623,qs),
(58,623,o),
(81,639,o),
(108,662,o),
(130,683,o),
(134,687,q),
(139,689,o),
(143,689,o),
(149,686,qs),
(151,685,o),
(158,674,o),
(160,671,q),
(162,670,o),
(175,652,o),
(177,650,qs),
(180,646,o),
(199,630,o),
(213,622,q),
(220,620,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
44 34 1 50 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0302;
unicode = 770;
},
{
glyphname = uni030C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(180,753,o),
(177,749,qs),
(175,747,o),
(162,730,o),
(160,728,qs),
(158,725,o),
(151,714,o),
(149,713,qs),
(143,710,o),
(139,710,o),
(134,712,q),
(130,717,o),
(108,737,o),
(81,760,o),
(58,776,o),
(53,776,q),
(45,778,o),
(33,776,o),
(37,767,q),
(43,761,o),
(55,748,o),
(59,741,q),
(64,738,o),
(76,723,o),
(82,720,q),
(90,713,o),
(97,704,o),
(104,698,qs),
(112,691,o),
(128,677,o),
(132,666,qs),
(134,662,o),
(142,661,o),
(144,665,q),
(155,677,o),
(186,711,o),
(216,746,o),
(236,769,o),
(235,770,qs),
(233,772,o),
(227,777,o),
(225,777,q),
(220,779,o),
(213,777,q),
(199,770,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
11 1 1 50 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni030C;
unicode = 780;
},
{
glyphname = uni0306;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(93,654,qs),
(99,654,o),
(136,653,o),
(180,652,o),
(217,652,o),
(223,653,qs),
(228,653,o),
(241,666,o),
(241,671,qs),
(242,679,o),
(242,715,o),
(237,750,o),
(230,753,qs),
(218,760,o),
(209,740,o),
(209,733,q),
(214,704,l),
(219,696,o),
(206,681,o),
(200,681,q),
(192,679,o),
(175,682,o),
(167,682,qs),
(159,682,o),
(156,685,qs),
(152,688,o),
(148,685,o),
(145,684,qs),
(133,681,o),
(87,681,o),
(75,682,q),
(72,687,o),
(68,699,o),
(69,705,qs),
(70,713,o),
(70,736,o),
(70,739,qs),
(70,745,o),
(60,759,o),
(40,753,q),
(35,674,ls),
(34,663,o),
(60,645,o),
(61,646,q),
(74,654,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 36 values pushed */
3 1 2 0 1 76 28 4 2 0 74 1 1 0 2 2 0 89 1 1 0 0 2 97 0 2 0 2 81 44 39 37 30 3 8 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0306;
unicode = 774;
},
{
glyphname = uni030A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(100,676,qs),
(106,676,o),
(132,675,o),
(159,675,o),
(164,675,qs),
(168,675,o),
(177,684,o),
(177,688,qs),
(178,693,o),
(178,720,o),
(176,731,q),
(178,742,o),
(177,766,o),
(176,771,qs),
(176,775,o),
(168,784,o),
(164,784,qs),
(159,785,o),
(131,784,o),
(105,783,o),
(99,783,qs),
(80,783,o),
(57,786,o),
(58,769,qs),
(61,724,l),
(59,690,ls),
(58,682,o),
(76,669,o),
(77,670,q),
(88,676,o)
);
},
{
closed = 1;
nodes = (
(128,704,o),
(126,705,q),
(120,706,o),
(114,705,o),
(112,705,qs),
(105,704,o),
(102,703,o),
(96,704,q),
(91,709,o),
(92,716,qs),
(93,720,o),
(93,738,o),
(91,739,q),
(91,742,ls),
(91,749,o),
(95,755,q),
(101,756,o),
(117,755,o),
(124,755,qs),
(129,755,o),
(137,757,o),
(142,756,qs),
(145,756,o),
(152,746,o),
(148,738,q),
(147,738,o),
(147,732,qs),
(147,726,ls),
(147,725,o),
(148,719,o),
(149,716,q),
(153,712,o),
(146,703,o),
(142,703,qs),
(138,702,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 46 values pushed */
51 37 18 3 3 2 3 1 1 3 2 76 0 0 0 2 3 0 2 105 4 1 3 1 1 3 89 4 1 3 3 1 97 0 1 3 1 81 34 41 63 108 71 5 8 27 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni030A;
unicode = 778;
},
{
glyphname = tildecomb;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(185,666,o),
(187,667,qs),
(195,673,o),
(211,682,o),
(227,692,qs),
(240,699,o),
(240,711,qs),
(240,717,o),
(234,717,qs),
(225,717,o),
(198,706,o),
(176,693,o),
(171,690,q),
(170,690,o),
(145,708,o),
(137,714,qs),
(135,716,o),
(111,731,o),
(86,745,o),
(82,745,qs),
(73,745,o),
(47,719,o),
(37,712,qs),
(30,708,o),
(30,701,qs),
(30,690,o),
(41,690,qs),
(49,690,o),
(73,713,o),
(80,713,qs),
(86,713,o),
(102,699,o),
(109,697,qs),
(117,694,o),
(143,675,o),
(167,658,o),
(171,658,qs),
(176,658,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 61 values pushed */
30 12 2 2 1 1 76 0 4 3 1 3 4 1 128 0 2 1 0 1 2 0 128 5 1 0 0 132 0 3 4 1 3 89 0 3 3 1 97 0 1 3 1 81 1 0 28 27 17 16 11 9 8 6 0 37 1 37 6 8 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = tildecomb;
unicode = 771;
},
{
glyphname = uni0304;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-105,403);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHW[ ]	/* 1 value pushed */
403 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0304;
unicode = 772;
},
{
glyphname = uni03040300;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(150,645,o),
(161,648,qs),
(164,649,o),
(164,662,o),
(161,662,qs),
(157,663,o),
(155,669,o),
(152,670,qs),
(149,671,o),
(143,672,o),
(138,672,qs),
(131,672,o),
(115,671,o),
(107,671,qs),
(77,671,ls),
(64,670,o),
(60,669,o),
(55,670,o),
(42,671,qs),
(-25,671,l),
(-25,664,o),
(-17,652,o),
(0,647,q),
(1,646,o),
(16,645,o),
(19,645,qs),
(43,644,o),
(65,644,o),
(72,645,qs),
(80,647,o),
(95,644,o),
(102,641,qs),
(111,638,o),
(119,638,qs),
(130,638,o)
);
},
{
closed = 1;
nodes = (
(90,764,o),
(79,774,qs),
(58,792,o),
(46,808,q),
(38,815,o),
(24,828,o),
(17,836,qs),
(13,841,o),
(4,851,o),
(-3,852,q),
(-5,854,o),
(-11,849,o),
(-13,850,qs),
(-16,852,o),
(-27,841,o),
(-26,838,qs),
(-21,826,o),
(-11,803,o),
(5,798,qs),
(11,796,o),
(22,788,o),
(26,783,qs),
(34,774,o),
(55,752,o),
(71,738,qs),
(89,725,o),
(117,730,o),
(121,734,q),
(111,744,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
47 1 1 74 2 1 1 0 0 3 1 0 105 2 1 1 1 3 97 4 1 3 1 3 81 0 0 0 34 0 34 81 38 85 5 8 25 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni03040300;
},
{
glyphname = uni03040301;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-105,403);
ref = hyphen;
},
{
pos = (-30,115);
ref = acutecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHW[ ]	/* 1 value pushed */
403 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHB[ ]	/* 1 value pushed */
115 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni03040301;
},
{
glyphname = hookabovecomb;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(174,630,o),
(180,643,o),
(180,652,qs),
(180,653,o),
(177,663,o),
(172,668,qs),
(164,677,o),
(153,697,o),
(148,712,qs),
(147,717,o),
(139,731,o),
(135,736,q),
(134,741,o),
(121,746,o),
(116,746,qs),
(111,746,o),
(84,730,o),
(57,711,o),
(52,707,qs),
(48,703,o),
(48,698,qs),
(48,692,o),
(61,681,o),
(67,686,qs),
(73,691,o),
(81,700,o),
(91,702,qs),
(99,704,o),
(102,710,o),
(108,710,qs),
(113,710,o),
(129,687,o),
(142,661,o),
(142,654,qs),
(142,648,o),
(118,635,o),
(108,630,q),
(104,629,o),
(96,622,o),
(94,617,qs),
(93,613,o),
(100,598,o),
(107,598,q),
(163,625,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 14 values pushed */
0 1 0 1 133 0 0 0 118 45 44 2 8 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = hookabovecomb;
unicode = 777;
},
{
glyphname = uni030D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(55,646,o),
(55,650,qs),
(55,654,o),
(63,656,o),
(64,660,qs),
(65,665,o),
(65,696,o),
(65,702,qs),
(65,752,ls),
(65,796,o),
(52,796,qs),
(48,796,o),
(41,795,o),
(37,779,q),
(37,752,ls),
(37,728,o),
(34,706,o),
(30,694,o),
(30,682,qs),
(30,668,o),
(37,662,o),
(40,650,qs),
(42,644,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 12 values pushed */
8 1 0 73 0 0 0 118 27 1 8 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni030D;
unicode = 781;
},
{
glyphname = uni030F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(110,690,o),
(100,700,qs),
(90,711,o),
(76,726,o),
(69,735,qs),
(62,744,o),
(49,759,o),
(44,766,qs),
(40,772,o),
(31,783,o),
(26,784,q),
(23,786,o),
(16,783,o),
(14,784,q),
(12,786,o),
(-1,776,o),
(0,773,qs),
(5,760,o),
(13,735,o),
(27,730,qs),
(34,727,o),
(44,718,o),
(48,713,qs),
(56,704,o),
(73,679,o),
(89,665,qs),
(106,649,o),
(134,652,o),
(138,655,q),
(128,666,o)
);
},
{
closed = 1;
nodes = (
(220,689,o),
(210,699,qs),
(200,710,o),
(186,725,o),
(180,735,q),
(173,743,o),
(159,758,o),
(154,765,qs),
(150,771,o),
(141,782,o),
(136,784,qs),
(133,785,o),
(126,782,o),
(124,783,q),
(122,785,o),
(110,775,o),
(111,772,qs),
(115,759,o),
(123,734,o),
(137,729,qs),
(144,726,o),
(154,717,o),
(158,712,qs),
(166,703,o),
(183,678,o),
(199,664,qs),
(216,648,o),
(244,651,o),
(248,654,q),
(238,665,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 16 values pushed */
42 12 2 0 73 1 1 0 0 118 47 44 62 2 8 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni030F;
unicode = 783;
},
{
glyphname = uni0310;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(162,816,o),
(158,821,q),
(157,825,o),
(153,832,o),
(154,834,qs),
(156,840,o),
(156,846,o),
(157,848,qs),
(161,857,o),
(153,868,o),
(149,868,q),
(143,870,o),
(132,867,o),
(127,867,qs),
(120,867,o),
(102,868,o),
(94,867,q),
(90,862,o),
(90,852,qs),
(90,848,l),
(91,847,o),
(91,826,o),
(91,821,q),
(90,817,o),
(93,810,o),
(94,807,q),
(102,806,o),
(107,806,o),
(114,808,q),
(119,811,o),
(129,808,qs),
(131,807,o),
(144,805,o),
(149,806,qs),
(153,806,o)
);
},
{
closed = 1;
nodes = (
(68,674,qs),
(74,674,o),
(117,673,o),
(169,672,o),
(212,672,o),
(218,673,qs),
(223,673,o),
(236,686,o),
(236,691,qs),
(237,699,o),
(237,735,o),
(232,770,o),
(225,773,qs),
(213,780,o),
(204,760,o),
(204,753,q),
(209,724,l),
(214,716,o),
(201,701,o),
(195,701,q),
(187,699,o),
(170,702,o),
(162,702,qs),
(154,702,o),
(151,705,qs),
(147,708,o),
(143,705,o),
(140,704,qs),
(132,702,o),
(95,701,o),
(58,702,o),
(50,702,q),
(47,707,o),
(43,719,o),
(44,725,qs),
(45,733,o),
(45,756,o),
(45,759,qs),
(45,765,o),
(35,779,o),
(15,773,q),
(10,694,ls),
(9,683,o),
(35,665,o),
(36,666,q),
(49,674,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 46 values pushed */
64 45 39 3 1 0 38 1 3 1 2 76 0 0 1 0 133 2 1 1 3 3 1 89 2 1 1 1 3 98 0 3 1 3 82 80 75 58 56 51 49 21 18 4 8 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0310;
unicode = 784;
},
{
glyphname = uni0311;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(188,734,o),
(163,752,o),
(162,751,q),
(154,747,o),
(137,744,o),
(129,744,qs),
(122,744,o),
(74,746,o),
(27,748,o),
(19,747,qs),
(14,747,o),
(1,735,o),
(1,730,qs),
(0,723,o),
(0,686,o),
(5,651,o),
(11,647,qs),
(22,640,o),
(32,660,o),
(32,667,q),
(28,696,l),
(23,704,o),
(35,717,o),
(42,719,qs),
(50,721,o),
(56,716,o),
(65,717,qs),
(77,719,o),
(86,714,qs),
(93,711,o),
(101,714,o),
(107,715,q),
(112,718,o),
(135,717,o),
(147,716,q),
(150,711,o),
(154,698,o),
(152,692,q),
(151,684,o),
(151,661,o),
(151,658,qs),
(151,652,o),
(161,638,o),
(181,644,q),
(187,723,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 30 values pushed */
41 1 1 74 24 1 0 73 0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 39 35 26 2 8 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0311;
unicode = 785;
},
{
glyphname = uni0312;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(179,648,o),
(180,657,o),
(178,661,q),
(172,669,o),
(164,672,o),
(156,679,q),
(153,683,o),
(149,692,o),
(145,695,qs),
(126,712,o),
(96,753,o),
(78,771,qs),
(72,777,ls),
(69,780,o),
(65,784,o),
(64,788,q),
(60,795,o),
(51,804,o),
(46,795,q),
(45,787,o),
(44,769,o),
(41,761,q),
(42,755,o),
(41,743,o),
(41,737,qs),
(41,683,ls),
(41,676,o),
(39,663,o),
(36,656,qs),
(34,653,o),
(38,646,o),
(42,646,qs),
(171,646,l)
);
},
{
closed = 1;
nodes = (
(79,671,o),
(74,672,qs),
(68,674,o),
(66,676,o),
(66,682,qs),
(66,738,ls),
(66,741,o),
(68,743,q),
(71,741,o),
(93,717,o),
(120,688,o),
(129,677,qs),
(131,675,o),
(128,672,o),
(126,672,qs),
(113,671,o),
(104,671,o),
(102,670,qs),
(97,667,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 33 values pushed */
46 36 2 1 74 0 1 0 0 1 89 0 1 1 0 95 2 1 0 1 0 79 0 0 35 34 0 32 0 32 3 8 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0312;
unicode = 786;
},
{
glyphname = uni0313;
layers = (
{
layerId = m01;
shapes = (
{
pos = (20,638);
ref = quotesinglbase;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHW[ ]	/* 1 value pushed */
638 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0313;
unicode = 787;
},
{
glyphname = uni0315;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,638);
ref = quotesinglbase;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHW[ ]	/* 1 value pushed */
638 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0315;
unicode = 789;
},
{
glyphname = uni031B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(75,459,o),
(79,461,qs),
(86,466,o),
(107,460,o),
(117,461,qs),
(142,463,o),
(176,476,o),
(177,504,qs),
(177,536,ls),
(177,541,o),
(177,571,o),
(178,575,qs),
(183,589,o),
(180,608,o),
(172,620,q),
(167,631,o),
(156,633,o),
(148,620,q),
(151,614,o),
(145,604,o),
(146,599,qs),
(149,580,o),
(147,566,o),
(145,561,o),
(146,554,q),
(148,549,o),
(146,526,o),
(146,521,qs),
(147,504,o),
(121,492,o),
(85,491,o),
(53,492,o),
(47,487,q),
(41,487,o),
(41,461,o),
(53,461,q),
(56,462,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 35 values pushed */
24 18 15 8 4 1 74 0 1 0 0 1 89 0 1 1 0 97 2 1 0 1 0 81 1 0 6 4 0 36 1 34 3 8 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni031B;
unicode = 795;
},
{
glyphname = dotbelowcomb;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-179);
ref = period;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHW[ ]	/* 1 value pushed */
-179 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = dotbelowcomb;
unicode = 803;
},
{
glyphname = uni0325;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-4,-832);
ref = uni030A;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 2 
PUSHW[ ]	/* 1 value pushed */
-832 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0325;
unicode = 805;
},
{
glyphname = uni0326;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(47,-201,o),
(49,-198,q),
(53,-198,o),
(70,-174,o),
(72,-172,q),
(81,-158,o),
(84,-143,o),
(91,-129,qs),
(97,-113,o),
(110,-102,qs),
(123,-91,o),
(127,-65,o),
(128,-48,qs),
(129,-37,o),
(122,-27,o),
(116,-31,q),
(111,-36,o),
(91,-51,o),
(89,-58,qs),
(86,-69,o),
(75,-91,o),
(69,-103,qs),
(61,-124,o),
(41,-159,o),
(27,-194,q),
(30,-199,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
24 10 1 50 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0326;
unicode = 806;
},
{
glyphname = uni0327;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(160,-173,o),
(159,-172,q),
(151,-159,o),
(151,-140,qs),
(151,-132,o),
(152,-100,o),
(153,-67,o),
(152,-60,qs),
(152,-55,o),
(138,-42,o),
(133,-42,qs),
(126,-41,o),
(71,-41,o),
(45,-43,qs),
(42,-43,o),
(72,11,q),
(39,11,l),
(38,9,o),
(25,-13,o),
(13,-34,o),
(13,-37,qs),
(13,-40,o),
(6,-51,o),
(6,-56,q),
(2,-65,o),
(17,-73,o),
(24,-74,qs),
(25,-74,o),
(34,-73,o),
(64,-72,o),
(97,-74,qs),
(105,-74,o),
(120,-75,o),
(120,-81,q),
(122,-89,o),
(119,-108,o),
(119,-116,qs),
(119,-119,o),
(120,-128,o),
(118,-130,qs),
(115,-134,o),
(120,-149,o),
(119,-161,qs),
(119,-165,o),
(102,-165,o),
(96,-164,qs),
(91,-163,o),
(55,-164,o),
(22,-165,o),
(20,-165,qs),
(14,-165,o),
(0,-175,o),
(6,-195,q),
(131,-198,ls),
(142,-198,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 6 values pushed */
52 1 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 5 5 4 112 0 5 0 3 1 5 3 106 2 1 1 0 0 1 89 2 1 1 1 0 95 6 1 0 1 0 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 4 5 4 133 0 5 0 3 1 5 3 106 2 1 1 0 0 1 89 2 1 1 1 0 95 6 1 0 1 0 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
1 0 42 39 38 36 25 22 10 9 7 3 0 54 1 54 7 8 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0327;
unicode = 807;
},
{
glyphname = uni0328;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(109,-199,o),
(116,-198,qs),
(122,-197,o),
(134,-196,o),
(140,-196,qs),
(148,-196,o),
(154,-199,qs),
(158,-201,o),
(177,-198,o),
(180,-199,q),
(191,-196,o),
(191,-183,qs),
(191,-173,o),
(186,-170,q),
(182,-166,o),
(160,-164,o),
(146,-164,qs),
(111,-164,ls),
(88,-164,o),
(85,-160,qs),
(83,-156,o),
(87,-124,o),
(87,-109,qs),
(87,-101,o),
(85,-93,qs),
(84,-85,o),
(89,-63,o),
(89,-49,qs),
(89,-45,o),
(88,-36,o),
(87,-32,qs),
(85,-20,o),
(79,-12,q),
(71,-5,o),
(66,-5,qs),
(59,-5,o),
(56,-19,qs),
(55,-26,o),
(52,-37,o),
(52,-42,qs),
(52,-47,o),
(55,-59,o),
(56,-67,q),
(57,-70,o),
(51,-103,o),
(51,-109,qs),
(53,-133,o),
(50,-164,o),
(50,-174,qs),
(50,-188,o),
(55,-193,qs),
(57,-195,o),
(74,-199,o),
(90,-199,qs),
(96,-199,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 44 values pushed */
8 1 2 1 1 76 0 1 2 1 133 0 2 0 0 2 89 0 2 2 0 97 3 4 2 0 2 0 81 1 0 50 48 38 35 20 18 0 54 1 53 5 8 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0328;
unicode = 808;
},
{
glyphname = uni0329;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(55,-210,o),
(55,-206,qs),
(55,-202,o),
(63,-200,o),
(64,-196,qs),
(65,-191,o),
(65,-160,o),
(65,-154,qs),
(65,-104,ls),
(65,-60,o),
(52,-60,qs),
(48,-60,o),
(41,-61,o),
(37,-77,q),
(37,-104,ls),
(37,-128,o),
(34,-150,o),
(30,-162,o),
(30,-174,qs),
(30,-188,o),
(37,-194,o),
(40,-206,qs),
(42,-212,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 12 values pushed */
8 1 0 73 0 0 0 118 27 1 8 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0329;
unicode = 809;
},
{
glyphname = uni032D;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-782);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHW[ ]	/* 1 value pushed */
-782 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni032D;
unicode = 813;
},
{
glyphname = uni032F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(208,-45,o),
(183,-27,o),
(182,-28,q),
(174,-32,o),
(157,-35,o),
(149,-35,qs),
(143,-35,o),
(107,-34,o),
(62,-32,o),
(25,-31,o),
(19,-32,qs),
(14,-32,o),
(1,-44,o),
(1,-49,qs),
(0,-56,o),
(0,-93,o),
(5,-128,o),
(11,-132,qs),
(22,-139,o),
(32,-119,o),
(32,-112,q),
(28,-83,l),
(23,-75,o),
(36,-60,o),
(42,-60,q),
(50,-58,o),
(67,-61,o),
(75,-62,qs),
(83,-62,o),
(86,-65,qs),
(90,-68,o),
(94,-65,o),
(97,-64,qs),
(109,-61,o),
(155,-62,o),
(167,-63,q),
(170,-68,o),
(174,-81,o),
(172,-87,q),
(171,-95,o),
(171,-118,o),
(171,-121,qs),
(171,-127,o),
(181,-141,o),
(201,-135,q),
(207,-56,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 32 values pushed */
42 1 2 74 24 1 0 73 0 2 0 0 2 89 0 2 2 0 97 1 1 0 2 0 81 40 35 37 26 3 8 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni032F;
unicode = 815;
},
{
glyphname = uni0330;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-744);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHW[ ]	/* 1 value pushed */
-744 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0330;
unicode = 816;
},
{
glyphname = uni0331;
layers = (
{
layerId = m01;
shapes = (
{
pos = (21,-387);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHW[ ]	/* 1 value pushed */
-387 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0331;
unicode = 817;
},
{
glyphname = uni0332;
layers = (
{
layerId = m01;
shapes = (
{
pos = (86,-387);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHW[ ]	/* 1 value pushed */
-387 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0332;
unicode = 818;
},
{
glyphname = uni0334;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-20,-354);
ref = tildecomb;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHW[ ]	/* 1 value pushed */
-354 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0334;
unicode = 820;
},
{
glyphname = uni0335;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(153,259,o),
(171,260,qs),
(185,261,o),
(221,258,o),
(228,258,qs),
(247,258,o),
(283,265,o),
(301,268,qs),
(307,269,o),
(307,282,o),
(301,282,qs),
(295,283,o),
(292,289,o),
(287,290,qs),
(281,291,o),
(269,292,o),
(262,292,qs),
(249,292,o),
(220,291,o),
(207,291,qs),
(194,291,o),
(193,292,o),
(179,291,qs),
(164,291,o),
(160,291,o),
(160,291,o),
(148,291,qs),
(30,291,l),
(30,284,o),
(45,265,o),
(60,260,q),
(61,260,o),
(80,259,o),
(102,258,o),
(106,258,qs),
(134,257,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 38 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 4 3 5 3 0 1 0 81 3 0 34 33 32 29 20 15 12 6 0 35 3 35 6 8 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0335;
unicode = 821;
},
{
glyphname = uni0358;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(102,652,o),
(98,657,q),
(97,661,o),
(93,668,o),
(94,670,qs),
(96,676,o),
(96,682,o),
(97,684,qs),
(101,693,o),
(93,704,o),
(89,704,q),
(83,706,o),
(72,703,o),
(67,703,qs),
(60,703,o),
(42,704,o),
(34,703,q),
(30,698,o),
(30,688,qs),
(30,684,l),
(31,683,o),
(31,662,o),
(31,657,q),
(30,653,o),
(33,646,o),
(34,643,q),
(42,642,o),
(47,642,o),
(54,644,q),
(59,647,o),
(69,644,qs),
(71,643,o),
(84,641,o),
(89,642,qs),
(93,642,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 9 values pushed */
0 0 0 118 21 18 1 8 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0358;
unicode = 856;
},
{
glyphname = uni1DC7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(64,563,o),
(108,600,o),
(151,640,o),
(181,672,o),
(182,676,q),
(190,674,o),
(199,676,o),
(215,675,qs),
(235,674,o),
(280,679,o),
(309,679,qs),
(339,679,ls),
(342,679,o),
(349,678,o),
(352,679,qs),
(377,684,o),
(398,692,o),
(398,696,qs),
(398,704,o),
(343,711,o),
(309,712,qs),
(243,713,ls),
(234,713,o),
(215,714,o),
(207,714,qs),
(199,714,o),
(173,710,o),
(172,709,qs),
(161,701,l),
(155,701,o),
(153,695,q),
(140,685,o),
(104,645,o),
(91,631,qs),
(66,604,ls),
(63,601,o),
(57,597,o),
(56,594,q),
(39,569,o),
(28,545,o),
(31,542,qs),
(33,540,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 23 values pushed */
0 0 1 1 0 87 0 0 0 1 97 2 1 1 0 1 81 33 85 111 3 8 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni1DC7;
unicode = 7623;
},
{
glyphname = uni1DC5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(39,695,o),
(56,670,q),
(57,667,o),
(63,663,o),
(66,660,qs),
(91,633,ls),
(104,620,o),
(140,579,o),
(153,569,q),
(155,563,o),
(161,563,q),
(172,555,ls),
(173,554,o),
(199,550,o),
(207,550,qs),
(215,550,o),
(234,551,o),
(243,551,qs),
(309,552,ls),
(343,553,o),
(398,561,o),
(398,568,qs),
(398,572,o),
(377,581,o),
(352,585,q),
(349,586,o),
(342,585,o),
(339,585,qs),
(309,585,ls),
(280,585,o),
(235,590,o),
(215,589,qs),
(199,588,o),
(190,590,o),
(182,588,q),
(181,593,o),
(151,624,o),
(108,664,o),
(64,701,o),
(33,724,o),
(31,722,qs),
(28,719,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 24 values pushed */
1 1 0 2 2 0 89 1 1 0 0 2 95 0 2 0 2 79 104 33 40 3 8 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni1DC5;
unicode = 7621;
},
{
glyphname = uni1DC4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(364,701,o),
(320,664,o),
(277,624,o),
(248,593,o),
(246,588,q),
(239,590,o),
(229,588,o),
(213,589,qs),
(194,590,o),
(148,585,o),
(119,585,qs),
(89,585,ls),
(86,585,o),
(79,586,o),
(76,585,q),
(51,581,o),
(30,572,o),
(30,568,qs),
(30,561,o),
(85,553,o),
(119,552,qs),
(185,551,ls),
(194,551,o),
(213,550,o),
(221,550,qs),
(229,550,o),
(255,554,o),
(256,555,qs),
(267,563,l),
(273,563,o),
(275,569,q),
(288,579,o),
(324,620,o),
(337,633,qs),
(362,660,ls),
(365,663,o),
(371,667,o),
(372,670,q),
(389,695,o),
(400,719,o),
(397,722,qs),
(395,724,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 24 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 95 0 0 1 0 79 33 85 111 3 8 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni1DC4;
unicode = 7620;
},
{
glyphname = uni1DC6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(389,573,o),
(372,598,q),
(371,601,o),
(365,605,o),
(362,608,qs),
(337,635,ls),
(324,649,o),
(288,689,o),
(275,699,q),
(273,705,o),
(267,705,q),
(256,713,ls),
(255,714,o),
(229,718,o),
(221,718,qs),
(213,718,o),
(194,717,o),
(185,717,qs),
(119,716,ls),
(85,715,o),
(30,708,o),
(30,700,qs),
(30,696,o),
(51,688,o),
(76,683,qs),
(79,682,o),
(86,683,o),
(89,683,qs),
(119,683,ls),
(148,683,o),
(194,678,o),
(213,679,qs),
(229,680,o),
(239,678,o),
(246,680,q),
(248,676,o),
(277,644,o),
(320,604,o),
(364,567,o),
(395,544,o),
(397,546,qs),
(400,549,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 23 values pushed */
0 2 0 0 2 87 0 2 2 0 97 1 1 0 2 0 81 104 33 40 3 8 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni1DC6;
unicode = 7622;
},
{
glyphname = uni0327.alt;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(160,-173,o),
(159,-172,q),
(151,-159,o),
(151,-140,qs),
(151,-132,o),
(153,-93,o),
(153,-77,qs),
(153,-64,o),
(145,-42,o),
(133,-42,q),
(129,-41,o),
(111,-41,o),
(98,-41,qs),
(86,-41,o),
(59,-41,o),
(45,-43,q),
(22,-43,o),
(4,-52,o),
(4,-57,qs),
(4,-63,o),
(17,-73,o),
(24,-74,q),
(25,-75,o),
(55,-73,o),
(72,-73,qs),
(77,-73,o),
(100,-72,o),
(120,-74,o),
(120,-78,q),
(121,-80,o),
(121,-88,o),
(121,-90,qs),
(121,-97,o),
(119,-110,o),
(119,-116,qs),
(119,-119,o),
(120,-128,o),
(118,-130,qs),
(115,-134,o),
(119,-146,o),
(119,-157,qs),
(119,-163,o),
(115,-165,o),
(108,-165,qs),
(105,-165,o),
(98,-164,o),
(96,-164,qs),
(91,-163,o),
(55,-166,o),
(22,-168,o),
(20,-168,qs),
(16,-168,o),
(4,-173,o),
(4,-184,qs),
(4,-187,o),
(5,-194,o),
(6,-198,q),
(131,-198,ls),
(142,-198,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
17 1 1 3 56 1 0 1 2 76 5 1 4 0 3 1 4 3 105 2 1 1 0 0 1 89 2 1 1 1 0 95 6 1 0 1 0 79 1 0 49 43 42 41 35 31 15 13 9 6 0 58 1 58 7 6 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0327.alt;
},
{
glyphname = uni0326.loclMAH;
layers = (
{
layerId = m01;
shapes = (
{
pos = (21,-122);
ref = quotesinglbase;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHW[ ]	/* 1 value pushed */
-122 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0326.loclMAH;
},
{
glyphname = dieresis;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0308;
}
);
width = 291;
}
);
note = dieresis;
unicode = 168;
},
{
glyphname = dotaccent;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0307;
}
);
width = 144;
}
);
note = dotaccent;
unicode = 729;
},
{
glyphname = grave;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,644,o),
(146,654,qs),
(125,672,o),
(113,688,q),
(105,695,o),
(91,708,o),
(84,716,qs),
(80,721,o),
(71,731,o),
(64,732,q),
(62,734,o),
(56,729,o),
(54,730,qs),
(51,732,o),
(40,721,o),
(41,718,qs),
(46,706,o),
(56,683,o),
(72,678,qs),
(78,676,o),
(89,668,o),
(93,663,qs),
(101,654,o),
(122,632,o),
(138,618,qs),
(156,605,o),
(184,610,o),
(188,614,q),
(178,624,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
17 2 1 50 
CALL[ ]	/* CallFunction */";
};
width = 222;
}
);
note = grave;
unicode = 96;
},
{
glyphname = acute;
layers = (
{
layerId = m01;
shapes = (
{
ref = acutecomb;
}
);
width = 222;
}
);
note = acute;
unicode = 180;
},
{
glyphname = hungarumlaut;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(178,649,o),
(194,665,qs),
(210,679,o),
(228,704,o),
(235,713,qs),
(240,718,o),
(249,727,o),
(256,730,qs),
(270,735,o),
(279,760,o),
(283,773,qs),
(284,776,o),
(271,786,o),
(269,784,q),
(267,783,o),
(260,786,o),
(257,784,q),
(253,783,o),
(244,772,o),
(239,766,qs),
(234,759,o),
(221,744,o),
(214,735,qs),
(207,726,o),
(194,711,o),
(183,700,qs),
(173,690,o),
(155,666,o),
(145,655,q),
(150,652,o)
);
},
{
closed = 1;
nodes = (
(68,648,o),
(84,664,qs),
(100,678,o),
(118,703,o),
(125,712,qs),
(130,717,o),
(139,726,o),
(146,729,qs),
(160,734,o),
(168,759,o),
(172,772,q),
(174,775,o),
(161,785,o),
(159,783,q),
(157,782,o),
(150,785,o),
(147,784,qs),
(143,782,o),
(134,771,o),
(129,765,qs),
(124,758,o),
(111,743,o),
(103,735,q),
(97,725,o),
(84,710,o),
(73,699,qs),
(63,689,o),
(45,665,o),
(35,654,q),
(40,651,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
58 43 28 13 2 50 
CALL[ ]	/* CallFunction */";
};
width = 318;
}
);
note = hungarumlaut;
unicode = 733;
},
{
glyphname = circumflex;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,30);
ref = uni0302;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHB[ ]	/* 1 value pushed */
30 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 270;
}
);
note = circumflex;
unicode = 710;
},
{
glyphname = uni02CA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(25,743,o),
(28,745,q),
(32,744,o),
(56,759,o),
(59,760,q),
(73,770,o),
(81,783,o),
(93,794,qs),
(104,806,o),
(121,811,qs),
(137,817,o),
(150,839,o),
(157,855,qs),
(162,864,o),
(159,877,o),
(152,875,qs),
(145,872,o),
(122,866,o),
(117,860,qs),
(110,851,o),
(92,834,o),
(82,826,q),
(67,809,o),
(35,784,o),
(9,757,q),
(10,751,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
24 10 1 50 
CALL[ ]	/* CallFunction */";
};
width = 149;
}
);
note = uni02CA;
unicode = 714;
},
{
glyphname = caron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(180,753,o),
(177,749,qs),
(175,747,o),
(162,730,o),
(160,728,qs),
(158,725,o),
(151,714,o),
(149,713,qs),
(143,710,o),
(139,710,o),
(134,712,q),
(130,717,o),
(108,737,o),
(81,760,o),
(58,776,o),
(53,776,q),
(45,778,o),
(33,776,o),
(37,767,q),
(43,761,o),
(55,748,o),
(59,741,q),
(64,738,o),
(76,723,o),
(82,720,q),
(90,713,o),
(97,704,o),
(104,698,qs),
(112,691,o),
(128,677,o),
(132,666,qs),
(134,662,o),
(142,661,o),
(144,665,q),
(155,677,o),
(186,711,o),
(216,746,o),
(236,769,o),
(235,770,qs),
(233,772,o),
(227,777,o),
(225,777,q),
(220,779,o),
(213,777,q),
(199,770,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
11 1 1 50 
CALL[ ]	/* CallFunction */";
};
width = 270;
}
);
note = caron;
unicode = 711;
},
{
glyphname = uni02CB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(146,782,o),
(135,792,qs),
(114,810,o),
(102,826,q),
(94,833,o),
(80,846,o),
(73,854,qs),
(69,859,o),
(60,869,o),
(53,870,q),
(51,872,o),
(45,867,o),
(43,868,qs),
(40,870,o),
(29,859,o),
(30,856,qs),
(35,844,o),
(45,821,o),
(61,816,qs),
(67,814,o),
(78,806,o),
(82,801,qs),
(90,792,o),
(111,770,o),
(127,756,qs),
(145,743,o),
(173,748,o),
(177,752,q),
(167,762,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
17 2 1 50 
CALL[ ]	/* CallFunction */";
};
width = 207;
}
);
note = uni02CB;
unicode = 715;
},
{
glyphname = breve;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(93,654,qs),
(99,654,o),
(136,653,o),
(180,652,o),
(217,652,o),
(223,653,qs),
(228,653,o),
(241,666,o),
(241,671,qs),
(242,679,o),
(242,715,o),
(237,750,o),
(230,753,qs),
(218,760,o),
(209,740,o),
(209,733,q),
(214,704,l),
(219,696,o),
(206,681,o),
(200,681,q),
(192,679,o),
(175,682,o),
(167,682,qs),
(159,682,o),
(156,685,qs),
(152,688,o),
(148,685,o),
(145,684,qs),
(133,681,o),
(87,681,o),
(75,682,q),
(72,687,o),
(68,699,o),
(69,705,qs),
(70,713,o),
(70,736,o),
(70,739,qs),
(70,745,o),
(60,759,o),
(40,753,q),
(35,674,ls),
(34,663,o),
(60,645,o),
(61,646,q),
(74,654,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 36 values pushed */
3 1 2 0 1 76 28 4 2 0 74 1 1 0 2 2 0 89 1 1 0 0 2 97 0 2 0 2 81 44 39 37 30 3 8 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 277;
}
);
note = breve;
unicode = 728;
},
{
glyphname = ring;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-4,0);
ref = uni030A;
}
);
width = 228;
}
);
note = ring;
unicode = 730;
},
{
glyphname = tilde;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-20,0);
ref = tildecomb;
}
);
width = 230;
}
);
note = tilde;
unicode = 732;
},
{
glyphname = macron;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-105,403);
ref = hyphen;
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
0 1 
PUSHW[ ]	/* 1 value pushed */
403 
PUSHB[ ]	/* 1 value pushed */
53 
CALL[ ]	/* CallFunction */";
};
width = 381;
}
);
note = macron;
unicode = 175;
},
{
glyphname = cedilla;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0327;
}
);
width = 171;
}
);
note = cedilla;
unicode = 184;
},
{
glyphname = ogonek;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0328;
}
);
width = 211;
}
);
note = ogonek;
unicode = 731;
},
{
glyphname = uni02BC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(39,479,o),
(42,483,q),
(46,482,o),
(63,510,o),
(66,512,q),
(76,529,o),
(79,546,o),
(87,563,q),
(93,581,o),
(107,595,qs),
(120,608,o),
(125,637,o),
(127,658,qs),
(128,670,o),
(121,682,o),
(116,678,qs),
(110,672,o),
(90,655,o),
(87,646,qs),
(84,633,o),
(72,607,o),
(65,594,q),
(57,569,o),
(35,528,o),
(20,487,q),
(23,482,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
24 10 1 50 
CALL[ ]	/* CallFunction */";
};
width = 184;
}
);
note = uni02BC;
unicode = 700;
},
{
glyphname = uni02BB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(74,707,o),
(72,704,q),
(68,704,o),
(50,681,o),
(47,680,q),
(37,666,o),
(33,651,o),
(26,637,qs),
(19,622,o),
(5,611,qs),
(-8,601,o),
(-14,576,o),
(-16,559,qs),
(-17,548,o),
(-11,537,o),
(-5,541,qs),
(1,546,o),
(21,559,o),
(24,567,qs),
(27,578,o),
(40,599,o),
(46,610,qs),
(55,631,o),
(77,665,o),
(93,699,q),
(91,704,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
24 10 1 50 
CALL[ ]	/* CallFunction */";
};
width = 117;
}
);
note = uni02BB;
unicode = 699;
},
{
glyphname = uni02C0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(61,427,o),
(65,431,q),
(64,445,o),
(71,471,o),
(75,496,o),
(68,510,q),
(75,521,o),
(71,543,o),
(67,553,q),
(72,561,o),
(75,595,o),
(73,608,q),
(76,608,ls),
(89,607,o),
(130,615,o),
(172,627,o),
(203,637,o),
(207,637,qs),
(212,637,o),
(226,650,o),
(226,655,qs),
(227,663,o),
(226,695,o),
(225,728,o),
(225,735,qs),
(225,743,o),
(229,770,o),
(233,777,q),
(234,778,o),
(216,803,o),
(205,803,qs),
(32,798,l),
(26,779,o),
(40,768,o),
(46,768,qs),
(48,768,o),
(82,768,o),
(128,768,o),
(166,769,o),
(170,769,qs),
(176,770,o),
(188,766,o),
(193,763,q),
(194,751,o),
(189,729,o),
(192,725,qs),
(194,723,o),
(193,714,o),
(193,711,qs),
(193,703,o),
(196,691,o),
(194,683,q),
(194,677,o),
(179,669,o),
(171,669,q),
(118,653,o),
(71,641,o),
(59,640,o),
(58,639,q),
(52,638,o),
(39,632,o),
(39,625,q),
(35,611,o),
(41,593,qs),
(43,589,o),
(43,573,o),
(42,565,qs),
(40,548,o),
(33,493,o),
(34,476,q),
(39,455,o),
(44,436,o),
(48,430,qs),
(53,423,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 7 values pushed */
71 67 64 3 4 2 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 2 0 0 2 113 0 1 0 0 1 87 0 1 1 0 97 0 0 1 0 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 2 0 2 134 0 1 0 0 1 87 0 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
56 54 43 41 37 34 3 8 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 263;
}
);
note = uni02C0;
unicode = 704;
},
{
glyphname = uni02B9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(68,477,o),
(70,526,o),
(70,541,q),
(78,586,o),
(82,637,o),
(80,666,o),
(77,688,o),
(78,704,q),
(74,709,o),
(49,714,o),
(44,705,qs),
(40,698,o),
(35,673,o),
(30,644,q),
(30,629,o),
(36,585,o),
(44,540,o),
(45,525,qs),
(46,515,o),
(49,493,o),
(47,487,q),
(42,460,o),
(57,439,o),
(59,439,qs),
(64,439,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
14 0 1 50 
CALL[ ]	/* CallFunction */";
};
width = 111;
}
);
note = uni02B9;
unicode = 697;
},
{
glyphname = uni02BF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(98,420,o),
(142,423,o),
(175,428,o),
(178,433,qs),
(185,445,o),
(165,454,o),
(158,454,qs),
(89,449,l),
(81,443,o),
(66,456,o),
(66,462,q),
(65,466,o),
(65,499,o),
(66,538,o),
(66,571,o),
(66,575,qs),
(66,583,o),
(69,586,qs),
(72,590,o),
(69,594,o),
(68,597,qs),
(65,609,o),
(65,655,o),
(66,667,q),
(71,670,o),
(83,675,o),
(89,674,qs),
(95,674,o),
(129,673,o),
(161,673,o),
(163,673,qs),
(169,673,o),
(183,684,o),
(176,703,q),
(57,707,ls),
(46,708,o),
(29,682,o),
(30,681,q),
(38,668,o),
(38,649,qs),
(38,645,o),
(38,602,o),
(37,544,o),
(37,486,o),
(37,444,o),
(38,439,qs),
(38,434,o),
(51,421,o),
(56,421,qs),
(62,420,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 38 values pushed */
11 1 1 0 42 1 2 1 2 76 0 2 1 2 134 0 0 1 1 0 87 0 0 0 1 97 0 1 0 1 81 49 47 66 30 3 8 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 210;
}
);
note = uni02BF;
unicode = 703;
},
{
glyphname = uni02BE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(145,593,o),
(153,607,o),
(152,607,q),
(144,620,o),
(144,639,qs),
(144,645,o),
(144,676,o),
(144,712,o),
(143,743,o),
(142,749,qs),
(142,754,o),
(129,767,o),
(124,766,q),
(117,767,o),
(75,766,o),
(36,761,o),
(32,754,qs),
(26,742,o),
(46,733,o),
(53,733,q),
(91,739,l),
(99,744,o),
(115,731,o),
(115,725,q),
(117,717,o),
(114,700,o),
(114,692,qs),
(114,684,o),
(111,681,q),
(109,677,o),
(112,673,o),
(113,670,qs),
(116,658,o),
(117,632,o),
(116,620,q),
(111,617,o),
(99,613,o),
(93,614,qs),
(85,615,o),
(52,614,o),
(49,614,qs),
(43,614,o),
(29,604,o),
(35,584,q),
(125,580,ls),
(133,580,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 45 values pushed */
25 1 1 2 42 1 0 1 2 76 0 2 1 2 133 0 1 0 0 1 89 0 1 1 0 96 3 1 0 1 0 80 1 0 33 30 6 3 0 45 1 45 4 8 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 182;
}
);
note = uni02BE;
unicode = 702;
},
{
glyphname = uni02C8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(57,444,o),
(61,449,q),
(60,468,o),
(67,502,o),
(71,536,o),
(64,554,q),
(71,568,o),
(67,598,o),
(63,612,q),
(66,620,o),
(66,653,o),
(62,689,o),
(55,714,o),
(52,714,qs),
(36,714,l),
(31,711,o),
(34,680,o),
(37,666,qs),
(39,660,o),
(39,638,o),
(38,628,qs),
(37,613,o),
(32,569,o),
(30,524,o),
(30,509,q),
(35,481,o),
(40,456,o),
(44,448,qs),
(49,439,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
28 13 1 50 
CALL[ ]	/* CallFunction */";
};
width = 99;
}
);
note = uni02C8;
unicode = 712;
},
{
glyphname = uniA7AE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(42,6,o),
(47,0,q),
(71,3,o),
(95,0,o),
(111,-5,o),
(134,-6,o),
(158,0,q),
(192,-7,o),
(209,18,o),
(188,25,q),
(184,24,o),
(178,25,o),
(161,27,o),
(139,29,q),
(138,67,o),
(136,117,o),
(136,165,o),
(136,233,o),
(135,289,qs),
(135,294,o),
(128,325,o),
(126,370,o),
(135,394,q),
(135,394,o),
(136,429,o),
(137,477,o),
(137,516,o),
(135,519,qs),
(131,527,o),
(135,548,o),
(135,557,qs),
(135,559,o),
(136,565,o),
(135,567,qs),
(130,579,o),
(130,617,o),
(134,655,o),
(133,667,q),
(147,669,o),
(172,673,o),
(179,670,q),
(201,678,o),
(183,704,o),
(149,696,q),
(121,704,o),
(94,702,o),
(67,695,o),
(38,697,q),
(32,693,o),
(28,686,o),
(38,681,qs),
(46,677,o),
(56,670,o),
(65,665,q),
(74,665,o),
(86,663,o),
(98,664,q),
(99,649,l),
(104,31,l),
(91,29,o),
(61,25,o),
(47,18,qs),
(37,14,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
21 1 0 1 48 34 28 5 3 5 2 0 55 1 3 2 3 76 18 1 1 74 0 0 1 2 1 0 2 128 0 2 3 1 2 3 126 0 1 1 39 77 0 3 3 44 3 78 57 56 52 50 22 23 4 8 24 
CALL[ ]	/* CallFunction */";
};
width = 233;
}
);
note = uniA7AE;
unicode = 42926;
},
{
glyphname = uniA7B8;
layers = (
{
layerId = m01;
width = 600;
}
);
note = uniA7B8;
unicode = 42936;
},
{
glyphname = uniA7B9;
layers = (
{
layerId = m01;
width = 600;
}
);
note = uniA7B9;
unicode = 42937;
}
);
instances = (
{
instanceInterpolations = {
m01 = 1;
};
name = Regular;
properties = (
{
key = postscriptFullName;
value = "Sankofa Display Regular";
},
{
key = postscriptFontName;
value = "SankofaDisplay-Regular";
}
);
}
);
kerningLTR = {
m01 = {
"@MMK_L_A" = {
"@MMK_R_T" = -80;
"@MMK_R_V" = -80;
"@MMK_R_zero" = -60;
};
"@MMK_L_D" = {
"@MMK_R_I" = -50;
"@MMK_R_T" = -50;
"@MMK_R_zero" = 40;
};
A = {
N = 0;
};
B = {
a = 30;
};
one = {
zero = -40;
};
three = {
zero = -80;
};
zero = {
three = -20;
};
};
};
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
properties = (
{
key = copyrights;
values = (
{
language = ENG;
value = "Copyright 2023 The Sankofa Display Project Authors (https://github.com/batsimadz/Sankofa-Display), with Reserved Font Name \"Sankofa Display\".";
}
);
},
{
key = manufacturers;
values = (
{
language = ENG;
value = "Batsirai Madzonga";
}
);
},
{
key = designers;
values = (
{
language = ENG;
value = "Batsirai Madzonga";
}
);
},
{
key = licenseURL;
value = "https://scripts.sil.org/OFL";
},
{
key = licenses;
values = (
{
language = ENG;
value = "This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: https://scripts.sil.org/OFL";
}
);
},
{
key = manufacturerURL;
value = "http://www.google.com/fonts";
},
{
key = designerURL;
value = "https://www.madzonga.com";
}
);
settings = {
disablesAutomaticAlignment = 1;
disablesNiceNames = 1;
};
unitsPerEm = 1000;
versionMajor = 1;
versionMinor = 0;
}
